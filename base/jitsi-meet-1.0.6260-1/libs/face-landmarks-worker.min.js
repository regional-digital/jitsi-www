/*! For license information please see face-landmarks-worker.min.js.LICENSE.txt */
(()=>{var e={950:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js",function(e){function t(){return $.buffer!=z&&ee($.buffer),D}function a(){return $.buffer!=z&&ee($.buffer),P}function s(){return $.buffer!=z&&ee($.buffer),L}function i(){return $.buffer!=z&&ee($.buffer),W}function o(){return $.buffer!=z&&ee($.buffer),B}var l,u,d,h=void 0!==(e=e||{})?e:{};h.ready=new Promise((function(e,t){l=e,u=t})),"undefined"!=typeof process&&process.listeners&&(d={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,c={};for(p in h)h.hasOwnProperty(p)&&(c[p]=h[p]);var f=[],m=function(e,t){throw t},g=!1,y=!1,A=!1,b=!1;g="object"==typeof window,y="function"==typeof importScripts,A="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=!g&&!A&&!y;var x=h.ENVIRONMENT_IS_PTHREAD||!1;x&&(z=h.buffer);var v,w,k,I,S,N="";function T(e){return h.locateFile?h.locateFile(e,N):N+e}if(A){var C;N=y?n(980).dirname(N)+"/":"//",v=function(e,t){return I||(I=n(256)),S||(S=n(980)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),f=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof gn))throw e})),process.on("unhandledRejection",be),m=function(e){process.exit(e)},h.inspect=function(){return"[Emscripten Module object]"};try{C=n(958)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=C.Worker}else b?("undefined"!=typeof read&&(v=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(V("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?f=scriptArgs:void 0!==arguments&&(f=arguments),"function"==typeof quit&&(m=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(g||y)&&(y?N=self.location.href:"undefined"!=typeof document&&document.currentScript&&(N=document.currentScript.src),void 0!==r&&r&&(N=r),N=0!==N.indexOf("blob:")?N.substr(0,N.lastIndexOf("/")+1):"",A?(v=function(e,t){return I||(I=n(256)),S||(S=n(980)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t}):(v=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),w=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));A&&"undefined"==typeof performance&&(n.g.performance=n(862).performance);var E,_=h.print||console.log.bind(console),R=h.printErr||console.warn.bind(console);for(p in c)c.hasOwnProperty(p)&&(h[p]=c[p]);function M(e){M.shown||(M.shown={}),M.shown[e]||(M.shown[e]=1,R(e))}c=null,h.arguments&&(f=h.arguments),h.thisProgram&&h.thisProgram,h.quit&&(m=h.quit),Atomics.load,Atomics.store,Atomics.compareExchange,h.wasmBinary&&(E=h.wasmBinary);var $,F,O=h.noExitRuntime||!0;"object"!=typeof WebAssembly&&be("no native wasm support detected");var z,D,P,L,W,B,U=!1;function V(e,t){e||be("Assertion failed: "+t)}function G(e){var t=h["_"+e];return V(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function j(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);Z(e,t=hn(n),n)}return t},array:function(e){var t=hn(e.length);return J(e,t),t}},i=G(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var d=s[n[u]];d?(0===l&&(l=un()),o[u]=d(r[u])):o[u]=r[u]}var h=i.apply(null,o);return h=function(e){return"string"===t?K(e):"boolean"===t?Boolean(e):e}(h),0!==l&&dn(l),h}function H(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?G(e):function(){return j(e,t,n,arguments)}}function q(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var l=s-65536;a+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function K(e,t){return e?q(a(),e,t):""}function X(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function Z(e,t,n){return X(e,a(),t,n)}function Y(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function J(e,n){t().set(e,n)}function Q(e,t){return e%t>0&&(e+=t-e%t),e}function ee(e){z=e,h.HEAP8=D=new Int8Array(e),h.HEAP16=new Int16Array(e),h.HEAP32=L=new Int32Array(e),h.HEAPU8=P=new Uint8Array(e),h.HEAPU16=new Uint16Array(e),h.HEAPU32=W=new Uint32Array(e),h.HEAPF32=new Float32Array(e),h.HEAPF64=B=new Float64Array(e)}var te,ne=h.INITIAL_MEMORY||16777216;if(x)$=h.wasmMemory,z=h.buffer;else if(h.wasmMemory)$=h.wasmMemory;else if(!(($=new WebAssembly.Memory({initial:ne/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw R("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),A&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");$&&(z=$.buffer),ne=z.byteLength,ee(z);var re=[],ae=[],se=[],ie=[],oe=[];function le(){if(!x){if(h.preRun)for("function"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)pe(h.preRun.shift());Re(re)}}function ue(){x||Re(ae)}function de(){x||Re(se)}function he(){if(!x){if(h.postRun)for("function"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;)ce(h.postRun.shift());Re(oe)}}function pe(e){re.unshift(e)}function ce(e){oe.unshift(e)}x||ae.push({func:function(){qt()}});var fe=0,me=null,ge=null;function ye(e){V(!x,"addRunDependency cannot be used in a pthread worker"),fe++,h.monitorRunDependencies&&h.monitorRunDependencies(fe)}function Ae(e){if(fe--,h.monitorRunDependencies&&h.monitorRunDependencies(fe),0==fe&&(null!==me&&(clearInterval(me),me=null),ge)){var t=ge;ge=null,t()}}function be(e){h.onAbort&&h.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),R(e+=""),U=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw u(t),t}function xe(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}h.preloadedImages={},h.preloadedAudios={};var ve="data:application/octet-stream;base64,";function we(e){return xe(e,ve)}var ke="file://";function Ie(e){return xe(e,ke)}var Se="tfjs-backend-wasm-threaded-simd.wasm";function Ne(e){try{if(e==Se&&E)return new Uint8Array(E);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(e){be(e)}}function Te(){if(!E&&(g||y)){if("function"==typeof fetch&&!Ie(Se))return fetch(Se,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Se+"'";return e.arrayBuffer()})).catch((function(){return Ne(Se)}));if(w)return new Promise((function(e,t){w(Se,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Ne(Se)}))}function Ce(){var e={a:Ht};function t(e,t){var n=e.exports;if(h.asm=n,te=h.asm.I,F=t,!x){var r=Pe.unusedWorkers.length;Pe.unusedWorkers.forEach((function(e){Pe.loadWasmModuleToWorker(e,(function(){--r||Ae()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Te().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){R("failed to asynchronously prepare wasm: "+e),be(e)}))}if(x||ye(),h.instantiateWasm)try{return h.instantiateWasm(e,t)}catch(e){return R("Module.instantiateWasm callback failed with error: "+e),!1}return(E||"function"!=typeof WebAssembly.instantiateStreaming||we(Se)||Ie(Se)||"function"!=typeof fetch?r(n):fetch(Se,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return R("wasm streaming compile failed: "+e),R("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(u),{}}we(Se)||(Se=T(Se));var Ee={10664:function(){throw"Canceled!"},10682:function(e,t){setTimeout((function(){rn(e,t)}),0)}};function _e(){Pe.initRuntime()}function Re(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?te.get(n)():te.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(h)}}var Me={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function $e(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),mn>>2),a=0;if(r==e&&Atomics.compareExchange(s(),mn>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function Fe(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Pe.pthreads[e];t.worker.terminate(),Pe.freeThreadData(t),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Oe(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Pe.pthreads[e].worker.postMessage({cmd:"cancel"})}function ze(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Pe.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Pe.returnWorkerToPool(n)}}h._emscripten_futex_wake=$e;var De,Pe={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)Pe.allocateUnusedWorker()},initRuntime:function(){for(var e=Kt(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Kt(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),ln(e,!y,1),tn(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Pe.threadExitHandlers.length>0;)Pe.threadExitHandlers.pop()();x&&Jt()&&Qt()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Pe.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),$e(e+0,2147483647),ln(0,0,0)},threadExit:function(e){var t=Jt();t&&(Pe.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Pe.runExitHandlersAndDeinitThread(Jt(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Pe.pthreads)(r=Pe.pthreads[e])&&r.worker&&Pe.returnWorkerToPool(r.worker);Pe.pthreads={};for(var t=0;t<Pe.unusedWorkers.length;++t)(n=Pe.unusedWorkers[t]).terminate();for(Pe.unusedWorkers=[],t=0;t<Pe.runningWorkers.length;++t){var n,r=(n=Pe.runningWorkers[t]).pthread;Pe.freeThreadData(r),n.terminate()}Pe.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,Xt(t),Xt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Xt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Pe.runWithoutMainThreadQueuedCalls((function(){delete Pe.pthreads[e.pthread.threadInfoStruct],Pe.unusedWorkers.push(e),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(e),1),Pe.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[fn>>2]=0;try{e()}finally{s()[fn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Pe.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Jt()){var s=Pe.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Pe.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)en();else if("spawnThread"===a)Ot(n.data);else if("cleanupThread"===a)ze(r.thread);else if("killThread"===a)Fe(r.thread);else if("cancelThread"===a)Oe(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)_("Thread "+r.threadId+": "+r.text);else if("printErr"===a)R("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Pe.returnWorkerToPool(e);else if("exitProcess"===a)try{An(r.returnCode)}catch(n){if(n instanceof gn)return;throw n}else"cancelDone"===a?Pe.returnWorkerToPool(e):"objectTransfer"===a?Pe.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):R("worker sent an unknown command "+a);Pe.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){R("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},A&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:h.mainScriptUrlOrBlob||r,wasmMemory:$,wasmModule:F})},allocateUnusedWorker:function(){var e=T("tfjs-backend-wasm-threaded-simd.worker.js");Pe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Pe.unusedWorkers.length&&(Pe.allocateUnusedWorker(),Pe.loadWasmModuleToWorker(Pe.unusedWorkers[0])),Pe.unusedWorkers.length>0?Pe.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Le(e,t){pn(e,t),dn(e)}function We(){return O}function Be(e,t){return te.get(e)(t)}function Ue(e,t,n,r){be("Assertion failed: "+K(e)+", at: "+[t?K(t):"unknown filename",n,r?K(r):"unknown function"])}function Ve(e,t){_main(e,t)}function Ge(e){return s()[Zt()>>2]=e,e}function je(e,t){if(x)return Qe(1,1,e,t)}function He(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Pe.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function qe(){be()}function Ke(e,t,n){var r=nt(t,n);return Ee[e].apply(null,r)}function Xe(e,t){}function Ze(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(g){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),mn>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),mn>>2,0),-73;if(0==Atomics.exchange(s(),mn>>2,0))break;if(en(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),mn>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Ye(e,t,n){a().copyWithin(e,t,t+n)}function Je(){return A?n(578).cpus().length:navigator.hardwareConcurrency}function Qe(e,t){for(var n=arguments.length-2,r=un(),a=n,s=hn(8*a),i=s>>3,l=0;l<n;l++){var u=arguments[2+l];o()[i+l]=u}var d=sn(e,a,s,t);return dn(r),d}h.establishStackSpace=Le,h.getNoExitRuntime=We,h.invokeEntryPoint=Be,De=A?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-h.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var et=[],tt=[];function nt(e,t){var n;for(tt.length=0,t>>=2;n=a()[e++];){var r=n<105;r&&1&t&&t++,tt.push(r?o()[t++>>1]:s()[t]),++t}return tt}function rt(e,t,n){et.length=t;for(var r=n>>3,a=0;a<t;a++)et[a]=o()[r+a];return(e<0?Ee[-e-1]:jt[e]).apply(null,et)}function at(){return a().length}function st(e){try{return $.grow(e-z.byteLength+65535>>>16),ee($.buffer),1}catch(e){}}function it(e){var t=at();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),st(Math.min(n,Q(Math.max(e,a),65536))))return!0}return!1}var ot={inEventHandler:0,removeAllEventListeners:function(){for(var e=ot.eventHandlers.length-1;e>=0;--e)ot._removeHandler(e);ot.eventHandlers=[],ot.deferredCalls=[]},registerRemoveEventListeners:function(){ot.removeEventListenersRegistered||(ie.push(ot.removeAllEventListeners),ot.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ot.deferredCalls){var s=ot.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ot.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ot.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ot.deferredCalls.length;++t)ot.deferredCalls[t].targetFunction==e&&(ot.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ot.inEventHandler&&ot.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ot.canPerformEventHandlerRequests())for(var e=0;e<ot.deferredCalls.length;++e){var t=ot.deferredCalls[e];ot.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ot.eventHandlers.length;++n)ot.eventHandlers[n].target!=e||t&&t!=ot.eventHandlers[n].eventTypeString||ot._removeHandler(n--)},_removeHandler:function(e){var t=ot.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ot.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ot.inEventHandler,ot.currentEventHandler=e,ot.runDeferredCalls(),e.handlerFunc(t),ot.runDeferredCalls(),--ot.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ot.eventHandlers.push(e),ot.registerRemoveEventListeners();else for(var n=0;n<ot.eventHandlers.length;++n)ot.eventHandlers[n].target==e.target&&ot.eventHandlers[n].eventTypeString==e.eventTypeString&&ot._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=un(),o=hn(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,on(0,e,637534208,t,r,o),dn(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Pe.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function lt(e){var t=Y(e)+1,n=Kt(t);return Z(e,n,t),n}function ut(e,t,n,r){var a=un(),i=hn(12),o=0;t&&(o=lt(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,on(0,e,657457152,0,o,i),dn(a)}function dt(e,t,n,r){ut(e,t=t?K(t):"",n,r)}function ht(e){return e>2?K(e):e}var pt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function ct(e){return e=ht(e),pt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function ft(e){return ct(e)}function mt(e,t,n){var r=ft(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(dt(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function gt(e,t,n){return x?Qe(2,1,e,t,n):mt(e,t,n)}function yt(e,t,n){return ft(e)?mt(e,t,n):gt(e,t,n)}function At(e){}function bt(e,t){}function xt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function vt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function wt(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function kt(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var It={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){It.lastError||(It.lastError=e)},getNewId:function(e){for(var t=It.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=K(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?It.registerContext(n,t):0},registerContext:function(e,t){var n=Kt(8);s()[n+4>>2]=Jt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),It.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&It.initExtensions(r),n},makeContextCurrent:function(e){return It.currentContext=It.contexts[e],h.ctx=Ct=It.currentContext&&It.currentContext.GLctx,!(e&&!Ct)},getContext:function(e){return It.contexts[e]},deleteContext:function(e){It.currentContext===It.contexts[e]&&(It.currentContext=null),"object"==typeof ot&&ot.removeAllHandlersOnTarget(It.contexts[e].GLctx.canvas),It.contexts[e]&&It.contexts[e].GLctx.canvas&&(It.contexts[e].GLctx.canvas.GLctxObject=void 0),Xt(It.contexts[e].handle),It.contexts[e]=null},initExtensions:function(e){if(e||(e=It.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;xt(t),vt(t),wt(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),kt(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=It.programs[e],n=It.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Ct.getProgramParameter(t,35718),s=0;s<a;++s){var i=Ct.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var l=Ct.getUniformLocation(t,o);if(l){var u=It.getNewId(It.uniforms);r[o]=[i.size,u],It.uniforms[u]=l;for(var d=1;d<i.size;++d){var h=o+"["+d+"]";l=Ct.getUniformLocation(t,h),u=It.getNewId(It.uniforms),It.uniforms[u]=l}}}}},St=["default","low-power","high-performance"];function Nt(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:St[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=ft(e);return i?a.explicitSwapControl?0:It.createContext(i,a):0}function Tt(e,t){return Nt(e,t)}var Ct,Et={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Et.buffers[e];0===t||10===t?((1===e?_:R)(q(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Et.varargs+=4,s()[Et.varargs-4>>2]},getStr:function(e){return K(e)},get64:function(e,t){return e}};function _t(e){return x?Qe(3,1,e):0}function Rt(e,t,n,r,a){if(x)return Qe(4,1,e,t,n,r,a)}function Mt(e,t,n,r){if(x)return Qe(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var l=s()[t+8*o>>2],u=s()[t+(8*o+4)>>2],d=0;d<u;d++)Et.printChar(e,a()[l+d]);i+=u}return s()[r>>2]=i,0}function $t(e){var t=Pe.threadExitHandlers.pop();e&&t()}function Ft(e,t){Pe.threadExitHandlers.push((function(){te.get(e)(t)}))}function Ot(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Pe.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Pe.runningWorkers.push(t);for(var n=Kt(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Pe.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},l=o.threadInfoStruct>>2;Atomics.store(i(),l+16,e.detached),Atomics.store(i(),l+25,n),Atomics.store(i(),l+10,o.threadInfoStruct),Atomics.store(i(),l+20,e.stackSize),Atomics.store(i(),l+19,a),Atomics.store(i(),l+26,e.stackSize),Atomics.store(i(),l+28,a),Atomics.store(i(),l+29,e.detached);var u=Yt()+40;Atomics.store(i(),l+43,u),t.pthread=o;var d={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){d.time=performance.now(),t.postMessage(d,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function zt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return R("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return R("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return an(687865856,e,t,n,r);var o=0,l=0,u=0;t&&-1!=t?(o=s()[t>>2],o+=81920,l=s()[t+8>>2],u=0!==s()[t+12>>2]):o=2097152;var d=0==l;d?l=cn(16,o):V((l-=o)>0);for(var h=Kt(228),p=0;p<57;++p)i()[(h>>2)+p]=0;s()[e>>2]=h,s()[h+12>>2]=h;var c=h+152;s()[c>>2]=c;var f={stackBase:l,stackSize:o,allocatedOwnStack:d,detached:u,startRoutine:n,pthread_ptr:h,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):Ot(f),0}function Dt(){if(x){var e=Jt();if(e&&!Atomics.load(i(),e+56>>2)&&2==Atomics.load(i(),e+0>>2))throw"Canceled!"}}function Pt(){A||y||M("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Lt(e,t,n){if(!e)return R("pthread_join attempted on a null thread pointer!"),Me.ESRCH;if(x&&Jt()==e)return R("PThread "+e+" is attempting to join to itself!"),Me.EDEADLK;if(!x&&nn()==e)return R("Main thread "+e+" is attempting to join to itself!"),Me.EDEADLK;if(s()[e+12>>2]!==e)return R("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),Me.ESRCH;if(Atomics.load(i(),e+64>>2))return R("Attempted to join thread "+e+", which was already detached!"),Me.EINVAL;for(n&&Pt();;){var r=Atomics.load(i(),e+0>>2);if(1==r){var a=Atomics.load(i(),e+4>>2);return t&&(s()[t>>2]=a),Atomics.store(i(),e+64>>2,1),x?postMessage({cmd:"cleanupThread",thread:e}):ze(e),0}if(!n)return Me.EBUSY;Dt(),x||en(),Ze(e+0,r,x?100:1)}}function Wt(e,t){return Lt(e,t,!0)}function Bt(e){if(x)return Qe(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ge(28),-1}x||Pe.initMainThreadBlock();var Ut,Vt,Gt,jt=[null,je,gt,_t,Rt,Mt,Bt],Ht={e:Ue,r:Ve,x:He,b:qe,y:Ke,j:Xe,d:Ze,c:$e,f:De,p:Ye,A:Je,u:rt,q:it,v:yt,i:At,s:bt,w:Tt,l:_t,n:Rt,g:Mt,o:_e,a:$||h.wasmMemory,z:$t,k:Ft,h:zt,m:Wt,t:Bt},qt=(Ce(),h.___wasm_call_ctors=function(){return(qt=h.___wasm_call_ctors=h.asm.B).apply(null,arguments)}),Kt=(h._init=function(){return(h._init=h.asm.C).apply(null,arguments)},h._init_with_threads_count=function(){return(h._init_with_threads_count=h.asm.D).apply(null,arguments)},h._get_threads_count=function(){return(h._get_threads_count=h.asm.E).apply(null,arguments)},h._register_tensor=function(){return(h._register_tensor=h.asm.F).apply(null,arguments)},h._dispose_data=function(){return(h._dispose_data=h.asm.G).apply(null,arguments)},h._dispose=function(){return(h._dispose=h.asm.H).apply(null,arguments)},h._Abs=function(){return(h._Abs=h.asm.J).apply(null,arguments)},h._Add=function(){return(h._Add=h.asm.K).apply(null,arguments)},h._AddN=function(){return(h._AddN=h.asm.L).apply(null,arguments)},h._All=function(){return(h._All=h.asm.M).apply(null,arguments)},h._Any=function(){return(h._Any=h.asm.N).apply(null,arguments)},h._ArgMax=function(){return(h._ArgMax=h.asm.O).apply(null,arguments)},h._AvgPool=function(){return(h._AvgPool=h.asm.P).apply(null,arguments)},h._BatchMatMul=function(){return(h._BatchMatMul=h.asm.Q).apply(null,arguments)},h._Ceil=function(){return(h._Ceil=h.asm.R).apply(null,arguments)},h._ClipByValue=function(){return(h._ClipByValue=h.asm.S).apply(null,arguments)},h._Conv2D=function(){return(h._Conv2D=h.asm.T).apply(null,arguments)},h._Conv2DBackpropInput=function(){return(h._Conv2DBackpropInput=h.asm.U).apply(null,arguments)},h._Cos=function(){return(h._Cos=h.asm.V).apply(null,arguments)},h._Cosh=function(){return(h._Cosh=h.asm.W).apply(null,arguments)},h._CropAndResize=function(){return(h._CropAndResize=h.asm.X).apply(null,arguments)},h._Cumsum=function(){return(h._Cumsum=h.asm.Y).apply(null,arguments)},h._DepthToSpace=function(){return(h._DepthToSpace=h.asm.Z).apply(null,arguments)},h._DepthwiseConv2dNative=function(){return(h._DepthwiseConv2dNative=h.asm._).apply(null,arguments)},h._Elu=function(){return(h._Elu=h.asm.$).apply(null,arguments)},h._Equal=function(){return(h._Equal=h.asm.aa).apply(null,arguments)},h._Exp=function(){return(h._Exp=h.asm.ba).apply(null,arguments)},h._FlipLeftRight=function(){return(h._FlipLeftRight=h.asm.ca).apply(null,arguments)},h._Floor=function(){return(h._Floor=h.asm.da).apply(null,arguments)},h._FloorDiv=function(){return(h._FloorDiv=h.asm.ea).apply(null,arguments)},h._FusedBatchNorm=function(){return(h._FusedBatchNorm=h.asm.fa).apply(null,arguments)},h._FusedConv2D=function(){return(h._FusedConv2D=h.asm.ga).apply(null,arguments)},h._FusedDepthwiseConv2D=function(){return(h._FusedDepthwiseConv2D=h.asm.ha).apply(null,arguments)},h._Gather=function(){return(h._Gather=h.asm.ia).apply(null,arguments)},h._GatherNd=function(){return(h._GatherNd=h.asm.ja).apply(null,arguments)},h._Greater=function(){return(h._Greater=h.asm.ka).apply(null,arguments)},h._GreaterEqual=function(){return(h._GreaterEqual=h.asm.la).apply(null,arguments)},h._LeakyRelu=function(){return(h._LeakyRelu=h.asm.ma).apply(null,arguments)},h._Less=function(){return(h._Less=h.asm.na).apply(null,arguments)},h._LessEqual=function(){return(h._LessEqual=h.asm.oa).apply(null,arguments)},h._Log=function(){return(h._Log=h.asm.pa).apply(null,arguments)},h._LogicalAnd=function(){return(h._LogicalAnd=h.asm.qa).apply(null,arguments)},h._Max=function(){return(h._Max=h.asm.ra).apply(null,arguments)},h._MaxPool=function(){return(h._MaxPool=h.asm.sa).apply(null,arguments)},h._Maximum=function(){return(h._Maximum=h.asm.ta).apply(null,arguments)},h._Mean=function(){return(h._Mean=h.asm.ua).apply(null,arguments)},h._Min=function(){return(h._Min=h.asm.va).apply(null,arguments)},h._Minimum=function(){return(h._Minimum=h.asm.wa).apply(null,arguments)},h._MirrorPad=function(){return(h._MirrorPad=h.asm.xa).apply(null,arguments)},h._Multiply=function(){return(h._Multiply=h.asm.ya).apply(null,arguments)},h._Neg=function(){return(h._Neg=h.asm.za).apply(null,arguments)},h._NonMaxSuppressionV3=function(){return(h._NonMaxSuppressionV3=h.asm.Aa).apply(null,arguments)},h._NonMaxSuppressionV4=function(){return(h._NonMaxSuppressionV4=h.asm.Ba).apply(null,arguments)},h._NonMaxSuppressionV5=function(){return(h._NonMaxSuppressionV5=h.asm.Ca).apply(null,arguments)},h._NotEqual=function(){return(h._NotEqual=h.asm.Da).apply(null,arguments)},h._OneHot=function(){return(h._OneHot=h.asm.Ea).apply(null,arguments)},h._PadV2=function(){return(h._PadV2=h.asm.Fa).apply(null,arguments)},h._Pow=function(){return(h._Pow=h.asm.Ga).apply(null,arguments)},h._Prelu=function(){return(h._Prelu=h.asm.Ha).apply(null,arguments)},h._Prod=function(){return(h._Prod=h.asm.Ia).apply(null,arguments)},h._RealDiv=function(){return(h._RealDiv=h.asm.Ja).apply(null,arguments)},h._Relu=function(){return(h._Relu=h.asm.Ka).apply(null,arguments)},h._Relu6=function(){return(h._Relu6=h.asm.La).apply(null,arguments)},h._ResizeBilinear=function(){return(h._ResizeBilinear=h.asm.Ma).apply(null,arguments)},h._Reverse=function(){return(h._Reverse=h.asm.Na).apply(null,arguments)},h._RotateWithOffset=function(){return(h._RotateWithOffset=h.asm.Oa).apply(null,arguments)},h._Round=function(){return(h._Round=h.asm.Pa).apply(null,arguments)},h._Rsqrt=function(){return(h._Rsqrt=h.asm.Qa).apply(null,arguments)},h._ScatterNd=function(){return(h._ScatterNd=h.asm.Ra).apply(null,arguments)},h._SelectV2=function(){return(h._SelectV2=h.asm.Sa).apply(null,arguments)},h._Sigmoid=function(){return(h._Sigmoid=h.asm.Ta).apply(null,arguments)},h._Sin=function(){return(h._Sin=h.asm.Ua).apply(null,arguments)},h._Softmax=function(){return(h._Softmax=h.asm.Va).apply(null,arguments)},h._SparseFillEmptyRows=function(){return(h._SparseFillEmptyRows=h.asm.Wa).apply(null,arguments)},h._SparseReshape=function(){return(h._SparseReshape=h.asm.Xa).apply(null,arguments)},h._SparseSegmentReduction=function(){return(h._SparseSegmentReduction=h.asm.Ya).apply(null,arguments)},h._Sqrt=function(){return(h._Sqrt=h.asm.Za).apply(null,arguments)},h._Square=function(){return(h._Square=h.asm._a).apply(null,arguments)},h._SquaredDifference=function(){return(h._SquaredDifference=h.asm.$a).apply(null,arguments)},h._Step=function(){return(h._Step=h.asm.ab).apply(null,arguments)},h._StridedSlice=function(){return(h._StridedSlice=h.asm.bb).apply(null,arguments)},h._Sub=function(){return(h._Sub=h.asm.cb).apply(null,arguments)},h._Sum=function(){return(h._Sum=h.asm.db).apply(null,arguments)},h._Tan=function(){return(h._Tan=h.asm.eb).apply(null,arguments)},h._Tanh=function(){return(h._Tanh=h.asm.fb).apply(null,arguments)},h._Tile=function(){return(h._Tile=h.asm.gb).apply(null,arguments)},h._TopK=function(){return(h._TopK=h.asm.hb).apply(null,arguments)},h._Transform=function(){return(h._Transform=h.asm.ib).apply(null,arguments)},h._Transpose=function(){return(h._Transpose=h.asm.jb).apply(null,arguments)},h.__FusedMatMul=function(){return(h.__FusedMatMul=h.asm.kb).apply(null,arguments)},h._malloc=function(){return(Kt=h._malloc=h.asm.lb).apply(null,arguments)}),Xt=h._free=function(){return(Xt=h._free=h.asm.mb).apply(null,arguments)},Zt=h.___errno_location=function(){return(Zt=h.___errno_location=h.asm.nb).apply(null,arguments)},Yt=h._emscripten_get_global_libc=function(){return(Yt=h._emscripten_get_global_libc=h.asm.ob).apply(null,arguments)},Jt=h._pthread_self=function(){return(Jt=h._pthread_self=h.asm.pb).apply(null,arguments)},Qt=h.___pthread_tsd_run_dtors=function(){return(Qt=h.___pthread_tsd_run_dtors=h.asm.qb).apply(null,arguments)},en=h._emscripten_main_thread_process_queued_calls=function(){return(en=h._emscripten_main_thread_process_queued_calls=h.asm.rb).apply(null,arguments)},tn=(h._emscripten_current_thread_process_queued_calls=function(){return(h._emscripten_current_thread_process_queued_calls=h.asm.sb).apply(null,arguments)},h._emscripten_register_main_browser_thread_id=function(){return(tn=h._emscripten_register_main_browser_thread_id=h.asm.tb).apply(null,arguments)}),nn=h._emscripten_main_browser_thread_id=function(){return(nn=h._emscripten_main_browser_thread_id=h.asm.ub).apply(null,arguments)},rn=h.__emscripten_do_dispatch_to_thread=function(){return(rn=h.__emscripten_do_dispatch_to_thread=h.asm.vb).apply(null,arguments)},an=h._emscripten_sync_run_in_main_thread_4=function(){return(an=h._emscripten_sync_run_in_main_thread_4=h.asm.wb).apply(null,arguments)},sn=h._emscripten_run_in_main_runtime_thread_js=function(){return(sn=h._emscripten_run_in_main_runtime_thread_js=h.asm.xb).apply(null,arguments)},on=h.__emscripten_call_on_thread=function(){return(on=h.__emscripten_call_on_thread=h.asm.yb).apply(null,arguments)},ln=(h._emscripten_tls_init=function(){return(h._emscripten_tls_init=h.asm.zb).apply(null,arguments)},h.__emscripten_thread_init=function(){return(ln=h.__emscripten_thread_init=h.asm.Ab).apply(null,arguments)}),un=h.stackSave=function(){return(un=h.stackSave=h.asm.Bb).apply(null,arguments)},dn=h.stackRestore=function(){return(dn=h.stackRestore=h.asm.Cb).apply(null,arguments)},hn=h.stackAlloc=function(){return(hn=h.stackAlloc=h.asm.Db).apply(null,arguments)},pn=h._emscripten_stack_set_limits=function(){return(pn=h._emscripten_stack_set_limits=h.asm.Eb).apply(null,arguments)},cn=h._memalign=function(){return(cn=h._memalign=h.asm.Fb).apply(null,arguments)},fn=h.__emscripten_allow_main_runtime_queued_calls=10656,mn=h.__emscripten_main_thread_futex=12292;function gn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function yn(e){if(e=e||f,!(fe>0)){if(x)return l(h),ue(),void postMessage({cmd:"loaded"});le(),fe>0||(h.setStatus?(h.setStatus("Running..."),setTimeout((function(){setTimeout((function(){h.setStatus("")}),1),t()}),1)):t())}function t(){Ut||(Ut=!0,h.calledRun=!0,U||(ue(),de(),l(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),he()))}}function An(e,t){if(!t||!O||0!==e){if(!t&&x)throw postMessage({cmd:"exitProcess",returnCode:e}),new gn(e);O||(Pe.terminateAllThreads(),h.onExit&&h.onExit(e),U=!0),m(e,new gn(e))}}if(h.cwrap=H,h.PThread=Pe,h.PThread=Pe,h.wasmMemory=$,h.ExitStatus=gn,ge=function e(){Ut||yn(),Ut||(ge=e)},h.run=yn,h.preInit)for("function"==typeof h.preInit&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();if(x&&(O=!1,Pe.initWorker()),yn(),d&&(Vt={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!d.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!d.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Gt=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Gt=e}if(Vt){var bn=Gt._dispose;Gt._dispose=function(){bn(),Vt.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Vt.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=a},235:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js",function(e){var t,a,s,i=void 0!==(e=e||{})?e:{};i.ready=new Promise((function(e,n){t=e,a=n})),"undefined"!=typeof process&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var o,l={};for(o in i)i.hasOwnProperty(o)&&(l[o]=i[o]);var u=[],d=!1,h=!1,p=!1,c=!1;d="object"==typeof window,h="function"==typeof importScripts,p="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,c=!d&&!p&&!h;var f,m,g,y,A,b="";function x(e){return i.locateFile?i.locateFile(e,b):b+e}p?(b=h?n(980).dirname(b)+"/":"//",f=function(e,t){return y||(y=n(256)),A||(A=n(980)),e=A.normalize(e),y.readFileSync(e,t?null:"utf8")},g=function(e){var t=f(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof De))throw e})),process.on("unhandledRejection",ae),i.inspect=function(){return"[Emscripten Module object]"}):c?("undefined"!=typeof read&&(f=function(e){return read(e)}),g=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(d||h)&&(h?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",f=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},h&&(g=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v,w,k=i.print||console.log.bind(console),I=i.printErr||console.warn.bind(console);for(o in l)l.hasOwnProperty(o)&&(i[o]=l[o]);l=null,i.arguments&&(u=i.arguments),i.thisProgram&&i.thisProgram,i.quit&&i.quit,i.wasmBinary&&(v=i.wasmBinary),i.noExitRuntime,"object"!=typeof WebAssembly&&ae("no native wasm support detected");var S=!1;function N(e,t){e||ae("Assertion failed: "+t)}function T(e){var t=i["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function C(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);P(e,t=ze(n),n)}return t},array:function(e){var t=ze(e.length);return L(e,t),t}},i=T(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var d=s[n[u]];d?(0===l&&(l=Fe()),o[u]=d(r[u])):o[u]=r[u]}var h=i.apply(null,o);return h=function(e){return"string"===t?z(e):"boolean"===t?Boolean(e):e}(h),0!==l&&Oe(l),h}function E(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?T(e):function(){return C(e,t,n,arguments)}}var _,R,M,$,F="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function O(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&F)return F.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function z(e,t){return e?O(M,e,t):""}function D(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function P(e,t,n){return D(e,M,t,n)}function L(e,t){R.set(e,t)}function W(e,t){return e%t>0&&(e+=t-e%t),e}function B(e){_=e,i.HEAP8=R=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=$=new Int32Array(e),i.HEAPU8=M=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var U,V=[],G=[],j=[],H=[];function q(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)Y(i.preRun.shift());fe(V)}function K(){fe(G)}function X(){fe(j)}function Z(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)J(i.postRun.shift());fe(H)}function Y(e){V.unshift(e)}function J(e){H.unshift(e)}G.push({func:function(){Me()}});var Q=0,ee=null,te=null;function ne(e){Q++,i.monitorRunDependencies&&i.monitorRunDependencies(Q)}function re(e){if(Q--,i.monitorRunDependencies&&i.monitorRunDependencies(Q),0==Q&&(null!==ee&&(clearInterval(ee),ee=null),te)){var t=te;te=null,t()}}function ae(e){i.onAbort&&i.onAbort(e),I(e+=""),S=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function se(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}i.preloadedImages={},i.preloadedAudios={};var ie="data:application/octet-stream;base64,";function oe(e){return se(e,ie)}var le="file://";function ue(e){return se(e,le)}var de="tfjs-backend-wasm.wasm";function he(e){try{if(e==de&&v)return new Uint8Array(v);if(g)return g(e);throw"both async and sync fetching of the wasm failed"}catch(e){ae(e)}}function pe(){if(!v&&(d||h)){if("function"==typeof fetch&&!ue(de))return fetch(de,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+de+"'";return e.arrayBuffer()})).catch((function(){return he(de)}));if(m)return new Promise((function(e,t){m(de,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he(de)}))}function ce(){var e={a:Re};function t(e,t){var n=e.exports;i.asm=n,B((w=i.asm.j).buffer),U=i.asm.r,re()}function n(e){t(e.instance)}function r(t){return pe().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),ae(e)}))}if(ne(),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}return(v||"function"!=typeof WebAssembly.instantiateStreaming||oe(de)||ue(de)||"function"!=typeof fetch?r(n):fetch(de,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a),{}}function fe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?U.get(n)():U.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(i)}}function me(){ae()}function ge(e,t,n){M.copyWithin(e,t,t+n)}function ye(){return M.length}function Ae(e){try{return w.grow(e-_.byteLength+65535>>>16),B(w.buffer),1}catch(e){}}function be(e){var t=ye(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),Ae(Math.min(n,W(Math.max(e,a),65536))))return!0}return!1}oe(de)||(de=x(de));var xe={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=xe.buffers[e];0===t||10===t?((1===e?k:I)(O(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return xe.varargs+=4,$[xe.varargs-4>>2]},getStr:function(e){return z(e)},get64:function(e,t){return e}};function ve(e){return 0}function we(e,t,n,r,a){}function ke(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=$[t+8*s>>2],o=$[t+(8*s+4)>>2],l=0;l<o;l++)xe.printChar(e,M[i+l]);a+=o}return $[r>>2]=a,0}function Ie(){return 6}function Se(){return 28}function Ne(e){return $[$e()>>2]=e,e}function Te(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ne(28),-1}var Ce,Ee,_e,Re={a:me,d:ge,e:be,f:ve,c:we,b:ke,h:Ie,g:Se,i:Te},Me=(ce(),i.___wasm_call_ctors=function(){return(Me=i.___wasm_call_ctors=i.asm.k).apply(null,arguments)}),$e=(i._init=function(){return(i._init=i.asm.l).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.m).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.n).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.o).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.p).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.q).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.s).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.t).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.u).apply(null,arguments)},i._All=function(){return(i._All=i.asm.v).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.w).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.x).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.y).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.z).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.A).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.B).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.C).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.D).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.E).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.F).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.G).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.H).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.I).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.J).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.K).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.L).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.M).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.N).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.O).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.P).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.Q).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.R).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.S).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.T).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.U).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.V).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.W).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.X).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.Y).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.Z).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm._).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.$).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.aa).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm.ba).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.ca).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.da).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.ea).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.fa).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.ga).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.ha).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.ia).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.ja).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.ka).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.la).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.ma).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.na).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.oa).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.pa).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.qa).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.ra).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.sa).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.ta).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.ua).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.va).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.wa).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.xa).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.ya).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.za).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.Aa).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.Ba).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.Ca).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Da).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Ea).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.Fa).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.Ga).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.Ha).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Ia).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Ja).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.Ka).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.La).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.Ma).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Na).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Oa).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Pa).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Qa).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Ra).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.Sa).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Ta).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Ua).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm.Va).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.Wa).apply(null,arguments)},i._free=function(){return(i._free=i.asm.Xa).apply(null,arguments)},i.___errno_location=function(){return($e=i.___errno_location=i.asm.Ya).apply(null,arguments)}),Fe=i.stackSave=function(){return(Fe=i.stackSave=i.asm.Za).apply(null,arguments)},Oe=i.stackRestore=function(){return(Oe=i.stackRestore=i.asm._a).apply(null,arguments)},ze=i.stackAlloc=function(){return(ze=i.stackAlloc=i.asm.$a).apply(null,arguments)};function De(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Pe(e){function n(){Ce||(Ce=!0,i.calledRun=!0,S||(K(),X(),t(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),Z()))}e=e||u,Q>0||(q(),Q>0||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1),n()}),1)):n()))}if(i.cwrap=E,te=function e(){Ce||Pe(),Ce||(te=e)},i.run=Pe,i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();if(Pe(),s&&(Ee={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!s.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!s.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)_e=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");_e=WasmBackendModuleThreadedSimd}if(Ee){var Le=_e._dispose;_e._dispose=function(){Le(),Ee.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Ee.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=a},126:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=l(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=c)return w}else{if(e<=-f)return k;if(e+1>=f)return v}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=o(u(n,8)),s=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));s=s.mul(p).add(o(h))}else s=(s=s.mul(a)).add(o(h))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?d(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=d,n.fromValue=h;var p=4294967296,c=p*p,f=c/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var A=i(1);n.ONE=A;var b=i(1,!0);n.UONE=b;var x=i(-1);n.NEG_ONE=x;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var w=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=w;var k=l(0,-2147483648,!1);n.MIN_VALUE=k;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(k)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(u(e,6),this.unsigned),s=this,i="";;){var l=s.div(a),d=(s.sub(l.mul(a)).toInt()>>>0).toString(e);if((s=l).isZero())return d+i;for(;d.length<6;)d="0"+d;i=""+d+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(k)?k:this.not().add(A)},I.neg=I.negate,I.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,d=0,p=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,p+=(c+=a+u)>>>16,d+=(p+=n+o)>>>16,d+=t+i,l((c&=65535)<<16|(f&=65535),(d&=65535)<<16|(p&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(k))return e.isOdd()?k:g;if(e.eq(k))return this.isOdd()?k:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,u=e.high>>>16,d=65535&e.high,p=e.low>>>16,c=65535&e.low,f=0,y=0,A=0,b=0;return A+=(b+=i*c)>>>16,y+=(A+=s*c)>>>16,A&=65535,y+=(A+=i*p)>>>16,f+=(y+=a*c)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*d)>>>16,f+=n*c+a*p+s*d+i*u,l((A&=65535)<<16|(b&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return b;s=y}else{if(this.eq(k))return e.eq(A)||e.eq(x)?k:e.eq(k)?A:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?A:x:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(k))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),d=i<=48?1:u(2,i-48),p=o(n),c=p.mul(e);c.isNegative()||c.gt(a);)c=(p=o(n-=d,this.unsigned)).mul(e);p.isZero()&&(p=A),s=s.add(p),a=a.sub(c)}return s},I.div=I.divide,I.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return l(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},256:()=>{},578:()=>{},980:()=>{},862:()=>{},958:()=>{},410:()=>{},628:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";const e={happy:"happy",neutral:"neutral",surprise:"surprised",angry:"angry",fear:"fearful",disgust:"disgusted",sad:"sad"},t="face-box",r="face-expressions";class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return i("refCount")}incRef(e){return i("incRef")}timerAvailable(){return!0}time(e){return i("time")}read(e){return i("read")}readSync(e){return i("readSync")}readToGPU(e,t){return i("readToGPU")}numDataIds(){return i("numDataIds")}disposeData(e,t){return i("disposeData")}write(e,t,n){return i("write")}move(e,t,n,r,a){return i("move")}memory(){return i("memory")}floatPrecision(){return i("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return i("dispose")}}function i(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function o(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function l(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";o(p(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function u(e){o(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function d(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),Array.isArray(e)||g(e)&&!n)for(let r=0;r<e.length;++r)d(e[r],t,n);else t.push(e);return t}function h(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function p(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function c(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function f(e,t){const n=t.length;return o((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),o(e.every((e=>e%1==0)),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function m(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function g(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function y(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function A(e){return"string"==typeof e||e instanceof String}function b(e){return Array.isArray(e)?b(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":"number"==typeof e?"float32":A(e)?"string":"boolean"==typeof e?"bool":"float32"}function x(e){return!!(e&&e.constructor&&e.call&&e.apply)}function v(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function w(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=w(e+t*o,i,n,r)}return a}function k(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return w(0,e,t,n)}function I(e,t){const n=S(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function S(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function N(e){e.forEach((t=>{o(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function T(e){return e&&e.then&&"function"==typeof e.then}class C{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=E,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(R().getBool("IS_TEST")||R().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];R().getBool("IS_TEST")||R().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(T(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function E(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return _(t,r[0],r[1]),r.join("=")})),t}function _(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function R(){return $}let M,$=null;function F(){if(null==M){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}M=e}return M}function O(e,t){const n=function(){const e=F();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const z="Add",D="AddN",P="ArgMax",L="AvgPool",W="BatchMatMul",B="Cast",U="ClipByValue",V="Concat",G="Conv2D",j="Conv2DBackpropInput",H="Cumsum",q="CropAndResize",K="DepthToSpace",X="DepthwiseConv2dNative",Z="RealDiv",Y="ExpandDims",J="Fill",Q="FlipLeftRight",ee="FloorDiv",te="FusedBatchNorm",ne="GatherNd",re="Greater",ae="GreaterEqual",se="Identity",ie="LeakyRelu",oe="LessEqual",le="LogicalAnd",ue="Max",de="MaxPool",he="Mean",pe="Min",ce="Minimum",fe="MirrorPad",me="Multiply",ge="NotEqual",ye="NonMaxSuppressionV3",Ae="NonMaxSuppressionV4",be="NonMaxSuppressionV5",xe="OneHot",ve="Pack",we="PadV2",ke="Prelu",Ie="Prod",Se="Range",Ne="Relu",Te="Reshape",Ce="ResizeNearestNeighbor",Ee="ResizeBilinear",_e="Relu6",Re="Reverse",Me="Round",$e="ScatterNd",Fe="Select",Oe="Slice",ze="Sigmoid",De="Sqrt",Pe="Sum",Le="SplitV",We="Softmax",Be="SparseFillEmptyRows",Ue="SparseReshape",Ve="SparseSegmentMean",Ge="SparseSegmentSum",je="SquaredDifference",He="StridedSlice",qe="StringSplit",Ke="Tile",Xe="TopK",Ze="Transform",Ye="Transpose",Je="Unpack",Qe="ZerosLike",et="Step",tt="RotateWithOffset",nt="_FusedMatMul",rt="FusedConv2D",at="FusedDepthwiseConv2D";function st(){R().getBool("IS_TEST")||R().getBool("PROD")||console.warn(...arguments)}const it=O("kernelRegistry",(()=>new Map)),ot=O("gradRegistry",(()=>new Map));function lt(e,t){const n=pt(e,t);return it.get(n)}function ut(e){return ot.get(e)}function dt(e){const t=it.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function ht(e){const{kernelName:t,backendName:n}=e,r=pt(t,n);it.has(r)&&st(`The kernel '${t}' for backend '${n}' is already registered`),it.set(r,e)}function pt(e,t){return`${t}_${e}`}var ct=n(126);const ft=n.n(ct)()||ct;function mt(e){return ft.fromString(e,!0,16)}function gt(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=d(e)),R().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function yt(){return R().platform.now()}function At(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",R().platform.encode(e,t)}function bt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",R().platform.decode(e,t)}mt("c3a5c85c97cb3127"),mt("b492b66fbe98f273"),mt("9ae16a3b2f90404f");class xt{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new wt)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=yt();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:yt()-i})}if(R().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{vt(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function vt(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class wt{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?c(`${r}ms`,9):r.error,o=c(e,25),l=t.rank,u=t.size,d=c(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${d}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function kt(e,t,n,r){const a=v(t),s=function(e,t,n,r){const a=h(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Tt(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],It(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Nt(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function It(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:A(e)?`'${e}'`:"bool"===n?St(e):parseFloat(e.toFixed(7)).toString(),c(r,t)}function St(e){return 0===e?"false":"true"}function Nt(e,t,n,r,a){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[It(Tt(e)[0],0,n)]:"bool"===n?[St(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Tt(r),s=Tt(s)),["["+r.map(((e,t)=>It(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>It(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Tt(e):Array.from(e)).map(((e,t)=>It(e,a[t],n))).join(", ")+"]"]}const u=t.slice(1),d=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;p.push(...Nt(e.slice(r,s),u,n,d,a,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;p.push(...Nt(e.slice(r,s),u,n,d,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;p.push(...Nt(e.slice(r,s),u,n,d,a,t===o-1))}const c=2===l?",":"";p[0]="["+p[0]+c;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function Tt(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Ct{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=h(e),null!=n){const e=n.length;o(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||m(t,this.size),this.strides=v(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),o(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const a=this.locToIndex(n);this.values[a]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const e of t){if(e<0||e>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let a=t[t.length-1];for(let e=0;e<t.length-1;++e)a+=this.strides[e]*t[e];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Et().makeTensor(this.values,this.shape,this.dtype)}}let Et=null,_t=null,Rt=null;class Mt{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=h(e),this.strides=v(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return _t.buffer(this.shape,this.dtype,e)}bufferSync(){return _t.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return k(this.shape,e,"complex64"===this.dtype)}arraySync(){return k(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Et().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>bt(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Et().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Et().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>bt(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Et().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Et().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return _t.print(this,e)}clone(){return this.throwIfDisposed(),_t.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return kt(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),_t.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Et().makeVariable(this,e,t,n)}}Object.defineProperty(Mt,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),O("Tensor",(()=>Mt));class $t extends Mt{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!p(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Et().disposeTensor(this),this.dataId=e.dataId,Et().incRef(this,null)}dispose(){Et().disposeVariable(this),this.isDisposedInternal=!0}}var Ft,Ot,zt,Dt,Pt;Object.defineProperty($t,Symbol.hasInstance,{value:e=>e instanceof Mt&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ft||(Ft={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Ot||(Ot={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(zt||(zt={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Dt||(Dt={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Pt||(Pt={}));const Lt={float32:Dt,int32:Ot,bool:zt,complex64:Pt};function Wt(e,t){if(e.dtype===t.dtype)return[e,t];const n=function(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Lt[e][t]}(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Bt(e){const t=[];return Ut(e,t,new Set),t}function Ut(e,t,n){if(null==e)return;if(e instanceof Mt)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),Ut(r,t,n))}}function Vt(e){return null!=e.kernelName}class Gt{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class jt{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Gt}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(st(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new xt(this.backendInstance),!0}setupRegisteredKernels(){dt(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){dt(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof s||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,st(`Initialization of backend ${e} failed`),st(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return st(`Initialization of backend ${e} failed`),st(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return jt.nextTensorId++}nextVariableId(){return jt.nextVariableId++}clone(e){const t=qt.runKernel(se,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return qt.runKernel(B,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==lt(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Vt(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Vt(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=lt(t,this.backendName);o(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:d,attrs:h}=e,p=Vt(e)?null:e.backwardsFunc;let c;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(c=this.profiler.profileKernel(u,d,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(c),t=c.outputs):t=i()})),r&&this.addTapeNode(u,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:c.timeMs,extraInfo:c.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=ut(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(o(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&A(e[0])&&(a=e.map((e=>At(e))));const s=r.write(a,t,n),i=new Mt(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Mt(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new $t(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*y(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof $t||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*y(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ut(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=S(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Bt(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(o(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));o(a instanceof Mt,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=I(h(e),"float32");return qt.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!p(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Kt);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){var t=this;return o(x(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];let s;o(r.every((e=>e instanceof Mt)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const i={};r.forEach(((e,t)=>{i[t]=e}));const l=(t,n)=>(s=e(...r,n),o(s.value instanceof Mt,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),o(x(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),u=(e,t)=>{const n=s.gradFunc(e,t),a=Array.isArray(n)?n:[n];o(a.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),o(a.every((e=>e instanceof Mt)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i};return t.runKernelFunc({forwardFunc:l,backwardsFunc:u,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=yt(),n=await this.backend.time(e);return n.wallMs=yt()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Gt;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ht(){const e=F();if(null==e._tfengine){const t=new C(e);e._tfengine=new jt(t)}var t;return t=e._tfengine.ENV,$=t,Et=()=>e._tfengine,e._tfengine}jt.nextTensorId=0,jt.nextVariableId=0;const qt=Ht();function Kt(e,t){const n={a:e,b:t};return qt.runKernel(z,n)}const Xt=R();Xt.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Xt.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),Xt.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Xt.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Xt.registerFlag("PROD",(()=>!1)),Xt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Xt.getBool("DEBUG"))),Xt.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Xt.registerFlag("IS_TEST",(()=>!1)),Xt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Xt.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Zt="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Yt(e){return Zt?Buffer.byteLength(e):new Blob([e]).size}function Jt(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Qt(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function en(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Yt(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Yt(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class tn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==tn.instance&&(tn.instance=new tn),tn.instance}static registerSaveRouter(e){tn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){tn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return tn.getHandlers(e,"save")}static getLoadHandlers(e,t){return tn.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?tn.getInstance().loadRouters:tn.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const nn="tensorflowjs",rn="models_store",an="model_info_store";function sn(){if(!R().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function on(e){const t=e.result;t.createObjectStore(rn,{keyPath:"modelPath"}),t.createObjectStore(an,{keyPath:"modelPath"})}class ln{constructor(e){if(this.indexedDB=sn(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(nn,1);r.onupgradeneeded=()=>on(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(rn,"readonly"),r=t.objectStore(rn).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=en(t),s=a.transaction(an,"readwrite");let i=s.objectStore(an);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=a.transaction(rn,"readwrite");const o=l.objectStore(rn).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(an);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}ln.URL_SCHEME="indexeddb://";const un=e=>{return R().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ln.URL_SCHEME)?(t=e.slice(ln.URL_SCHEME.length),new ln(t)):null;var t};tn.registerSaveRouter(un),tn.registerLoadRouter(un);class dn{constructor(){this.indexedDB=sn()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(nn,1);n.onupgradeneeded=()=>on(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(an,"readonly"),s=a.objectStore(an).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ln.URL_SCHEME)?t.slice(ln.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(nn,1);r.onupgradeneeded=()=>on(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(an,"readwrite"),i=s.objectStore(an),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{l=a.transaction(rn,"readwrite");const r=l.objectStore(rn).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const hn="/",pn="tensorflowjs_models",cn="info",fn="model_topology",mn="weight_specs",gn="weight_data",yn="model_metadata";function An(e){return{info:[pn,e,cn].join(hn),topology:[pn,e,fn].join(hn),weightSpecs:[pn,e,mn].join(hn),weightData:[pn,e,gn].join(hn),modelMetadata:[pn,e,yn].join(hn)}}function bn(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function xn(e){const t=e.split(hn);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(hn)}class vn{constructor(e){if(!R().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=An(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=en(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Zt)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw bn(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Zt){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}vn.URL_SCHEME="localstorage://";const wn=e=>{return R().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(vn.URL_SCHEME)?(t=e.slice(vn.URL_SCHEME.length),new vn(t)):null;var t};tn.registerSaveRouter(wn),tn.registerLoadRouter(wn);class kn{constructor(){o(R().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),o("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=pn+hn,n=hn+cn;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[xn(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=An(e=(t=e).startsWith(vn.URL_SCHEME)?t.slice(vn.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return bn(n),r}}class In{constructor(){this.managers={}}static getInstance(){return null==In.instance&&(In.instance=new In),In.instance}static registerManager(e,t){o(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),o(e.length>0,(()=>"scheme must not be an empty string."));const n=In.getInstance();o(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Sn{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(R().get("IS_BROWSER")){R().setPlatform("browser",new Sn);try{In.registerManager(vn.URL_SCHEME,new kn)}catch(e){}try{In.registerManager(ln.URL_SCHEME,new dn)}catch(e){}}let Nn;function Tn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",N(e),new Ct(e,t,n)}function Cn(e,t){let n=e;if(g(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||g(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&R().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&En(e,r,[]),r}function En(e,t,n){if(n=n||[],!Array.isArray(e)&&!g(e))return void o(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));o(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),o(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)En(e[t],r,n.concat(t))}function _n(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Rn(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Mt)return _n(r,e.dtype,t,n),e;let a=b(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),_n(r,a,t,n),null==e||!g(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Cn(e,a);g(e)||Array.isArray(e)||(e=[e]);const i=!0,o="string"!==a?gt(e,a):d(e,[],i);return qt.makeTensor(o,s,a)}function Mn(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const a=e;return a.map(((e,a)=>Rn(e,`${t}[${a}]`,n,r)))}function $n(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=function(){qt.startScope(n);try{const e=r(...arguments);return T(e)&&console.error("Cannot return a Promise inside of tidy."),qt.endScope(e),e}catch(e){throw qt.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}R().get("IS_NODE")&&R().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=R().global.fetch?R().global.fetch(e,t):(null==Nn&&(Nn=n(410)),Nn(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Fn=$n({cast_:function(e,t){const n=Rn(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return qt.runKernel(B,r,a)}}),On=$n({clone_:function(e){const t={x:Rn(e,"x","clone","string_or_numeric")};return qt.runKernel(se,t)}});function zn(e){return new Promise((e=>setTimeout(e))).then(e)}Ht(),_t={buffer:Tn,cast:Fn,clone:On,print:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}};class Dn{constructor(e){if(!R().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Dn.URL_SCHEME)&&(e=e.slice(Dn.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Qt(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await zn((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await zn((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:en(e)}}}}function Pn(e,t,n,r){!function(e){o(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){o(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),o(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),o(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function Ln(e,t){null==t&&(t={});const n=null==t.fetchFunc?R().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Pn(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Pn(a,t.onProgress,.5,1)}Dn.URL_SCHEME="downloads://",tn.registerSaveRouter((e=>R().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Dn.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Dn(e)}(e.slice(Dn.URL_SCHEME.length)):null));class Wn{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(o("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=R().platform.fetch,o(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&o(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Qt(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:en(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Jt(await Ln(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Bn(e){return null!=e.match(Wn.URL_SCHEME_REGEX)}Wn.URL_SCHEME_REGEX=/^https?:\/\//;const Un=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Bn(e))):Bn(e),n)return function(e,t){return new Wn(e,t)}(e,t)}return null};function Vn(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}function Gn(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function jn(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Hn(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}tn.registerSaveRouter(Un),tn.registerLoadRouter(Un);const qn=$n({complex_:function(e,t){const n=Rn(e,"real","complex"),r=Rn(t,"imag","complex");l(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return qt.runKernel("Complex",a)}}),Kn=$n({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;o(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Mn(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return On(n[0]);const r=n,a={axis:t};return qt.runKernel(V,r,a)}}),Xn=$n({imag_:function(e){const t={input:Rn(e,"input","imag")};return qt.runKernel("Imag",t)}}),Zn=$n({real_:function(e){const t={input:Rn(e,"input","real")};return qt.runKernel("Real",t)}}),Yn=$n({reshape_:function(e,t){const n={x:Rn(e,"x","reshape","string_or_numeric")},r={shape:t};return qt.runKernel(Te,n,r)}}),Jn=$n({slice_:function(e,t,n){const r=Rn(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return qt.runKernel(Oe,a,s)}}),Qn=$n({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=Rn(e,"x","split"),a={x:r},s={numOrSizeSplits:t,axis:n};return qt.runKernel(Le,a,s)}});function er(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=er(e,"float32"),n=er(e,"float32");return qn(t,n)}const n=S(h(e),t);return qt.makeTensor(n,e,t)}const tr=$n({zerosLike_:function(e){const t={x:Rn(e,"x","zerosLike")};return qt.runKernel(Qe,t)}}),nr=$n({fft_:function(e){o("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return qt.runKernel("FFT",t)}}),rr=$n({rfft_:function(e,t){o("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=Jn(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=Kn([e,er(r)],e.shape.length-1),n=t}else a=e;const s=tr(a),i=Yn(qn(a,s),[r,n]),l=nr(i),u=Math.floor(n/2)+1,d=Zn(l),h=Xn(l),p=Qn(d,[u,n-u],d.shape.length-1),c=Qn(h,[u,n-u],h.shape.length-1),f=a.shape.slice();return f[a.shape.length-1]=u,Yn(qn(p[0],c[0]),f)}}),ar=$n({ifft_:function(e){o("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return qt.runKernel("IFFT",t)}}),sr=$n({mul_:function(e,t){let n=Rn(e,"a","mul"),r=Rn(t,"b","mul");[n,r]=Wt(n,r);const a={a:n,b:r};return qt.runKernel(me,a)}}),ir=$n({reverse_:function(e,t){const n={x:Rn(e,"x","reverse")},r={dims:t};return qt.runKernel(Re,n,r)}});function or(e,t,n,r){if(null==r&&(r=b(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!g(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){N(t);const e=h(t),r=h(n);o(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==h(t.slice(e));o(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return g(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?gt(e,r):d(e,[],!0),qt.makeTensor(e,t,r)}function lr(e,t){if((g(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&g(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return or(e,[],[],t)}function ur(e,t){u(e);const n=Cn(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return or(e,null,n,t)}function dr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function hr(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ur(a,"float32")}$n({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Yn(e,[n,t]);r=ar(a)}else{const a=[n,2*(t-1)],s=Yn(Zn(e),[n,t]),i=Yn(Xn(e),[n,t]),o=ir(Jn(s,[0,1],[n,t-2]),1),l=sr(ir(Jn(i,[0,1],[n,t-2]),1),lr(-1)),u=Kn([s,o],1),d=Kn([i,l],1),h=Yn(qn(u,d),[a[0],a[1]]);r=ar(h)}if(r=Zn(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Yn(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),$n({hammingWindow_:function(e){return hr(e,.54,.46)}});const pr=$n({hannWindow_:function(e){return hr(e,.5,.5)}});function cr(e,t,n){const r={shape:e,value:t,dtype:n};return qt.runKernel(J,{},r)}function fr(e,t,n){if(u(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Cn(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return or(e,t,r,n)}const mr=$n({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const i=[];for(;s+t<=e.size;)i.push(Jn(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Kn([Jn(e,s,t-r),cr([r],a)]);i.push(o),s+=n}return 0===i.length?fr([],[0,t]):Yn(Kn(i),[i.length,t])}});$n({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:pr;null==r&&(r=dr(t));const s=mr(e,t,n),i=sr(s,a(t));return rr(i,r)}}),$n({cropAndResize_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Rn(e,"image","cropAndResize"),l=Rn(t,"boxes","cropAndResize","float32"),u=Rn(n,"boxInd","cropAndResize","int32"),d=l.shape[0];o(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),o(2===l.rank&&4===l.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${l.shape}.`)),o(1===u.rank&&u.shape[0]===d,(()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${l.shape}.`)),o(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),o(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),o("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const h={image:i,boxes:l,boxInd:u},p={method:a,extrapolationValue:s,cropSize:r},c=qt.runKernel(q,h,p);return c}}),$n({flipLeftRight_:function(e){const t=Rn(e,"image","flipLeftRight","float32");o(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return qt.runKernel(Q,n,{})}});const gr=$n({tile_:function(e,t){const n=Rn(e,"x","tile","string_or_numeric");o(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return qt.runKernel(Ke,r,a)}});function yr(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),o(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),o(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),o(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),o(1===t.rank,(()=>"scores must be a 1D tensor")),o(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),o(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}$n({grayscaleToRGB_:function(e){const t=Rn(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];o(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),o(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,gr(t,a)}}),$n({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=Rn(e,"image","rotateWithOffset","float32");o(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r},l=qt.runKernel(tt,s,i);return l}}),$n({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=Rn(e,"boxes","nonMaxSuppression","float32"),i=Rn(t,"scores","nonMaxSuppression","float32"),o=yr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return qt.runKernel(ye,{boxes:s,scores:i},l)}}),$n({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Rn(e,"boxes","nonMaxSuppression"),o=Rn(t,"scores","nonMaxSuppression"),l=yr(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;const u={boxes:i,scores:o},d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=qt.runKernel(be,u,d);return{selectedIndices:h[0],selectedScores:h[1]}}}),$n({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Rn(e,"boxes","nonMaxSuppression"),o=Rn(t,"scores","nonMaxSuppression"),l=yr(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,p={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:s},f=qt.runKernel(Ae,p,c);return{selectedIndices:f[0],validOutputs:f[1]}}}),$n({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Rn(e,"images","resizeBilinear");o(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),o(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),o(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Yn(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,l={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},d=qt.runKernel(Ee,l,u);return i?Yn(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),$n({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Rn(e,"images","resizeNearestNeighbor");o(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),o(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),o("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Yn(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,l={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},d=qt.runKernel(Ce,l,u);return i?Yn(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const Ar=$n({bincount_:function(e,t,n){const r=Rn(e,"x","bincount"),a=Rn(t,"weights","bincount");o("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),o(n>=0,(()=>`size must be non-negative, but got ${n}.`)),o(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return qt.runKernel("Bincount",s,i)}}),br=$n({lessEqual_:function(e,t){let n=Rn(e,"a","lessEqual","string_or_numeric"),r=Rn(t,"b","lessEqual","string_or_numeric");[n,r]=Wt(n,r),Vn(n.shape,r.shape);const a={a:n,b:r};return qt.runKernel(oe,a)}}),xr=$n({greater_:function(e,t){let n=Rn(e,"a","greater","string_or_numeric"),r=Rn(t,"b","greater","string_or_numeric");[n,r]=Wt(n,r),Vn(n.shape,r.shape);const a={a:n,b:r};return qt.runKernel(re,a)}}),vr=$n({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Rn(e,"x","sum");"bool"===r.dtype&&(r=Fn(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return qt.runKernel(Pe,a,s)}}),wr=$n({add_:function(e,t){let n=Rn(e,"a","add"),r=Rn(t,"b","add");[n,r]=Wt(n,r);const a={a:n,b:r};return qt.runKernel(z,a)}}),kr=$n({floorDiv_:function(e,t){let n=Rn(e,"a","floorDiv"),r=Rn(t,"b","floorDiv");[n,r]=Wt(n,r);const a={a:n,b:r};return qt.runKernel(ee,a)}}),Ir=$n({div_:function(e,t){let n=Rn(e,"a","div"),r=Rn(t,"b","div");if([n,r]=Wt(n,r),"int32"===n.dtype&&"int32"===r.dtype)return kr(n,r);const a={a:n,b:r};return qt.runKernel(Z,a,{})}}),Sr=$n({sub_:function(e,t){let n=Rn(e,"a","sub"),r=Rn(t,"b","sub");[n,r]=Wt(n,r);const a={a:n,b:r};return qt.runKernel("Sub",a)}}),Nr=$n({round_:function(e){const t={x:Rn(e,"x","round")};return qt.runKernel(Me,t)}}),Tr=$n({broadcastTo_:function(e,t){let n=Rn(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Yn(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return On(n);const i={x:n},o={reps:s};return qt.runKernel(Ke,i,o)}}),Cr=$n({where_:function(e,t,n){const r=Rn(t,"a","where"),a=Rn(n,"b","where"),s=Rn(e,"condition","where","bool"),i=Vn(Vn(s.shape,r.shape),a.shape),o={condition:Tr(s,i),t:Tr(r,i),e:Tr(a,i)};return qt.runKernel(Fe,o)}});function Er(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return qt.runKernel(Se,{},a)}function _r(e,t,n){return or(e,t,Cn(e,n),n)}function Rr(e,t){let n,r,a,s,i,o,l=ur([-1]),u=ur([0]),d=ur([0]);for(let h=0;h<e.size-1;h++){n=Jn(e,0,h+1),r=Jn(e,h+1),i=Ir(vr(n),t),o=Ir(vr(r),t);const p=vr(sr(n,Er(0,n.size)));a=Ir(p,vr(n));const c=cr(r.shape,n.size),f=wr(Er(0,r.size),c),m=sr(r,f);s=Ir(vr(m),vr(r));const g=Sr(a,s),y=Sr(a,s),A=sr(i,o);d=sr(sr(A,g),y);const b=xr(d,u);u=Cr(b,d,u),l=Cr(b,ur([h]),l)}return l}$n({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=Rn(e,"image","threshold"),s=.2989,i=.587,l=.114,u=a.shape[0]*a.shape[1];let d,h,p,c,f=sr(ur([r]),255);if(o(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),o(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),o("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),o("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[d,h,p]=Qn(a,[1,1,1],-1);const e=sr(d,s),t=sr(h,i),n=sr(p,l);c=wr(wr(e,t),n)}else c=e;"otsu"===t&&(f=Rr(Ar(Fn(Nr(c),"int32"),_r([]),256),u));const m=n?br(c,f):xr(c,f),g=Fn(sr(m,255),"int32");return g}}),$n({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const i=Rn(e,"image","transform","float32"),l=Rn(t,"transforms","transform","float32");o(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),o(2===l.rank&&(l.shape[0]===i.shape[0]||1===l.shape[0])&&8===l.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),o(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:l},d={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return qt.runKernel(Ze,u,d)}});const Mr=$n({greaterEqual_:function(e,t){let n=Rn(e,"a","greaterEqual","string_or_numeric"),r=Rn(t,"b","greaterEqual","string_or_numeric");[n,r]=Wt(n,r),Vn(n.shape,r.shape);const a={a:n,b:r};return qt.runKernel(ae,a)}}),$r=$n({logicalAnd_:function(e,t){const n=Rn(e,"a","logicalAnd","bool"),r=Rn(t,"b","logicalAnd","bool");Vn(n.shape,r.shape);const a={a:n,b:r};return qt.runKernel(le,a)}}),Fr=$n({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Mn(e,"tensors","stack","string_or_numeric");o(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return qt.runKernel(ve,r,a)}}),Or=$n({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Rn(e,"x","unstack","string_or_numeric");o(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return qt.runKernel(Je,r,a)}});$n({bandPart_:function(e,t,n){o(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),o(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Rn(e,"a","bandPart");o(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const l=Yn(Er(0,s,1,"int32"),[-1,1]),u=Er(0,i,1,"int32"),d=Sr(l,u),h=$r(br(d,lr(+t,"int32")),Mr(d,lr(-n,"int32"))),p=er([s,i],r.dtype);return Yn(Fr(Or(Yn(r,[-1,s,i])).map((e=>Cr(h,e,p)))),a)}});const zr=$n({abs_:function(e){const t=Rn(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return qt.runKernel("ComplexAbs",e)}{const e={x:t};return qt.runKernel("Abs",e)}}});function Dr(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Pr(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Lr(e,t){return function(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}(e,t.map((e=>1)),t)}function Wr(e,t,n){o(Dr(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Br(e,t){if(Dr(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ur(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Vr=$n({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Rn(e,"x","max"),a={x:r},s={reductionIndices:t,keepDims:n};return qt.runKernel(ue,a,s)}}),Gr=$n({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Rn(e,"x","min"),a={x:r},s={axis:t,keepDims:n};return qt.runKernel(pe,a,s)}}),jr=$n({pow_:function(e,t){let n=Rn(e,"base","pow"),r=Rn(t,"exp","pow");[n,r]=Wt(n,r);const a={a:n,b:r};return qt.runKernel("Pow",a)}}),Hr=$n({sqrt_:function(e){const t={x:Rn(e,"x","sqrt","float32")};return qt.runKernel(De,t)}}),qr=$n({square_:function(e){const t=Rn(e,"x","square");return qt.runKernel("Square",{x:t},{})}});function Kr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return zr(e);if(1!==e.rank&&null===n)return Kr(Yn(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return vr(zr(e),n);if(t===1/0)return Vr(zr(e),n);if(t===-1/0)return Gr(zr(e),n);if("euclidean"===t||2===t)return Hr(vr(jr(zr(e),lr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Vr(vr(zr(e),n[0]),n[1]-1);if(t===1/0)return Vr(vr(zr(e),n[1]),n[0]);if(t===-1/0)return Gr(vr(zr(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Hr(vr(qr(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Xr=$n({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=Kr(e=Rn(e,"x","norm"),t,n);let s=a.shape;if(r){const t=f(n,e.shape);s=Lr(a.shape,t)}return Yn(a,s)}}),Zr=$n({squeeze_:function(e,t){const n=Rn(e,"x","squeeze");return Yn(n,function(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:f(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}(n.shape,t).newShape)}});function Yr(e){Bt(e).forEach((e=>e.dispose()))}$n({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,o(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)o(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Qn(e,e.shape[0],0).map((e=>Zr(e,[0])));o(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(qt.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=sr(vr(sr(n[r],e)),n[r]);e=Sr(e,t)}return Ir(e,Xr(e,"euclidean"))})));return t?Fr(n,0):n}}),Rt=function(e){R().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Jr=$n({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Rn(e,"x","expandDims","string_or_numeric");o(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return qt.runKernel(Y,r,a)}}),Qr=$n({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const a=Tn([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Yn(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return gr(Jr(i,0),[n[0],1,1]);if(2===n.length)return gr(Jr(Jr(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return gr(Jr(Jr(Jr(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),ea=$n({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Rn(e,"a","matMul"),s=Rn(t,"b","matMul");[a,s]=Wt(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return qt.runKernel(W,i,o)}}),ta=$n({neg_:function(e){const t={x:Rn(e,"x","neg")};return qt.runKernel("Neg",t)}}),na=$n({transpose_:function(e,t){const n=Rn(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),o(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{o(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return qt.runKernel(Ye,r,a)}});function ra(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return qt.tidy((()=>{o(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Qr(n),s=On(e);const i=fr([[1]],[1,1]);let l=On(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,o=l,u=a;[l,s,a]=qt.tidy((()=>{const t=Jn(s,[e,e],[n-e,1]),o=Xr(t),u=Jn(s,[e,e],[1,1]),d=Cr(xr(u,0),fr([[-1]]),fr([[1]])),h=Sr(u,sr(d,o)),p=Ir(t,h);l=1===p.shape[0]?On(i):Kn([i,Jn(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const c=ta(Ir(ea(d,h),o)),f=Jn(s,[e,0],[n-e,r]),m=sr(c,l),g=na(l);if(0===e)s=Sr(f,ea(m,ea(g,f)));else{const t=Sr(f,ea(m,ea(g,f)));s=Kn([Jn(s,[0,0],[e,r]),t],0)}const y=na(m),A=Jn(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Sr(A,ea(ea(A,l),y));else{const t=Sr(A,ea(ea(A,l),y));a=Kn([Jn(a,[0,0],[n,e]),t],1)}return[l,s,a]})),Yr([t,o,u])}return!t&&n>r&&(a=Jn(a,[0,0],[n,r]),s=Jn(s,[0,0],[r,r])),[a,s]}))}var aa;$n({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(o(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ra(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Or(Yn(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=ra(e,t);a.push(n),s.push(r)})),[Yn(Fr(a,0),e.shape),Yn(Fr(s,0),e.shape)]}}}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(aa||(aa={}));const sa=$n({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Rn(e,"x","mean"),a={x:r},s={axis:t,keepDims:n};return qt.runKernel(he,a,s)}}),ia=$n({notEqual_:function(e,t){let n=Rn(e,"a","notEqual","string_or_numeric"),r=Rn(t,"b","notEqual","string_or_numeric");[n,r]=Wt(n,r),Vn(n.shape,r.shape);const a={a:n,b:r};return qt.runKernel(ge,a)}});function oa(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=oa(e,"float32"),n=er(e,"float32");return qn(t,n)}const n=I(h(e),t);return qt.makeTensor(n,e,t)}const la=$n({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:aa.SUM_BY_NONZERO_WEIGHTS;const r=Rn(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Rn(t,"weights","computeWeightedLoss"));const s=null==a?r:sr(r,a);if(n===aa.NONE)return s;if(n===aa.SUM)return vr(s);if(n===aa.MEAN){if(null==a)return sa(s);{const e=r.size/a.size,t=Ir(vr(s),vr(a));return e>1?Ir(t,lr(e)):t}}if(n===aa.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Ir(vr(s),lr(r.size));{const e=sr(a,oa(r.shape)),t=Fn(vr(ia(e,lr(0))),"float32");return Ir(vr(s),t)}}throw Error(`Unknown reduction: ${n}`)}});$n({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:aa.SUM_BY_NONZERO_WEIGHTS;const a=Rn(e,"labels","absoluteDifference"),s=Rn(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Rn(n,"weights","absoluteDifference")),l(a.shape,s.shape,"Error in absoluteDifference: ");const o=zr(Sr(a,s));return la(o,i,r)}}),$n({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:aa.SUM_BY_NONZERO_WEIGHTS;const s=Rn(e,"labels","cosineDistance"),i=Rn(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Rn(r,"weights","cosineDistance")),l(s.shape,i.shape,"Error in cosineDistance: ");const u=lr(1),d=Sr(u,vr(sr(s,i),n,!0));return la(d,o,a)}});const ua=$n({relu_:function(e){const t={x:Rn(e,"x","relu")};return qt.runKernel(Ne,t)}});$n({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:aa.SUM_BY_NONZERO_WEIGHTS,a=Rn(e,"labels","hingeLoss");const s=Rn(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Rn(n,"weights","hingeLoss")),l(a.shape,s.shape,"Error in hingeLoss: ");const o=lr(1);a=Sr(sr(lr(2),a),o);const u=ua(Sr(o,sr(a,s)));return la(u,i,r)}});const da=$n({minimum_:function(e,t){let n=Rn(e,"a","minimum"),r=Rn(t,"b","minimum");[n,r]=Wt(n,r),"bool"===n.dtype&&(n=Fn(n,"int32"),r=Fn(r,"int32")),Vn(n.shape,r.shape);const a={a:n,b:r};return qt.runKernel(ce,a)}});$n({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:aa.SUM_BY_NONZERO_WEIGHTS;const s=Rn(e,"labels","huberLoss"),i=Rn(t,"predictions","huberLoss");let o=null;null!=n&&(o=Rn(n,"weights","huberLoss")),l(s.shape,i.shape,"Error in huberLoss: ");const u=lr(r),d=zr(Sr(i,s)),h=da(d,u),p=Sr(d,h),c=wr(sr(lr(.5),qr(h)),sr(u,p));return la(c,o,a)}});const ha=$n({log_:function(e){const t={x:Rn(e,"x","log","float32")};return qt.runKernel("Log",t)}});$n({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:aa.SUM_BY_NONZERO_WEIGHTS;const s=Rn(e,"labels","logLoss"),i=Rn(t,"predictions","logLoss");let o=null;null!=n&&(o=Rn(n,"weights","logLoss")),l(s.shape,i.shape,"Error in logLoss: ");const u=lr(1),d=lr(r),h=ta(sr(s,ha(wr(i,d)))),p=sr(Sr(u,s),ha(wr(Sr(u,i),d))),c=Sr(h,p);return la(c,o,a)}});const pa=$n({squaredDifference_:function(e,t){let n=Rn(e,"a","squaredDifference"),r=Rn(t,"b","squaredDifference");[n,r]=Wt(n,r),Vn(n.shape,r.shape);const a={a:n,b:r};return qt.runKernel(je,a,{})}});$n({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:aa.SUM_BY_NONZERO_WEIGHTS;const a=Rn(e,"labels","meanSquaredError"),s=Rn(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Rn(n,"weights","meanSquaredError")),l(a.shape,s.shape,"Error in meanSquaredError: ");const o=pa(a,s);return la(o,i,r)}});const ca=$n({exp_:function(e){const t={x:Rn(e,"x","exp")};return qt.runKernel("Exp",t)}}),fa=$n({log1p_:function(e){const t={x:Rn(e,"x","log1p")};return qt.runKernel("Log1p",t)}});function ma(e,t){const n=Rn(e,"labels","sigmoidCrossEntropyWithLogits"),r=Rn(t,"logits","sigmoidCrossEntropyWithLogits");l(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=ua(r),s=sr(r,n),i=fa(ca(ta(zr(r))));return wr(Sr(a,s),i)}function ga(e){return qt.customGrad(e)}$n({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:aa.SUM_BY_NONZERO_WEIGHTS,s=Rn(e,"multiClassLabels","sigmoidCrossEntropy");const i=Rn(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Rn(n,"weights","sigmoidCrossEntropy")),l(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=lr(r),t=lr(1),n=lr(.5);s=wr(sr(s,Sr(t,e)),sr(n,e))}const u=ma(s,i);return la(u,o,a)}});const ya=$n({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Rn(e,"x","logSumExp"),a=f(t,r.shape),s=Vr(r,a,!0),i=Sr(r,s),o=ca(i),l=vr(o,a),u=ha(l),d=wr(Yn(s,u.shape),u);if(n){const e=Lr(d.shape,a);return Yn(d,e)}return d}});function Aa(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=ga(((e,t,r)=>{const a=ya(t,[n],!0),s=Sr(Fn(t,"float32"),a);r([e,s]);const i=ta(sr(s,e));return{value:vr(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Lr(e.shape,[n]);return[sr(Yn(e,s),Sr(Fn(r,"float32"),ca(a))),sr(Yn(e,s),Sr(ca(a),Fn(r,"float32")))]}}}));return r(e,t)}function ba(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function xa(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[o,l]=wa(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return va(e,u,n,r,a,s,!1,i)}function va(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,d,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,d]=e}const[p,c,,f]=t,[m,g]=wa(n),[y,A]=wa(r),b=ka(p,y),x=ka(c,A),{padInfo:v,outHeight:w,outWidth:k}=Ia(a,u,d,m,g,b,x,s,o),I=i?f*h:f;let S;return"channelsFirst"===o?S=[l,I,w,k]:"channelsLast"===o&&(S=[l,w,k,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:h,outHeight:w,outWidth:k,outChannels:I,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:c,effectiveFilterHeight:b,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:A,inShape:e,outShape:S,filterShape:t}}function wa(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ka(e,t){return t<=1?e:e+(e-1)*(t-1)}function Ia(e,t,n,r,a,s,i,o,l){let u,d,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=function(e,t,n){const r=ka(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}(e,t,n));const s=e[1];return[Sa((e[0]-t+2*r)/n+1,a),Sa((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),p=e-l,c=Math.floor(o/2);u={top:l,bottom:p,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:c,left:f,right:m,type:0===p&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},d=Sa((t-s+p+c)/r+1,o),h=Sa((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:d,outWidth:h}}function Sa(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Na(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ta(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Ca(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ea(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function _a(e){try{return e.map((e=>bt(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ra(e){return e.map((e=>At(e)))}var Ma,$a;let Fa;$n({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:aa.SUM_BY_NONZERO_WEIGHTS,s=Rn(e,"onehotLabels","softmaxCrossEntropy");const i=Rn(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Rn(n,"weights","softmaxCrossEntropy")),l(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=lr(r),t=lr(1),n=lr(s.shape[1]);s=wr(sr(s,Sr(t,e)),Ir(e,n))}const u=Aa(s,i);return la(u,o,a)}}),$n({sparseFillEmptyRows_:function(e,t,n,r){const a=Rn(e,"indices","sparseFillEmptyRows","int32"),s=Rn(t,"values","sparseFillEmptyRows"),i=Rn(n,"denseShape","sparseFillEmptyRows","int32"),o=Rn(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:a,values:s,denseShape:i,defaultValue:o},u=qt.runKernel(Be,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),$n({sparseReshape_:function(e,t,n){const r=Rn(e,"inputIndices","sparseReshape","int32"),a=Rn(t,"inputShape","sparseReshape","int32"),s=Rn(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=qt.runKernel(Ue,i);return{outputIndices:o[0],outputShape:o[1]}}}),$n({sparseSegmentMean_:function(e,t,n){const r=Rn(e,"data","sparseSegmentMean"),a=Rn(t,"indices","sparseSegmentMean","int32"),s=Rn(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return qt.runKernel(Ve,i)}}),$n({sparseSegmentSum_:function(e,t,n){const r=Rn(e,"data","sparseSegmentSum"),a=Rn(t,"indices","sparseSegmentSum","int32"),s=Rn(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return qt.runKernel(Ge,i)}}),$n({stringNGrams_:function(e,t,n,r,a,s,i,o){const l=Rn(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Rn(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const d={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=qt.runKernel("StringNGrams",h,d);return{nGrams:p[0],nGramsSplits:p[1]}}}),$n({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Rn(e,"input","stringSplit","string"),a=Rn(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=qt.runKernel(qe,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),$n({stringToHashBucketFast_:function(e,t){const n=Rn(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return qt.runKernel("StringToHashBucketFast",a,r)}}),$n({elu_:function(e){const t={x:Rn(e,"x","elu","float32")};return qt.runKernel("Elu",t)}}),$n({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n=Rn(e,"x","leakyRelu"),r={x:n},a={alpha:t};return qt.runKernel(ie,r,a)}}),$n({prelu_:function(e,t){const n={x:Rn(e,"x","prelu"),alpha:Rn(t,"alpha","prelu")};return qt.runKernel(ke,n)}}),$n({relu6_:function(e){const t={x:Rn(e,"x","relu6")};return qt.runKernel(_e,t)}}),$n({sigmoid_:function(e){const t={x:Rn(e,"x","sigmoid","float32")};return qt.runKernel(ze,t)}}),$n({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Rn(e,"x","step"),r={x:n},a={alpha:t};return qt.runKernel(et,r,a)}}),function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(Ma||(Ma={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}($a||($a={}));const Oa={kernelName:nt,backendName:"wasm",setupFunc:function(e){Fa=e.wasm.cwrap(nt,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r,p=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=$a[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);const y=l?a.shape[2]:a.shape[1],A=u?s.shape[1]:s.shape[2],b=Vn(a.shape.slice(0,-2),s.shape.slice(0,-2)),x=n.makeOutput([...b,y,A],a.dtype),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(a.shape).buffer),k=new Uint8Array(new Int32Array(s.shape).buffer);return Fa(p,w,a.shape.length,c,k,s.shape.length,l,u,g,f,m,h||0,v),x}};function za(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===h(i.shape)||n(s,Ma[a.dtype],o),i}}}const Da=za("Abs");function Pa(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,d=Vn(s.shape,i.shape),p=t.makeOutput(d,u);if(0===h(d))return p;const c=new Uint8Array(new Int32Array(s.shape).buffer),f=new Uint8Array(new Int32Array(i.shape).buffer),m=t.dataIdMap.get(p.dataId).id;return r(o,c,s.shape.length,l,f,i.shape.length,Ma[s.dtype],m),p}}}const La=Pa(z);let Wa;const Ba={kernelName:D,backendName:"wasm",setupFunc:function(e){Wa=e.wasm.cwrap(D,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===h(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return Wa(s,a.length,Ma[r.dtype],i),r}};function Ua(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const Va={kernelName:se,backendName:"wasm",kernelFunc:Ua};let Ga;function ja(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=Ua({inputs:t,backend:n});return e.shape=o,e}const u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return Ga(d,c,l.shape.length,Ma[l.dtype],h,p,s.length),u}const Ha={kernelName:Ye,backendName:"wasm",kernelFunc:ja,setupFunc:function(e){Ga=e.wasm.cwrap(Ye,null,["number","array","number","number","number","array","number"])}};function qa(e,t,n){const r=e.shape,a=e.shape.length,s=f(t,r);let i=s;const o=Br(i,a);let l=null,u=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Ur(i.length,a),l=ja({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}let Ka;const Xa={kernelName:"All",backendName:"wasm",setupFunc:function(e){Ka=e.wasm.cwrap("All",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,l=i;const{transposed:u,axes:d,originalAxes:p,inputWasTransposed:c}=qa(i,a,t);c&&(l=u,o=t.dataIdMap.get(u.dataId).id),Wr("all",d,l.shape.length);const[f,m]=Pr(l.shape,d),g=h(m),y=t.makeOutput(f,i.dtype);if(0!==h(l.shape)){const e=t.dataIdMap.get(y.dataId).id;Ka(o,g,e)}if(c&&t.disposeData(u.dataId),s){const e=Lr(y.shape,p);y.shape=e}return y}};let Za;const Ya={kernelName:"Any",backendName:"wasm",setupFunc:function(e){Za=e.wasm.cwrap("Any",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,l=i;const{transposed:u,axes:d,originalAxes:p,inputWasTransposed:c}=qa(i,a,t);c&&(l=u,o=t.dataIdMap.get(u.dataId).id),Wr("any",d,l.shape.length);const[f,m]=Pr(l.shape,d),g=h(m),y=t.makeOutput(f,i.dtype);if(0!==h(l.shape)){const e=t.dataIdMap.get(y.dataId).id;Za(o,g,e)}if(c&&t.disposeData(u.dataId),s){const e=Lr(y.shape,p);y.shape=e}return y}};let Ja;const Qa={kernelName:P,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,l=s;const{transposed:u,axes:d,inputWasTransposed:p}=qa(s,a,t);if(p){const e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}const c=l.shape.slice(0,-1),f=t.makeOutput(c,"int32"),m=t.dataIdMap.get(f.dataId).id,g=h(f.shape),y=l.shape[d[0]];return Ja(o,Ma[l.dtype],g,y,m),p&&t.disposeData(u.dataId),f},setupFunc:function(e){Ja=e.wasm.cwrap(P,null,["number","number","number","number","number"])}};let es;const ts={kernelName:L,backendName:"wasm",setupFunc:function(e){es=e.wasm.cwrap(L,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=xa(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,A=d.strideWidth,b=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);const x=r.makeOutput(d.outShape,"float32"),v=r.dataIdMap.get(x.dataId).id;return es(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,f,m,g,y,A,b,v),x}};function ns(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=h(r.shape),i=function(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}(a,s);return o(s===h(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}const rs={kernelName:Te,backendName:"wasm",kernelFunc:ns};let as;const ss={kernelName:W,backendName:"wasm",setupFunc:function(e){as=e.wasm.cwrap(W,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:l}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=a.shape.length,d=s.shape.length,p=i?a.shape[u-2]:a.shape[u-1],c=l?s.shape[d-1]:s.shape[d-2],f=i?a.shape[u-1]:a.shape[u-2],m=l?s.shape[d-2]:s.shape[d-1],g=a.shape.slice(0,-2),y=s.shape.slice(0,-2),A=h(g),b=h(y),x=Vn(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([f,m]);o(p===c,(()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${l} must match.`));const v=l?[b,m,c]:[b,c,m],w=ns({inputs:{x:a},backend:n,attrs:{shape:i?[A,p,f]:[A,f,p]}}),k=ns({inputs:{x:s},backend:n,attrs:{shape:v}}),I=n.dataIdMap.get(w.dataId).id,S=n.dataIdMap.get(k.dataId).id,N=i?w.shape[2]:w.shape[1],T=l?k.shape[1]:k.shape[2],C=Math.max(A,b),E=n.makeOutput([C,N,T],w.dtype),_=n.dataIdMap.get(E.dataId).id,R=new Uint8Array(new Int32Array(w.shape).buffer),M=new Uint8Array(new Int32Array(k.shape).buffer);return as(I,R,w.shape.length,S,M,k.shape.length,i,l,_),n.disposeData(w.dataId),n.disposeData(k.dataId),E.shape=x,E}};function is(e,t,n,r,a){const s=Gn(r,t,n),i=h(n),o=v(r);if(s){const n=jn(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const l=Tn(r,a,"string"===a?_a(e):e),u=Tn(n,a);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?Ra(u.values):u.values}function os(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=function(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{o(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(o(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}(t,n,r),l=Gn(t.shape,s,i),u=a.readSync(t.dataId),d=a.makeOutput(i,t.dtype),p=v(t.shape),c=a.dataIdMap.get(d.dataId);if(l){const e=jn(s,p);return"string"===t.dtype?c.stringBytes=u.slice(e,e+h(i)):a.typedArrayFromHeap(d).set(u.subarray(e,e+h(i))),d}if("string"===t.dtype){const e=is(u,s,i,t.shape,t.dtype);return c.stringBytes=e,d}const f=a.typedArrayFromHeap(d),m=t.shape.length;if(2===m)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(u,p[0],f,s,i);else if(3===m)!function(e,t,n,r,a,s){let i=0;const o=a[0],l=a[1],u=a[2],d=o+s[0],h=l+s[1];for(let a=o;a<d;a++)for(let o=l;o<h;o++){const l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(u,p[0],p[1],f,s,i);else if(4===m)!function(e,t,n,r,a,s,i){let o=0;const l=s[0],u=s[1],d=s[2],h=l+i[0],p=u+i[1],c=d+i[2],f=s[3];for(let s=l;s<h;s++)for(let l=u;l<p;l++)for(let u=d;u<c;u++){const d=s*t+l*n+u*r+f;a.set(e.subarray(d,d+i[3]),o),o+=i[3]}}(u,p[0],p[1],p[2],f,s,i);else{const e=is(u,s,i,t.shape,t.dtype);f.set(e)}return d}const ls={kernelName:Oe,backendName:"wasm",kernelFunc:os},us={kernelName:"BatchToSpaceND",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=Ta(a.shape,s,o),u=Ca(l.length,s.length),d=Ea(a.shape,s,o),h=function(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}(i,s.length),p=function(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}(d,i,s.length),c=ns({inputs:{x:a},backend:n,attrs:{shape:l}}),f=ja({inputs:{x:c},backend:n,attrs:{perm:u}}),m=os({inputs:{x:ns({inputs:{x:f},backend:n,attrs:{shape:d}})},backend:n,attrs:{begin:h,size:p}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),m}};function ds(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const hs={kernelName:B,backendName:"wasm",kernelFunc:ds},ps=za("Ceil");let cs;const fs={kernelName:U,backendName:"wasm",setupFunc:function(e){cs=e.wasm.cwrap(U,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return cs(o,s,i,u),l}};function ms(e){const{inputs:t,backend:n}=e,r=f(e.attrs.axis,t[0].shape)[0];let a=ba(t.map((e=>e.shape)),r);const s=t.filter((e=>h(e.shape)>0));if(1===s.length)return Ua({inputs:{x:s[0]},backend:n});const i=n.makeOutput(a,t[0].dtype);if(0===h(a))return i;if(function(e,t){const n=e[0].length;e.forEach(((e,t)=>{o(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),o(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)o(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}(s.map((e=>e.shape)),r),"string"===s[0].dtype){const e=s.map((e=>{const t=h(e.shape.slice(r));return ns({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=ba(e.map((e=>e.shape)),1);const l=1===e[0].shape[0],u=function(e,t,n,r){const a=m(n,h(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=h(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?_a(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}(o,a,t[0].dtype,l),d=ba(s.map((e=>e.shape)),r);return i.shape=d,n.dataIdMap.get(i.dataId).stringBytes=Ra(u),e.forEach((e=>n.disposeData(e.dataId))),i}const l=h(s[0].shape.slice(0,r));let u=0;const d=s.map((e=>{const t=h(e.shape.slice(r));return u+=t,t})),p=s.map((e=>n.typedArrayFromHeap(e))),c=n.typedArrayFromHeap(i);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<p.length;n++){const r=d[n],a=e*r,s=p[n].subarray(a,a+r);c.set(s,t),t+=r}}return i}const gs={kernelName:V,backendName:"wasm",kernelFunc:ms};let ys;const As={kernelName:G,backendName:"wasm",setupFunc:function(e){ys=e.wasm.cwrap(G,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h,dataFormat:p}=n,c=Na(p),f=va(a.shape,s.shape,l,u,d,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,b=f.padInfo.bottom,x=f.padInfo.left,v=f.dilationHeight,w=f.dilationWidth,k=f.strideHeight,I=f.strideWidth,S=f.inChannels,N=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return ys(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,A,b,x,T,v,w,k,I,S,N,E),C}};let bs;const xs={kernelName:j,backendName:"wasm",setupFunc:function(e){bs=e.wasm.cwrap(j,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,h=Na(l),p=va(d,s.shape,i,1,o,u,!1,h),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:A,outChannels:b,outHeight:x,outWidth:w,strideHeight:k,strideWidth:I}=p,S=f-1-p.padInfo.top,N=m-1-p.padInfo.left,T="channelsLast"===p.dataFormat,C=v(p.inShape),E=v(a.shape),[_,R,M]=v(s.shape),$=C[0],F=T?C[1]:C[2],O=T?C[2]:1,z=T?1:C[1],D=E[0],P=T?E[1]:E[2],L=T?E[2]:1,W=T?1:E[1],B=t.makeOutput(p.inShape,"float32"),U=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,G=t.dataIdMap.get(s.dataId).id;return bs(V,G,c,f,m,y,A,g,x,w,b,k,I,S,N,_,R,M,$,F,O,z,D,P,L,W,U),B}},vs=za("Cos"),ws=za("Cosh");var ks;let Is;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(ks||(ks={}));const Ss={kernelName:q,backendName:"wasm",setupFunc:function(e){Is=e.wasm.cwrap(q,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=n,d=l.shape[0],[h,p]=i,c=[d,h,p,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=ds({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(l.dataId).id,A=t.dataIdMap.get(u.dataId).id,b=t.makeOutput(c,"float32"),x=t.dataIdMap.get(b.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return Is(g,y,A,d,v,h,p,ks[a],s,x),null!=f&&t.disposeData(f.dataId),b}};let Ns;const Ts={kernelName:H,backendName:"wasm",setupFunc:function(e){Ns=e.wasm.cwrap(H,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:l}=r,u=a.shape.length;o("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));const d=Br([s],u);let h=a;null!==d&&(h=ja({inputs:{x:a},attrs:{perm:d},backend:n}));const p=Ur(1,u)[0];Wr("cumsum",[p],u);const c=n.makeOutput(h.shape,h.dtype),f=h.shape[p],m=n.dataIdMap.get(h.dataId).id,g=n.dataIdMap.get(c.dataId).id;Ns(m,i?1:0,l?1:0,f,g,Ma[a.dtype]);let y=c;if(null!==d){const e=d.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]));y=ja({inputs:{x:c},attrs:{perm:e},backend:n}),n.disposeData(h.dataId),n.disposeData(c.dataId)}return y}};let Cs;const Es={kernelName:K,backendName:"wasm",setupFunc:function(e){Cs=e.wasm.cwrap(K,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=t.makeOutput(h,"float32"),c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(v(a.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(v(h)).buffer),y=t.dataIdMap.get(p.dataId).id;return Cs(c,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,h.length,y),p}};let _s;const Rs={kernelName:X,backendName:"wasm",setupFunc:function(e){_s=e.wasm.cwrap(X,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h}=n,p=null==u?[1,1]:u,c=va(a.shape,s.shape,l,p,d,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,A=c.padInfo.bottom,b=c.padInfo.left,x=c.dilationHeight,v=c.dilationWidth,w=c.strideHeight,k=c.strideWidth,I=c.inChannels,S=c.outChannels,N="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const T=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(T.dataId).id;return _s(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,A,b,N,x,v,w,k,I,S,C),T}},Ms=za("Elu"),$s=Pa("Equal",0,"bool"),Fs=za("Exp","float32");function Os(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,l=a.shape.slice();let u=s;return s<0&&(o(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),l.splice(u,0,1),ns({inputs:{x:a},backend:r,attrs:{shape:l}})}const zs={kernelName:Y,backendName:"wasm",kernelFunc:Os};function Ds(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}const Ps={kernelName:J,backendName:"wasm",kernelFunc:Ds};let Ls;const Ws={kernelName:Q,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,d]=r.shape;return Ls(s,o,l,u,d,i),a},setupFunc:function(e){Ls=e.wasm.cwrap(Q,null,["number","number","number","number","number","number"])}},Bs=za("Floor"),Us=Pa(ee);let Vs;const Gs={kernelName:te,backendName:"wasm",setupFunc:function(e){Vs=e.wasm.cwrap(te,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,d=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,c=t.dataIdMap.get(o.dataId).id,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=null!=u?t.dataIdMap.get(u.dataId).id:0,g=t.makeOutput(s.shape,s.dtype);if(0===h(s.shape))return g;const y=t.dataIdMap.get(g.dataId).id;return Vs(d,p,c,f,m,a,y),g}};let js;const Hs={kernelName:rt,backendName:"wasm",setupFunc:function(e){js=e.wasm.cwrap(rt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=va(a.shape,s.shape,l,d,u,p),g=$a[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}const v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return js(y,$,F,O,A,v,w,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}};let qs;const Ks={kernelName:at,backendName:"wasm",setupFunc:function(e){qs=e.wasm.cwrap(at,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=va(a.shape,s.shape,l,d,u,p,!0),g=$a[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}const v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return qs(y,$,F,O,A,v,w,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}};let Xs;const Zs={kernelName:ne,backendName:"wasm",setupFunc:function(e){Xs=e.wasm.cwrap(ne,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=function(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===h(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);const d=[...v(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,d]}(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;const d=a.shape,p=d[d.length-1],c=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(l).buffer),g=t.dataIdMap.get(u.dataId).id;return Xs(c,Ma[r.dtype],f,i,p,o,m,g),u}};let Ys;const Js={kernelName:"GatherV2",backendName:"wasm",setupFunc:function(e){Ys=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:l}=r,u=f(i,a.shape)[0],d=t.readSync(s.dataId),p=a.shape[u];for(let e=0;e<d.length;++e){const t=d[e];o(t<=p-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`))}const c=function(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,d=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}(a,s,u,l),m=ns({inputs:{x:a},attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]},backend:t}),g=h(s.shape),y=ns({inputs:{x:s},attrs:{shape:[c.batchSize,g/c.batchSize]},backend:t}),A=[c.batchSize,c.outerSize,g/c.batchSize,c.sliceSize],b=t.makeOutput(A,a.dtype);if(0===h(a.shape))return b;const x=m.shape.length-1,w=t.dataIdMap.get(m.dataId).id,k=t.dataIdMap.get(y.dataId).id,I=t.dataIdMap.get(b.dataId).id,S=new Uint8Array(new Int32Array(v(m.shape)).buffer),N=new Uint8Array(new Int32Array(v(A)).buffer);return Ys(w,Ma[a.dtype],S,x,k,c.batchSize,N,I),t.disposeData(m.dataId),t.disposeData(y.dataId),b.shape=c.outputShape,b}},Qs=Pa(re,0,"bool"),ei=Pa(ae,0,"bool");let ti;const ni={kernelName:ie,backendName:"wasm",setupFunc:function(e){ti=e.wasm.cwrap(ie,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==h(t.shape)){const e=r.dataIdMap.get(s.dataId).id;ti(a,Ma[t.dtype],n,e)}return s}},ri=Pa("Less",0,"bool"),ai=Pa(oe,0,"bool"),si=za("Log"),ii=Pa(le,0,"bool");let oi;const li={kernelName:ue,backendName:"wasm",setupFunc:function(e){oi=e.wasm.cwrap(ue,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,l=i;const{transposed:u,axes:d,originalAxes:p,inputWasTransposed:c}=qa(i,a,t);c&&(l=u,o=t.dataIdMap.get(u.dataId).id),Wr("max",d,l.shape.length);const[f,m]=Pr(l.shape,d),g=h(m),y=t.makeOutput(f,i.dtype);if(0!==h(l.shape)){const e=t.dataIdMap.get(y.dataId).id;oi(o,Ma[i.dtype],g,e)}if(c&&t.disposeData(u.dataId),s){const e=Lr(y.shape,p);y.shape=e}return y}},ui=Pa("Maximum");let di;const hi={kernelName:de,backendName:"wasm",setupFunc:function(e){di=e.wasm.cwrap(de,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;o("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));const{filterSize:i,strides:l,pad:u,dimRoundingMode:d}=n,h=xa(a.shape,i,l,1,u,d),p=h.filterHeight,c=h.filterWidth,f=h.padInfo.top,m=h.padInfo.right,g=h.padInfo.bottom,y=h.padInfo.left,A=h.dilationHeight,b=h.dilationWidth,x=h.strideHeight,v=h.strideWidth,w=h.inChannels,k=h.outChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(h.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return di(s,a.shape[0],a.shape[1],a.shape[2],p,c,f,m,g,y,A,b,x,v,w,k,S),I}};let pi;const ci={kernelName:he,backendName:"wasm",setupFunc:function(e){pi=e.wasm.cwrap(he,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,u=i;const{transposed:d,axes:p,originalAxes:c,inputWasTransposed:f}=qa(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,m=Ur(m.length,u.shape.length))}Wr("mean",m,u.shape.length);const[g,y]=Pr(u.shape,m),A=h(y);let b=u;"float32"!==u.dtype&&(b=ds({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(g,"float32");if(0!==h(u.shape)){const e=t.dataIdMap.get(x.dataId).id;pi(l,A,e)}if(f&&t.disposeData(d.dataId),s){const e=Lr(x.shape,c);x.shape=e}return"float32"!==u.dtype&&t.disposeData(b.dataId),x}};let fi;const mi={kernelName:pe,backendName:"wasm",setupFunc:function(e){fi=e.wasm.cwrap(pe,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,u=i;const{transposed:d,axes:p,originalAxes:c,inputWasTransposed:f}=qa(i,a,t);if(f){const e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}Wr("min",p,u.shape.length);const[m,g]=Pr(u.shape,p),y=h(g),A=t.makeOutput(m,u.dtype);if(0!==h(u.shape)){const e=t.dataIdMap.get(A.dataId).id;fi(l,Ma[i.dtype],y,e)}if(f&&t.disposeData(d.dataId),s){const e=Lr(A.shape,c);A.shape=e}return A}},gi=Pa(ce);var yi;let Ai;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(yi||(yi={}));const bi={kernelName:fe,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return Ai(i,u,t.shape.length,Ma[t.dtype],p,c,yi[a],l),o},setupFunc:function(e){Ai=e.wasm.cwrap(fe,null,["number","array","number","number","array","array","number","number"])}},xi=Pa(me),vi=za("Neg");function wi(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}let ki;const Ii={kernelName:ye,backendName:"wasm",setupFunc:function(e){ki=e.wasm.cwrap(ye,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=ki(u,d,s,a,i),{pSelectedIndices:p,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=wi(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",p)}};let Si;const Ni={kernelName:Ae,backendName:"wasm",setupFunc:function(e){Si=e.wasm.cwrap(Ae,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=Si(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=wi(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};let Ti;const Ci={kernelName:be,backendName:"wasm",setupFunc:function(e){Ti=e.wasm.cwrap(be,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=Ti(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=wi(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},Ei=Pa(ge,0,"bool");let _i;const Ri={kernelName:xe,backendName:"wasm",setupFunc:function(e){_i=e.wasm.cwrap(xe,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(a.dataId).id;return _i(d,s,i,o,u),l}},Mi={kernelName:ve,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Os({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{l(s,e.shape,"All tensors passed to stack must have matching shapes"),o(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],d=ms({inputs:t.map((e=>{const t=Os({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeData(e.dataId))),d}};let $i;const Fi={kernelName:we,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===h(t.shape))return Ds({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),p=r.map((e=>e[1])),c=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return $i(i,u,t.shape.length,Ma[t.dtype],c,f,a,l),o},setupFunc:function(e){$i=e.wasm.cwrap(we,null,["number","array","number","number","array","array","number","number"])}},Oi=Pa("Pow");let zi;const Di={kernelName:ke,backendName:"wasm",setupFunc:function(e){zi=e.wasm.cwrap(ke,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const l=r;let u=l;"float32"!==l.dtype&&(u=ds({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);const d=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(d.dataId).id;return zi(o,i,h),"float32"!==l.dtype&&n.disposeData(u.dataId),d}};let Pi;const Li={kernelName:Ie,backendName:"wasm",setupFunc:function(e){Pi=e.wasm.cwrap(Ie,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,u=i;const{transposed:d,axes:p,originalAxes:c,inputWasTransposed:f}=qa(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,m=Ur(m.length,u.shape.length))}Wr("prod",m,u.shape.length);const[g,y]=Pr(u.shape,m),A=h(y),b=t.makeOutput(g,u.dtype);if(0!==h(u.shape)){const e=t.dataIdMap.get(b.dataId).id;Pi(l,A,Ma[b.dtype],e)}if(f&&t.disposeData(d.dataId),s){const e=Lr(b.shape,c);b.shape=e}return b}},Wi={kernelName:Se,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return S(0,r);const a=S(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},Bi=Pa(Z),Ui=za(Ne),Vi=za(_e);let Gi;const ji={kernelName:Ee,backendName:"wasm",setupFunc:function(e){Gi=e.wasm.cwrap(Ee,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,[d,p,c,f]=a.shape,m=[d,l,u,f];let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=ds({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));const A=y.id,b=t.makeOutput(m,"float32");if(0===h(a.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return Gi(A,d,p,c,f,l,u,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),b}};let Hi;const qi={kernelName:Re,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=f(s,a.shape);if(0===a.shape.length)return Ua({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);Hi(l,d,i.length,h,a.shape.length,u);const p=ns({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),p},setupFunc:function(e){Hi=e.wasm.cwrap(Re,null,["number","array","number","array","number","number"])}};let Ki;const Xi={kernelName:tt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[h,p,c,f]=a.shape,[m,g]=function(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}(o,p,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],A=new Uint8Array(new Int32Array(y).buffer);return Ki(u,h,p,c,f,s,m,g,A,y.length,d),l},setupFunc:function(e){Ki=e.wasm.cwrap(tt,null,["number","number","number","number","number","number","number","number","array","number","number"])}},Zi=za(Me),Yi=za("Rsqrt");let Ji;const Qi={kernelName:$e,backendName:"wasm",setupFunc:function(e){Ji=e.wasm.cwrap($e,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===h(i))return o;const{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:c}=function(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:h(t.shape)/o,sliceSize:i,strides:[...v(n.slice(0,a)),1],outputSize:h(n)}}(0,a,i),f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=new Uint8Array(new Int32Array(p).buffer),y=t.dataIdMap.get(o.dataId).id;return Ji(f,m,Ma[s.dtype],l,u,d,g,c,y),o}};let eo;const to={kernelName:Fe,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(u.dataId).id,p=r.shape.length,c=a.shape.length,f=0===p||p>1||1===c?1:h(a.shape.slice(1));return eo(i,o,l,f,d),u},setupFunc:function(e){eo=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let no;const ro={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){no=e.wasm.cwrap(ze,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===h(a.shape)||no(r,s),a}},ao=za("Sin");let so;const io={kernelName:We,backendName:"wasm",setupFunc:function(e){so=e.wasm.cwrap(We,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=h(n.shape)/o;return 0===h(s.shape)||so(a,i,o,l),s}},oo={kernelName:"SpaceToBatchND",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=h(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);const u=Fi.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=Ta(u.shape,s,o,!1),p=Ca(d.length,s.length,!1),c=Ea(u.shape,s,o,!1),f=ns({inputs:{x:u},backend:n,attrs:{shape:d}}),m=ja({inputs:{x:f},backend:n,attrs:{perm:p}}),g=ns({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeData(u.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}};let lo;const uo={kernelName:Be,backendName:"wasm",setupFunc:function(e){lo=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],l=r.shape[1],u=t.readSync(s.dataId)[0],d=[o+u,l],h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(d,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(d.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,A=t.makeOutput([u],"bool"),b=t.dataIdMap.get(A.dataId).id,x=t.makeOutput([o],r.dtype),v=t.dataIdMap.get(x.dataId).id,w=t.makeOutput([4],"int32"),k=t.dataIdMap.get(w.dataId).id,I=lo(h,p,Ma[a.dtype],o,u,l,c,m,y,b,v,k),S=t.readSync(w.dataId);let N;switch(S[0]){case 1:N=`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${S[1]}`;break;case 2:N=function(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}(S[1],S[2]);break;case 3:N=function(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}(S[1],S[2],S[3]);break;default:N=""}if(t.disposeData(w.dataId),N)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(A.dataId),t.disposeData(x.dataId),new Error(N);let T=f,C=g;return I!==d[0]&&(T=os({inputs:{x:f},attrs:{begin:0,size:[I,l]},backend:t}),C=os({inputs:{x:g},attrs:{begin:0,size:I},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[T,C,A,x]}};let ho;const po={kernelName:Ue,backendName:"wasm",setupFunc:function(e){ho=e.wasm.cwrap(Ue,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],d=h(s.shape),p=t.makeOutput([u,d],r.dtype),c=t.dataIdMap.get(p.dataId).id,f=t.makeOutput([d],s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput([3],"int32"),y=t.dataIdMap.get(g.dataId).id;ho(i,o,l,u,c,m,y);const A=t.readSync(g.dataId);let b;switch(A[0]){case 0:b=`only one output dimension may be -1, not both ${A[1]} and ${A[2]}`;break;case 1:b=`size ${A[1]} must be non-negative, not ${A[2]}`;break;case 2:b="reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero";break;case 3:b=function(e,t){return`Input to reshape is a SparseTensor with ${h(e)}\n  dense values, but the requested shape requires a multiple of ${h(t)}. inputShape=${e} outputShape= ${t}`}(Array.from(t.readSync(a.dataId)),Array.from(t.readSync(f.dataId)));break;case 4:b=function(e,t){return`Input to reshape is a tensor with ${h(e)} dense values, but the requested shape has ${h(t)}. inputShape=${e} outputShape=${t}`}(Array.from(t.readSync(a.dataId)),Array.from(t.readSync(f.dataId)));break;default:b=""}if(t.disposeData(g.dataId),b)throw t.disposeData(p.dataId),t.disposeData(f.dataId),new Error(b);return[p,f]}};let co;function fo(e){co=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function mo(e,t){const{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error("segment ids must be >= 0");const d=a.shape.slice();d[0]=u;const h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(d,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;co(h,Ma[a.dtype],a.shape[0],p,c,m,y,t,0);const A=n.readSync(g.dataId);let b;switch(A[0]){case 0:b="segment ids must be >= 0";break;case 1:b="segment ids are not increasing";break;case 2:b=function(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}(A[1],A[2]);break;case 3:b=function(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}(A[1],A[2],A[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}const go={kernelName:Ve,backendName:"wasm",setupFunc:fo,kernelFunc:function(e){return mo(e,!0)}},yo={kernelName:Ge,backendName:"wasm",setupFunc:fo,kernelFunc:function(e){return mo(e,!1)}},Ao={kernelName:Le,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,l=f(i,a.shape)[0],u=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"==typeof t)o(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);o(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}o(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}(a,s,l),d=new Array(a.shape.length).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[l]=e;const n=os({inputs:{x:a},attrs:{begin:d,size:t},backend:r});return d[l]+=e,n}))}},bo=za(De),xo=za("Square"),vo=Pa(je);let wo;const ko={kernelName:et,backendName:"wasm",setupFunc:function(e){wo=e.wasm.cwrap(et,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return wo(i,a,Ma[s.dtype],l),o}};let Io;const So={kernelName:He,backendName:"wasm",setupFunc:function(e){Io=e.wasm.cwrap(He,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:l,beginMask:u,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:w}=function(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)d&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(d=!0);d||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let c=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=Hn(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=Hn(p.end[t],1,p.strides[t],r,a,s);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;c=c&&e,f=f&&(0===t&&1===p.strides[t]||e)}else c=c&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}(a.shape,s,i,l,u,d,h,p,c);let k;if(g)k=ns({inputs:{x:a},backend:t,attrs:{shape:m}});else if(y||A){o(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=function(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}(b,x,w),n=os({inputs:{x:a},backend:t,attrs:{begin:b,size:e}});k=ns({inputs:{x:n},backend:t,attrs:{shape:m}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(f,"float32"),n=t.dataIdMap.get(a.dataId).id,r=new Uint8Array(new Int32Array(v(a.shape)).buffer),s=new Uint8Array(new Int32Array(b).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(w).buffer),l=new Uint8Array(new Int32Array(f).buffer),u=new Uint8Array(new Int32Array(v(f)).buffer),d=t.dataIdMap.get(e.dataId).id;Io(n,r,a.shape.length,s,i,o,l,u,f.length,d),k=ns({inputs:{x:e},backend:t,attrs:{shape:m}}),t.disposeData(e.dataId)}return k}},No=Pa("Sub");let To;const Co={kernelName:Pe,backendName:"wasm",setupFunc:function(e){To=e.wasm.cwrap(Pe,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,u=i;const{transposed:d,axes:p,originalAxes:c,inputWasTransposed:f}=qa(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,m=Ur(m.length,u.shape.length))}Wr("sum",m,u.shape.length);const[g,y]=Pr(u.shape,m),A=h(y),b=t.makeOutput(g,u.dtype);if(0!==h(u.shape)){const e=t.dataIdMap.get(b.dataId).id;To(l,A,Ma[b.dtype],e)}if(f&&t.disposeData(d.dataId),s){const e=Lr(b.shape,c);b.shape=e}return b}},Eo=za("Tan"),_o=za("Tanh");let Ro;let Mo;let $o;const Fo={kernelName:Ze,backendName:"wasm",setupFunc:function(e){$o=e.wasm.cwrap(Ze,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,h,p,c]=a.shape,[f,m]=null!=u?u:[h,p],g=[d,f,m,c],y=new Uint8Array(new Int32Array(v(a.shape)).buffer),A=t.makeOutput(g,a.dtype),b=t.dataIdMap.get(A.dataId).id,x=t.dataIdMap.get(a.dataId).id,w=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":default:I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4}return $o(x,w,s.shape[0]>1,d,f,m,c,p,h,y,a.shape.length-1,k,I,l,b),A}},Oo={kernelName:Je,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,l=new Array(o-1);let u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);const d=new Array(i),h=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<d.length;e++)h[s]=e,d[e]=os({inputs:{x:a},attrs:{begin:h,size:p},backend:n});return d.map((e=>{let{dataId:t,dtype:n}=e;return{dataId:t,dtype:n,shape:l}}))}},zo=[Oa,Da,La,Ba,Xa,Ya,Qa,ts,ss,us,hs,ps,fs,gs,As,xs,vs,ws,Ss,Ts,Es,Rs,Ms,$s,Fs,zs,Ps,Ws,Bs,Us,Gs,Hs,Ks,Zs,Js,Qs,ei,Va,ni,ri,ai,si,ii,li,ui,hi,ci,mi,gi,bi,xi,vi,Ii,Ni,Ci,Ei,Ri,{kernelName:"OnesLike",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},Mi,Fi,Oi,Di,Li,Wi,Bi,Ui,Vi,rs,ji,qi,Xi,Zi,Yi,Qi,to,ro,ao,ls,io,oo,uo,po,go,yo,Ao,bo,xo,vo,ko,So,No,Co,Eo,_o,{kernelName:Ke,backendName:"wasm",setupFunc:function(e){Ro=e.wasm.cwrap(Ke,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(d.dataId).id;return Ro(s,l,a.shape.length,u,o.length,Ma[d.dtype],h),d}},{kernelName:Xe,backendName:"wasm",setupFunc:function(e){Mo=e.wasm.cwrap(Xe,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a}=t,{k:s,sorted:i}=r,o=n.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(a.shape).buffer),u=a.shape.slice();u[u.length-1]=s;const d=n.makeOutput(u,a.dtype),h=n.dataIdMap.get(d.dataId).id,p=n.makeOutput(u,"int32"),c=n.dataIdMap.get(p.dataId).id;return Mo(o,l,a.shape.length,Ma[a.dtype],s,i,h,c),[d,p]}},Fo,Ha,Oo,{kernelName:Qe,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of zo)ht(e);const Do=R();Do.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),Do.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Do.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var Po=n(950),Lo=n.n(Po),Wo=n(235),Bo=n.n(Wo);class Uo extends s{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Zo),Yo=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new a(this,qt)}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=yt();return e(),{kernelMs:yt()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=h(n),o=i*y(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||h(s);const o=y(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=h(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap(e){let{shape:t,dtype:n,dataId:r}=e;const a=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(r),i=h(t);switch(n){case"float32":return new Float32Array(a,s,i);case"int32":return new Int32Array(a,s,i);case"bool":return new Uint8Array(a,s,i);default:throw new Error(`Unknown dtype ${n}`)}}}function Vo(e,t,n){if(null!=jo)return jo;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=qo&&null!=qo[r]?qo[r]:n+r}const Go=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let jo=null,Ho=null,qo={},Ko=!1,Xo=!1,Zo=-1,Yo=null;!function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;qt.registerBackend(e,t,n)}("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([R().getAsync("WASM_HAS_SIMD_SUPPORT"),R().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?Vo(e,t,null!=Ho?Ho:r):r+n}};var s;Xo&&(a.instantiateWasm=(s=Vo(e,t,null!=Ho?Ho:""),(e,t)=>(function(e,t){return R().platform.fetch(e,{credentials:"same-origin"})}(s).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;a.onAbort=()=>{o||Ko||(Ko=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==jo?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Lo().toString()],{type:"text/javascript"}),i=Lo()(a)):i=Bo()(a),i.then((e=>{o=!0,Ko=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new Uo(e)}),2);var Jo="node_modules/@vladmandic/human/dist/human.esm.js",Qo=Object.defineProperty,el=(e,t)=>{for(var n in t)Qo(e,n,{get:t[n],enumerable:!0})},tl=(e,t,n)=>(((e,t,n)=>{t in e?Qo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n),nl=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)},rl=(e,t,n)=>(nl(e,t,"read from private field"),n?n.call(e):t.get(e)),al=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},sl=(e,t,n,r)=>(nl(e,t,"write to private field"),r?r.call(e,n):t.set(e,n),n);function il(){const e=new Date,t=`${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}:${e.getSeconds().toString().padStart(2,"0")}.${e.getMilliseconds().toString().padStart(3,"0")}`;for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];r&&console.log(t,"Human:",...r)}var ol=()=>"undefined"!=typeof performance?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function ll(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"config",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];for(const a of Object.keys(t))if("object"==typeof t[a])ll(e[a],t[a],a,r);else{const s=e&&void 0!==e[a];s||r.push({reason:"unknown property",where:`${n}.${a} = ${t[a]}`});const i=e&&typeof e[a]==typeof t[a];s&&!i&&r.push({reason:"property type mismatch",where:`${n}.${a} = ${t[a]}`,expected:typeof e[a]})}return t.debug&&"config"===n&&r.length>0&&il("invalid configuration",r),r}function ul(){const e=e=>e&&"object"==typeof e;for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return n.reduce(((t,n)=>(Object.keys(n||{}).forEach((r=>{const a=t[r],s=n[r];Array.isArray(a)&&Array.isArray(s)?t[r]=a.concat(...s):e(a)&&e(s)?t[r]=ul(a,s):t[r]=s})),t)),{})}var dl={backend:"",modelBasePath:"",cacheModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}},hl={};el(hl,{Abs:()=>qu,Acos:()=>Ku,Acosh:()=>Xu,AdadeltaOptimizer:()=>Lw,AdagradOptimizer:()=>Ww,AdamOptimizer:()=>Bw,AdamaxOptimizer:()=>Uw,Add:()=>Zu,AddN:()=>Yu,All:()=>Ju,Any:()=>Qu,ArgMax:()=>ed,ArgMin:()=>td,Asin:()=>nd,Asinh:()=>rd,Atan:()=>ad,Atan2:()=>id,Atanh:()=>sd,AvgPool:()=>od,AvgPool3D:()=>ud,AvgPool3DGrad:()=>dd,AvgPoolGrad:()=>ld,BackendWasm:()=>O7,BatchMatMul:()=>hd,BatchToSpaceND:()=>pd,Bincount:()=>cd,BroadcastArgs:()=>md,BroadcastTo:()=>fd,Callback:()=>H$,CallbackList:()=>RC,Cast:()=>gd,Ceil:()=>yd,ClipByValue:()=>Ad,Complex:()=>bd,ComplexAbs:()=>xd,Concat:()=>vd,Conv2D:()=>wd,Conv2DBackpropFilter:()=>kd,Conv2DBackpropInput:()=>Id,Conv3D:()=>Sd,Conv3DBackpropFilterV2:()=>Nd,Conv3DBackpropInputV2:()=>Td,Cos:()=>Cd,Cosh:()=>Ed,CropAndResize:()=>Md,Cumprod:()=>_d,Cumsum:()=>Rd,CustomCallback:()=>FC,DataStorage:()=>Bl,DenseBincount:()=>$d,DepthToSpace:()=>Fd,DepthwiseConv2dNative:()=>Od,DepthwiseConv2dNativeBackpropFilter:()=>zd,DepthwiseConv2dNativeBackpropInput:()=>Dd,Diag:()=>Pd,Dilation2D:()=>Ld,Dilation2DBackpropFilter:()=>Bd,Dilation2DBackpropInput:()=>Wd,ENV:()=>Gu,EarlyStopping:()=>X$,Einsum:()=>Vd,Elu:()=>Gd,EluGrad:()=>jd,Environment:()=>Lu,Equal:()=>qd,Erf:()=>Hd,Exp:()=>Kd,ExpandDims:()=>Xd,Expm1:()=>Zd,FFT:()=>Yd,Fill:()=>Jd,FlipLeftRight:()=>Qd,Floor:()=>eh,FloorDiv:()=>th,FromPixels:()=>Kp,FusedBatchNorm:()=>nh,FusedConv2D:()=>Yp,FusedDepthwiseConv2D:()=>Jp,GPGPUContext:()=>uj,GatherNd:()=>ah,GatherV2:()=>rh,GraphModel:()=>_O,Greater:()=>sh,GreaterEqual:()=>ih,History:()=>$C,IFFT:()=>lh,Identity:()=>oh,Imag:()=>uh,InputSpec:()=>bC,IsFinite:()=>dh,IsInf:()=>hh,IsNan:()=>ph,KernelBackend:()=>Ul,LRN:()=>kh,LRNGrad:()=>Ih,LayerVariable:()=>gC,LayersModel:()=>GE,LeakyRelu:()=>ch,Less:()=>fh,LessEqual:()=>mh,LinSpace:()=>gh,Log:()=>yh,Log1p:()=>Ah,LogSoftmax:()=>wh,LogicalAnd:()=>bh,LogicalNot:()=>xh,LogicalOr:()=>vh,MathBackendCPU:()=>Xz,MathBackendWebGL:()=>kH,Max:()=>Sh,MaxPool:()=>Th,MaxPool3D:()=>Eh,MaxPool3DGrad:()=>_h,MaxPoolGrad:()=>Ch,MaxPoolWithArgmax:()=>Rh,Maximum:()=>Nh,Mean:()=>Mh,Min:()=>$h,Minimum:()=>Fh,MirrorPad:()=>Oh,Mod:()=>zh,MomentumOptimizer:()=>Gw,Multinomial:()=>Dh,Multiply:()=>Ph,Neg:()=>Lh,NonMaxSuppressionV3:()=>Bh,NonMaxSuppressionV4:()=>Uh,NonMaxSuppressionV5:()=>Vh,NotEqual:()=>Wh,OP_SCOPE_SUFFIX:()=>Tf,OneHot:()=>jh,OnesLike:()=>Gh,Optimizer:()=>Pw,OptimizerConstructors:()=>Hw,Pack:()=>Hh,PadV2:()=>qh,Pool:()=>Kh,Pow:()=>Xh,Prelu:()=>Zh,Prod:()=>Yh,RMSPropOptimizer:()=>jw,RNN:()=>tR,Range:()=>Jh,Rank:()=>Xc,Real:()=>Qh,RealDiv:()=>Ud,Reciprocal:()=>ep,Reduction:()=>pw,Relu:()=>tp,Relu6:()=>op,Reshape:()=>np,ResizeBilinear:()=>sp,ResizeBilinearGrad:()=>ip,ResizeNearestNeighbor:()=>rp,ResizeNearestNeighborGrad:()=>ap,Reverse:()=>lp,RotateWithOffset:()=>Xp,Round:()=>up,Rsqrt:()=>dp,SGDOptimizer:()=>Vw,ScatterNd:()=>hp,Select:()=>pp,Selu:()=>cp,Sequential:()=>KE,Sigmoid:()=>Ap,Sign:()=>yp,Sin:()=>mp,Sinh:()=>gp,Slice:()=>fp,Softmax:()=>Ip,Softplus:()=>bp,SpaceToBatchND:()=>wp,SparseFillEmptyRows:()=>Sp,SparseReshape:()=>Np,SparseSegmentMean:()=>Tp,SparseSegmentSum:()=>Cp,SparseToDense:()=>Ep,SplitV:()=>kp,Sqrt:()=>xp,Square:()=>Rp,SquaredDifference:()=>_p,Step:()=>qp,StridedSlice:()=>Mp,StringNGrams:()=>$p,StringSplit:()=>Fp,StringToHashBucketFast:()=>Op,Sub:()=>zp,Sum:()=>vp,SymbolicTensor:()=>xC,Tan:()=>Dp,Tanh:()=>Pp,Tensor:()=>jc,TensorBuffer:()=>Uc,Tile:()=>Lp,TopK:()=>Wp,Transform:()=>Bp,Transpose:()=>Up,Unique:()=>Vp,Unpack:()=>Gp,UnsortedSegmentSum:()=>jp,Variable:()=>Hc,ZerosLike:()=>Hp,_FusedMatMul:()=>Zp,abs:()=>by,acos:()=>xy,acosh:()=>vy,add:()=>my,addN:()=>wy,all:()=>ky,any:()=>Iy,argMax:()=>Sy,argMin:()=>Ny,asin:()=>Ty,asinh:()=>Cy,atan:()=>Ey,atan2:()=>_y,atanh:()=>Ry,avgPool:()=>Xy,avgPool3d:()=>Zy,backend:()=>cy,backend_util:()=>Zw,basicLSTMCell:()=>tA,batchNorm:()=>aA,batchNorm2d:()=>sA,batchNorm3d:()=>iA,batchNorm4d:()=>oA,batchToSpaceND:()=>nA,bincount:()=>lA,booleanMaskAsync:()=>cv,broadcastArgs:()=>uA,broadcastTo:()=>dA,broadcast_util:()=>Xm,browser:()=>eg,buffer:()=>km,callbacks:()=>Z$,cast:()=>Im,ceil:()=>hA,clipByValue:()=>pA,clone:()=>Sm,complex:()=>Ef,concat:()=>Yy,concat1d:()=>cA,concat2d:()=>fA,concat3d:()=>mA,concat4d:()=>gA,constraints:()=>JS,conv1d:()=>AA,conv2d:()=>yA,conv2dTranspose:()=>xA,conv3d:()=>vA,conv3dTranspose:()=>kA,copyRegisteredKernels:()=>dc,cos:()=>IA,cosh:()=>SA,cosineWindow:()=>kv,cumprod:()=>NA,cumsum:()=>TA,customGrad:()=>cb,data:()=>$O,denseBincount:()=>CA,deprecationWarn:()=>Yg,depthToSpace:()=>EA,depthwiseConv2d:()=>_A,deregisterOp:()=>nF,device_util:()=>yf,diag:()=>RA,dilation2d:()=>MA,disableDeprecationWarnings:()=>Zg,dispose:()=>ry,disposeVariables:()=>Jg,div:()=>yy,divNoNan:()=>zA,dot:()=>DA,dropout:()=>vv,einsum:()=>PA,elu:()=>LA,enableDebugMode:()=>Xg,enableProdMode:()=>Kg,enclosingPowerOfTwo:()=>wv,engine:()=>Qg,env:()=>Uu,equal:()=>$A,erf:()=>WA,exp:()=>BA,expandDims:()=>UA,expm1:()=>VA,eye:()=>jA,fft:()=>Ux,fill:()=>HA,findBackend:()=>dy,findBackendFactory:()=>hy,floor:()=>qA,floorDiv:()=>gy,forceHalfFloat:()=>SH,fused:()=>Sv,gather:()=>KA,gatherND:()=>xv,gather_util:()=>og,getBackend:()=>ly,getGradient:()=>ac,getKernel:()=>rc,getKernelsForBackend:()=>sc,getThreadsCount:()=>K7,gpgpu_util:()=>WG,grad:()=>lb,grads:()=>ub,greater:()=>XA,greaterEqual:()=>ZA,ifft:()=>Vx,imag:()=>YA,image:()=>$w,inTopKAsync:()=>Iv,initializers:()=>PN,input:()=>JE,io:()=>Tm,irfft:()=>Gx,isFinite:()=>JA,isInf:()=>QA,isNaN:()=>eb,keep:()=>ay,kernel_impls:()=>Xk,layers:()=>sC,leakyRelu:()=>tb,less:()=>nb,lessEqual:()=>rb,linalg:()=>Fw,linspace:()=>ab,loadGraphModel:()=>RO,loadLayersModel:()=>YE,localResponseNormalization:()=>sb,log:()=>ib,log1p:()=>ob,logSigmoid:()=>yb,logSoftmax:()=>vb,logSumExp:()=>_b,logicalAnd:()=>Rb,logicalNot:()=>Mb,logicalOr:()=>$b,logicalXor:()=>Fb,losses:()=>Ow,matMul:()=>jm,math:()=>Gm,max:()=>Ab,maxPool:()=>Ob,maxPool3d:()=>zb,maxPoolWithArgmax:()=>Db,maximum:()=>Pb,mean:()=>Lb,memory:()=>ey,meshgrid:()=>Ub,metrics:()=>S$,min:()=>Vb,minimum:()=>Gb,mirrorPad:()=>jb,mod:()=>Hb,model:()=>XE,models:()=>B$,moments:()=>Kb,movingAverage:()=>gv,mul:()=>Ay,multiRNNCell:()=>Xb,multinomial:()=>Zb,neg:()=>mb,nextFrame:()=>Xw,norm:()=>mv,notEqual:()=>Yb,oneHot:()=>Hm,ones:()=>Bb,onesLike:()=>Jb,op:()=>Cf,outerProduct:()=>Qb,pad:()=>ex,pad1d:()=>tx,pad2d:()=>nx,pad3d:()=>rx,pad4d:()=>ax,pool:()=>ix,pow:()=>ox,prelu:()=>lx,print:()=>Nm,prod:()=>ux,profile:()=>ty,rand:()=>dx,randomGamma:()=>mx,randomNormal:()=>gx,randomUniform:()=>yx,range:()=>Ax,ready:()=>oy,real:()=>bx,reciprocal:()=>xx,registerBackend:()=>py,registerCallbackConstructor:()=>QE,registerGradient:()=>oc,registerKernel:()=>ic,registerOp:()=>eF,regularizers:()=>U$,relu:()=>vx,relu6:()=>wx,removeBackend:()=>uy,reshape:()=>Ky,reverse:()=>kx,reverse1d:()=>Ix,reverse2d:()=>Sx,reverse3d:()=>Nx,reverse4d:()=>Tx,rfft:()=>Hx,round:()=>Cx,rsqrt:()=>Ex,scalar:()=>_x,scatterND:()=>yv,scatter_util:()=>ug,selu:()=>Rx,separableConv2d:()=>Mx,sequential:()=>ZE,serialization:()=>Rg,setBackend:()=>iy,setPlatform:()=>fy,setThreadsCount:()=>q7,setWasmPath:()=>V7,setWasmPaths:()=>G7,setWebGLContext:()=>iV,setdiff1dAsync:()=>$x,shared:()=>Zz,sigmoid:()=>Jy,sign:()=>Fx,signal:()=>Mw,sin:()=>Ox,sinh:()=>zx,slice:()=>Qy,slice1d:()=>Dx,slice2d:()=>Px,slice3d:()=>Lx,slice4d:()=>Wx,slice_util:()=>cg,softmax:()=>Bx,softplus:()=>gb,spaceToBatchND:()=>sx,sparse:()=>zw,sparseToDense:()=>bv,spectral:()=>Rw,split:()=>jx,sqrt:()=>qx,square:()=>qb,squaredDifference:()=>Kx,squeeze:()=>Xx,stack:()=>Zx,step:()=>Yx,stridedSlice:()=>Jx,string:()=>Dw,sub:()=>bb,sum:()=>xb,sumOutType:()=>nf,tan:()=>Qx,tanh:()=>eA,tensor:()=>Rf,tensor1d:()=>ev,tensor2d:()=>tv,tensor3d:()=>tg,tensor4d:()=>nv,tensor5d:()=>rv,tensor6d:()=>av,tensor_util:()=>qc,test_util:()=>Og,tidy:()=>ny,tile:()=>GA,time:()=>sy,topk:()=>sv,train:()=>qw,transpose:()=>qm,truncatedNormal:()=>iv,unique:()=>ov,unregisterGradient:()=>uc,unregisterKernel:()=>lc,unsortedSegmentSum:()=>lv,unstack:()=>uv,upcastType:()=>tf,util:()=>pc,valueAndGrad:()=>db,valueAndGrads:()=>hb,variable:()=>dv,variableGrads:()=>pb,version:()=>Y7,version_converter:()=>MO,version_core:()=>qg,version_cpu:()=>eL,version_layers:()=>AE,version_wasm:()=>X7,version_webgl:()=>IH,webgl:()=>NH,webgl_util:()=>rV,webgpu:()=>w2,where:()=>FA,whereAsync:()=>pv,zeros:()=>Wb,zerosLike:()=>OA});var pl=Object.create,cl=Object.defineProperty,fl=Object.getOwnPropertyDescriptor,ml=Object.getOwnPropertyNames,gl=Object.getPrototypeOf,yl=Object.prototype.hasOwnProperty,Al=(e,t)=>function(){return t||(0,e[ml(e)[0]])((t={exports:{}}).exports,t),t.exports},bl=(e,t)=>{for(var n in t)cl(e,n,{get:t[n],enumerable:!0})},xl=(e,t)=>((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of ml(t))!yl.call(e,n)&&"default"!==n&&cl(e,n,{get:()=>t[n],enumerable:!(r=fl(t,n))||r.enumerable});return e})((e=>cl(e,"__esModule",{value:!0}))(cl(null!=e?pl(gl(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),vl=Al({"src/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?A:y;if(t){if(e<0)return A;if(e>=f)return k}else{if(e<=-m)return I;if(e+1>=m)return w}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var d=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(e.substring(1),t,n).neg();for(var a=l(d(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var p=l(d(n,o));s=s.mul(p).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?h(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=p;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var A=o(0,!0);r.UZERO=A;var b=o(1);r.ONE=b;var x=o(1,!0);r.UONE=x;var v=o(-1);r.NEG_ONE=v;var w=u(-1,2147483647,!1);r.MAX_VALUE=w;var k=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);r.MIN_VALUE=I;var S=r.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(d(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return a(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(a(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){a(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,d=0,h=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,h+=(c+=r+l)>>>16,d+=(h+=n+o)>>>16,d+=t+i,u((c&=65535)<<16|(f&=65535),(d&=65535)<<16|(h&=65535),this.unsigned)},S.subtract=function(e){return a(e)||(e=p(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=p(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(I))return e.isOdd()?I:y;if(e.eq(I))return this.isOdd()?I:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,d=65535&e.high,h=e.low>>>16,c=65535&e.low,f=0,m=0,A=0,b=0;return A+=(b+=i*c)>>>16,m+=(A+=s*c)>>>16,A&=65535,m+=(A+=i*h)>>>16,f+=(m+=r*c)>>>16,m&=65535,f+=(m+=s*h)>>>16,m&=65535,f+=(m+=i*d)>>>16,f+=t*c+r*h+s*d+i*o,u((A&=65535)<<16|(b&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(a(e)||(e=p(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?A:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return A;if(e.gt(this.shru(1)))return x;s=A}else{if(this.eq(I))return e.eq(b)||e.eq(v)?I:e.eq(I)?b:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?b:v:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(I))return this.unsigned?A:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:d(2,i-48),h=l(t),c=h.mul(e);c.isNegative()||c.gt(r);)c=(h=l(t-=o,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),r=r.sub(c)}return s},S.div=S.divide,S.modulo=function(e){return a(e)||(e=p(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return a(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return a(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return a(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}}),wl=Al({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),kl=Al({"(disabled):util"(){}}),Il=Al({"src/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Sl=Al({"src/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Nl=Al({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Tl=Al({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Cl=Al({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),El=Al({"src/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),_l=Al({"(disabled):crypto"(){}}),Rl=Al({"src/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r,a){var s,i=256,o="random",l=a.pow(i,6),u=a.pow(2,52),d=2*u,h=255;function p(t,n,h){var p=[],A=g(m((n=1==n?{entropy:!0}:n||{}).entropy?[t,y(r)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),y(t)}catch(t){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,y(r)]}}():t,3),p),b=new c(p),x=function(){for(var e=b.g(6),t=l,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,g(y(b.S),r),(n.pass||h||function(e,t,n,r){return r&&(r.S&&f(r,b),e.state=function(){return f(b,{})}),n?(a[o]=e,t):e})(x,A,"global"in n?n.global:this==a,n.state)}function c(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=h&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*i+o[h&(o[a]=o[s=h&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(g(a.random(),r),"object"==typeof t&&t.exports){t.exports=p;try{s=_l()}catch(e){}}else"function"==typeof define&&n.amdO?define((function(){return p})):a["seed"+o]=p}("undefined"!=typeof self?self:e,[],Math)}}),Ml=Al({"src/node_modules/seedrandom/index.js"(e,t){var n=Il(),r=Sl(),a=Nl(),s=Tl(),i=Cl(),o=El(),l=Rl();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}}),$l=Al({"(disabled):src/node_modules/string_decoder/index.js"(){}}),Fl=Al({"(disabled):fs"(){}}),Ol=Al({"(disabled):path"(){}}),zl=Al({"(disabled):worker_threads"(){}}),Dl=Al({"(disabled):perf_hooks"(){}}),Pl=Al({"(disabled):os"(){}}),Ll=Al({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||Jo,function(e){function t(){return M.buffer!=L&&X(M.buffer),B}function a(){return M.buffer!=L&&X(M.buffer),U}function s(){return M.buffer!=L&&X(M.buffer),V}var i,o,l,u=void 0!==(e=e||{})?e:{};u.ready=new Promise((function(e,t){i=e,o=t})),"undefined"!=typeof process&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d,h,p,c,f,m,g=Object.assign({},u),y=[],A=(e,t)=>{throw t},b="object"==typeof window,x="function"==typeof importScripts,v="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,w=u.ENVIRONMENT_IS_PTHREAD||!1,k="";function I(e){return u.locateFile?u.locateFile(e,k):k+e}if(v){let e;k=x?Ol().dirname(k)+"/":"//",m=()=>{f||(c=Fl(),f=Ol())},d=function(e,t){return m(),e=f.normalize(e),c.readFileSync(e,t?void 0:"utf8")},p=e=>{var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),t},h=(e,t,n)=>{m(),e=f.normalize(e),c.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),y=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof at))throw e})),process.on("unhandledRejection",(function(e){throw e})),A=(e,t)=>{if(ne())throw process.exitCode=e,t;(function(e){e instanceof at||E("exiting due to exception: "+e)})(t),process.exit(e)},u.inspect=function(){return"[Emscripten Module object]"};try{e=zl()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=e.Worker}else(b||x)&&(x?k=self.location.href:"undefined"!=typeof document&&document.currentScript&&(k=document.currentScript.src),void 0!==r&&r&&(k=r),k=0!==k.indexOf("blob:")?k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):"",v||(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},x&&(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),h=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));v&&"undefined"==typeof performance&&(n.g.performance=Dl().performance);var S=console.log.bind(console),N=console.warn.bind(console);v&&(m(),S=e=>c.writeSync(1,e+"\n"),N=e=>c.writeSync(2,e+"\n"));var T,C=u.print||S,E=u.printErr||N;function _(e){_.shown||(_.shown={}),_.shown[e]||(_.shown[e]=1,E(e))}Object.assign(u,g),g=null,u.arguments&&(y=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&(A=u.quit),Atomics.load,Atomics.store,Atomics.compareExchange,u.wasmBinary&&(T=u.wasmBinary);var R=u.noExitRuntime||!0;"object"!=typeof WebAssembly&&le("no native wasm support detected");var M,$,F,O=!1;function z(e){return u["_"+e]}function D(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);q(e,t=nt(n),n)}return t},array:function(e){var t=nt(e.length);return function(e,t){(M.buffer!=L&&X(M.buffer),W).set(e,t)}(e,t),t}},i=z(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var d=s[n[u]];d?(0===l&&(l=et()),o[u]=d(r[u])):o[u]=r[u]}var h,p=i.apply(null,o);return h=p,0!==l&&tt(l),p=function(e){return"string"===t?H(e):"boolean"===t?Boolean(e):e}(h),p}function P(e){var t=new TextDecoder(e);this.decode=e=>(e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e))}var L,W,B,U,V,G="undefined"!=typeof TextDecoder?new P("utf8"):void 0;function j(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&G)return G.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function H(e,n){return e?j(t(),e,n):""}function q(e,n,r){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,t(),n,r)}function K(e,t){return e%t>0&&(e+=t-e%t),e}function X(e){L=e,u.HEAP8=W=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=U=new Int32Array(e),u.HEAPU8=B=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=V=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new P("utf-16le"),w&&(L=u.buffer);var Z=u.INITIAL_MEMORY||16777216;if(w)M=u.wasmMemory,L=u.buffer;else if(u.wasmMemory)M=u.wasmMemory;else if(!((M=new WebAssembly.Memory({initial:Z/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");M&&(L=M.buffer),Z=L.byteLength,X(L);var Y,J=[],Q=[],ee=[],te=[];function ne(){return R||!1}function re(){!w&&ce(Q)}var ae,se=0,ie=null,oe=null;function le(e){w?postMessage({cmd:"onAbort",arg:e}):u.onAbort&&u.onAbort(e),E(e="Aborted("+e+")"),O=!0,F=1,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw o(t),t}function ue(e){return e.startsWith("data:application/octet-stream;base64,")}function de(e){return e.startsWith("file://")}function he(e){try{if(e==ae&&T)return new Uint8Array(T);if(p)return p(e);throw"both async and sync fetching of the wasm failed"}catch(e){le(e)}}u.preloadedImages={},u.preloadedAudios={},ue(ae="tfjs-backend-wasm-threaded-simd.wasm")||(ae=I(ae));var pe={};function ce(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?ve(n)():ve(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(u)}}function fe(e){var t=et(),n=e();return tt(t),n}function me(e){var t=ye.pthreads[e];if(t){a()[e>>2]=0;var n=t.worker;ye.returnWorkerToPool(n)}}function ge(e){!function(e,t){if(F=e,w)throw Ae(e),"unwind";ne()||w||ye.terminateAllThreads(),function(e){F=e,ne()||(ye.terminateAllThreads(),u.onExit&&u.onExit(e),O=!0),A(e,new at(e))}(e)}(e)}var ye={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){w?ye.initWorker():ye.initMainThread()},initMainThread:function(){for(var e=0;e<8;++e)ye.allocateUnusedWorker()},initWorker:function(){R=!1},pthreads:{},setExitStatus:function(e){F=e},terminateAllThreads:function(){for(var e in ye.pthreads){var t=ye.pthreads[e];t&&t.worker&&ye.returnWorkerToPool(t.worker)}for(var n=0;n<ye.unusedWorkers.length;++n)ye.unusedWorkers[n].terminate();ye.unusedWorkers=[]},returnWorkerToPool:function(e){ye.runWithoutMainThreadQueuedCalls((function(){delete ye.pthreads[e.pthread.threadInfoStruct],ye.unusedWorkers.push(e),ye.runningWorkers.splice(ye.runningWorkers.indexOf(e),1),Je(e.pthread.threadInfoStruct),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){a()[rt>>2]=0;try{e()}finally{a()[rt>>2]=1}},receiveObjectTransfer:function(e){},threadInit:function(){for(var e in ye.tlsInitFunctions)ye.tlsInitFunctions[e]()},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r=n.data,s=r.cmd;if(e.pthread&&(ye.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=He()){var i=ye.pthreads[r.targetThread];return i?i.worker.postMessage(r,r.transferList):E('Internal error! Worker sent a message "'+s+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(ye.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===s?qe():"spawnThread"===s?we(r):"cleanupThread"===s?me(r.thread):"killThread"===s?function(e){a()[e>>2]=0;var t=ye.pthreads[e];delete ye.pthreads[e],t.worker.terminate(),Je(e),ye.runningWorkers.splice(ye.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread):"cancelThread"===s?function(e){ye.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread):"loaded"===s?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===s?C("Thread "+r.threadId+": "+r.text):"printErr"===s?E("Thread "+r.threadId+": "+r.text):"alert"===s?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"onAbort"===s?u.onAbort&&u.onAbort(r.arg):E("worker sent an unknown command "+s),ye.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw E("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},v&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),e.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:M,wasmModule:$})},allocateUnusedWorker:function(){var e=I("tfjs-backend-wasm-threaded-simd.worker.js");ye.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==ye.unusedWorkers.length&&(ye.allocateUnusedWorker(),ye.loadWasmModuleToWorker(ye.unusedWorkers[0])),ye.unusedWorkers.pop()}};function Ae(e){if(w)return ke(1,0,e);try{ge(e)}catch(e){!function(e){if(e instanceof at||"unwind"==e)return F;A(1,e)}(e)}}u.establishStackSpace=function(){var e=He(),t=a()[e+44>>2],n=a()[e+48>>2];Qe(t,t-n),tt(t)};var be,xe=[];function ve(e){var t=xe[e];return t||(e>=xe.length&&(xe.length=e+1),xe[e]=t=Y.get(e)),t}function we(e){var t=ye.getNewWorker();if(!t)return 6;ye.runningWorkers.push(t);var n=ye.pthreads[e.pthread_ptr]={worker:t,threadInfoStruct:e.pthread_ptr};t.pthread=n;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function ke(e,t){var n=arguments.length-2,r=arguments;return fe((function(){for(var a=n,i=nt(8*a),o=i>>3,l=0;l<n;l++){var u=r[2+l];s()[o+l]=u}return Ze(e,a,i,t)}))}u.invokeEntryPoint=function(e,t){return ve(e)(t)},be=v?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:w?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Ie=[];function Se(e){try{return M.grow(e-L.byteLength+65535>>>16),X(M.buffer),1}catch(e){}}var Ne={inEventHandler:0,removeAllEventListeners:function(){for(var e=Ne.eventHandlers.length-1;e>=0;--e)Ne._removeHandler(e);Ne.eventHandlers=[],Ne.deferredCalls=[]},registerRemoveEventListeners:function(){Ne.removeEventListenersRegistered||(ee.push(Ne.removeAllEventListeners),Ne.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in Ne.deferredCalls){var s=Ne.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}Ne.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),Ne.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<Ne.deferredCalls.length;++t)Ne.deferredCalls[t].targetFunction==e&&(Ne.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return Ne.inEventHandler&&Ne.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Ne.canPerformEventHandlerRequests())for(var e=0;e<Ne.deferredCalls.length;++e){var t=Ne.deferredCalls[e];Ne.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<Ne.eventHandlers.length;++n)Ne.eventHandlers[n].target==e&&(!t||t==Ne.eventHandlers[n].eventTypeString)&&Ne._removeHandler(n--)},_removeHandler:function(e){var t=Ne.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),Ne.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++Ne.inEventHandler,Ne.currentEventHandler=e,Ne.runDeferredCalls(),e.handlerFunc(t),Ne.runDeferredCalls(),--Ne.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),Ne.eventHandlers.push(e),Ne.registerRemoveEventListeners();else for(var n=0;n<Ne.eventHandlers.length;++n)Ne.eventHandlers[n].target==e.target&&Ne.eventHandlers[n].eventTypeString==e.eventTypeString&&Ne._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,s){fe((function(){var i=nt(12);a()[i>>2]=n,a()[i+4>>2]=r,a()[i+8>>2]=s,Ye(e,637534208,t,r,i)}))},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return ye.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};var Te=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Ce(e){return function(e){return e=function(e){return e>2?H(e):e}(e),Te[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}(e)}function Ee(e,t,n){var r=Ce(e);if(!r)return-4;if(r.canvasSharedPtr&&(a()[r.canvasSharedPtr>>2]=t,a()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){!function(e,t,n,r){fe((function(){var s=nt(12),i=0;t&&(i=function(e){var t=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(e)+1,n=Ve(t);return q(e,n,t),n}(t)),a()[s>>2]=i,a()[s+4>>2]=n,a()[s+8>>2]=r,Ye(e,657457152,0,i,s)}))}(e,t=t?H(t):"",n,r)}(a()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var s=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);s=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,s&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function _e(e,t,n){return w?ke(2,1,e,t,n):Ee(e,t,n)}var Re={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(e){Re.lastError||(Re.lastError=e)},getNewId:function(e){for(var t=Re.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var s="",i=0;i<t;++i){var o=r?a()[r+4*i>>2]:-1;s+=H(a()[n+4*i>>2],o<0?void 0:o)}return s},createContext:function(e,t){e.getContextSafariWebGL2Fixed||(e.getContextSafariWebGL2Fixed=e.getContext,e.getContext=function(t,n){var r=e.getContextSafariWebGL2Fixed(t,n);return"webgl"==t==r instanceof WebGLRenderingContext?r:null});var n=e.getContext("webgl",t);return n?Re.registerContext(n,t):0},registerContext:function(e,t){var n=Ve(8);a()[n+4>>2]=He();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Re.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Re.initExtensions(r),n},makeContextCurrent:function(e){return Re.currentContext=Re.contexts[e],u.ctx=De=Re.currentContext&&Re.currentContext.GLctx,!(e&&!De)},getContext:function(e){return Re.contexts[e]},deleteContext:function(e){Re.currentContext===Re.contexts[e]&&(Re.currentContext=null),"object"==typeof Ne&&Ne.removeAllHandlersOnTarget(Re.contexts[e].GLctx.canvas),Re.contexts[e]&&Re.contexts[e].GLctx.canvas&&(Re.contexts[e].GLctx.canvas.GLctxObject=void 0),Ge(Re.contexts[e].handle),Re.contexts[e]=null},initExtensions:function(e){if(e||(e=Re.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;(function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})})(t),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),function(e){e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw")}(t),(t.getSupportedExtensions()||[]).forEach((function(e){!e.includes("lose_context")&&!e.includes("debug")&&t.getExtension(e)}))}}},Me=["default","low-power","high-performance"],$e={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=$e.buffers[e];0===t||10===t?((1===e?C:E)(j(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return $e.varargs+=4,a()[$e.varargs-4>>2]},getStr:function(e){return H(e)},get64:function(e,t){return e}};function Fe(e){return w?ke(3,1,e):0}function Oe(e,t,n,r,a){if(w)return ke(4,1,e,t,n,r,a)}function ze(e,n,r,s){if(w)return ke(5,1,e,n,r,s);for(var i=0,o=0;o<r;o++){var l=a()[n>>2],u=a()[n+4>>2];n+=8;for(var d=0;d<u;d++)$e.printChar(e,t()[l+d]);i+=u}return a()[s>>2]=i,0}ye.init();var De,Pe,Le,We,Be=[null,Ae,_e,Fe,Oe,ze],Ue={__clock_gettime:function(e,t){return function(e,t){var n;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return a()[je()>>2]=28,-1;n=be()}return a()[t>>2]=n/1e3|0,a()[t+4>>2]=n%1e3*1e3*1e3|0,0}(e,t)},__emscripten_init_main_thread_js:function(e){Ke(e,!x,1,!b),ye.threadInit()},__emscripten_thread_cleanup:function(e){w?postMessage({cmd:"cleanupThread",thread:e}):me(e)},__pthread_create_js:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(w&&0===a.length)return Xe(687865856,e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return w?(s.cmd="spawnThread",postMessage(s,a),0):we(s)},_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_notify_thread_queue:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(w)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=ye.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},abort:function(){le("")},emscripten_check_blocking_allowed:function(){v||x||_("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_get_heap_max:function(){return 2147483648},emscripten_get_now:be,emscripten_memcpy_big:function(e,n,r){t().copyWithin(e,n,n+r)},emscripten_num_logical_cores:function(){return v?Pl().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Ie.length=t;for(var r=n>>3,a=0;a<t;a++)Ie[a]=s()[r+a];return(e<0?pe[-e-1]:Be[e]).apply(null,Ie)},emscripten_resize_heap:function(e){var n=t().length;if((e>>>=0)<=n)return!1;var r=2147483648;if(e>r)return!1;for(var a=1;a<=4;a*=2){var s=n*(1+.2/a);if(s=Math.min(s,e+100663296),Se(Math.min(r,K(Math.max(e,s),65536))))return!0}return!1},emscripten_set_canvas_element_size:function(e,t,n){return Ce(e)?Ee(e,t,n):_e(e,t,n)},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},emscripten_webgl_create_context:function(e,t){return function(e,t){var n=t>>2,r=a()[n+6],s={alpha:!!a()[n+0],depth:!!a()[n+1],stencil:!!a()[n+2],antialias:!!a()[n+3],premultipliedAlpha:!!a()[n+4],preserveDrawingBuffer:!!a()[n+5],powerPreference:Me[r],failIfMajorPerformanceCaveat:!!a()[n+7],majorVersion:a()[n+8],minorVersion:a()[n+9],enableExtensionsByDefault:a()[n+10],explicitSwapControl:a()[n+11],proxyContextToMainThread:a()[n+12],renderViaOffscreenBackBuffer:a()[n+13]},i=Ce(e);return!i||s.explicitSwapControl?0:Re.createContext(i,s)}(e,t)},exit:ge,fd_close:Fe,fd_seek:Oe,fd_write:ze,memory:M||u.wasmMemory,setTempRet0:function(e){}},Ve=(function(){var e={env:Ue,wasi_snapshot_preview1:Ue};function t(e,t){var n=e.exports;if(u.asm=n,function(e,t,n){ye.tlsInitFunctions.push(e)}(u.asm.emscripten_tls_init),Y=u.asm.__indirect_function_table,function(e){Q.unshift(e)}(u.asm.__wasm_call_ctors),$=t,!w){var r=ye.unusedWorkers.length;ye.unusedWorkers.forEach((function(e){ye.loadWasmModuleToWorker(e,(function(){--r||function(e){if(se--,u.monitorRunDependencies&&u.monitorRunDependencies(se),0==se&&(null!==ie&&(clearInterval(ie),ie=null),oe)){var t=oe;oe=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!T&&(b||x)){if("function"==typeof fetch&&!de(ae))return fetch(ae,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ae+"'";return e.arrayBuffer()})).catch((function(){return he(ae)}));if(h)return new Promise((function(e,t){h(ae,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he(ae)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),le(e)}))}if(w||(se++,u.monitorRunDependencies&&u.monitorRunDependencies(se)),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){return E("Module.instantiateWasm callback failed with error: "+e),!1}(T||"function"!=typeof WebAssembly.instantiateStreaming||ue(ae)||de(ae)||"function"!=typeof fetch?r(n):fetch(ae,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(o)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(Ve=u._malloc=u.asm.malloc).apply(null,arguments)}),Ge=u._free=function(){return(Ge=u._free=u.asm.free).apply(null,arguments)},je=(u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.emscripten_tls_init).apply(null,arguments)},u.___errno_location=function(){return(je=u.___errno_location=u.asm.__errno_location).apply(null,arguments)}),He=u._pthread_self=function(){return(He=u._pthread_self=u.asm.pthread_self).apply(null,arguments)},qe=u._emscripten_main_thread_process_queued_calls=function(){return(qe=u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Ke=(u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},u.__emscripten_thread_init=function(){return(Ke=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)}),Xe=(u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_2=function(){return(u._emscripten_sync_run_in_main_thread_2=u.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_4=function(){return(Xe=u._emscripten_sync_run_in_main_thread_4=u.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)}),Ze=u._emscripten_run_in_main_runtime_thread_js=function(){return(Ze=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},Ye=u._emscripten_dispatch_to_thread_=function(){return(Ye=u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},Je=u.__emscripten_thread_free_data=function(){return(Je=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},Qe=(u.__emscripten_thread_exit=function(){return(u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},u._memalign=function(){return(u._memalign=u.asm.memalign).apply(null,arguments)},u._emscripten_stack_set_limits=function(){return(Qe=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)}),et=u.stackSave=function(){return(et=u.stackSave=u.asm.stackSave).apply(null,arguments)},tt=u.stackRestore=function(){return(tt=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},nt=u.stackAlloc=function(){return(nt=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)},rt=(u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.__emscripten_allow_main_runtime_queued_calls=21456);function at(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function st(e){if(e=e||y,!(se>0)){if(w)return i(u),re(),void postMessage({cmd:"loaded"});(function(){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)e=u.preRun.shift(),J.unshift(e);var e;ce(J)})(),se>0||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}function t(){Pe||(Pe=!0,u.calledRun=!0,!O&&(re(),i(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),function(){if(!w){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)e=u.postRun.shift(),te.unshift(e);ce(te)}var e}()))}}if(u.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?z(e):function(){return D(e,t,n,arguments)}},u.keepRuntimeAlive=ne,u.PThread=ye,u.PThread=ye,u.wasmMemory=M,u.ExitStatus=at,oe=function e(){Pe||st(),Pe||(oe=e)},u.run=st,u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();if(st(),l&&(Le={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!l.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!l.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)We=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");We=e}if(Le){var it=We._dispose;We._dispose=function(){it(),Le.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Le.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n.amdO?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=a)}}),Wl=Al({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||Jo,function(e){var t,n,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,r){t=e,n=r})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u,d,h,p=Object.assign({},s),c=[],f="object"==typeof window,m="function"==typeof importScripts,g="";"object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node?(g=m?Ol().dirname(g)+"/":"//",h=()=>{d||(u=Fl(),d=Ol())},i=function(e,t){return h(),e=d.normalize(e),u.readFileSync(e,t?void 0:"utf8")},l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{h(),e=d.normalize(e),u.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),c=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ae))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}):(f||m)&&(m?g=self.location.href:"undefined"!=typeof document&&document.currentScript&&(g=document.currentScript.src),r&&(g=r),g=0!==g.indexOf("blob:")?g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},m&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var y,A=s.print||console.log.bind(console),b=s.printErr||console.warn.bind(console);Object.assign(s,p),p=null,s.arguments&&(c=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(y=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&U("no native wasm support detected");var x,v=!1;function w(e){return s["_"+e]}function k(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,N,t,n)}(e,t=re(n),n)}return t},array:function(e){var t=re(e.length);return function(e,t){S.set(e,t)}(e,t),t}},i=w(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var d=s[n[u]];d?(0===l&&(l=te()),o[u]=d(r[u])):o[u]=r[u]}var h,p=i.apply(null,o);return h=p,0!==l&&ne(l),p=function(e){return"string"===t?_(e):"boolean"===t?Boolean(e):e}(h),p}var I,S,N,T,C="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function E(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&C)return C.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function _(e,t){return e?E(N,e,t):""}function R(e,t){return e%t>0&&(e+=t-e%t),e}function M(e){I=e,s.HEAP8=S=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=T=new Int32Array(e),s.HEAPU8=N=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le"),s.INITIAL_MEMORY;var $,F,O,z=[],D=[],P=[],L=0,W=null,B=null;function U(e){s.onAbort&&s.onAbort(e),b(e="Aborted("+e+")"),v=!0,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function V(e){return e.startsWith("data:application/octet-stream;base64,")}function G(e){return e.startsWith("file://")}function j(e){try{if(e==F&&y)return new Uint8Array(y);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){U(e)}}function H(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?K(n)():K(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}s.preloadedImages={},s.preloadedAudios={},V(F="tfjs-backend-wasm.wasm")||(O=F,F=s.locateFile?s.locateFile(O,g):g+O);var q=[];function K(e){var t=q[e];return t||(e>=q.length&&(q.length=e+1),q[e]=t=$.get(e)),t}function X(e){try{return x.grow(e-I.byteLength+65535>>>16),M(x.buffer),1}catch(e){}}var Z,Y,J,Q={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Q.buffers[e];0===t||10===t?((1===e?A:b)(E(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Q.varargs+=4,T[Q.varargs-4>>2]},getStr:function(e){return _(e)},get64:function(e,t){return e}},ee={abort:function(){U("")},emscripten_memcpy_big:function(e,t,n){N.copyWithin(e,t,t+n)},emscripten_resize_heap:function(e){var t=N.length,n=2147483648;if((e>>>=0)>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),X(Math.min(n,R(Math.max(e,a),65536))))return!0}return!1},fd_close:function(e){return 0},fd_seek:function(e,t,n,r,a){},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=T[t>>2],o=T[t+4>>2];t+=8;for(var l=0;l<o;l++)Q.printChar(e,N[i+l]);a+=o}return T[r>>2]=a,0},setTempRet0:function(e){}},te=(function(){var e={env:ee,wasi_snapshot_preview1:ee};function t(e,t){var n=e.exports;s.asm=n,M((x=s.asm.memory).buffer),$=s.asm.__indirect_function_table,function(e){D.unshift(e)}(s.asm.__wasm_call_ctors),function(e){if(L--,s.monitorRunDependencies&&s.monitorRunDependencies(L),0==L&&(null!==W&&(clearInterval(W),W=null),B)){var t=B;B=null,t()}}()}function r(e){t(e.instance)}function a(t){return function(){if(!y&&(f||m)){if("function"==typeof fetch&&!G(F))return fetch(F,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+F+"'";return e.arrayBuffer()})).catch((function(){return j(F)}));if(o)return new Promise((function(e,t){o(F,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return j(F)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){b("failed to asynchronously prepare wasm: "+e),U(e)}))}if(L++,s.monitorRunDependencies&&s.monitorRunDependencies(L),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return b("Module.instantiateWasm callback failed with error: "+e),!1}(y||"function"!=typeof WebAssembly.instantiateStreaming||V(F)||G(F)||"function"!=typeof fetch?a(r):fetch(F,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return b("wasm streaming compile failed: "+e),b("falling back to ArrayBuffer instantiation"),a(r)}))}))).catch(n)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s._emscripten_main_thread_process_queued_calls=function(){return(s._emscripten_main_thread_process_queued_calls=s.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},s.stackSave=function(){return(te=s.stackSave=s.asm.stackSave).apply(null,arguments)}),ne=s.stackRestore=function(){return(ne=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},re=s.stackAlloc=function(){return(re=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function ae(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function se(e){function n(){Z||(Z=!0,s.calledRun=!0,!v&&(H(D),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),P.unshift(e);var e;H(P)}()))}e=e||c,L>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),z.unshift(e);var e;H(z)}(),L>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?w(e):function(){return k(e,t,n,arguments)}},B=function e(){Z||se(),Z||(B=e)},s.run=se,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(se(),a&&(Y={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)J=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");J=WasmBackendModuleThreadedSimd}if(Y){var ie=J._dispose;J._dispose=function(){ie(),Y.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Y.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n.amdO?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModule=a)}}),Bl=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Ul=class{refCount(e){return Vl("refCount")}incRef(e){return Vl("incRef")}timerAvailable(){return!0}time(e){return Vl("time")}read(e){return Vl("read")}readSync(e){return Vl("readSync")}readToGPU(e,t){return Vl("readToGPU")}numDataIds(){return Vl("numDataIds")}disposeData(e,t){return Vl("disposeData")}write(e,t,n){return Vl("write")}move(e,t,n,r,a){return Vl("move")}memory(){return Vl("memory")}floatPrecision(){return Vl("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Vl("dispose")}};function Vl(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Gl(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Kl(e,t,n)}function jl(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Kl(e,n,r),Kl(t,n,r)}function Hl(e,t,n){return Math.max(e,Math.min(t,n))}function ql(e){return e%2==0?e:e+1}function Kl(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function Xl(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Zl(e,t){let n=Math.random();return t*n+(1-n)*e}function Yl(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Jl(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Ql(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";Jl(au(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function eu(e){Jl(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function tu(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),Array.isArray(e)||bu(e)&&!n)for(let r=0;r<e.length;++r)tu(e[r],t,n);else t.push(e);return t}function nu(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ru(e){return 0===e.length}function au(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function su(e){return e%1==0}function iu(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function ou(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function lu(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Gl(t),t}function uu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function du(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0;return new Promise(((r,a)=>{let s=0,i=()=>{if(e())return void r();s++;let o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function hu(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function pu(e,t){let n=t.length;return Jl((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Jl(e.every((e=>su(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function cu(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:pu(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function fu(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function mu(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function gu(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function yu(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Au(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function bu(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function xu(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function vu(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function wu(e){return"string"==typeof e||e instanceof String}function ku(e){return"boolean"==typeof e}function Iu(e){return"number"==typeof e}function Su(e){return Array.isArray(e)?Su(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Iu(e)?"float32":wu(e)?"string":ku(e)?"bool":"float32"}function Nu(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Tu(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Cu(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Eu(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Eu(e+t*o,i,n,r)}return a}function _u(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];let r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Eu(0,e,t,n)}function Ru(e,t){let n=Mu(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Mu(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function $u(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return _u(e,new Float32Array(n));if("int32"===t)return _u(e,new Int32Array(n));if("bool"===t)return _u(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Fu(e){e.forEach((t=>{Jl(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ou(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function zu(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Du(e){return e&&e.then&&"function"==typeof e.then}var Pu="tfjsflags",Lu=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Wu,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Uu().getBool("IS_TEST")||Uu().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Uu().getBool("IS_TEST")||Uu().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Du(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);Pu in e&&e[Pu].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function Wu(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return Bu(t,r[0],r[1]),r.join("=")})),t}function Bu(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function Uu(){return Gu}var Vu,Gu=null;function ju(){if(null==Vu){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Vu=e}return Vu}function Hu(e,t){let n=function(){let e=ju();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var qu="Abs",Ku="Acos",Xu="Acosh",Zu="Add",Yu="AddN",Ju="All",Qu="Any",ed="ArgMax",td="ArgMin",nd="Asin",rd="Asinh",ad="Atan",sd="Atanh",id="Atan2",od="AvgPool",ld="AvgPoolGrad",ud="AvgPool3D",dd="AvgPool3DGrad",hd="BatchMatMul",pd="BatchToSpaceND",cd="Bincount",fd="BroadcastTo",md="BroadcastArgs",gd="Cast",yd="Ceil",Ad="ClipByValue",bd="Complex",xd="ComplexAbs",vd="Concat",wd="Conv2D",kd="Conv2DBackpropFilter",Id="Conv2DBackpropInput",Sd="Conv3D",Nd="Conv3DBackpropFilterV2",Td="Conv3DBackpropInputV2",Cd="Cos",Ed="Cosh",_d="Cumprod",Rd="Cumsum",Md="CropAndResize",$d="DenseBincount",Fd="DepthToSpace",Od="DepthwiseConv2dNative",zd="DepthwiseConv2dNativeBackpropFilter",Dd="DepthwiseConv2dNativeBackpropInput",Pd="Diag",Ld="Dilation2D",Wd="Dilation2DBackpropInput",Bd="Dilation2DBackpropFilter",Ud="RealDiv",Vd="Einsum",Gd="Elu",jd="EluGrad",Hd="Erf",qd="Equal",Kd="Exp",Xd="ExpandDims",Zd="Expm1",Yd="FFT",Jd="Fill",Qd="FlipLeftRight",eh="Floor",th="FloorDiv",nh="FusedBatchNorm",rh="GatherV2",ah="GatherNd",sh="Greater",ih="GreaterEqual",oh="Identity",lh="IFFT",uh="Imag",dh="IsFinite",hh="IsInf",ph="IsNan",ch="LeakyRelu",fh="Less",mh="LessEqual",gh="LinSpace",yh="Log",Ah="Log1p",bh="LogicalAnd",xh="LogicalNot",vh="LogicalOr",wh="LogSoftmax",kh="LRN",Ih="LRNGrad",Sh="Max",Nh="Maximum",Th="MaxPool",Ch="MaxPoolGrad",Eh="MaxPool3D",_h="MaxPool3DGrad",Rh="MaxPoolWithArgmax",Mh="Mean",$h="Min",Fh="Minimum",Oh="MirrorPad",zh="Mod",Dh="Multinomial",Ph="Multiply",Lh="Neg",Wh="NotEqual",Bh="NonMaxSuppressionV3",Uh="NonMaxSuppressionV4",Vh="NonMaxSuppressionV5",Gh="OnesLike",jh="OneHot",Hh="Pack",qh="PadV2",Kh="Pool",Xh="Pow",Zh="Prelu",Yh="Prod",Jh="Range",Qh="Real",ep="Reciprocal",tp="Relu",np="Reshape",rp="ResizeNearestNeighbor",ap="ResizeNearestNeighborGrad",sp="ResizeBilinear",ip="ResizeBilinearGrad",op="Relu6",lp="Reverse",up="Round",dp="Rsqrt",hp="ScatterNd",pp="Select",cp="Selu",fp="Slice",mp="Sin",gp="Sinh",yp="Sign",Ap="Sigmoid",bp="Softplus",xp="Sqrt",vp="Sum",wp="SpaceToBatchND",kp="SplitV",Ip="Softmax",Sp="SparseFillEmptyRows",Np="SparseReshape",Tp="SparseSegmentMean",Cp="SparseSegmentSum",Ep="SparseToDense",_p="SquaredDifference",Rp="Square",Mp="StridedSlice",$p="StringNGrams",Fp="StringSplit",Op="StringToHashBucketFast",zp="Sub",Dp="Tan",Pp="Tanh",Lp="Tile",Wp="TopK",Bp="Transform",Up="Transpose",Vp="Unique",Gp="Unpack",jp="UnsortedSegmentSum",Hp="ZerosLike",qp="Step",Kp="FromPixels",Xp="RotateWithOffset",Zp="_FusedMatMul",Yp="FusedConv2D",Jp="FusedDepthwiseConv2D";function Qp(){Uu().getBool("IS_TEST")||Uu().getBool("PROD")||console.warn(...arguments)}function ec(){Uu().getBool("IS_TEST")||Uu().getBool("PROD")||console.log(...arguments)}var tc=Hu("kernelRegistry",(()=>new Map)),nc=Hu("gradRegistry",(()=>new Map));function rc(e,t){let n=hc(e,t);return tc.get(n)}function ac(e){return nc.get(e)}function sc(e){let t=tc.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function ic(e){let{kernelName:t,backendName:n}=e,r=hc(t,n);tc.has(r)&&Qp(`The kernel '${t}' for backend '${n}' is already registered`),tc.set(r,e)}function oc(e){let{kernelName:t}=e;nc.has(t)&&Uu().getBool("DEBUG")&&Qp(`Overriding the gradient for '${t}'`),nc.set(t,e)}function lc(e,t){let n=hc(e,t);if(!tc.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);tc.delete(n)}function uc(e){if(!nc.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);nc.delete(e)}function dc(e,t){sc(e).forEach((e=>{ic(Object.assign({},e,{backendName:t}))}))}function hc(e,t){return`${t}_${e}`}var pc={};bl(pc,{arraysEqual:()=>au,assert:()=>Jl,assertNonNegativeIntegerDimensions:()=>Fu,assertNonNull:()=>eu,assertShapesMatch:()=>Ql,bytesFromStringArray:()=>vu,bytesPerElement:()=>xu,checkConversionForErrors:()=>gu,clamp:()=>Hl,computeStrides:()=>Cu,createScalarValue:()=>_c,createShuffledIndices:()=>lu,decodeString:()=>Oc,distSquared:()=>Yl,encodeString:()=>Fc,fetch:()=>$c,fingerPrint64:()=>Ec,flatten:()=>tu,getArrayFromDType:()=>mu,getTypedArrayFromDType:()=>fu,hasEncodingLoss:()=>Au,hexToLong:()=>mc,indexToLoc:()=>zu,inferDtype:()=>Su,inferFromImplicitShape:()=>hu,isBoolean:()=>ku,isFunction:()=>Nu,isInt:()=>su,isNumber:()=>Iu,isPromise:()=>Du,isScalarShape:()=>ru,isString:()=>wu,isTypedArray:()=>bu,isValidDtype:()=>yu,locToIndex:()=>Ou,makeOnesTypedArray:()=>Ru,makeZerosNestedTypedArray:()=>$u,makeZerosTypedArray:()=>Mu,nearestDivisor:()=>Tu,nearestLargerEven:()=>ql,now:()=>Mc,parseAxisParam:()=>pu,randUniform:()=>Zl,repeatedTry:()=>du,rightPad:()=>uu,shuffle:()=>Gl,shuffleCombo:()=>jl,sizeFromShape:()=>nu,sizeToSquarishShape:()=>ou,squeezeShape:()=>cu,sum:()=>Xl,swap:()=>Kl,tanh:()=>iu,toNestedArray:()=>_u,toTypedArray:()=>Rc});var cc=xl(vl()),fc=cc.default||cc;function mc(e){return fc.fromString(e,!0,16)}var gc=mc("c3a5c85c97cb3127"),yc=mc("b492b66fbe98f273"),Ac=mc("9ae16a3b2f90404f");function bc(e){return e.xor(e.shru(47))}function xc(e,t,n){let r=e.slice(t,t+n);return fc.fromBytes(Array.from(r),!0,!0)}function vc(e,t){return xc(e,t,8)}function wc(e,t){return xc(e,t,4)}function kc(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ic(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:mc("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Sc(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=kc(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(kc(a,44)),[a.add(r),s.add(i)]}(vc(e,t),vc(e,t+8),vc(e,t+16),vc(e,t+24),n,r)}function Nc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){let n=Ac.add(2*t),r=vc(e,0).add(Ac),a=vc(e,t-8);return Ic(kc(a,37).mul(n).add(r),kc(r,25).add(a).mul(n),n)}if(t>=4){let n=Ac.add(2*t);return Ic(wc(e,0).shl(3).add(t),wc(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return bc(Ac.mul(n).xor(gc.mul(r))).mul(Ac)}return Ac}function Tc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=Ac.add(2*t),r=vc(e,0).mul(yc),a=vc(e,8),s=vc(e,t-8).mul(n),i=vc(e,t-16).mul(Ac);return Ic(kc(r.add(a),43).add(kc(s,30)).add(i),r.add(kc(a.add(Ac),18)).add(s),n)}function Cc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=Ac.add(2*t),r=vc(e,0).mul(Ac),a=vc(e,8),s=vc(e,t-8).mul(n),i=vc(e,t-16).mul(Ac),o=kc(r.add(a),43).add(kc(s,30)).add(i),l=Ic(o,r.add(kc(a.add(Ac),18)).add(s),n),u=vc(e,16).mul(n),d=vc(e,24),h=o.add(vc(e,t-32)).mul(n),p=l.add(vc(e,t-24)).mul(n);return Ic(kc(u.add(d),43).add(kc(h,30)).add(p),u.add(kc(d.add(r),18)).add(h),n)}function Ec(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=fc.fromNumber(81,!0);if(t<=32)return t<=16?Nc(e,t):Tc(e,t);if(t<=64)return Cc(e,t);let r=n,a=n.mul(yc).add(113),s=bc(a.mul(Ac).add(113)).mul(Ac),i=[fc.UZERO,fc.UZERO],o=[fc.UZERO,fc.UZERO];r=r.mul(Ac).add(vc(e,0));let l=0,u=64*(t-1>>6),d=u+(t-1&63)-63;do{r=kc(r.add(a).add(i[0]).add(vc(e,l+8)),37).mul(yc),a=kc(a.add(i[1]).add(vc(e,l+48)),42).mul(yc),r=r.xor(o[1]),a=a.add(i[0]).add(vc(e,l+40)),s=kc(s.add(o[0]),33).mul(yc),i=Sc(e,l,i[1].mul(yc),r.add(o[0])),o=Sc(e,l+32,s.add(o[1]),a.add(vc(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let h=yc.add(s.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=kc(r.add(a).add(i[0]).add(vc(e,l+8)),37).mul(h),a=kc(a.add(i[1]).add(vc(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(vc(e,l+40))),s=kc(s.add(o[0]),33).mul(h),i=Sc(e,l,i[1].mul(h),r.add(o[0])),o=Sc(e,l+32,s.add(o[1]),a.add(vc(e,l+16))),[s,r]=[r,s],Ic(Ic(i[0],o[0],h).add(bc(a).mul(gc)).add(s),Ic(i[1],o[1],h).add(r),h)}function _c(e,t){return"string"===t?Fc(e):Rc([e],t)}function Rc(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=tu(e)),Uu().getBool("DEBUG")&&gu(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Mc(){return Uu().platform.now()}function $c(e,t){return Uu().platform.fetch(e,t)}function Fc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Uu().platform.encode(e,t)}function Oc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Uu().platform.decode(e,t)}function zc(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}function Dc(e,t,n,r){let a=Cu(t),s=function(e,t,n,r){let a=nu(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Bc(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Pc(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Wc(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Pc(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:wu(e)?`'${e}'`:"bool"===n?Lc(e):parseFloat(e.toFixed(7)).toString(),uu(r,t)}function Lc(e){return 0===e?"false":"true"}function Wc(e,t,n,r,a){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Pc(Bc(e)[0],0,n)]:"bool"===n?[Lc(e[0])]:[e[0].toString()];if(1===l){if(o>20){let t=3*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Bc(r),s=Bc(s)),["["+r.map(((e,t)=>Pc(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Pc(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Bc(e):Array.from(e)).map(((e,t)=>Pc(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),d=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){let r=t*h,s=r+h;p.push(...Wc(e.slice(r,s),u,n,d,a,!1))}p.push("...");for(let t=o-3;t<o;t++){let r=t*h,s=r+h;p.push(...Wc(e.slice(r,s),u,n,d,a,t===o-1))}}else for(let t=0;t<o;t++){let r=t*h,s=r+h;p.push(...Wc(e.slice(r,s),u,n,d,a,t===o-1))}let c=2===l?",":"";p[0]="["+p[0]+c;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function Bc(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Uc=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=nu(e),null!=n){let e=n.length;Jl(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||mu(t,this.size),this.strides=Cu(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),Jl(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));let a=this.locToIndex(n);this.values[a]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(let e of t){if(e<0||e>=this.shape[r]){let e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let a=t[t.length-1];for(let e=0;e<t.length-1;++e)a+=this.strides[e]*t[e];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Vc().makeTensor(this.values,this.shape,this.dtype)}},Vc=null,Gc=null,jc=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=nu(e),this.strides=Cu(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Gc.buffer(this.shape,this.dtype,e)}bufferSync(){return Gc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return _u(this.shape,e,"complex64"===this.dtype)}arraySync(){return _u(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=Vc().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Oc(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Vc().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Vc().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Oc(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Vc().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Vc().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Gc.print(this,e)}clone(){return this.throwIfDisposed(),Gc.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Dc(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Gc.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Vc().makeVariable(this,e,t,n)}};Object.defineProperty(jc,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Hu("Tensor",(()=>jc));var Hc=class extends jc{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!au(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Vc().disposeTensor(this),this.dataId=e.dataId,Vc().incRef(this,null)}dispose(){Vc().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Hc,Symbol.hasInstance,{value:e=>e instanceof jc&&null!=e.assign&&e.assign instanceof Function});var qc={};bl(qc,{assertTypesMatch:()=>af,getTensorsInContainer:()=>of,isTensorInList:()=>sf,makeTypesMatch:()=>rf});var Kc,Xc=((Kc=Xc||{}).R0="R0",Kc.R1="R1",Kc.R2="R2",Kc.R3="R3",Kc.R4="R4",Kc.R5="R5",Kc.R6="R6",Kc),Zc=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(Zc||{}),Yc=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(Yc||{}),Jc=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(Jc||{}),Qc=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(Qc||{}),ef={float32:Jc,int32:Zc,bool:Yc,complex64:Qc};function tf(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ef[e][t]}function nf(e){return tf(e,"int32")}function rf(e,t){if(e.dtype===t.dtype)return[e,t];let n=tf(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function af(e,t){Jl(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function sf(e,t){return t.some((t=>t.id===e.id))}function of(e){let t=[];return lf(e,t,new Set),t}function lf(e,t,n){if(null==e)return;if(e instanceof jc)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let e in r){let a=r[e];n.has(a)||(n.add(a),lf(a,t,n))}}function uf(e){return null!=e.kernelName}var df=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},hf=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new df}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(Qp(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?uu(`${r}ms`,9):r.error,o=uu(e,25),l=t.rank,u=t.size,d=uu(t.shape.toString(),14),h="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${d}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}})}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=Mc();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:Mc()-i})}if(Uu().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){let n=r[t];n.data().then((t=>{zc(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){sc(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){sc(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof Ul||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Qp(`Initialization of backend ${e} failed`),Qp(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Qp(`Initialization of backend ${e} failed`),Qp(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return hf.nextTensorId++}nextVariableId(){return hf.nextVariableId++}clone(e){let t=ff.runKernel(oh,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e};return ff.runKernel(gd,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==rc(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=uf(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(uf(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=rc(t,this.backendName);Jl(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>{if(null!=e.rank)return e;let{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{!a||(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:d,attrs:h}=e,p=uf(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,d,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,d,t,p,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=ac(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(Jl(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&wu(e[0])&&(a=e.map((e=>Fc(e))));let s=r.write(a,t,n),i=new jc(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=vu(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a=new jc(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new Hc(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*xu(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Hc||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*xu(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ac(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=Mu(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=of(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(Jl(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Jl(a instanceof jc,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=Ru(nu(e),"float32");return ff.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!au(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),mf);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){var t=this;return Jl(Nu(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];Jl(r.every((e=>e instanceof jc)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let s,i={};r.forEach(((e,t)=>{i[t]=e}));let o=(t,n)=>(s=e(...r,n),Jl(s.value instanceof jc,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Jl(Nu(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),l=(e,t)=>{let n=s.gradFunc(e,t),a=Array.isArray(n)?n:[n];Jl(a.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Jl(a.every((e=>e instanceof jc)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i};return t.runKernelFunc({forwardFunc:o,backwardsFunc:l,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Mc(),n=await this.backend.time(e);return n.wallMs=Mc()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new df;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},pf=hf;function cf(){let e=ju();if(null==e._tfengine){let t=new Lu(e);e._tfengine=new pf(t)}return function(e){Gu=e}(e._tfengine.ENV),function(e){Vc=e}((()=>e._tfengine)),e._tfengine}pf.nextTensorId=0,pf.nextVariableId=0;var ff=cf();function mf(e,t){let n={a:e,b:t};return ff.runKernel(Zu,n)}var gf,yf={};function Af(e){gf=e}function bf(e){if(void 0!==gf)return gf;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function xf(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}bl(yf,{isBrowser:()=>xf,isMobile:()=>bf,mockIsMobile:()=>Af});var vf=Uu();function wf(e,t){let n=e;if(bu(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||bu(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Uu().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&kf(e,r,[]),r}function kf(e,t,n){if(n=n||[],!Array.isArray(e)&&!bu(e))return void Jl(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Jl(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Jl(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let t=0;t<e.length;++t)kf(e[t],r,n.concat(t))}function If(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Sf(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof jc)return If(r,e.dtype,t,n),e;let a=Su(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),If(r,a,t,n),null==e||!bu(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=wf(e,a);!bu(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Rc(e,a):tu(e,[],!0);return ff.makeTensor(i,s,a)}function Nf(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Sf(e,`${t}[${a}]`,n,r)))}vf.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),vf.registerFlag("IS_BROWSER",(()=>xf())),vf.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),vf.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),vf.registerFlag("PROD",(()=>!1)),vf.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>vf.getBool("DEBUG"))),vf.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),vf.registerFlag("IS_TEST",(()=>!1)),vf.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),vf.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),vf.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var Tf="__op";function Cf(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Tf;let a=function(){ff.startScope(n);try{let e=r(...arguments);return Du(e)&&console.error("Cannot return a Promise inside of tidy."),ff.endScope(e),e}catch(e){throw ff.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var Ef=Cf({complex_:function(e,t){let n=Sf(e,"real","complex"),r=Sf(t,"imag","complex");Ql(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return ff.runKernel(bd,a)}});function _f(e,t,n,r){if(null==r&&(r=Su(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!bu(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Fu(t);let e=nu(t),r=nu(n);Jl(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==nu(t.slice(e));Jl(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!bu(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Rc(e,r):tu(e,[],!0),ff.makeTensor(e,t,r)}function Rf(e,t,n){return _f(e,t,wf(e,n),n)}var Mf={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function $f(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Of(await Promise.all(r)),specs:n}}function Ff(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=nu(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=Mf[r.dtype],d=e.slice(a,a+u*l),h="uint8"===r.dtype?new Uint8Array(d):new Uint16Array(d);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(h.length);for(let e=0;e<h.length;e++){let n=h[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=Vf()),t=n(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(h.length);for(let e=0;e<h.length;e++){let n=h[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=nu(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+4))[0];a+=4;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=Mf[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=Rf(e,l,"float32"),o=Rf(n,l,"float32");r[i]=Ef(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=Rf(t,l,o))}return r}function Of(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var zf="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Df(e){return zf?Buffer.byteLength(e):new Blob([e]).size}function Pf(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Lf(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Wf(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Bf(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){let[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Uf(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Df(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Df(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Vf(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var Gf=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Gf.instance&&(Gf.instance=new Gf),Gf.instance}static registerSaveRouter(e){Gf.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Gf.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Gf.getHandlers(e,"save")}static getLoadHandlers(e,t){return Gf.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?Gf.getInstance().loadRouters:Gf.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},jf=e=>Gf.registerSaveRouter(e),Hf=e=>Gf.registerLoadRouter(e),qf=e=>Gf.getSaveHandlers(e),Kf=(e,t)=>Gf.getLoadHandlers(e,t),Xf="tensorflowjs",Zf="models_store",Yf="model_info_store";function Jf(){if(!Uu().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Qf(e){let t=e.result;t.createObjectStore(Zf,{keyPath:"modelPath"}),t.createObjectStore(Yf,{keyPath:"modelPath"})}var em=class{constructor(e){if(this.indexedDB=Jf(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(Xf,1);r.onupgradeneeded=()=>Qf(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(Zf,"readonly"),r=t.objectStore(Zf).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=Uf(t),i=a.transaction(Yf,"readwrite"),o=i.objectStore(Yf),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(Zf,"readwrite");let l=r.objectStore(Zf).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(Yf);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};em.URL_SCHEME="indexeddb://";var tm=e=>Uu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(em.URL_SCHEME)?function(e){return new em(e)}(e.slice(em.URL_SCHEME.length)):null;Gf.registerSaveRouter(tm),Gf.registerLoadRouter(tm);var nm="/",rm="tensorflowjs_models",am="info",sm="model_topology",im="weight_specs",om="weight_data",lm="model_metadata";function um(e){return{info:[rm,e,am].join(nm),topology:[rm,e,sm].join(nm),weightSpecs:[rm,e,im].join(nm),weightData:[rm,e,om].join(nm),modelMetadata:[rm,e,lm].join(nm)}}function dm(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function hm(e){let t=e.split(nm);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(nm)}var pm=class{constructor(e){if(!Uu().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=um(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Uf(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(zf)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw dm(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(zf){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};pm.URL_SCHEME="localstorage://";var cm=e=>Uu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pm.URL_SCHEME)?function(e){return new pm(e)}(e.slice(pm.URL_SCHEME.length)):null;Gf.registerSaveRouter(cm),Gf.registerLoadRouter(cm);var fm="://",mm=class{constructor(){this.managers={}}static getInstance(){return null==mm.instance&&(mm.instance=new mm),mm.instance}static registerManager(e,t){Jl(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(fm)&&(e=e.slice(0,e.indexOf(fm))),Jl(e.length>0,(()=>"scheme must not be an empty string."));let n=mm.getInstance();Jl(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function gm(e){if(-1===e.indexOf(fm))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${mm.getSchemes().join(",")}`);return{scheme:e.split(fm)[0],path:e.split(fm)[1]}}async function ym(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];Jl(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=Gf.getLoadHandlers(e);Jl(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Jl(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=Gf.getSaveHandlers(t);Jl(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Jl(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=gm(e).scheme,l=gm(e).path,u=o===gm(e).scheme,d=await a.load();n&&u&&await mm.getManager(o).removeModel(l);let h=await i.save(d);return n&&!u&&await mm.getManager(o).removeModel(l),h.modelArtifactsInfo}async function Am(){let e=mm.getSchemes(),t={};for(let n of e){let e=await mm.getManager(n).listModels();for(let r in e)t[n+fm+r]=e[r]}return t}async function bm(e){let t=gm(e);return mm.getManager(t.scheme).removeModel(t.path)}async function xm(e,t){return ym(e,t,!1)}async function vm(e,t){return ym(e,t,!0)}if(Uu().get("IS_BROWSER")){Uu().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{mm.registerManager(pm.URL_SCHEME,new class{constructor(){Jl(Uu().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Jl("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=rm+nm,n=nm+am;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[hm(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=um(e=function(e){return e.startsWith(pm.URL_SCHEME)?e.slice(pm.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return dm(t),n}})}catch(Kc){}try{mm.registerManager(em.URL_SCHEME,new class{constructor(){this.indexedDB=Jf()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(Xf,1);n.onupgradeneeded=()=>Qf(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Yf,"readonly"),s=a.objectStore(Yf).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(em.URL_SCHEME)?e.slice(em.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(Xf,1);r.onupgradeneeded=()=>Qf(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(Yf,"readwrite"),o=i.objectStore(Yf),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(Zf,"readwrite");let r=a.objectStore(Zf).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch(Kc){}}var wm;function km(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",Fu(e),new Uc(e,t,n)}Uu().get("IS_NODE")&&!Uu().get("IS_BROWSER")&&Uu().setPlatform("node",new class{constructor(){this.util=kl(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Uu().global.fetch?Uu().global.fetch(e,t):(null==wm&&(wm=wl()),wm(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var Im=Cf({cast_:function(e,t){let n=Sf(e,"x","cast");if(!yu(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return ff.runKernel(gd,r,a)}}),Sm=Cf({clone_:function(e){let t={x:Sf(e,"x","clone","string_or_numeric")};return ff.runKernel(oh,t)}});function Nm(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}cf(),function(e){Gc=e}({buffer:km,cast:Im,clone:Sm,print:Nm});var Tm={};function Cm(e){return new Promise((e=>setTimeout(e))).then(e)}bl(Tm,{browserFiles:()=>Rm,browserHTTPRequest:()=>Wm,concatenateArrayBuffers:()=>Pf,copyModel:()=>xm,decodeWeights:()=>Ff,encodeWeights:()=>$f,fromMemory:()=>Um,getLoadHandlers:()=>Kf,getModelArtifactsForJSON:()=>Bf,getModelArtifactsInfoForJSON:()=>Uf,getSaveHandlers:()=>qf,http:()=>Lm,isHTTPScheme:()=>Dm,listModels:()=>Am,loadWeights:()=>Fm,moveModel:()=>vm,registerLoadRouter:()=>Hf,registerSaveRouter:()=>jf,removeModel:()=>bm,weightsLoaderFactory:()=>Om,withSaveHandler:()=>Vm});var Em=class{constructor(e){if(!Uu().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Em.URL_SCHEME)&&(e=e.slice(Em.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=Wf(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Cm((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Cm((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Uf(e)}}}},_m=Em;function Rm(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=Bf(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let r of e)t.push(...r.weights),n.push(...r.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Pf(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>Lf(e.name))),r={};for(let a of e)a.paths.forEach((e=>{let a=Lf(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}(e)}function Mm(e,t,n,r){var a;Jl(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){Jl(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Jl(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Jl(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function $m(e,t){null==t&&(t={});let n=null==t.fetchFunc?Uu().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Mm(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Mm(a,t.onProgress,.5,1)}async function Fm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Om((e=>$m(e,{requestInit:r})))(e,t,n)}function Om(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0,a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=Mf[l]*nu(e.shape),d=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(d(),i[n]=!0)})):d(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let d=await e(u),h={},p=0;return l.forEach((e=>{let n=t[e].paths.length,r=0;for(let e=0;e<n;e++)r+=d[p+e].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let e=0;e<n;e++){let t=new Uint8Array(d[p+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{let t=Ff(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)h[e]=t[e]})),p+=n})),h}}_m.URL_SCHEME="downloads://",Gf.registerSaveRouter((e=>Uu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_m.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new _m(e)}(e.slice(_m.URL_SCHEME.length)):null));var zm=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Jl("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Uu().platform.fetch,Jl(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Jl(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Wf(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Uf(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Bf(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(let t of e)s.push(...t.weights);let i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Pf(await $m(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function Dm(e){return null!=e.match(zm.URL_SCHEME_REGEX)}zm.URL_SCHEME_REGEX=/^https?:\/\//;var Pm=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Dm(e))):Dm(e),n)return Lm(e,t)}return null};function Lm(e,t){return new zm(e,t)}function Wm(e,t){return Lm(e,t)}Gf.registerSaveRouter(Pm),Gf.registerLoadRouter(Pm);var Bm=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}};function Um(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Bm(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Bm({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Bm({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Vm(e){return new class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}(e)}var Gm={};bl(Gm,{confusionMatrix:()=>Km});var jm=Cf({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Sf(e,"a","matMul"),s=Sf(t,"b","matMul");[a,s]=rf(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return ff.runKernel(hd,i,o)}}),Hm=Cf({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:Sf(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return ff.runKernel(jh,a,s)}}),qm=Cf({transpose_:function(e,t){let n=Sf(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),Jl(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{Jl(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();let r={x:n},a={perm:t};return ff.runKernel(Up,r,a)}}),Km=Cf({confusionMatrix_:function(e,t,n){let r=Sf(e,"labels","confusionMatrix"),a=Sf(t,"predictions","confusionMatrix");Jl(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Jl(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Jl(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),Jl(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),Jl(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=Hm(Im(r,"int32"),n),i=Hm(Im(a,"int32"),n),o=qm(s),l=jm(o,i);return Im(l,"int32")}}),Xm={};function Zm(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Ym(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Jm(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}bl(Xm,{assertAndGetBroadcastShape:()=>Jm,getBroadcastDims:()=>Zm,getReductionAxes:()=>Ym});var Qm,eg={};function tg(e,t,n){if(eu(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=wf(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return _f(e,t,r,n)}function ng(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=rc(Kp,ff.backendName)){let n={pixels:e},r={numChannels:t};return ff.runKernel(Kp,n,r)}let l,u,[d,h]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,d,h).data;else if(r||n)l=e.data;else if(s||a||o){if(null==Qm)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Qm=new OffscreenCanvas(1,1).getContext("2d")}else Qm=document.createElement("canvas").getContext("2d");Qm.canvas.width=d,Qm.canvas.height=h,Qm.drawImage(e,0,0,d,h),l=Qm.getImageData(0,0,d,h).data}if(4===t)u=new Int32Array(l);else{let e=d*h;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return tg(u,[h,d,t],"int32")}function rg(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function ag(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if(Uu().getBool("WRAP_TO_IMAGEBITMAP")&&rg(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return ng(n,t)}async function sg(e,t){let n=Sf(e,"img","toPixels");if(!(e instanceof jc)){let e=n;n=Im(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}bl(eg,{fromPixels:()=>ig,fromPixelsAsync:()=>ag,toPixels:()=>sg});var ig=Cf({fromPixels_:ng}),og={};function lg(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===nu(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let d=[...Cu(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,d]}bl(og,{prepareAndValidate:()=>lg});var ug={};function dg(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function hg(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}dg(n,t,e)}function pg(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a;return{sliceRank:a,numUpdates:nu(t.shape)/o,sliceSize:i,strides:[...Cu(n.slice(0,a)),1],outputSize:nu(n)}}bl(ug,{calculateShapes:()=>pg,validateInput:()=>hg,validateUpdateShape:()=>dg});var cg={};function fg(e,t,n){let r=e.shape.length;Jl(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Jl(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)Jl(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function mg(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function gg(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function yg(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Ag(e,t,n){return n<=e?n:n-(t-1)}function bg(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function xg(e,t,n,r,a,s,i,o,l){let u=e.length,d=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;d=vg(i,l,u,r,e),h=wg(o,l,u,a,e),p=yg(s,l,u,e)}else for(let t=0;t<u;t++)d[t]=Ig(i,r,s,e,t,l),h[t]=Sg(o,a,s,e,t,l),p[t]=kg(s,t,l);return{begin:d,end:h,strides:p}}function vg(e,t,n,r,a){let s=[...a],i=bg(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let i=Ag(t,n,a),o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function wg(e,t,n,r,a){let s=[...a],i=bg(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let i=Ag(t,n,a),o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=Hl(0,s[e],a[e])}return s}function kg(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Ig(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=Hl(0,i,l-1),i}function Sg(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?Hl(0,i,l):Hl(-1,i,l-1),i}function Ng(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Tg(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Cg(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Jl(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Jl(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Eg(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)d&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(d=!0);d||(h.ellipsisMask|=1<<h.dims,h.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}let a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];let i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){let e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=_g(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=_g(p.end[t],1,p.strides[t],r,a,s);let e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;c=c&&e,f=f&&(0===t&&1===p.strides[t]||e)}else c=c&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){let t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function _g(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}bl(cg,{assertParamsValid:()=>fg,computeFlatOffset:()=>Tg,computeOutShape:()=>gg,getNormalizedAxes:()=>xg,isSliceContinous:()=>Ng,maskToAxes:()=>mg,parseSliceParams:()=>Cg,sliceInfo:()=>Eg,startForAxis:()=>Ig,startIndicesWithElidedDims:()=>vg,stopForAxis:()=>Sg,stopIndicesWithElidedDims:()=>wg,stridesForAxis:()=>kg,stridesWithElidedDims:()=>yg});var Rg={};bl(Rg,{Serializable:()=>Mg,SerializationMap:()=>$g,registerClass:()=>Fg});var Mg=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},$g=class{constructor(){this.classNameMap={}}static getMap(){return null==$g.instance&&($g.instance=new $g),$g.instance}static register(e){$g.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Fg(e){Jl(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Jl("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Jl(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),$g.register(e)}var Og={};bl(Og,{TEST_EPSILON_FLOAT16:()=>zg,encodeStrings:()=>Hg,expectArrayBuffersEqual:()=>jg,expectArraysClose:()=>Dg,expectArraysEqual:()=>Bg,expectNumbersClose:()=>Ug,expectPromiseToFail:()=>Wg,expectValuesInRange:()=>Gg,testEpsilon:()=>Pg});var zg=.1;function Dg(e,t,n){return null==n&&(n=Pg()),Lg(e,t,((e,t)=>Vg(e,t,n)))}function Pg(){return 32===ff.backend.floatPrecision()?.001:zg}function Lg(e,t,n){let r=!0;if((bu(e)||bu(t))&&(r=!1),bu(e)&&bu(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=wf(e),r=wf(t);if(!au(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=bu(e)?e:tu(e),s=bu(t)?t:tu(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Wg(e,t){e().then((()=>t.fail()),(()=>t()))}function Bg(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return wu(e)||wu(e[0])||wu(t)||wu(t[0])?Lg(e,n,((e,t)=>e==t)):Lg(e,t,((e,t)=>Vg(e,t,0)))}function Ug(e,t,n){if(null==n&&(n=Pg()),!Vg(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Vg(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Gg(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function jg(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Hg(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Hg(n):e[t]=Fc(n)}return e}var qg="0.0.0";function Kg(){Uu().set("PROD",!0)}function Xg(){Uu().set("DEBUG",!0)}function Zg(){Uu().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Yg(e){Uu().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Jg(){ff.disposeVariables()}function Qg(){return ff}function ey(){return ff.memory()}function ty(e){return ff.profile(e)}function ny(e,t){return ff.tidy(e,t)}function ry(e){of(e).forEach((e=>e.dispose()))}function ay(e){return ff.keep(e)}function sy(e){return ff.time(e)}function iy(e){return ff.setBackend(e)}function oy(){return ff.ready()}function ly(){return ff.backendName}function uy(e){ff.removeBackend(e)}function dy(e){return ff.findBackend(e)}function hy(e){return ff.findBackendFactory(e)}function py(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return ff.registerBackend(e,t,n)}function cy(){return ff.backend}function fy(e,t){Uu().setPlatform(e,t)}var my=Cf({add_:function(e,t){let n=Sf(e,"a","add"),r=Sf(t,"b","add");[n,r]=rf(n,r);let a={a:n,b:r};return ff.runKernel(Zu,a)}}),gy=Cf({floorDiv_:function(e,t){let n=Sf(e,"a","floorDiv"),r=Sf(t,"b","floorDiv");[n,r]=rf(n,r);let a={a:n,b:r};return ff.runKernel(th,a)}}),yy=Cf({div_:function(e,t){let n=Sf(e,"a","div"),r=Sf(t,"b","div");if([n,r]=rf(n,r),"int32"===n.dtype&&"int32"===r.dtype)return gy(n,r);let a={a:n,b:r};return ff.runKernel(Ud,a,{})}}),Ay=Cf({mul_:function(e,t){let n=Sf(e,"a","mul"),r=Sf(t,"b","mul");[n,r]=rf(n,r);let a={a:n,b:r};return ff.runKernel(Ph,a)}}),by=Cf({abs_:function(e){let t=Sf(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return ff.runKernel(xd,e)}{let e={x:t};return ff.runKernel(qu,e)}}}),xy=Cf({acos_:function(e){let t={x:Sf(e,"x","acos")};return ff.runKernel(Ku,t)}}),vy=Cf({acosh_:function(e){let t={x:Sf(e,"x","acosh")};return ff.runKernel(Xu,t)}}),wy=Cf({addN_:function(e){Jl(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Jl(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>Sf(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!au(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return ff.runKernel(Yu,r)}}),ky=Cf({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:Sf(e,"x","all","bool")},a={axis:t,keepDims:n};return ff.runKernel(Ju,r,a)}}),Iy=Cf({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:Sf(e,"x","any","bool")},a={axis:t,keepDims:n};return ff.runKernel(Qu,r,a)}}),Sy=Cf({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:Sf(e,"x","argMax")},r={axis:t};return ff.runKernel(ed,n,r)}}),Ny=Cf({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:Sf(e,"x","argMin")},r={axis:t};return ff.runKernel(td,n,r)}}),Ty=Cf({asin_:function(e){let t={x:Sf(e,"x","asin")};return ff.runKernel(nd,t)}}),Cy=Cf({asinh_:function(e){let t={x:Sf(e,"x","asinh")};return ff.runKernel(rd,t)}}),Ey=Cf({atan_:function(e){let t={x:Sf(e,"x","atan")};return ff.runKernel(ad,t)}}),_y=Cf({atan2_:function(e,t){let n=Sf(e,"a","atan2"),r=Sf(t,"b","atan2");[n,r]=rf(n,r);let a={a:n,b:r};return ff.runKernel(id,a)}}),Ry=Cf({atanh_:function(e){let t={x:Sf(e,"x","atanh")};return ff.runKernel(sd,t)}});function My(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0,i=e[3],o=[...t,i],l=Hy(a);return Oy(e,o,n,s,r,null,null,l)}function $y(e,t,n,r,a,s){let i,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",[l,u]=Py(t);if("channelsLast"===o)i=[l,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);i=[l,u,e[1],e[1]]}return Oy(e,i,n,r,a,s,!1,o)}function Fy(e,t,n,r,a,s){let i,o,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC",[u,d,h]=Ly(t);if("NDHWC"===l)o="channelsLast",i=[u,d,h,e[4],e[4]];else{if("NCDHW"!==l)throw new Error(`Unknown dataFormat ${l}`);o="channelsFirst",i=[u,d,h,e[1],e[1]]}return zy(e,i,n,r,a,!1,o,s)}function Oy(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,d,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,d]=e}let p,[c,f,,m]=t,[g,y]=Py(n),[A,b]=Py(r),x=Wy(c,A),v=Wy(f,b),{padInfo:w,outHeight:k,outWidth:I}=By(a,u,d,g,y,x,v,s,o),S=i?m*h:m;return"channelsFirst"===o?p=[l,S,k,I]:"channelsLast"===o&&(p=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:A,dilationWidth:b,inShape:e,outShape:p,filterShape:t}}function zy(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,u,d,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,d,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,d,h]=e}let c,[f,m,g,,y]=t,[A,b,x]=Ly(n),[v,w,k]=Ly(r),I=Wy(f,v),S=Wy(m,w),N=Wy(g,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:_}=Uy(a,u,d,h,A,b,x,I,S,N,o),R=s?y*p:y;return"channelsFirst"===i?c=[l,R,C,E,_]:"channelsLast"===i&&(c=[l,C,E,_,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:d,inWidth:h,inChannels:p,outDepth:C,outHeight:E,outWidth:_,outChannels:R,padInfo:T,strideDepth:A,strideHeight:b,strideWidth:x,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:c,filterShape:t}}function Dy(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=Wy(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Py(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ly(e){return"number"==typeof e?[e,e,e]:e}function Wy(e,t){return t<=1?e:e+(e-1)*(t-1)}function By(e,t,n,r,a,s,i,o,l){let u,d,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=Dy(e,t,n));let s=e[1];return[Vy((e[0]-t+2*r)/n+1,a),Vy((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);let e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),p=e-l,c=Math.floor(o/2);u={top:l,bottom:p,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let p="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:c,left:f,right:m,type:0===p&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},d=Vy((t-s+p+c)/r+1,o),h=Vy((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:d,outWidth:h}}function Uy(e,t,n,r,a,s,i,o,l,u,d){let h,p,c,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let s=function(e,t,n,r,a,s){null==a&&(a=Dy(e,t,r));let i=e[1],o=e[2];return[Vy((e[0]-t+2*a)/r+1,s),Vy((i-t+2*a)/r+1,s),Vy((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,d);p=s[0],c=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(p-1)*a+o-t,d=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,A=Math.floor(d/2),b=d-A,x=Math.floor(m/2);h={top:A,bottom:b,left:x,right:m-x,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),c=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:p,outHeight:c,outWidth:f}}function Vy(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Gy(e){let[t,n,r]=Py(e);return 1===t&&1===n&&1===r}function jy(e,t){return Gy(e)||Gy(t)}function Hy(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function qy(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Jl(su(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Jl(su(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var Ky=Cf({reshape_:function(e,t){let n={x:Sf(e,"x","reshape","string_or_numeric")},r={shape:t};return ff.runKernel(np,n,r)}}),Xy=Cf({avgPool_:function(e,t,n,r,a){let s=Sf(e,"x","avgPool","float32");Jl(jy(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ky(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Jl(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),qy("avgPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=ff.runKernel(od,l,u);return d=Im(d,s.dtype),o?Ky(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Zy=Cf({avgPool3d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",i=Sf(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=Ky(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Jl(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Jl("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),qy("avgPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=ff.runKernel(ud,u,d);return h=Im(h,o.dtype),l?Ky(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Yy=Cf({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;Jl(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Nf(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Sm(n[0]);let r=n,a={axis:t};return ff.runKernel(vd,r,a)}}),Jy=Cf({sigmoid_:function(e){let t={x:Sf(e,"x","sigmoid","float32")};return ff.runKernel(Ap,t)}}),Qy=Cf({slice_:function(e,t,n){let r=Sf(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return ff.runKernel(fp,a,s)}}),eA=Cf({tanh_:function(e){let t={x:Sf(e,"x","tanh","float32")};return ff.runKernel(Pp,t)}}),tA=Cf({basicLSTMCell_:function(e,t,n,r,a,s){let i=Sf(e,"forgetBias","basicLSTMCell"),o=Sf(t,"lstmKernel","basicLSTMCell"),l=Sf(n,"lstmBias","basicLSTMCell"),u=Sf(r,"data","basicLSTMCell"),d=Sf(a,"c","basicLSTMCell"),h=Sf(s,"h","basicLSTMCell"),p=Yy([u,h],1),c=jm(p,o),f=my(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],A=Qy(f,[0,0],y),b=Qy(f,[0,g],y),x=Qy(f,[0,2*g],y),v=Qy(f,[0,3*g],y),w=my(Ay(Jy(A),eA(b)),Ay(d,Jy(my(i,x))));return[w,Ay(eA(w),Jy(v))]}}),nA=Cf({batchToSpaceND_:function(e,t,n){let r=Sf(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));Jl(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Jl(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Jl(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return ff.runKernel(pd,s,i)}});function rA(e){let t;return t=0===e.rank||1===e.rank?Ky(e,[1,1,1,e.size]):2===e.rank?Ky(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ky(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var aA=Cf({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=Sf(e,"x","batchNorm"),u=Sf(t,"mean","batchNorm"),d=Sf(n,"variance","batchNorm");null!=a&&(i=Sf(a,"scale","batchNorm")),null!=r&&(o=Sf(r,"offset","batchNorm")),Jl(u.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Jl(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Jl(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let h={x:rA(l),scale:i,offset:o,mean:u,variance:d},p={varianceEpsilon:s},c=ff.runKernel(nh,h,p);return Ky(c,l.shape)}}),sA=Cf({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=Sf(e,"x","batchNorm"),u=Sf(t,"mean","batchNorm"),d=Sf(n,"variance","batchNorm");return null!=a&&(i=Sf(a,"scale","batchNorm")),null!=r&&(o=Sf(r,"offset","batchNorm")),Jl(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),Jl(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),Jl(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`)),null!=i&&Jl(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&Jl(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),aA(l,u,d,o,i,s)}}),iA=Cf({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=Sf(e,"x","batchNorm"),u=Sf(t,"mean","batchNorm"),d=Sf(n,"variance","batchNorm");return null!=a&&(i=Sf(a,"scale","batchNorm")),null!=r&&(o=Sf(r,"offset","batchNorm")),Jl(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),Jl(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),Jl(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`)),null!=i&&Jl(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&Jl(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),aA(l,u,d,o,i,s)}}),oA=Cf({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=Sf(e,"x","batchNorm"),u=Sf(t,"mean","batchNorm"),d=Sf(n,"variance","batchNorm");return null!=a&&(i=Sf(a,"scale","batchNorm")),null!=r&&(o=Sf(r,"offset","batchNorm")),Jl(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),Jl(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),Jl(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`)),null!=i&&Jl(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&Jl(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),aA(l,u,d,o,i,s)}}),lA=Cf({bincount_:function(e,t,n){let r=Sf(e,"x","bincount"),a=Sf(t,"weights","bincount");Jl("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Jl(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Jl(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return ff.runKernel(cd,s,i)}}),uA=Cf({broadcastArgs_:function(e,t){let n=Sf(e,"s0","broadcastArgs","int32"),r=Sf(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return ff.runKernel(md,a)}}),dA=Cf({broadcastTo_:function(e,t){let n=Sf(e,"broadcastTo","x"),r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ky(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Sm(n);let i={x:n},o={reps:s};return ff.runKernel(Lp,i,o)}}),hA=Cf({ceil_:function(e){let t={x:Sf(e,"x","ceil","float32")};return ff.runKernel(yd,t)}}),pA=Cf({clipByValue_:function(e,t,n){let r=Sf(e,"x","clipByValue");Jl(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));let a={x:r},s={clipValueMin:t,clipValueMax:n};return ff.runKernel(Ad,a,s)}}),cA=Cf({concat1d_:function(e){return Yy(e,0)}}),fA=Cf({concat2d_:function(e,t){return Yy(e,t)}}),mA=Cf({concat3d_:function(e,t){return Yy(e,t)}}),gA=Cf({concat4d_:function(e,t){return Yy(e,t)}}),yA=Cf({conv2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=Sf(e,"x","conv2d","float32"),l=Sf(t,"filter","conv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=Ky(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Jl(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Jl(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),qy("conv2d",r,i);let h="NHWC"===a?u.shape[3]:u.shape[1];Jl(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Jl(jy(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let p={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=ff.runKernel(wd,p,c);return d?Ky(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),AA=Cf({conv1d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0,o=Sf(e,"x","conv1d"),l=Sf(t,"filter","conv1d"),u=o,d=!1;2===o.rank&&(d=!0,u=Ky(o,[1,o.shape[0],o.shape[1]])),Jl(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Jl(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),qy("conv1d",r,i),Jl(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Jl(jy(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),Jl("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let h=Ky(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=Ky(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=yA(p,h,[1,n],r,"NHWC",[1,s],i);return Ky(c,d?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}}),bA=Cf({conv2DBackpropInput_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0;Jl(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Ky(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Jl(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Jl(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Jl(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let d="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];Jl(d===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`)),Jl(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),qy("conv2dDerInput",a,i);let p={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=ff.runKernel(Id,p,c);return u?Ky(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),xA=Cf({conv2dTranspose_:function(e,t,n,r,a,s){let i=Sf(e,"x","conv2dTranspose"),o=Sf(t,"filter","conv2dTranspose");return bA(n,i,o,r,a,"NHWC",s)}}),vA=Cf({conv3d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1],i=Sf(e,"x","conv3d"),o=Sf(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=Ky(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Jl(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Jl(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Jl(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Jl(jy(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Jl("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));let d={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},p=ff.runKernel(Sd,d,h);return u?Ky(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),wA=Cf({conv3DBackpropInput_:function(e,t,n,r,a){Jl(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Ky(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];Jl(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),Jl(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Jl(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Jl(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Jl(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let d={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=ff.runKernel(Td,d,h);return o?Ky(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),kA=Cf({conv3dTranspose_:function(e,t,n,r,a){let s=Sf(e,"x","conv3dTranspose"),i=Sf(t,"filter","conv3dTranspose");return wA(n,s,i,r,a)}}),IA=Cf({cos_:function(e){let t={x:Sf(e,"x","cos","float32")};return ff.runKernel(Cd,t)}}),SA=Cf({cosh_:function(e){let t={x:Sf(e,"x","cosh","float32")};return ff.runKernel(Ed,t)}}),NA=Cf({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={x:Sf(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return ff.runKernel(_d,a,s)}}),TA=Cf({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={x:Sf(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return ff.runKernel(Rd,a,s)}}),CA=Cf({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Sf(e,"x","denseBincount"),s=Sf(t,"weights","denseBincount");Jl("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),Jl(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),Jl(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Jl(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return ff.runKernel($d,i,o)}}),EA=Cf({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC",r=Sf(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Jl(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Jl(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Jl(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Jl(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return ff.runKernel(Fd,o,l)}}),_A=Cf({depthwiseConv2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=Sf(e,"x","depthwiseConv2d","float32"),l=Sf(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=Ky(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Jl(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Jl(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),Jl(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),qy("depthwiseConv2d",r,i);let h={x:u,filter:l},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},c=ff.runKernel(Od,h,p);return d?Ky(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),RA=Cf({diag_:function(e){let t={x:Sf(e,"x","diag")};return ff.runKernel(Pd,t)}}),MA=Cf({dilation2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=Sf(e,"x","dilation2d"),o=Sf(t,"filter","dilation2d");Jl(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Jl(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Jl("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=Ky(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let d={x:l,filter:o},h={strides:n,pad:r,dilations:a},p=ff.runKernel(Ld,d,h);return u?Ky(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),$A=Cf({equal_:function(e,t){let n=Sf(e,"a","equal","string_or_numeric"),r=Sf(t,"b","equal","string_or_numeric");[n,r]=rf(n,r),Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(qd,a)}}),FA=Cf({where_:function(e,t,n){let r=Sf(t,"a","where"),a=Sf(n,"b","where"),s=Sf(e,"condition","where","bool"),i=Jm(Jm(s.shape,r.shape),a.shape),o={condition:dA(s,i),t:dA(r,i),e:dA(a,i)};return ff.runKernel(pp,o)}}),OA=Cf({zerosLike_:function(e){let t={x:Sf(e,"x","zerosLike")};return ff.runKernel(Hp,t)}}),zA=Cf({divNoNan_:function(e,t){let n=Sf(e,"a","div"),r=Sf(t,"b","div");[n,r]=rf(n,r);let a=yy(n,r),s=OA(a),i=$A(r,s);return FA(i,s,a)}}),DA=Cf({dot_:function(e,t){let n=Sf(e,"t1","dot"),r=Sf(t,"t2","dot");Jl(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Jl(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=Ky(n,[1,-1]),t=Ky(r,[-1,1]),a=jm(e,t);return Ky(a,[])}if(1===n.rank&&2===r.rank){let e=Ky(n,[1,-1]),t=Ky(r,[r.shape[0],r.shape[1]]),a=jm(e,t);return Ky(a,[a.size])}if(2===n.rank&&1===r.rank){let e=Ky(r,[-1,1]),t=jm(n,e);return Ky(t,[t.size])}{let e=Ky(r,[r.shape[0],r.shape[1]]);return jm(n,e)}}}),PA=Cf({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];let a=n.map(((e,t)=>Sf(e,`tensors${t}`,"einsum"))),s={equation:e};return ff.runKernel(Vd,a,s)}}),LA=Cf({elu_:function(e){let t={x:Sf(e,"x","elu","float32")};return ff.runKernel(Gd,t)}}),WA=Cf({erf_:function(e){let t=Sf(e,"x","erf");Jl("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Im(t,"float32"));let n={x:t};return ff.runKernel(Hd,n)}}),BA=Cf({exp_:function(e){let t={x:Sf(e,"x","exp")};return ff.runKernel(Kd,t)}}),UA=Cf({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Sf(e,"x","expandDims","string_or_numeric");Jl(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return ff.runKernel(Xd,r,a)}}),VA=Cf({expm1_:function(e){let t={x:Sf(e,"x","expm1")};return ff.runKernel(Zd,t)}}),GA=Cf({tile_:function(e,t){let n=Sf(e,"x","tile","string_or_numeric");Jl(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return ff.runKernel(Lp,r,a)}}),jA=Cf({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);let a=km([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=Ky(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return GA(UA(i,0),[n[0],1,1]);if(2===n.length)return GA(UA(UA(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return GA(UA(UA(UA(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function HA(e,t,n){let r={shape:e,value:t,dtype:n};return ff.runKernel(Jd,{},r)}var qA=Cf({floor_:function(e){let t={x:Sf(e,"x","floor","float32")};return ff.runKernel(eh,t)}}),KA=Cf({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=Sf(e,"x","gather"),s=Sf(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return ff.runKernel(rh,i,o)}}),XA=Cf({greater_:function(e,t){let n=Sf(e,"a","greater","string_or_numeric"),r=Sf(t,"b","greater","string_or_numeric");[n,r]=rf(n,r),Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(sh,a)}}),ZA=Cf({greaterEqual_:function(e,t){let n=Sf(e,"a","greaterEqual","string_or_numeric"),r=Sf(t,"b","greaterEqual","string_or_numeric");[n,r]=rf(n,r),Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(ih,a)}}),YA=Cf({imag_:function(e){let t={input:Sf(e,"input","imag")};return ff.runKernel(uh,t)}}),JA=Cf({isFinite_:function(e){let t={x:Sf(e,"x","isFinite")};return ff.runKernel(dh,t)}}),QA=Cf({isInf_:function(e){let t={x:Sf(e,"x","isInf")};return ff.runKernel(hh,t)}}),eb=Cf({isNaN_:function(e){let t={x:Sf(e,"x","isNaN")};return ff.runKernel(ph,t)}}),tb=Cf({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2,n={x:Sf(e,"x","leakyRelu")},r={alpha:t};return ff.runKernel(ch,n,r)}}),nb=Cf({less_:function(e,t){let n=Sf(e,"a","less","string_or_numeric"),r=Sf(t,"b","less","string_or_numeric");[n,r]=rf(n,r),Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(fh,a)}}),rb=Cf({lessEqual_:function(e,t){let n=Sf(e,"a","lessEqual","string_or_numeric"),r=Sf(t,"b","lessEqual","string_or_numeric");[n,r]=rf(n,r),Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(mh,a)}});function ab(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return ff.runKernel(gh,{},r)}var sb=Cf({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5,s=Sf(e,"x","localResponseNormalization");Jl(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),Jl(su(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Ky(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},d=ff.runKernel(kh,l,u);return o?Ky(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ib=Cf({log_:function(e){let t={x:Sf(e,"x","log","float32")};return ff.runKernel(yh,t)}}),ob=Cf({log1p_:function(e){let t={x:Sf(e,"x","log1p")};return ff.runKernel(Ah,t)}});function lb(e){return Jl(Nu(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=Sf(t,"x","tf.grad","string_or_numeric"),a=null!=n?Sf(n,"dy","tf.grad"):null;return ff.tidy((()=>{let{value:t,grads:n}=ff.gradients((()=>e(r)),[r],a);return null!=a&&Ql(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),fb(n),n[0]}))}}function ub(e){return Jl(Nu(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Jl(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=Nf(t,"args","tf.grads","string_or_numeric"),a=null!=n?Sf(n,"dy","tf.grads"):null;return ff.tidy((()=>{let{value:t,grads:n}=ff.gradients((()=>e(...r)),r,a);return null!=a&&Ql(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),fb(n),n}))}}function db(e){return Jl(Nu(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Jl(t instanceof jc,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Jl(null==n||n instanceof jc,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=ff.gradients((()=>e(t)),[t],n);return fb(r),{grad:r[0],value:a}}}function hb(e){return Jl(Nu(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Jl(Array.isArray(t)&&t.every((e=>e instanceof jc)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Jl(null==n||n instanceof jc,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=ff.gradients((()=>e(...t)),t,n);return null!=n&&Ql(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),fb(r.grads),r}}function pb(e,t){Jl(Nu(e),(()=>"The f passed in variableGrads(f) must be a function")),Jl(null==t||Array.isArray(t)&&t.every((e=>e instanceof Hc)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in ff.registeredVariables)t.push(ff.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;Jl((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=ff.gradients(e,t,null,!0);Jl(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Jl(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function cb(e){return ff.customGrad(e)}function fb(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var mb=Cf({neg_:function(e){let t={x:Sf(e,"x","neg")};return ff.runKernel(Lh,t)}}),gb=Cf({softplus_:function(e){let t={x:Sf(e,"x","softplus")};return ff.runKernel(bp,t)}}),yb=Cf({logSigmoid_:function(e){let t=Sf(e,"x","logSigmoid");return cb((e=>({value:mb(gb(mb(e))),gradFunc:t=>Ay(t,Jy(mb(e)))})))(t)}}),Ab=Cf({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:Sf(e,"x","max")},a={reductionIndices:t,keepDims:n};return ff.runKernel(Sh,r,a)}}),bb=Cf({sub_:function(e,t){let n=Sf(e,"a","sub"),r=Sf(t,"b","sub");[n,r]=rf(n,r);let a={a:n,b:r};return ff.runKernel(zp,a)}}),xb=Cf({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Sf(e,"x","sum");"bool"===r.dtype&&(r=Im(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return ff.runKernel(vp,a,s)}}),vb=Cf({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=Sf(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return cb(((e,n)=>{let r=Ab(e,t,!0),a=bb(e,r),s=bb(Im(a,"float32"),ib(xb(BA(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=BA(r);return bb(e,Ay(xb(e,t,!0),a))}}}))(n)}});function wb(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function kb(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Ib(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Sb(e,t){return kb(e,t.map((e=>1)),t)}function Nb(e,t,n){Jl(wb(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Tb(e,t){if(wb(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Cb(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Eb(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var _b=Cf({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Sf(e,"x","logSumExp"),a=pu(t,r.shape),s=Ab(r,a,!0),i=bb(r,s),o=BA(i),l=xb(o,a),u=ib(l),d=my(Ky(s,u.shape),u);if(n){let e=Sb(d.shape,a);return Ky(d,e)}return d}}),Rb=Cf({logicalAnd_:function(e,t){let n=Sf(e,"a","logicalAnd","bool"),r=Sf(t,"b","logicalAnd","bool");Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(bh,a)}}),Mb=Cf({logicalNot_:function(e){let t={x:Sf(e,"x","logicalNot","bool")};return ff.runKernel(xh,t)}}),$b=Cf({logicalOr_:function(e,t){let n=Sf(e,"a","logicalOr","bool"),r=Sf(t,"b","logicalOr","bool");Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(vh,a)}}),Fb=Cf({logicalXor_:function(e,t){let n=Sf(e,"a","logicalXor","bool"),r=Sf(t,"b","logicalXor","bool");return Jm(n.shape,r.shape),Rb($b(e,t),Mb(Rb(e,t)))}}),Ob=Cf({maxPool_:function(e,t,n,r,a){let s=Sf(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=Ky(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Jl(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Jl(jy(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),qy("maxPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=ff.runKernel(Th,l,u);return o?Ky(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),zb=Cf({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",i=Sf(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=Ky(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Jl(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Jl("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),qy("maxPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=ff.runKernel(Eh,u,d);return l?Ky(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Db=Cf({maxPoolWithArgmax_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s={x:Sf(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=ff.runKernel(Rh,s,i);return{result:o[0],indexes:o[1]}}}),Pb=Cf({maximum_:function(e,t){let n=Sf(e,"a","maximum"),r=Sf(t,"b","maximum");[n,r]=rf(n,r),"bool"===n.dtype&&(n=Im(n,"int32"),r=Im(r,"int32")),Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(Nh,a)}}),Lb=Cf({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:Sf(e,"x","mean")},a={axis:t,keepDims:n};return ff.runKernel(Mh,r,a)}});function Wb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){let t=Wb(e,"float32"),n=Wb(e,"float32");return Ef(t,n)}let n=Mu(nu(e),t);return ff.makeTensor(n,e,t)}function Bb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){let t=Bb(e,"float32"),n=Wb(e,"float32");return Ef(t,n)}let n=Ru(nu(e),t);return ff.makeTensor(n,e,t)}function Ub(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Sf(e,"x","meshgrid",e instanceof jc?e.dtype:"float32");if(void 0===t)return[r];let a=Sf(t,"y","meshgrid",t instanceof jc?t.dtype:"float32"),s=nu(r.shape),i=nu(a.shape);return"xy"===n?(r=Ky(r,[1,-1]),a=Ky(a,[-1,1]),[jm(Bb([i,1],r.dtype),r),jm(a,Bb([1,s],a.dtype))]):(r=Ky(r,[-1,1]),a=Ky(a,[1,-1]),[jm(r,Bb([1,i],r.dtype)),jm(Bb([s,1],a.dtype),a)])}var Vb=Cf({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:Sf(e,"x","min")},a={axis:t,keepDims:n};return ff.runKernel($h,r,a)}}),Gb=Cf({minimum_:function(e,t){let n=Sf(e,"a","minimum"),r=Sf(t,"b","minimum");[n,r]=rf(n,r),"bool"===n.dtype&&(n=Im(n,"int32"),r=Im(r,"int32")),Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(Fh,a)}}),jb=Cf({mirrorPad_:function(e,t,n){Jl("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=Sf(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Jl(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Jl(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Jl(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return ff.runKernel(Oh,i,s)}}),Hb=Cf({mod_:function(e,t){let n=Sf(e,"a","mod"),r=Sf(t,"b","mod");[n,r]=rf(n,r);let a={a:n,b:r};return ff.runKernel(zh,a)}}),qb=Cf({square_:function(e){let t=Sf(e,"x","square");return ff.runKernel("Square",{x:t},{})}}),Kb=Cf({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=pu(t,(e=Sf(e,"x","moments")).shape),a=Lb(e,r,n),s=a.shape;n||(s=Sb(a.shape,r));let i=qb(bb(Im(e,"float32"),Ky(a,s))),o=Lb(i,r,n);return{mean:a,variance:o}}}),Xb=Cf({multiRNNCell_:function(e,t,n,r){let a=Sf(t,"data","multiRNNCell"),s=Nf(n,"c","multiRNNCell"),i=Nf(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],d=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),d.push(l[e+1]);return[u,d]}}),Zb=Cf({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Sf(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?Ky(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=ff.runKernel(Dh,o,l);return 1===i?Ky(u,[u.size]):u}}),Yb=Cf({notEqual_:function(e,t){let n=Sf(e,"a","notEqual","string_or_numeric"),r=Sf(t,"b","notEqual","string_or_numeric");[n,r]=rf(n,r),Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(Wh,a)}}),Jb=Cf({onesLike_:function(e){let t={x:Sf(e,"x","onesLike")};return ff.runKernel(Gh,t)}}),Qb=Cf({outerProduct_:function(e,t){let n=Sf(e,"v1","outerProduct"),r=Sf(t,"v2","outerProduct");Jl(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=Ky(n,[-1,1]),s=Ky(r,[1,-1]);return jm(a,s)}}),ex=Cf({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=Sf(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return ff.runKernel(qh,s,a)}}),tx=Cf({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Jl(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),ex(e,[t],n)}}),nx=Cf({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Jl(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ex(e,t,n)}}),rx=Cf({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Jl(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ex(e,t,n)}}),ax=Cf({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Jl(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ex(e,t,n)}}),sx=Cf({spaceToBatchND_:function(e,t,n){let r=Sf(e,"x","spaceToBatchND");Jl(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Jl(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Jl(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return ff.runKernel(wp,a,s)}}),ix=Cf({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=Sf(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=Ky(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Jl(jy(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let d,h=$y(l.shape,t,s,a,r),p=[h.dilationHeight,h.dilationWidth];d="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([h.filterHeight,h.filterWidth],p):[[0,0],[0,0]];let c=1===p[0]&&1===p[1],[f,m]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([h.inHeight,h.inWidth],p,d),g=c?r:"valid",y=c?l:sx(l,p,f),A=("avg"===n?()=>Xy(y,t,s,g,i):()=>Ob(y,t,s,g,i))(),b=c?A:nA(A,p,m);return u?Ky(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),ox=Cf({pow_:function(e,t){let n=Sf(e,"base","pow"),r=Sf(t,"exp","pow");[n,r]=rf(n,r);let a={a:n,b:r};return ff.runKernel(Xh,a)}}),lx=Cf({prelu_:function(e,t){let n={x:Sf(e,"x","prelu"),alpha:Sf(t,"alpha","prelu")};return ff.runKernel(Zh,n)}}),ux=Cf({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Sf(e,"x","prod");"bool"===r.dtype&&(r=Im(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return ff.runKernel(Yh,a,s)}}),dx=Cf({rand_:function(e,t,n){let r=nu(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return ff.makeTensor(a,e,n)}}),hx=xl(Ml()),px=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=hx.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},cx=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=hx.alea(a.toString()),this.randn=new px(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},fx=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=hx.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}},mx=Cf({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new cx(t,n,r,a),i=km(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),gx=Cf({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new px(t,n,r,!1,a),i=km(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),yx=Cf({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0,s=km(e,r),i=new fx(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function Ax(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return ff.runKernel(Jh,{},a)}var bx=Cf({real_:function(e){let t={input:Sf(e,"input","real")};return ff.runKernel(Qh,t)}}),xx=Cf({reciprocal_:function(e){let t={x:Sf(e,"x","reciprocal")};return ff.runKernel(ep,t)}}),vx=Cf({relu_:function(e){let t={x:Sf(e,"x","relu")};return ff.runKernel(tp,t)}}),wx=Cf({relu6_:function(e){let t={x:Sf(e,"x","relu6")};return ff.runKernel(op,t)}}),kx=Cf({reverse_:function(e,t){let n={x:Sf(e,"x","reverse")},r={dims:t};return ff.runKernel(lp,n,r)}}),Ix=Cf({reverse1d_:function(e){let t=Sf(e,"x","reverse");return Jl(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),kx(t,0)}}),Sx=Cf({reverse2d_:function(e,t){let n=Sf(e,"x","reverse");return Jl(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),kx(n,t)}}),Nx=Cf({reverse3d_:function(e,t){let n=Sf(e,"x","reverse");return Jl(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),kx(n,t)}}),Tx=Cf({reverse4d_:function(e,t){let n=Sf(e,"x","reverse");return Jl(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),kx(n,t)}}),Cx=Cf({round_:function(e){let t={x:Sf(e,"x","round")};return ff.runKernel(up,t)}}),Ex=Cf({rsqrt_:function(e){let t={x:Sf(e,"x","rsqrt","float32")};return ff.runKernel(dp,t)}});function _x(e,t){if((bu(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&bu(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return _f(e,[],[],t)}var Rx=Cf({selu_:function(e){let t={x:Sf(e,"x","selu")};return ff.runKernel(cp,t)}}),Mx=Cf({separableConv2d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC",o=Sf(e,"x","separableConv2d"),l=Sf(t,"depthwiseFilter","separableConv2d"),u=Sf(n,"pointwiseFilter","separableConv2d"),d=o,h=!1;if(3===o.rank&&(h=!0,d=Ky(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Jl(4===d.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`)),Jl(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Jl(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Jl(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Jl(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let p=l.shape[2],c=l.shape[3];Jl(u.shape[2]===p*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*c}, but got ${u.shape[2]}.`));let f=_A(d,l,r,a,i,s),m=yA(f,u,1,"valid",i);return h?Ky(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),$x=async function(e,t){let n=Sf(e,"x","setdiff1d"),r=Sf(t,"y","setdiff1d");Jl(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Jl(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Jl(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;let l=new Uc([o],n.dtype),u=new Uc([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},Fx=Cf({sign_:function(e){let t={x:Sf(e,"x","sign")};return ff.runKernel(yp,t)}}),Ox=Cf({sin_:function(e){let t={x:Sf(e,"x","sin","float32")};return ff.runKernel(mp,t)}}),zx=Cf({sinh_:function(e){let t={x:Sf(e,"x","sinh")};return ff.runKernel(gp,t)}}),Dx=Cf({slice1d_:function(e,t,n){let r=Sf(e,"x","slice1d");return Jl(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Qy(r,[t],[n])}}),Px=Cf({slice2d_:function(e,t,n){let r=Sf(e,"x","slice2d");return Jl(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Qy(r,t,n)}}),Lx=Cf({slice3d_:function(e,t,n){let r=Sf(e,"x","slice3d");return Jl(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Qy(r,t,n)}}),Wx=Cf({slice4d_:function(e,t,n){let r=Sf(e,"x","slice4d");return Jl(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Qy(r,t,n)}}),Bx=Cf({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=Sf(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return ff.runKernel(Ip,r,a)}}),Ux=Cf({fft_:function(e){Jl("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return ff.runKernel(Yd,t)}}),Vx=Cf({ifft_:function(e){Jl("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return ff.runKernel(lh,t)}}),Gx=Cf({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=Ky(e,[r,n]);t=Vx(a)}else{let a=[r,2*(n-1)],s=Ky(bx(e),[r,n]),i=Ky(YA(e),[r,n]),o=kx(Qy(s,[0,1],[r,n-2]),1),l=Ay(kx(Qy(i,[0,1],[r,n-2]),1),_x(-1)),u=Yy([s,o],1),d=Yy([i,l],1),h=Ky(Ef(u,d),[a[0],a[1]]);t=Vx(h)}if(t=bx(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=Ky(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}}),jx=Cf({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r={x:Sf(e,"x","split")},a={numOrSizeSplits:t,axis:n};return ff.runKernel(kp,r,a)}}),Hx=Cf({rfft_:function(e,t){Jl("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=Qy(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=Yy([e,Wb(a)],e.shape.length-1),r=t}else n=e;let s=OA(n),i=Ky(Ef(n,s),[a,r]),o=Ux(i),l=Math.floor(r/2)+1,u=bx(o),d=YA(o),h=jx(u,[l,r-l],u.shape.length-1),p=jx(d,[l,r-l],d.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,Ky(Ef(h[0],p[0]),c)}}),qx=Cf({sqrt_:function(e){let t={x:Sf(e,"x","sqrt","float32")};return ff.runKernel(xp,t)}}),Kx=Cf({squaredDifference_:function(e,t){let n=Sf(e,"a","squaredDifference"),r=Sf(t,"b","squaredDifference");[n,r]=rf(n,r),Jm(n.shape,r.shape);let a={a:n,b:r};return ff.runKernel(_p,a,{})}}),Xx=Cf({squeeze_:function(e,t){let n=Sf(e,"x","squeeze");return Ky(n,cu(n.shape,t).newShape)}}),Zx=Cf({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Nf(e,"tensors","stack","string_or_numeric");Jl(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Jl(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return ff.runKernel(Hh,r,a)}}),Yx=Cf({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:Sf(e,"x","step")},r={alpha:t};return ff.runKernel(qp,n,r)}}),Jx=Cf({stridedSlice_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0,u={x:Sf(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return ff.runKernel(Mp,u,d)}}),Qx=Cf({tan_:function(e){let t={x:Sf(e,"x","tan","float32")};return ff.runKernel(Dp,t)}});function ev(e,t){eu(e);let n=wf(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return _f(e,null,n,t)}function tv(e,t,n){if(eu(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=wf(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return _f(e,t,r,n)}function nv(e,t,n){if(eu(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=wf(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return _f(e,t,r,n)}function rv(e,t,n){if(eu(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=wf(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return _f(e,t,r,n)}function av(e,t,n){if(eu(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=wf(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return _f(e,t=t||r,r,n)}var sv=Cf({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=Sf(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=ff.runKernel(Wp,s,i);return{values:o,indices:l}}}),iv=Cf({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new px(t,n,r,!0,a),i=km(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),ov=Cf({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Sf(e,"x","unique","string_or_numeric");Jl(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=ff.runKernel(Vp,r,a);return{values:s,indices:i}}}),lv=Cf({unsortedSegmentSum_:function(e,t,n){let r=Sf(e,"x","unsortedSegmentSum"),a=Sf(t,"segmentIds","unsortedSegmentSum","int32");Jl(su(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return ff.runKernel(jp,s,i)}}),uv=Cf({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Sf(e,"x","unstack","string_or_numeric");Jl(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return ff.runKernel(Gp,r,a)}});function dv(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return ff.makeVariable(e,t,n,r)}function hv(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=km(e,"int32"),a=km([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var pv=async function(e){let t=Sf(e,"condition","whereAsync","bool"),n=await t.data(),r=hv(t.shape,n);return e!==t&&t.dispose(),r},cv=async function(e,t,n){let r=Sf(e,"tensor","boolMask"),a=Sf(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Jl(i>0,(()=>"mask cannot be scalar")),Ql(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),d=Ky(r,u),h=Ky(a,[-1]),p=await pv(h),c=Xx(p,[1]),f=KA(d,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),d.dispose(),h.dispose(),p.dispose(),f};function fv(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return by(e);if(1!==e.rank&&null===n)return fv(Ky(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return xb(by(e),n);if(t===1/0)return Ab(by(e),n);if(t===-1/0)return Vb(by(e),n);if("euclidean"===t||2===t)return qx(xb(ox(by(e),_x(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Ab(xb(by(e),n[0]),n[1]-1);if(t===1/0)return Ab(xb(by(e),n[1]),n[0]);if(t===-1/0)return Vb(xb(by(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return qx(xb(qb(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var mv=Cf({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=fv(e=Sf(e,"x","norm"),t,n),s=a.shape;if(r){let t=pu(n,e.shape);s=Sb(a.shape,t)}return Ky(a,s)}}),gv=Cf({movingAverage_:function(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=Sf(e,"v","movingAverage"),i=Sf(t,"x","movingAverage"),o=Sf(n,"decay","movingAverage");af(s,i),Jl(au(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=_x(1),u=bb(l,o),d=Ay(bb(i,s),u);if(a){Jl(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=Sf(r,"step","movingAverage");d=yy(d,bb(l,ox(o,e)))}return my(s,d)}}),yv=Cf({scatterND_:function(e,t,n){let r=Sf(e,"indices","scatterND","int32"),a=Sf(t,"updates","scatterND");hg(a,r,n);let s={indices:r,updates:a},i={shape:n};return ff.runKernel(hp,s,i)}});function Av(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}var bv=Cf({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=Sf(e,"sparseIndices","sparseToDense","int32"),s=Sf(t,"sparseValues","sparseToDense"),i=Sf(r,"defaultValue","sparseToDense",s.dtype);Av(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return ff.runKernel(Ep,o,l)}}),xv=Cf({gatherND_:function(e,t){let n=Sf(t,"indices","gatherND","int32"),r={params:Sf(e,"x","gatherND","string_or_numeric"),indices:n};return ff.runKernel(ah,r)}}),vv=Cf({dropout_:function(e,t,n,r){let a=Sf(e,"x","dropout");if(Jl("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),Jl(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof jc?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(au(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=yy(qA(my(yx(s,0,1,"float32",r),i)),i);return Ay(a,o)}});function wv(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function kv(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ev(a,"float32")}var Iv=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=Sf(e,"predictions","inTopK"),a=Sf(t,"targets","inTopK");Jl(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Jl(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Ql(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];Jl(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],d=fu("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),d[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){d[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Rf(d,a.shape,"bool")},Sv={};bl(Sv,{conv2d:()=>Rv,depthwiseConv2d:()=>Fv,matMul:()=>Ov});var Nv=Cf({conv2DBackpropFilter_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Ky(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Ky(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Jl(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Jl(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Jl(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],d="NHWC"===s?l.shape[3]:l.shape[1];Jl(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Jl(d===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`)),qy("conv2dDerFilter",a,i);let h={x:o,dy:l},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return ff.runKernel(kd,h,p)}});function Tv(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ay(e,Yx(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Cv(e,t){let n=t,r=Ym(e.shape,t.shape);return r.length>0&&(n=xb(n,r)),Ky(n,e.shape)}function Ev(e,t,n,r){if("linear"===t)return e;if("relu"===t)return vx(e);if("elu"===t)return LA(e);if("relu6"===t)return wx(e);if("prelu"===t)return lx(e,n);if("leakyrelu"===t)return tb(e,r);if("sigmoid"===t)return Jy(e);throw new Error(`Unknown fused activation ${t}.`)}var _v=(e,t)=>!(e>0)||"linear"===t,Rv=Cf({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:h}=e;if(u=u||"linear",!1===_v(ff.state.gradientDepth,u)){let e=yA(t,n,r,a,s,i,o);return null!=l&&(e=my(e,l)),Ev(e,u,d,h)}let p=Sf(t,"x","conv2d","float32"),c=Sf(n,"filter","conv2d","float32"),f=p,m=!1;3===p.rank&&(m=!0,f=Ky(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Jl(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),Jl(4===c.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`)),qy("fused conv2d",a,o),Jl(f.shape[3]===c.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${c.shape[2]}.`)),Jl(jy(r,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),Jl("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));let g,y,A=Oy(f.shape,c.shape,r,i,a,o);null!=l&&(g=Sf(l,"bias","fused conv2d"),[g]=rf(g,p),Jm(A.outShape,g.shape)),null!=d&&(y=Sf(d,"prelu weights","fused conv2d"));let b=(e,t)=>{let[n,s,o,l]=t,d=Tv(e,o,u);Jl(Gy(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));let h=[bA(s.shape,d,n,r,a),Nv(s,d,n.shape,r,a)];if(null!=l){let e=Cv(l,d);h.push(e)}return h},x={x:f,filter:c,bias:g,preluActivationWeights:y},v={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};return null==l?cb(((e,t,n)=>{let r=ff.runKernel(Yp,x,v);return n([t,e,r]),m&&(r=Ky(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(f,c):cb(((e,t,n,r)=>{let a=ff.runKernel(Yp,x,v);return r([t,e,a,n]),m&&(a=Ky(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(f,c,g)}}),Mv=Cf({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Ky(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Ky(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return ff.runKernel(zd,u,d)}}),$v=Cf({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=t,l=!1;3===t.rank&&(l=!0,o=Ky(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=ff.runKernel(Dd,u,d);return l?Ky(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Fv=Cf({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:h}=e;if(!1===_v(ff.state.gradientDepth,u)){let e=_A(t,n,r,a,s,i,o);return null!=l&&(e=my(e,l)),Ev(e,u,d,h)}let p=Sf(t,"x","depthwiseConv2d","float32"),c=Sf(n,"filter","depthwiseConv2d","float32"),f=p,m=!1;3===p.rank&&(m=!0,f=Ky(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Jl(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),Jl(4===c.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`)),Jl(f.shape[3]===c.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),null==i&&(i=[1,1]),Jl(jy(r,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),qy("fused depthwiseConv2d",a,o);let g,y,A=Oy(f.shape,c.shape,r,i,a,o,!0);null!=l&&(g=Sf(l,"bias","fused conv2d"),[g]=rf(g,p),Jm(A.outShape,g.shape)),null!=d&&(y=Sf(d,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{Jl(Gy(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));let[n,s,l,d]=t,h=Tv(e,l,u),p=$v(s.shape,h,n,r,a,i,o),c=Mv(s,h,n.shape,r,a,i,o);return null!=d?[p,c,Cv(g,h)]:[p,c]},x={x:f,filter:c,bias:g,preluActivationWeights:y},v={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};return null==l?cb(((e,t,n)=>{let r=ff.runKernel(Jp,x,v);return n([t,e,r]),m&&(r=Ky(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(f,c):cb(((e,t,n,r)=>{let a=ff.runKernel(Jp,x,v);return r([t,e,a,n]),m&&(a=Ky(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(f,c,g)}}),Ov=Cf({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:a=!1,bias:s,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:l}=e;if(!1===_v(ff.state.gradientDepth,i)){let e=jm(t,n,r,a);return null!=s&&(e=my(e,s)),Ev(e,i,o,l)}let u=Sf(t,"a","fused matMul"),d=Sf(n,"b","fused matMul");[u,d]=rf(u,d);let h=r?u.shape[u.rank-2]:u.shape[u.rank-1],p=a?d.shape[d.rank-1]:d.shape[d.rank-2],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],f=a?d.shape[d.rank-2]:d.shape[d.rank-1],m=u.shape.slice(0,-2),g=d.shape.slice(0,-2),y=nu(m),A=nu(g);Jl(h===p,(()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${u.shape} and ${d.shape} and transposeA=${r} and transposeB=${a} must match.`));let b,x,v=Jm(u.shape.slice(0,-2),d.shape.slice(0,-2)).concat([c,f]),w=Ky(u,r?[y,h,c]:[y,c,h]),k=Ky(d,a?[A,f,p]:[A,p,f]);null!=s&&(b=Sf(s,"bias","fused matMul"),[b]=rf(b,u),Jm(v,b.shape)),null!=o&&(x=Sf(o,"prelu weights","fused matMul"));let I=(e,t)=>{let n,o,[l,u,d,h]=t,p=Tv(Ky(e,d.shape),d,i);return r||a?!r&&a?(n=jm(p,u,!1,!1),o=jm(p,l,!0,!1)):r&&!a?(n=jm(u,p,!1,!0),o=jm(l,p,!1,!1)):(n=jm(u,p,!0,!0),o=jm(p,l,!0,!0)):(n=jm(p,u,!1,!0),o=jm(l,p,!0,!1)),null!=s?[n,o,Cv(h,p)]:[n,o]},S={a:w,b:k,bias:b,preluActivationWeights:x},N={transposeA:r,transposeB:a,activation:i,leakyreluAlpha:l};return null==s?cb(((e,t,n)=>{let r=ff.runKernel(Zp,S,N);return n([e,t,r]),{value:Ky(r,v),gradFunc:I}}))(w,k):cb(((e,t,n,r)=>{let a=ff.runKernel(Zp,S,N);return r([e,t,a,n]),{value:Ky(a,v),gradFunc:I}}))(w,k,b)}}),zv=Cf({hammingWindow_:function(e){return kv(e,.54,.46)}}),Dv=Cf({hannWindow_:function(e){return kv(e,.5,.5)}}),Pv=Cf({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0,i=[];for(;s+t<=e.size;)i.push(Qy(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=Yy([Qy(e,s,t-r),HA([r],a)]);i.push(o),s+=n}return 0===i.length?tv([],[0,t]):Ky(Yy(i),[i.length,t])}}),Lv=Cf({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Dv;null==r&&(r=wv(t));let s=Pv(e,t,n),i=Ay(s,a(t));return Hx(i,r)}}),Wv=Cf({cropAndResize_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=Sf(e,"image","cropAndResize"),o=Sf(t,"boxes","cropAndResize","float32"),l=Sf(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Jl(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Jl(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Jl(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Jl(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Jl(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Jl("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let d={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return ff.runKernel(Md,d,h)}}),Bv=Cf({flipLeftRight_:function(e){let t=Sf(e,"image","flipLeftRight","float32");Jl(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return ff.runKernel(Qd,n,{})}}),Uv=Cf({grayscaleToRGB_:function(e){let t=Sf(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Jl(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Jl(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,GA(t,a)}}),Vv=Cf({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=Sf(e,"image","rotateWithOffset","float32");Jl(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return ff.runKernel(Xp,s,i)}});function Gv(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),Jl(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Jl(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Jl(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Jl(1===t.rank,(()=>"scores must be a 1D tensor")),Jl(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Jl(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var jv=Cf({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=Sf(e,"boxes","nonMaxSuppression","float32"),i=Sf(t,"scores","nonMaxSuppression","float32"),o=Gv(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return ff.runKernel(Bh,{boxes:s,scores:i},l)}});function Hv(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||qv)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function qv(e,t){return e>t?1:e<t?-1:0}function Kv(e,t,n,r,a){return Yv(e,t,n,r,a,0)}function Xv(e,t,n,r,a,s){return Yv(e,t,n,r,a,0,!1,s,!0)}function Zv(e,t,n,r,a,s){return Yv(e,t,n,r,a,s,!0)}function Yv(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8],u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(ew);let d=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){let i=Jv(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Qv(r,d,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),p.push(t.score)):t.score>a&&Hv(u,t,ew))}let c=h.length,f=n-c;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=c),m}function Jv(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),d=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(h-u)*(p-d);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,d),y=Math.min(o,h),A=Math.min(l,p),b=Math.max(y-m,0)*Math.max(A-g,0);return b/(c+f-b)}function Qv(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function ew(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var tw=Cf({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=Sf(e,"boxes","nonMaxSuppression"),o=Sf(t,"scores","nonMaxSuppression"),l=Gv(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=ff.runKernel(Vh,u,d);return{selectedIndices:h[0],selectedScores:h[1]}}}),nw=Cf({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=Sf(e,"boxes","nonMaxSuppression"),o=Sf(t,"scores","nonMaxSuppression"),l=Gv(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,p={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:s},f=ff.runKernel(Uh,p,c);return{selectedIndices:f[0],validOutputs:f[1]}}}),rw=Cf({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Sf(e,"images","resizeBilinear");Jl(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),Jl(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Jl(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ky(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=ff.runKernel(sp,o,l);return i?Ky(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),aw=Cf({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Sf(e,"images","resizeNearestNeighbor");Jl(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),Jl(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Jl("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Jl(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Ky(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=ff.runKernel(rp,o,l);return i?Ky(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});function sw(e,t){let n,r,a,s,i,o,l=ev([-1]),u=ev([0]),d=ev([0]);for(let h=0;h<e.size-1;h++){n=Qy(e,0,h+1),r=Qy(e,h+1),i=yy(xb(n),t),o=yy(xb(r),t);let p=xb(Ay(n,Ax(0,n.size)));a=yy(p,xb(n));let c=HA(r.shape,n.size),f=my(Ax(0,r.size),c),m=Ay(r,f);s=yy(xb(m),xb(r));let g=bb(a,s),y=bb(a,s),A=Ay(i,o);d=Ay(Ay(A,g),y);let b=XA(d,u);u=FA(b,d,u),l=FA(b,ev([h]),l)}return l}var iw=Cf({threshold_:function(e){let t,n,r,a,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,l=Sf(e,"image","threshold"),u=.2989,d=.587,h=.114,p=l.shape[0]*l.shape[1],c=Ay(ev([o]),255);if(Jl(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),Jl(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),Jl("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),Jl("otsu"===s||"binary"===s,(()=>`Method must be binary or otsu, but was ${s}`)),3===l.shape[2]){[t,n,r]=jx(l,[1,1,1],-1);let e=Ay(t,u),s=Ay(n,d),i=Ay(r,h);a=my(my(e,s),i)}else a=e;"otsu"===s&&(c=sw(lA(Im(Cx(a),"int32"),Rf([]),256),p));let f=i?rb(a,c):XA(a,c);return Im(Ay(f,255),"int32")}}),ow=Cf({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0,i=Sf(e,"image","transform","float32"),o=Sf(t,"transforms","transform","float32");Jl(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),Jl(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Jl(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return ff.runKernel(Bp,l,u)}}),lw=Cf({bandPart_:function(e,t,n){Jl(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Jl(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let r=Sf(e,"a","bandPart");Jl(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=Ky(Ax(0,s,1,"int32"),[-1,1]),l=Ax(0,i,1,"int32"),u=bb(o,l),d=Rb(rb(u,_x(+t,"int32")),ZA(u,_x(-n,"int32"))),h=Wb([s,i],r.dtype);return Ky(Zx(uv(Ky(r,[-1,s,i])).map((e=>FA(d,e,h)))),a)}}),uw=Cf({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Jl(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)Jl(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=jx(e,e.shape[0],0).map((e=>Xx(e,[0])));Jl(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let t=0;t<e.length;++t)n.push(ff.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=Ay(xb(Ay(n[r],e)),n[r]);e=bb(e,t)}return yy(e,mv(e,"euclidean"))})));return t?Zx(n,0):n}});function dw(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return ff.tidy((()=>{Jl(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=jA(n),s=Sm(e),i=tv([[1]],[1,1]),o=Sm(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=ff.tidy((()=>{let t=Qy(s,[e,e],[n-e,1]),l=mv(t),u=Qy(s,[e,e],[1,1]),d=FA(XA(u,0),tv([[-1]]),tv([[1]])),h=bb(u,Ay(d,l)),p=yy(t,h);o=1===p.shape[0]?Sm(i):Yy([i,Qy(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);let c=mb(yy(jm(d,h),l)),f=Qy(s,[e,0],[n-e,r]),m=Ay(c,o),g=qm(o);if(0===e)s=bb(f,jm(m,jm(g,f)));else{let t=bb(f,jm(m,jm(g,f)));s=Yy([Qy(s,[0,0],[e,r]),t],0)}let y=qm(m),A=Qy(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=bb(A,jm(jm(A,o),y));else{let t=bb(A,jm(jm(A,o),y));a=Yy([Qy(a,[0,0],[n,e]),t],1)}return[o,s,a]})),ry([t,l,u])}return!t&&n>r&&(a=Qy(a,[0,0],[n,r]),s=Qy(s,[0,0],[r,r])),[a,s]}))}var hw=Cf({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Jl(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return dw(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=uv(Ky(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=dw(e,t);a.push(n),s.push(r)})),[Ky(Zx(a,0),e.shape),Ky(Zx(s,0),e.shape)]}}}),pw=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(pw||{}),cw=Cf({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3,r=Sf(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=Sf(t,"weights","computeWeightedLoss"));let s=null==a?r:Ay(r,a);if(0===n)return s;if(2===n)return xb(s);if(1===n){if(null==a)return Lb(s);{let e=r.size/a.size,t=yy(xb(s),xb(a));return e>1?yy(t,_x(e)):t}}if(3===n){if(null==a)return yy(xb(s),_x(r.size));{let e=Ay(a,Bb(r.shape)),t=Im(xb(Yb(e,_x(0))),"float32");return yy(xb(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),fw=Cf({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3,a=Sf(e,"labels","absoluteDifference"),s=Sf(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=Sf(n,"weights","absoluteDifference")),Ql(a.shape,s.shape,"Error in absoluteDifference: ");let o=by(bb(a,s));return cw(o,i,r)}}),mw=Cf({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3,s=Sf(e,"labels","cosineDistance"),i=Sf(t,"predictions","cosineDistance"),o=null;null!=r&&(o=Sf(r,"weights","cosineDistance")),Ql(s.shape,i.shape,"Error in cosineDistance: ");let l=_x(1),u=bb(l,xb(Ay(s,i),n,!0));return cw(u,o,a)}}),gw=Cf({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3,a=Sf(e,"labels","hingeLoss"),s=Sf(t,"predictions","hingeLoss"),i=null;null!=n&&(i=Sf(n,"weights","hingeLoss")),Ql(a.shape,s.shape,"Error in hingeLoss: ");let o=_x(1);a=bb(Ay(_x(2),a),o);let l=vx(bb(o,Ay(a,s)));return cw(l,i,r)}}),yw=Cf({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3,s=Sf(e,"labels","huberLoss"),i=Sf(t,"predictions","huberLoss"),o=null;null!=n&&(o=Sf(n,"weights","huberLoss")),Ql(s.shape,i.shape,"Error in huberLoss: ");let l=_x(r),u=by(bb(i,s)),d=Gb(u,l),h=bb(u,d),p=my(Ay(_x(.5),qb(d)),Ay(l,h));return cw(p,o,a)}}),Aw=Cf({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3,s=Sf(e,"labels","logLoss"),i=Sf(t,"predictions","logLoss"),o=null;null!=n&&(o=Sf(n,"weights","logLoss")),Ql(s.shape,i.shape,"Error in logLoss: ");let l=_x(1),u=_x(r),d=mb(Ay(s,ib(my(i,u)))),h=Ay(bb(l,s),ib(my(bb(l,i),u))),p=bb(d,h);return cw(p,o,a)}}),bw=Cf({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3,a=Sf(e,"labels","meanSquaredError"),s=Sf(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=Sf(n,"weights","meanSquaredError")),Ql(a.shape,s.shape,"Error in meanSquaredError: ");let o=Kx(a,s);return cw(o,i,r)}});function xw(e,t){let n=Sf(e,"labels","sigmoidCrossEntropyWithLogits"),r=Sf(t,"logits","sigmoidCrossEntropyWithLogits");Ql(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=vx(r),s=Ay(r,n),i=ob(BA(mb(by(r))));return my(bb(a,s),i)}var vw=Cf({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3,s=Sf(e,"multiClassLabels","sigmoidCrossEntropy"),i=Sf(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Sf(n,"weights","sigmoidCrossEntropy")),Ql(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=_x(r),t=_x(1),n=_x(.5);s=my(Ay(s,bb(t,e)),Ay(n,e))}let l=xw(s,i);return cw(l,o,a)}});function ww(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return cb(((e,t,r)=>{let a=_b(t,[n],!0),s=bb(Im(t,"float32"),a);r([e,s]);let i=mb(Ay(s,e));return{value:xb(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=Sb(e.shape,[n]);return[Ay(Ky(e,s),bb(Im(r,"float32"),BA(a))),Ay(Ky(e,s),bb(BA(a),Im(r,"float32")))]}}}))(e,t)}var kw=Cf({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3,s=Sf(e,"onehotLabels","softmaxCrossEntropy"),i=Sf(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Sf(n,"weights","softmaxCrossEntropy")),Ql(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=_x(r),t=_x(1),n=_x(s.shape[1]);s=my(Ay(s,bb(t,e)),yy(e,n))}let l=ww(s,i);return cw(l,o,a)}}),Iw=Cf({sparseFillEmptyRows_:function(e,t,n,r){let a=Sf(e,"indices","sparseFillEmptyRows","int32"),s=Sf(t,"values","sparseFillEmptyRows"),i=Sf(n,"denseShape","sparseFillEmptyRows","int32"),o=Sf(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=ff.runKernel(Sp,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Sw=Cf({sparseReshape_:function(e,t,n){let r=Sf(e,"inputIndices","sparseReshape","int32"),a=Sf(t,"inputShape","sparseReshape","int32"),s=Sf(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=ff.runKernel(Np,i);return{outputIndices:o[0],outputShape:o[1]}}}),Nw=Cf({sparseSegmentMean_:function(e,t,n){let r=Sf(e,"data","sparseSegmentMean"),a=Sf(t,"indices","sparseSegmentMean","int32"),s=Sf(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return ff.runKernel(Tp,i)}}),Tw=Cf({sparseSegmentSum_:function(e,t,n){let r=Sf(e,"data","sparseSegmentSum"),a=Sf(t,"indices","sparseSegmentSum","int32"),s=Sf(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return ff.runKernel(Cp,i)}}),Cw=Cf({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=Sf(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=Sf(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let d={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=ff.runKernel($p,h,d);return{nGrams:p[0],nGramsSplits:p[1]}}}),Ew=Cf({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=Sf(e,"input","stringSplit","string"),a=Sf(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=ff.runKernel(Fp,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),_w=Cf({stringToHashBucketFast_:function(e,t){let n=Sf(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return ff.runKernel(Op,a,r)}}),Rw={fft:Ux,ifft:Vx,rfft:Hx,irfft:Gx},Mw={hammingWindow:zv,hannWindow:Dv,frame:Pv,stft:Lv},$w={flipLeftRight:Bv,grayscaleToRGB:Uv,resizeNearestNeighbor:aw,resizeBilinear:rw,rotateWithOffset:Vv,cropAndResize:Wv,nonMaxSuppression:jv,nonMaxSuppressionAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=Sf(e,"boxes","nonMaxSuppressionAsync"),i=Sf(t,"scores","nonMaxSuppressionAsync"),o=Gv(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:h}=Kv(u,d,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),ev(h,"int32")},nonMaxSuppressionWithScore:tw,nonMaxSuppressionWithScoreAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=Sf(e,"boxes","nonMaxSuppressionAsync"),o=Sf(t,"scores","nonMaxSuppressionAsync"),l=Gv(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),d=u[0],h=u[1],{selectedIndices:p,selectedScores:c}=Zv(d,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ev(p,"int32"),selectedScores:ev(c)}},nonMaxSuppressionPadded:nw,nonMaxSuppressionPaddedAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=Sf(e,"boxes","nonMaxSuppressionAsync"),o=Sf(t,"scores","nonMaxSuppressionAsync"),l=Gv(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,[p,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Xv(p,c,u,d,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ev(f,"int32"),validOutputs:_x(m,"int32")}},threshold:iw,transform:ow},Fw={bandPart:lw,gramSchmidt:uw,qr:hw},Ow={absoluteDifference:fw,computeWeightedLoss:cw,cosineDistance:mw,hingeLoss:gw,huberLoss:yw,logLoss:Aw,meanSquaredError:bw,sigmoidCrossEntropy:vw,softmaxCrossEntropy:kw},zw={sparseFillEmptyRows:Iw,sparseReshape:Sw,sparseSegmentMean:Nw,sparseSegmentSum:Tw},Dw={stringNGrams:Cw,stringSplit:Ew,stringToHashBucketFast:_w},Pw=class extends Mg{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0,{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return ry(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return pb(e,t)}dispose(){null!=this.iterations_&&ry(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:_x(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Pw,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Lw=class extends Pw{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ff.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=ff.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:ny((()=>OA(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:ny((()=>OA(r).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ny((()=>{let e=my(Ay(s,this.rho),Ay(qb(a),1-this.rho)),t=Ay(yy(qx(my(i,this.epsilon)),qx(my(s,this.epsilon))),a),n=my(Ay(i,this.rho),Ay(qb(t),1-this.rho));s.assign(e),i.assign(n);let o=my(Ay(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ry(this.accumulatedGrads.map((e=>e.variable))),ry(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Lw.className="Adadelta",Fg(Lw);var Ww=class extends Pw{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=ff.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:ny((()=>HA(r.shape,this.initialAccumulatorValue).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;ny((()=>{let e=my(s,qb(a));s.assign(e);let t=my(Ay(yy(a,qx(my(e,ff.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ry(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Ww.className="Adagrad",Fg(Ww);var Bw=class extends Pw{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ny((()=>{this.accBeta1=_x(t).variable(),this.accBeta2=_x(n).variable()})),null==r&&(this.epsilon=ff.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ny((()=>{let n=bb(1,this.accBeta1),r=bb(1,this.accBeta2);t.forEach(((t,a)=>{let s=ff.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:ny((()=>OA(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:ny((()=>OA(s).variable(!1)))});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=my(Ay(o,this.beta1),Ay(i,1-this.beta1)),d=my(Ay(l,this.beta2),Ay(qb(i),1-this.beta2)),h=yy(u,n),p=yy(d,r);o.assign(u),l.assign(d);let c=my(Ay(yy(h,my(qx(p),this.epsilon)),-this.learningRate),s);s.assign(c)})),this.accBeta1.assign(Ay(this.accBeta1,this.beta1)),this.accBeta2.assign(Ay(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ry(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ry(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ny((()=>{this.accBeta1.assign(ox(this.beta1,this.iterations_+1)),this.accBeta2.assign(ox(this.beta2,this.iterations_+1))}));let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Bw.className="Adam",Fg(Bw);var Uw=class extends Pw{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ny((()=>{this.iteration=_x(0).variable(),this.accBeta1=_x(t).variable()})),null==r&&(this.epsilon=ff.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ny((()=>{let n=bb(1,this.accBeta1),r=yy(-this.learningRate,my(Ay(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=ff.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:OA(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:OA(s).variable(!1)});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=my(Ay(o,this.beta1),Ay(i,1-this.beta1)),d=Ay(l,this.beta2),h=by(i),p=Pb(d,h);o.assign(u),l.assign(p);let c=my(Ay(yy(r,n),yy(u,my(p,this.epsilon))),s);s.assign(c)})),this.iteration.assign(my(this.iteration,1)),this.accBeta1.assign(Ay(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ry(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ry(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Uw.className="Adamax",Fg(Uw);var Vw=class extends Pw{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=ff.registeredVariables[t];ny((()=>{let e=my(Ay(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ay(_x(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Vw.className="SGD",Fg(Vw);var Gw=class extends Vw{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=_x(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=ff.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:ny((()=>OA(r).variable(!1)))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&ny((()=>{let e,t=my(Ay(this.m,a),s);e=this.useNesterov?my(Ay(this.c,my(s,Ay(t,this.m))),r):my(Ay(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ry(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Gw.className="Momentum",Fg(Gw);var jw=class extends Pw{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=ff.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=ff.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:ny((()=>OA(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:ny((()=>OA(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:ny((()=>OA(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ny((()=>{let e=my(Ay(i,this.decay),Ay(qb(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=my(Ay(t,this.decay),Ay(s,1-this.decay)),l=yy(Ay(s,this.learningRate),qx(bb(e,my(qb(a),this.epsilon)))),u=my(Ay(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let d=bb(r,u);r.assign(d)}else{let e=my(Ay(i,this.decay),Ay(qb(s),1-this.decay)),t=my(Ay(o,this.momentum),yy(Ay(s,this.learningRate),qx(my(e,this.epsilon))));i.assign(e),o.assign(t);let n=bb(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ry(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ry(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ry(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};jw.className="RMSProp",Fg(jw);var Hw=class{static sgd(e){return new Vw(e)}static momentum(e,t){return new Gw(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new jw(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Bw(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Lw(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Uw(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Ww(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},qw={sgd:Hw.sgd,momentum:Hw.momentum,adadelta:Hw.adadelta,adagrad:Hw.adagrad,rmsprop:Hw.rmsprop,adamax:Hw.adamax,adam:Hw.adam},Kw="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Xw(){return new Promise((e=>Kw((()=>e()))))}var Zw={};function Yw(e,t){let n=e[0].length;e.forEach(((e,t)=>{Jl(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Jl(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)Jl(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Jw(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}bl(Zw,{ERF_A1:()=>dk,ERF_A2:()=>hk,ERF_A3:()=>pk,ERF_A4:()=>ck,ERF_A5:()=>fk,ERF_P:()=>uk,PARALLELIZE_THRESHOLD:()=>Qw,SELU_SCALE:()=>lk,SELU_SCALEALPHA:()=>ok,applyActivation:()=>Ev,assertAndGetBroadcastShape:()=>Jm,assertAxesAreInnerMostDims:()=>Nb,assertParamsConsistent:()=>Yw,assignToTypedArray:()=>xk,axesAreInnerMostDims:()=>wb,calculateShapes:()=>pg,checkEinsumDimSizes:()=>Nk,checkPadOnDimRoundingMode:()=>qy,combineLocations:()=>kb,complexWithEvenIndex:()=>yk,complexWithOddIndex:()=>Ak,computeConv2DInfo:()=>Oy,computeConv3DInfo:()=>zy,computeDefaultPad:()=>Dy,computeDilation2DInfo:()=>My,computeOptimalWindowSize:()=>ek,computeOutAndReduceShapes:()=>Ib,computeOutShape:()=>Jw,computePool2DInfo:()=>$y,computePool3DInfo:()=>Fy,convertConv2DDataFormat:()=>Hy,decodeEinsumEquation:()=>Ik,eitherStridesOrDilationsAreOne:()=>jy,expandShapeToKeepDim:()=>Sb,exponent:()=>wk,exponents:()=>vk,fromStringArrayToUint8:()=>Kk,fromUint8ToStringArray:()=>qk,getAxesPermutation:()=>Tb,getBroadcastDims:()=>Zm,getComplexWithIndex:()=>bk,getEinsumComputePath:()=>Tk,getEinsumPermutation:()=>Sk,getFusedBiasGradient:()=>Cv,getFusedDyActivation:()=>Tv,getImageCenter:()=>tk,getInnerMostAxes:()=>Eb,getPermuted:()=>rk,getReductionAxes:()=>Ym,getReshaped:()=>nk,getReshapedPermuted:()=>ak,getSliceBeginCoords:()=>sk,getSliceSize:()=>ik,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Rk,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Mk,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>$k,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>zk,getSparseReshapeInputOutputMismatchErrorMessage:()=>Pk,getSparseReshapeInputOutputMultipleErrorMessage:()=>Dk,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Fk,getSparseReshapeNegativeOutputDimErrorMessage:()=>Ok,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Uk,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Lk,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Wk,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Bk,getUndoAxesPermutation:()=>Cb,isIdentityPermutation:()=>Ck,log:()=>ec,mergeRealAndImagArrays:()=>mk,prepareAndValidate:()=>lg,prepareSplitSize:()=>_k,segment_util:()=>Vk,shouldFuse:()=>_v,slice_util:()=>cg,splitRealAndImagArrays:()=>gk,tupleValuesAreOne:()=>Gy,upcastType:()=>tf,validateInput:()=>hg,validateUpdateShape:()=>dg,warn:()=>Qp});var Qw=30;function ek(e){return e<=Qw?e:Tu(e,Math.floor(Math.sqrt(e)))}function tk(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function nk(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function rk(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function ak(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function sk(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function ik(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var ok=1.7580993408473768,lk=1.0507009873554805,uk=.3275911,dk=.254829592,hk=-.284496736,pk=1.421413741,ck=-1.453152027,fk=1.061405429;function mk(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function gk(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function yk(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Ak(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function bk(e,t){return{real:e[2*t],imag:e[2*t+1]}}function xk(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function vk(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function wk(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var kk=/->/g;function Ik(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(kk,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');let[r,a]=e.split("->");Jl(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));let s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){let t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}let l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,d=[];for(let e=a.length;e<u;++e)d.push(e);return{allDims:o,summedDims:d,idDims:l}}function Sk(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Nk(e,t,n){let r=new Array(e);for(let e=0;e<n.length;++e){let a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Jl(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Tk(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);let s=[];for(let e=0;e<n.length;++e){let a=Ek(t,n[e]);for(let t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Ck(e){return e.every(((e,t)=>e===t))}function Ek(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function _k(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"==typeof t)Jl(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{Jl(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}Jl(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Rk(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Mk(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function $k(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Fk(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Ok(e,t){return`size ${e} must be non-negative, not ${t}`}function zk(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Dk(e,t){return`Input to reshape is a SparseTensor with ${nu(e)}\n  dense values, but the requested shape requires a multiple of ${nu(t)}. inputShape=${e} outputShape= ${t}`}function Pk(e,t){return`Input to reshape is a tensor with ${nu(e)} dense values, but the requested shape has ${nu(t)}. inputShape=${e} outputShape=${t}`}function Lk(){return"segment ids must be >= 0"}function Wk(){return"segment ids are not increasing"}function Bk(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Uk(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Vk={};function Gk(e,t){let n,r=!1;for(e<=Qw?(n=e,r=!0):n=Tu(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Tu(e,n+1);return n}function jk(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Hk(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,d=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}function qk(e){try{return e.map((e=>Oc(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Kk(e){return e.map((e=>Fc(e)))}bl(Vk,{collectGatherOpShapeInfo:()=>Hk,computeOutShape:()=>jk,segOpComputeOptimalWindowSize:()=>Gk});var Xk={};bl(Xk,{nonMaxSuppressionV3Impl:()=>Kv,nonMaxSuppressionV4Impl:()=>Xv,nonMaxSuppressionV5Impl:()=>Zv,whereImpl:()=>hv});var Zk={kernelName:qu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(e,Yx(Im(n,"float32"),-1))}}},Yk={kernelName:Ku,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=qb(Im(n,"float32")),r=qx(bb(_x(1),t));return mb(yy(e,r))}}}},Jk={kernelName:Xu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=qx(bb(qb(Im(n,"float32")),1));return yy(e,t)}}}},Qk={kernelName:Zu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Jm(n.shape,r.shape);return{a:()=>{let t=e,r=Ym(n.shape,a);return r.length>0&&(t=xb(t,r)),Ky(t,n.shape)},b:()=>{let t=e,n=Ym(r.shape,a);return n.length>0&&(t=xb(t,n)),Ky(t,r.shape)}}}},eI={kernelName:Yu,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},tI={kernelName:ed,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>OA(n)}}},nI={kernelName:td,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>OA(n)}}},rI={kernelName:nd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yy(e,qx(bb(_x(1),qb(Im(n,"float32")))))}}},aI={kernelName:rd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=qx(my(_x(1),qb(Im(n,"float32"))));return yy(e,t)}}}},sI={kernelName:id,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Jm(n.shape,r.shape);return{a:()=>{let t=my(qb(n),qb(r)),s=Ay(e,yy(r,t)),i=Ym(n.shape,a);return i.length>0&&(s=xb(s,i)),Ky(s,n.shape)},b:()=>{let t=my(qb(n),qb(r)),s=mb(Ay(e,yy(n,t))),i=Ym(r.shape,a);return i.length>0&&(s=xb(s,i)),Ky(s,r.shape)}}}},iI={kernelName:ad,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yy(e,my(qb(Im(n,"float32")),1))}}},oI={kernelName:sd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yy(e,bb(_x(1),qb(Im(n,"float32"))))}}},lI=Cf({avgPool3dGrad_:function(e,t,n,r,a,s){let i=Sf(e,"dy","avgPool3dGrad"),o=Sf(t,"input","avgPool3dGrad"),l=i,u=o,d=!1;4===o.rank&&(d=!0,l=Ky(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Ky(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Jl(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Jl(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),qy("avgPool3dGrad",a,s);let h={dy:l,input:u},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=ff.runKernel(dd,h,p);return d?Ky(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),uI={kernelName:ud,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>lI(e,r,a,s,i,o)}}},dI=Cf({avgPoolGrad_:function(e,t,n,r,a){let s=Sf(e,"dy","avgPoolGrad"),i=Sf(t,"input","avgPoolGrad");Jl(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=Ky(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Ky(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Jl(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Jl(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let d={dy:l,input:o},h={filterSize:n,strides:r,pad:a},p=ff.runKernel(ld,d,h);return u?Ky(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),hI={kernelName:od,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>dI(e,r,a,s,i)}}},pI={kernelName:hd,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>jm(e,a,!1,!1),b:()=>jm(e,r,!0,!1)}:s&&!i?{a:()=>jm(a,e,!1,!0),b:()=>jm(r,e,!1,!1)}:{a:()=>jm(a,e,!0,!0),b:()=>jm(e,r,!0,!0)}:{a:()=>jm(e,a,!1,!0),b:()=>jm(r,e,!0,!1)}}},cI={kernelName:pd,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>sx(e,r,a)}}},fI={kernelName:fd,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>xb(e,o,!0)}}},mI={kernelName:gd,gradFunc:e=>({x:()=>e.clone()})},gI={kernelName:yd,gradFunc:e=>({x:()=>OA(e)})},yI={kernelName:Ad,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>FA(Rb(ZA(r,a),rb(r,s)),e,OA(e))}}},AI={kernelName:xd,inputsToSave:["x"],gradFunc:Zk.gradFunc},bI={kernelName:vd,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=pu(a,t[0].shape)[0],i=r.map((e=>e[s]));return jx(e,i,s).map((e=>()=>e))}},xI={kernelName:wd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return Jl(Gy(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>bA(r.shape,e,a,i,o,l),filter:()=>Nv(r,e,a.shape,i,o,l)}}},vI={kernelName:Id,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>yA(e,a,s,i,o,1,l),filter:()=>Nv(e,r,a.shape,s,i,o,l)}}},wI=Cf({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Ky(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Ky(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Jl(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),Jl(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Jl(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Jl(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),Jl(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return ff.runKernel(Nd,o,l)}}),kI={kernelName:Sd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;Jl(Gy(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>wA(i.shape,e,o,a,s),filter:()=>wI(i,e,o.shape,a,s)}}},II={kernelName:Cd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(mb(Ox(Im(n,"float32"))),e)}}},SI={kernelName:Ed,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(zx(Im(n,"float32")),e)}}},NI={kernelName:Rd,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=Tb([a],r.rank),n=TA(e,a,s,!i);return null!=t&&(n=qm(n,t)),n}}}},TI={kernelName:Od,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Jl(Gy(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return Jl(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Jl(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Jl(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Jl(jy(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),qy("depthwiseConv2d",s,i),{x:()=>$v(l.shape,e,u,a,s,o,i),filter:()=>Mv(l,e,u.shape,a,s,o,i)}}},CI={kernelName:Ld,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>ff.runKernel(Wd,s,n),filter:()=>ff.runKernel(Bd,i,n)}}},EI={kernelName:Gd,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>ff.runKernel(jd,r)}}},_I={kernelName:Hd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=Ay(BA(mb(qb(n))),2/Math.sqrt(Math.PI));return{x:()=>Ay(e,r)}}},RI={kernelName:Kd,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(e,n)}}},MI={kernelName:Xd,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>Ky(e,n.shape)}}},$I={kernelName:Zd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(e,BA(n))}}},FI={kernelName:eh,gradFunc:e=>({x:()=>OA(e)})},OI={kernelName:th,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Jm(n.shape,r.shape);return{a:()=>{let t=yy(e,Im(r,"float32")),s=Ym(n.shape,a);return s.length>0?Ky(xb(t,s),n.shape):t},b:()=>{let t=Ay(e,Im(n,"float32")),s=Ym(r.shape,a);s.length>0&&(t=Ky(xb(t,s),r.shape));let i=qb(r);return mb(yy(t,Im(i,"float32")))}}}},zI={kernelName:nh,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?_x(1):o,u=Ym(s.shape,a.shape),d=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)d.push(a.shape[e]);d.push(1)}let h=bb(a,s),p=Ay(e,l),c=Ex(my(i,_x(r))),f=Ay(Ay(Ay(c,c),c),_x(-.5));return{x:()=>1===s.rank?Ky(Ay(Ay(e,GA(Ky(c,[1,1,1,s.shape[0]]),d)),l),a.shape):Ky(Ay(Ay(e,c),l),a.shape),mean:()=>{let e=Ay(Ay(c,_x(-1)),p);return 1===s.rank&&(e=xb(e,u)),Ky(e,s.shape)},variance:()=>{let e=Ay(Ay(f,h),p);return 1===s.rank&&(e=xb(e,u)),Ky(e,s.shape)},scale:()=>{let t=Ay(h,c),n=Ay(e,t);return 1===s.rank&&(n=xb(n,u)),Ky(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=xb(t,u)),Ky(t,s.shape)}}}},DI={kernelName:rh,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=pu(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),d=u.length,h=PI(0,l),p=PI(l+1,l+1+d),c=LI([o,[n],u]),f=Ky(e,c),m=Ky(a,[n]),g=LI([[l],h,p]),y=qm(f,g),A=lv(y,m,r.shape[i]),b=Cb(g);return A=qm(A,b),A},indices:()=>a}}};function PI(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function LI(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var WI={kernelName:ih,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>OA(n),b:()=>OA(r)}}},BI={kernelName:oh,gradFunc:e=>({x:()=>Im(e,"float32")})},UI={kernelName:dh,gradFunc:e=>({x:()=>OA(e)})},VI={kernelName:hh,gradFunc:e=>({x:()=>OA(e)})},GI={kernelName:ph,gradFunc:e=>({x:()=>OA(e)})},jI={kernelName:ch,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=XA(r,0);return{x:()=>FA(s,e,Ay(e,a))}}},HI={kernelName:Ah,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yy(e,my(n,1))}}},qI={kernelName:yh,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yy(e,Im(n,"float32"))}}},KI={kernelName:wh,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=BA(r);return bb(e,Ay(xb(e,a,!0),t))}}}},XI=Cf({localResponseNormalizationBackprop_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5,o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return ff.runKernel(Ih,o,l)}}),ZI={kernelName:kh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>XI(r,a,e,s,i,o,l)}}};function YI(e,t,n,r){return t.rank<n.rank&&(t=Ky(t,Sb(t.shape,r))),e.rank<n.rank&&(e=Ky(e,Sb(e.shape,r))),{x:()=>Ay(e,Im($A(n,t),e.dtype))}}var JI={kernelName:Sh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=YI(e,t[1],s,pu(a,s.shape));return{x:()=>i.x()}}},QI={kernelName:Nh,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Ay(e,Im(ZA(n,r),"float32")),b:()=>Ay(e,Im(nb(n,r),"float32"))}}},eS=Cf({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=Sf(e,"dy","maxPool3dGrad"),l=Sf(t,"input","maxPool3dGrad"),u=Sf(n,"output","maxPool3dGrad"),d=o,h=l,p=u,c=!1;4===l.rank&&(c=!0,d=Ky(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Ky(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=Ky(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Jl(5===d.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`)),Jl(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Jl(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),qy("maxPool3dGrad",s,i);let f={dy:d,input:h,output:p},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=ff.runKernel(_h,f,m);return c?Ky(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),tS={kernelName:Eh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>eS(e,r,a,s,i,o,l)}}},nS=Cf({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=Sf(e,"dy","maxPoolGrad"),l=Sf(t,"input","maxPoolGrad"),u=Sf(n,"output","maxPoolGrad");Jl(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Jl(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Jl(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),qy("maxPoolGrad",s,i);let d={dy:o,input:l,output:u},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return ff.runKernel(Ch,d,h)}}),rS={kernelName:Th,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>nS(e,r,a,s,i,o)}}},aS={kernelName:Mh,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=pu(a,r.shape),i=nu(Ib(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=Ky(e,t);return yy(Ay(n,Bb(r.shape,"float32")),i)}}}},sS={kernelName:$h,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=YI(e,i,s,pu(a,s.shape));return{x:()=>o.x()}}},iS={kernelName:Fh,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>Ay(e,Im(rb(n,r),"float32")),b:()=>Ay(e,Im(XA(n,r),"float32"))}}},oS={kernelName:Oh,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Qy(e,s,r.shape)}}},lS={kernelName:zh,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Jm(n.shape,r.shape);return{a:()=>{let t=Ym(n.shape,a);return t.length>0?Ky(xb(e,t),n.shape):e},b:()=>{let t=Ay(e,mb(qA(yy(n,r)))),s=Ym(r.shape,a);return s.length>0?Ky(xb(t,s),r.shape):t}}}},uS={kernelName:Ph,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Jm(n.shape,r.shape);return{a:()=>{let t=Ay(e,Im(r,"float32")),s=Ym(n.shape,a);return s.length>0?Ky(xb(t,s),n.shape):t},b:()=>{let t=Ay(e,Im(n,"float32")),s=Ym(r.shape,a);return s.length>0?Ky(xb(t,s),r.shape):t}}}},dS={kernelName:Lh,gradFunc:e=>({x:()=>mb(e)})},hS={kernelName:Gh,gradFunc:e=>({x:()=>OA(e)})},pS={kernelName:Hh,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return uv(e,r).map((e=>()=>e))}},cS={kernelName:qh,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Qy(e,s,r.shape)}}},fS={kernelName:Xh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=Jm(s.shape,i.shape);return{a:()=>{let t=Im(i,"float32"),n=Ay(e,Ay(t,ox(s,bb(t,_x(1))))),r=Ym(s.shape,o);return r.length>0&&(n=xb(n,r)),Ky(n,s.shape)},b:()=>{let t=XA(s,0),n=FA(t,ib(s),OA(s)),r=Ay(e,Ay(a,n)),l=Ym(i.shape,o);return l.length>0&&(r=xb(r,l)),Ky(r,i.shape)}}}},mS={kernelName:Zh,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=XA(n,0);return{x:()=>FA(a,e,Ay(e,r)),alpha:()=>{let t=FA(a,OA(e),Ay(e,n)),s=Ym(r.shape,e.shape);return s.length>0&&(t=xb(t,s)),Ky(t,r.shape)}}}},gS={kernelName:Ud,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Jm(n.shape,r.shape);return{a:()=>{let t=yy(e,Im(r,"float32")),s=Ym(n.shape,a);return s.length>0?Ky(xb(t,s),n.shape):t},b:()=>{let t=Ay(e,Im(n,"float32")),s=Ym(r.shape,a);s.length>0&&(t=Ky(xb(t,s),r.shape));let i=qb(r);return mb(yy(t,Im(i,"float32")))}}}},yS={kernelName:ep,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yy(e,mb(qb(n)))}}},AS={kernelName:op,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=Ay(rb(n,6),Yx(n));return{x:()=>Ay(e,Im(r,"float32"))}}},bS={kernelName:tp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(e,Im(Yx(n),"float32"))}}},xS={kernelName:np,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ky(e,n.shape)}}},vS={kernelName:sp,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>ff.runKernel(ip,a,n)}}},wS={kernelName:rp,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>ff.runKernel(ap,a,n)}}},kS={kernelName:lp,gradFunc:(e,t,n)=>{let{dims:r}=n,a=pu(r,e.shape);return{x:()=>kx(e,a)}}},IS={kernelName:up,gradFunc:e=>({x:()=>OA(e)})},SS={kernelName:dp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>mb(yy(e,Ay(ox(n,1.5),2)))}}},NS={kernelName:pp,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>Im(OA(n),"float32"),t:()=>Ay(e,Im(n,e.dtype)),e:()=>Ay(e,Im(Mb(n),e.dtype))}}},TS={kernelName:cp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=XA(n,_x(0)),r=_x(ok),a=_x(lk),s=Ay(e,a),i=Ay(Ay(e,r),BA(Im(n,"float32")));return FA(t,s,i)}}}},CS={kernelName:Ap,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(e,Ay(n,bb(_x(1),n)))}}},ES={kernelName:yp,gradFunc:e=>({x:()=>OA(e)})},_S={kernelName:mp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(IA(Im(n,"float32")),e)}}},RS={kernelName:gp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(SA(Im(n,"float32")),e)}}},MS={kernelName:fp,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=Cg(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>ex(e,u)}}},$S={kernelName:Ip,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=Ay(e,r);return{logits:()=>bb(s,Ay(xb(s,[a],!0),r))}}},FS={kernelName:bp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(e,Jy(n))}}},OS={kernelName:wp,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>nA(e,r,a)}}},zS={kernelName:kp,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>Yy(e,r)}}},DS={kernelName:xp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yy(e,Ay(qx(Im(n,"float32")),2))}}},PS={kernelName:Rp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(e,Ay(Im(n,"float32"),2))}}},LS={kernelName:_p,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=_x(2);return{a:()=>Ay(e,Ay(a,bb(n,r))),b:()=>Ay(e,Ay(a,bb(r,n)))}}},WS={kernelName:qp,gradFunc:e=>({x:()=>OA(e)})},BS={kernelName:zp,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Jm(n.shape,r.shape);return{a:()=>{let t=e,r=Ym(n.shape,a);return r.length>0&&(t=xb(t,r)),Ky(t,n.shape)},b:()=>{let t=e,n=Ym(r.shape,a);return n.length>0&&(t=xb(t,n)),Ky(mb(t),r.shape)}}}},US={kernelName:vp,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;pu(s,r.shape).forEach((e=>{a[e]=1}));let i=Ky(e,a),o=Ay(i,Bb(r.shape,"float32"));return{x:()=>o}}},VS={kernelName:Dp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>yy(e,qb(IA(n)))}}},GS={kernelName:Pp,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ay(bb(_x(1),qb(n)),e)}}},jS={kernelName:Lp,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=OA(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=my(t,Qy(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=my(t,Qy(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=my(t,Qy(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=my(t,Qy(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},HS={kernelName:Up,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Cb(a);return{x:()=>qm(e,s)}}},qS={kernelName:Gp,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Zx(e,a)}}},KS={kernelName:jp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=Pb(t,OA(t)),r=KA(e,n),a=ZA(t,_x(0,"int32")),s=r.rank-a.rank;for(let e=0;e<s;++e)a=UA(a,e+1);a=Rb(a,Bb(r.shape,"bool"));let i=OA(r);return FA(a,r,i)}(e,n)}}},XS={kernelName:Hp,gradFunc:e=>({x:()=>OA(e)})},ZS=[Zk,Yk,Jk,Qk,eI,tI,nI,rI,aI,sI,iI,oI,uI,hI,pI,cI,fI,mI,gI,yI,AI,bI,vI,xI,kI,II,SI,NI,TI,CI,gS,EI,_I,RI,MI,$I,OI,FI,zI,DI,WI,BI,UI,VI,GI,jI,HI,qI,KI,ZI,JI,JI,QI,tS,rS,aS,sS,iS,oS,lS,uS,dS,{kernelName:jh,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Wb(n.shape,"float32")}}},hS,pS,cS,cS,fS,mS,yS,AS,bS,xS,vS,wS,kS,IS,SS,NS,TS,CS,ES,_S,RS,MS,$S,FS,OS,OS,zS,zS,DS,LS,PS,WS,BS,US,VS,GS,jS,HS,qS,KS,XS];for(let e of ZS)oc(e);var YS,JS={};function QS(){return null==YS&&(YS=cy().epsilon()),YS}bl(JS,{maxNorm:()=>FN,minMaxNorm:()=>DN,nonNeg:()=>zN,unitNorm:()=>ON});var eN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,eN.prototype)}},tN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tN.prototype)}},nN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nN.prototype)}},rN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rN.prototype)}},aN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,aN.prototype)}};function sN(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function iN(e,t){if(!e)throw new aN(t)}function oN(e,t){let n=0;for(let r of e)r===t&&n++;return n}function lN(e){return 1===e.length?e[0]:e}function uN(e){return Array.isArray(e)?e:[e]}function dN(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function hN(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var pN={};function cN(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function fN(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>fN(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?fN(t):e[n]=t.value)}}}function mN(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in pN)a=pN[s];else if(a=t[s],null==a)throw new nN(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new nN(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in pN?[i,o]=pN.className:l in t&&([i,o]=t[l]),null==i)throw new nN(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(pN))e[t]=pN[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t={...pN};for(let e of Object.keys(n))pN[e]=n[e];fN(s.config);let r=o(i,s.config,n,a);return pN={...t},r}{let e={...pN};for(let e of Object.keys(n))pN[e]=n[e];let t=new i(s.config);return pN={...e},t}}}function gN(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function yN(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function AN(e){if(null==e)throw new nN(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function bN(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new nN(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function xN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return iN(n>=0),iN(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function vN(e,t){Array.isArray(e)?(pc.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>vN(e,`element ${n+1} of ${t}`)))):pc.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${wN(e)}.`))}function wN(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>wN(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function kN(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function IN(e,t){return ny((()=>qx(xb(Ay(e,e),t,!0))))}var SN=class extends Rg.Serializable{getConfig(){return{}}},NN=class extends SN{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ny((()=>{let t=IN(e,this.axis),n=pA(t,0,this.maxValue);return Ay(e,yy(n,my(QS(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};NN.className="MaxNorm",Rg.registerClass(NN);var TN=class extends SN{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ny((()=>yy(e,my(QS(),IN(e,this.axis)))))}getConfig(){return{axis:this.axis}}};TN.className="UnitNorm",Rg.registerClass(TN);var CN=class extends SN{apply(e){return vx(e)}};CN.className="NonNeg",Rg.registerClass(CN);var EN=class extends SN{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ny((()=>{let t=IN(e,this.axis),n=my(Ay(this.rate,pA(t,this.minValue,this.maxValue)),Ay(1-this.rate,t));return Ay(e,yy(n,my(QS(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};EN.className="MinMaxNorm",Rg.registerClass(EN);var _N={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function RN(e){return cN(e)}function MN(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return mN(e,Rg.SerializationMap.getMap().classNameMap,t,"constraint")}function $N(e){return null==e?null:"string"==typeof e?MN({className:e in _N?_N[e]:e,config:{}}):e instanceof SN?e:MN(e)}function FN(e){return new NN(e)}function ON(e){return new TN(e)}function zN(){return new CN}function DN(e){return new EN(e)}var PN={};bl(PN,{constant:()=>HT,glorotNormal:()=>QT,glorotUniform:()=>JT,heNormal:()=>eC,heUniform:()=>tC,identity:()=>ZT,leCunNormal:()=>nC,leCunUniform:()=>rC,ones:()=>jT,orthogonal:()=>aC,randomNormal:()=>KT,randomUniform:()=>qT,truncatedNormal:()=>XT,varianceScaling:()=>YT,zeros:()=>GT});var LN=["channelsFirst","channelsLast"],WN=["nearest","bilinear"],BN=["valid","same","causal"],UN=["max","avg"],VN=["sum","mul","concat","ave"],GN=new Map;function jN(e){bN(LN,"DataFormat",e)}function HN(e){bN(BN,"PaddingMode",e)}function qN(e){bN(UN,"PoolMode",e)}var KN=[];function XN(e,t){KN.push(e);try{let e=t();return KN.pop(),e}catch(e){throw KN.pop(),e}}function ZN(e){if(!QN(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===KN.length?"":KN.join("/")+"/")+e}function YN(e){if(!QN(e))throw new Error("Not a valid tensor name: '"+e+"'");GN.has(e)||GN.set(e,0);let t=GN.get(e);if(GN.set(e,GN.get(e)+1),t>0){let n=`${e}_${t}`;return GN.set(n,1),n}return e}var JN=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function QN(e){return!!e.match(JN)}function eT(e){return e===parseInt(e.toString(),10)}function tT(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function nT(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function rT(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function aT(e,t){if(t<e)throw new nN(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function sT(e,t){return Im(e,t)}function iT(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Ky(e,n)}function oT(e){let t=[tT(e.shape)];return Ky(e,t)}function lT(e,t,n){return ny((()=>{switch(e.rank){case 1:return Dx(e,t,n);case 2:return Px(e,[t,0],[n,e.shape[1]]);case 3:return Lx(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Wx(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Qy(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Qy(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new nN(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function uT(e,t,n){return ny((()=>{switch(e.rank){case 1:return Dx(e,t,n);case 2:return Px(e,[0,t],[e.shape[0],n]);case 3:return Lx(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Wx(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new nN(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function dT(e,t,n,r){return ny((()=>{switch(e.rank){case 1:return Dx(e,t,n);case 2:switch(r){case 1:return lT(e,t,n);case 2:return uT(e,t,n);default:throw new nN(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return lT(e,t,n);case 2:return Lx(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return uT(e,t,n);default:throw new nN(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return lT(e,t,n);case 2:return Wx(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Wx(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return uT(e,t,n);default:throw new nN(`The axis is not within the rank of the tensor ${r}`)}default:throw new nN(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function hT(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),Yy(e,n)}function pT(e,t){switch(e.rank){case 1:return cA([e,t]);case 2:return fA([e,t],0);case 3:return mA([e,t],0);case 4:return gA([e,t],0);default:throw new nN(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function cT(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new nN(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return GA(e,t)}function fT(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;return gx(e,t,n,r,a)}function mT(e,t,n,r){if(e.rank<2||t.rank<2)throw new rN(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new rN(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Sv.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?AT(e.rank,r,"channelsLast"):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=Ky(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Ky(qm(t,d),[l,-1]);let h=[...a,...u],p=!1,c=!1;return Ky(Sv.matMul({a:e,b:t,transposeA:p,transposeB:c,bias:r?AT(e.rank,r,"channelsLast"):null,activation:n}),h)}}function gT(e,t,n){return ny((()=>(t=Array.isArray(t)?ev(t,"int32"):Im(t,"int32"),KA(e,t,n))))}function yT(e){return Ay(e,e)}function AT(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new nN(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Ky(t,[1,r[0],1,1,1]):Ky(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Ky(t,[1,1,1,1,r[0]]):Ky(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Ky(t,[1,r[0],1,1]):Ky(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Ky(t,[1,1,1,r[0]]):Ky(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Ky(t,[1,r[0],1]):Ky(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Ky(t,[1,1,r[0]]):Ky(t,[1].concat(r))}else if(e<3)return t;throw new nN(`Unsupported input rank by biasAdd: ${t.rank}`)}function bT(e,t,n){return ny((()=>(null==n&&(n="channelsLast"),jN(n),my(e,AT(e.rank,t,n)))))}function xT(e,t,n,r){return ny((()=>vv(e,t,n,r)))}function vT(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return n?e():t()}var wT=["fanIn","fanOut","fanAvg"],kT=["normal","uniform","truncatedNormal"],IT=class extends Rg.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},ST=class extends IT{apply(e,t){return Wb(e,t)}};ST.className="Zeros",Rg.registerClass(ST);var NT=class extends IT{apply(e,t){return Bb(e,t)}};NT.className="Ones",Rg.registerClass(NT);var TT=class extends IT{constructor(e){if(super(),"object"!=typeof e)throw new nN(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new nN(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ny((()=>Ay(_x(this.value),Bb(e,t))))}getConfig(){return{value:this.value}}};TT.className="Constant",Rg.registerClass(TT);var CT=class extends IT{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return yx(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};CT.className="RandomUniform",Rg.registerClass(CT);var ET=class extends IT{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new rN(`randomNormal does not support dType ${t}.`);return fT(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};ET.className="RandomNormal",Rg.registerClass(ET);var _T=class extends IT{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new rN(`truncatedNormal does not support dType ${t}.`);return iv(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};_T.className="TruncatedNormal",Rg.registerClass(_T);var RT=class extends IT{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ny((()=>{if(2!==e.length||e[0]!==e[1])throw new nN("Identity matrix initializer can only be used for 2D square matrices.");return Ay(this.gain,jA(e[0]))}))}getConfig(){return{gain:this.gain}}};RT.className="Identity",Rg.registerClass(RT);var MT=class extends IT{constructor(e){if(super(),e.scale<0)throw new nN(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){bN(wT,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){bN(kT,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(jN(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){let r=tT(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){let r=tT(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{let r=tT(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new rN(`${this.getClassName()} does not support dType ${t}.`);return iv(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return yx(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};MT.className="VarianceScaling",Rg.registerClass(MT);var $T=class extends MT{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return MT.className}};$T.className="GlorotUniform",Rg.registerClass($T);var FT=class extends MT{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return MT.className}};FT.className="GlorotNormal",Rg.registerClass(FT);var OT=class extends MT{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return MT.className}};OT.className="HeNormal",Rg.registerClass(OT);var zT=class extends MT{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return MT.className}};zT.className="HeUniform",Rg.registerClass(zT);var DT=class extends MT{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return MT.className}};DT.className="LeCunNormal",Rg.registerClass(DT);var PT=class extends MT{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return MT.className}};PT.className="LeCunNormal",Rg.registerClass(PT);var LT=class extends IT{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new rN("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return ny((()=>{if(e.length<2)throw new rN("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let t=fT(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32"),n=Fw.gramSchmidt(t);return e[0]>e[1]&&(n=qm(n)),Ay(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};LT.className="Orthogonal",Rg.registerClass(LT);var WT={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function BT(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return mN(e,Rg.SerializationMap.getMap().classNameMap,t,"initializer")}function UT(e){return cN(e)}function VT(e){if("string"==typeof e){let t=e in WT?WT[e]:e;if("GlorotNormal"===t)return new FT;if("GlorotUniform"===t)return new $T;if("HeNormal"===t)return new OT;if("HeUniform"===t)return new zT;if("LeCunNormal"===t)return new DT;if("LeCunUniform"===t)return new PT;{let e={};return e.className=t,e.config={},BT(e)}}return e instanceof IT?e:BT(e)}function GT(){return new ST}function jT(){return new NT}function HT(e){return new TT(e)}function qT(e){return new CT(e)}function KT(e){return new ET(e)}function XT(e){return new _T(e)}function ZT(e){return new RT(e)}function YT(e){return new MT(e)}function JT(e){return new $T(e)}function QT(e){return new FT(e)}function eC(e){return new OT(e)}function tC(e){return new zT(e)}function nC(e){return new DT(e)}function rC(e){return new PT(e)}function aC(e){return new LT(e)}var sC={};bl(sC,{Layer:()=>IC,RNN:()=>tR,RNNCell:()=>nR,activation:()=>IM,add:()=>$M,alphaDropout:()=>k$,average:()=>FM,averagePooling1d:()=>VM,averagePooling2d:()=>HM,averagePooling3d:()=>XM,avgPool1d:()=>GM,avgPool2d:()=>qM,avgPool3d:()=>ZM,avgPooling1d:()=>jM,avgPooling2d:()=>KM,avgPooling3d:()=>YM,batchNormalization:()=>WM,bidirectional:()=>m$,concatenate:()=>OM,conv1d:()=>mM,conv2d:()=>gM,conv2dTranspose:()=>yM,conv3d:()=>AM,conv3dTranspose:()=>bM,convLstm2d:()=>h$,convLstm2dCell:()=>p$,cropping2D:()=>vM,dense:()=>SM,depthwiseConv2d:()=>kM,dot:()=>LM,dropout:()=>NM,elu:()=>uM,embedding:()=>MM,flatten:()=>CM,gaussianDropout:()=>w$,gaussianNoise:()=>v$,globalAveragePooling1d:()=>JM,globalAveragePooling2d:()=>QM,globalMaxPool1d:()=>y$,globalMaxPool2d:()=>A$,globalMaxPooling1d:()=>e$,globalMaxPooling2d:()=>t$,gru:()=>s$,gruCell:()=>i$,input:()=>JE,inputLayer:()=>lM,layerNormalization:()=>BM,leakyReLU:()=>hM,lstm:()=>o$,lstmCell:()=>l$,masking:()=>I$,maxPool1d:()=>b$,maxPool2d:()=>x$,maxPooling1d:()=>n$,maxPooling2d:()=>r$,maxPooling3d:()=>a$,maximum:()=>zM,minimum:()=>DM,multiply:()=>PM,permute:()=>RM,prelu:()=>pM,reLU:()=>dM,repeatVector:()=>EM,reshape:()=>_M,rnn:()=>c$,separableConv2d:()=>xM,simpleRNN:()=>u$,simpleRNNCell:()=>d$,softmax:()=>cM,spatialDropout1d:()=>TM,stackedRNNCells:()=>f$,thresholdedReLU:()=>fM,timeDistributed:()=>g$,upSampling2d:()=>wM,zeroPadding2d:()=>UM});var iC=0;function oC(){return iC++}var lC={};function uC(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in lC||(lC[e]=0),lC[e]+=1,e+lC[e].toString()}function dC(e){return Array.isArray(e)&&Array.isArray(e[0])}function hC(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function pC(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new nN(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function cC(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new nN(`Expected exactly 1 Shape; got ${e.length}`)}return e}function fC(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var mC="Variable",gC=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:mC,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=oC(),n=null==n?mC:n,this.originalName=ZN(n),this.name=YN(this.originalName),this.trainable_=r,this.constraint=a,this.val=dv(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function yC(e){return e.map((e=>e.read()))}function AC(e){e.forEach((e=>{e[0].write(e[1])}))}var bC=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},xC=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=oC(),null!=s&&(this.originalName=ZN(s),this.name=YN(this.originalName)),this.rank=t.length}},vC=0,wC=class{constructor(e,t){this.callArgs=t,this.id=vC++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},kC=0,IC=class extends Rg.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=kC++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=dN(e)+"_"+uC(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new tN(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new nN(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return lN(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return lN(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new eN(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new eN(`Layer ${this.name} is not connected, no input to return.`);return lN(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new eN(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new eN(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return lN(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=uN(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=uN(this.inputSpec);if(e.length!==t.length)throw new nN(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new nN(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new nN(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new nN(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new nN(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new nN(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new nN(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=uN(e),r=!0;for(let e of n)if(!(e instanceof xC)){r=!1;break}let a=!0;for(let e of n)if(e instanceof xC){a=!1;break}if(r===a)throw new nN("Arguments to apply() must be all SymbolicTensors or all Tensors");return XN(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of uN(e))t.push(n.shape);this.build(lN(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=uN(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=lN(s),null!=this.activityRegularizer)throw new rN("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=uN(e);let t=[];for(let n of e)t.push(n.shape);return lN(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new xC(s,n,this,uN(e),t,this.name,r))):new xC(s,a,this,uN(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new rN("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new eN(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new eN(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new tN(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return fC(this.weights)}build(e){this.built=!0}getWeights(){return yC(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){ny((()=>{let t=this.weights;if(t.length!==e.length)throw new nN(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=yC(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!pc.arraysEqual(s.shape,o.shape))throw new nN(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}AC(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new nN(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():VT("zeros"));let l=r.apply(t,n),u=new gC(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=uN(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=uN(e);t=uN(t),n=uN(n),r=uN(r),a=hC(a),s=hC(s);let l=[],u=[],d=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),d.push(e.tensorIndex);new wC({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function SC(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=SC(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var NC=class extends IC{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:uC("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new nN("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new nN("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new nN("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new xC(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new wC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new nN(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function TC(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new nN("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new NC({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function CC(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];ry(r)}}function EC(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}NC.className="InputLayer",Rg.registerClass(NC);var _C=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},RC=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},MC=class extends _C{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=ny((()=>my(this.totals[e],Ay(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:ny((()=>{let n=Ay(yy(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ay(t[e])})))}},$C=class extends _C{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},FC=class extends _C{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Xw,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");pc.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():pc.now();return function(){let s=null!=n?n():pc.now();return s-a<t||(a=s,r=e(...arguments)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await CC(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await CC(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await CC(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await CC(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await CC(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):pc.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await CC(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await CC(e),await this.trainEnd(e))}};function OC(e,t){return null==e&&(e={}),e instanceof _C?[e]:Array.isArray(e)&&e[0]instanceof _C?e:uN(e).map((e=>new FC(e,t)))}var zC=class{constructor(){}static registerCallbackConstructor(e,t){pc.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),zC.checkForDuplicate(t),null==zC.constructors[e]&&(zC.constructors[e]=[]),zC.constructors[e].push(t)}static checkForDuplicate(e){for(let t in zC.constructors)zC.constructors[+t].forEach((t=>{if(t===e)throw new nN("Duplicate callback constructor.")}))}static clear(){zC.constructors={}}static createCallbacks(e){let t=[];for(let n in zC.constructors){let r=+n;e>=r&&t.push(...zC.constructors[r])}return t.map((e=>new e))}},DC=zC;function PC(e,t,n,r,a,s,i,o,l){let u=new $C,d=[new MC,...DC.createCallbacks(t)];null!=e&&d.push(...e),d.push(u);let h=new RC(d);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function LC(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return mN(e,Rg.SerializationMap.getMap().classNameMap,t,"layer",n)}function WC(e,t){return ny((()=>{"float32"!==e.dtype&&(e=Im(e,"float32"));let n=xb(yT(e),t,!0),r=HA(n.shape,QS()),a=qx(Pb(n,r));return yy(e,a)}))}function BC(e,t){return ny((()=>Lb(yT(bb(t,e)),-1)))}function UC(e,t){return ny((()=>Lb(by(bb(t,e)),-1)))}function VC(e,t){return ny((()=>{let n=bb(e,t),r=pA(by(e),QS(),Number.MAX_VALUE),a=by(yy(n,r));return Ay(100,Lb(a,-1))}))}function GC(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ny((()=>{if(n)t=Bx(t);else{let e=xb(t,t.shape.length-1,!0);t=yy(t,e)}return t=pA(t,QS(),1-QS()),mb(xb(Ay(Im(e,"float32"),ib(t)),t.shape.length-1))}))}function jC(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ny((()=>{let r=Im(qA(oT(e)),"int32"),a=(t=pA(t,QS(),1-QS())).shape;return GC(Ky(Hm(r,a[a.length-1]),a),t,n)}))}function HC(e,t){return ny((()=>{let n;return n=pA(t,QS(),1-QS()),n=ib(yy(n,bb(1,n))),Lb(function(e,t){if(!pc.arraysEqual(e.shape,t.shape))throw new nN(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ny((()=>{let n=vx(t),r=mb(by(t));return my(bb(n,Ay(t,e)),ob(BA(r)))}))}(e,n),-1)}))}function qC(e,t){return ny((()=>{let n=WC(e,-1),r=WC(t,-1),a=Ay(n,r);return mb(xb(a,-1))}))}DC.constructors={};var KC={meanSquaredError:BC,meanAbsoluteError:UC,meanAbsolutePercentageError:VC,meanSquaredLogarithmicError:function(e,t){return ny((()=>{let n=pA(t,QS(),Number.MAX_VALUE),r=ib(my(1,n)),a=pA(e,QS(),Number.MAX_VALUE),s=ib(my(1,a));return Lb(yT(bb(r,s)),-1)}))},squaredHinge:function(e,t){return ny((()=>{let n=Pb(0,bb(1,Ay(e,t)));return Lb(yT(n),-1)}))},hinge:function(e,t){return ny((()=>{let n=Pb(0,bb(1,Ay(e,t)));return Lb(n,-1)}))},categoricalHinge:function(e,t){return ny((()=>{let n=xb(Ay(e,t),-1),r=Ab(Ay(bb(1,e),t),-1);return Pb(0,my(1,bb(r,n)))}))},logcosh:function(e,t){return ny((()=>{let n=Math.log(2),r=bb(t,e),a=bb(my(r,gb(Ay(-2,r))),n);return Lb(a,-1)}))},categoricalCrossentropy:GC,sparseCategoricalCrossentropy:jC,binaryCrossentropy:HC,kullbackLeiblerDivergence:function(e,t){return ny((()=>{let n=pA(e,QS(),1),r=pA(t,QS(),1);return xb(Ay(e,ib(yy(n,r))),-1)}))},poisson:function(e,t){return ny((()=>{let n=ib(my(QS(),t));return Lb(bb(t,Ay(e,n)),-1)}))},cosineProximity:qC};function XC(e){if("string"==typeof e){if(e in KC)return KC[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new nN(t)}return e}function ZC(e,t){return ny((()=>{let n=Ay(.5,Jb(t)),r=sT(XA(t,n),e.dtype);return Lb($A(e,r),-1)}))}function YC(e,t){return ny((()=>sT($A(Sy(e,-1),Sy(t,-1)),"float32")))}function JC(e,t){return ny((()=>Im(xb(Rb($A(e,1),$A(t,1))),"float32")))}function QC(e,t){return ny((()=>{let n=JC(e,t),r=function(e,t){return ny((()=>Im(xb(Rb($A(e,0),$A(t,1))),"float32")))}(e,t),a=my(n,r);return Im(FA(XA(a,0),yy(n,a),0),"float32")}))}function eE(e,t){return HC(e,t)}function tE(e,t){return e.rank===t.rank&&(e=Xx(e,[e.rank-1])),(t=Sy(t,-1)).dtype!==e.dtype&&(t=Im(t,e.dtype)),Im($A(e,t),"float32")}var nE=GC,rE=jC,aE={binaryAccuracy:ZC,categoricalAccuracy:YC,precision:QC,categoricalCrossentropy:nE,sparseCategoricalCrossentropy:rE,mse:BC,MSE:BC,mae:UC,MAE:UC,mape:VC,MAPE:VC,cosine:qC};function sE(e){if("string"==typeof e&&e in aE)return aE[e];if("string"!=typeof e&&null!=e)return e;throw new nN(`Unknown metric ${e}`)}function iE(e){if(iN(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(KC))if(KC[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(aE))if(aE[n]===e){t=n;break}return void 0!==t?t:e.name}}var oE=1048576;function lE(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!uE(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>oE&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${oE}.`)}}function uE(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!uE(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!uE(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function dE(e){let t;return t=null!=e.collectedTrainableWeights?fC(e.collectedTrainableWeights):fC(e.trainableWeights),t}function hE(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}function pE(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function cE(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}pE([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function fE(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];pE([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)pE(["","","","",i[e]],t,r)}function mE(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function gE(e,t){if(null===e)return null;if("string"==typeof e)return hN(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];mE(t,a,r)?n.push(r):n.push(gE(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=hN(n);t[e]=gE(r,e)}}return t}}function yE(e,t){if(null==e)return null;if("string"==typeof e)return dN(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];mE(t,a,r)?n.push(r):n.push(yE(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];t[dN(n)]="name"!==n&&"className"!==n||"string"!=typeof r?yE(r,n):r}return t}}var AE="0.0.0",bE=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof bE)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new nN(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Im(t,e.dtype)}catch(n){throw new nN(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof xC){if(null==this.id2Value[e.id])throw new nN(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new nN(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof xC){if(null==this.id2Value[e.id])throw new nN(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new nN(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ry(this.id2Mask)}},xE={},vE={};function wE(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let d,h,p=o.join(",")+"|"+t.names().join(",");if(null==xE[p]){let e=function(e,t){pc.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=IE(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=IE(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:kE(r)}}(i,t);d=e.sorted,h=e.recipientCounts,xE[p]=d,vE[p]=h}d=xE[p],h={},a||Object.assign(h,vE[p]);let c=new bE(t);for(let e=0;e<d.length;++e){if(null!=r){let e=ey().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=d[e],i=s.sourceLayer;if(i instanceof NC)continue;let u=[],p=[],f=[],m=!1;for(let e of s.inputs){let n=c.getValue(e),r=c.getMask(e);u.push(n),p.push(r),null!=r&&(m=!0),a||(h[e.name]--,0===h[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=p[0]);let g=uN(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,p));let A=SE(s),b=Array.isArray(A)?A:[A];for(let e=0;e<b.length;++e){c.hasKey(b[e])||c.add(b[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(b[e].name);-1!==t&&(l[t]=g[e])}a||ry(f)}return c.disposeMasks(),s?l:l[0]}function kE(e){let t={};for(let n in e)t[n]=e[n].size;return t}function IE(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function SE(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var NE=class extends IC{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=uC(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],yN(this.inputs).length!==this.inputs.length)throw new nN(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);yN(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;iN(0===n,"input layer has >1 nodes"),iN(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof NC))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new tN(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(NE.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let d=u.inboundLayers.length;for(let e=0;e<d;e++){let r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let d=i.slice().reverse();for(let e of d){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let h={};for(let e in t){let r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}let p={};for(let e in r){let t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let c=Object.keys(p).map((e=>parseInt(e,10))).sort(gN);this.layers=[];for(let e of c){let t=p[e];t.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let e of t)e instanceof NE&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,c=Object.keys(h).map((e=>parseInt(e,10))).sort(gN);let f=this.inputs.slice(),m=[];for(let e of c)for(let t of h[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new tN(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new tN(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new wC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new nN("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n={},r=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new nN(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}let a=[];for(let r in e){let s=r;if(null==n[r]){let e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new nN(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new nN(`${e.length} of ${r} weights are not set: ${e}`)}AC(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${AE}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=yE(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ny((()=>{e=uN(e);let n=new bE;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return wE(this.outputs,n,t)}))}computeMask(e,t){return ny((()=>{let n;return e=uN(e),n=null==t?sN(null,e.length):uN(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=hC(e);if(t.length!==this.inputLayers.length)throw new nN(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(gN);if(r.length>1)for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let r=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=hC(t.computeOutputShape(lN(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];iN(t in n),a.push(n[t])}return lN(a)}runInternalGraph(e,t){null==t&&(t=sN(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(gN);for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=uN(t.call(e,u)),l=uN(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=uN(t.call(r,u)),l=uN(t.computeMask(r,i));if(t.activityRegularizer)throw new rN("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){iN(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof NE?1:0;for(let r=0;r<e.inboundNodes.length;r++){let a=NE.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new nN(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new nN("Provide either a layer name or layer index");for(let t of this.layers)if(t.name===e)return t;throw new nN(`No such layer: ${e}`)}calculateLosses(){return ny((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=NE.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=NE.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[NE.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=NE.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=NE.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={},a={};function s(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function i(e,t){let n,a=[];for(let i of t){let o=i[0],l=i[1],u=i[2];if(n=null==i[3]?{}:i[3],!(o in r))return void s(e,t);let d=r[o];if(d.inboundNodes.length<=l)return void s(e,t);let h=d.inboundNodes[l];a.push(h.outputTensors[u])}a.length>0&&e.apply(lN(a),n)}function o(e){let a=e.name,i=LC(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),r[a]=i,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new nN(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}let l=t.name,u=t.layers;for(let e of u)o(e);for(;!AN(a);)for(let e of u){let t=r[e.name];if(t.name in a){let e=a[t.name];delete a[t.name];for(let n of e)i(t,n)}}let d=[],h=[],p=t.inputLayers;for(let e of p){let t=e[0],n=e[1],a=e[2];iN(t in r);let s=r[t].inboundNodes[n].outputTensors;d.push(s[a])}let c=t.outputLayers;for(let e of c){let t=e[0],n=e[1],a=e[2];iN(t in r);let s=r[t].inboundNodes[n].outputTensors;h.push(s[a])}return new e({inputs:d,outputs:h,name:l})}get stateful(){if(this._stateful)throw new nN("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ny((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function TE(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function CE(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=ny((()=>{if(1===e.shape.length)return Sm(e);if(2===e.shape.length){if(e.shape[1]>1)return Sy(e,1);if(1===e.shape[1])return Ky(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());ry(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),ev(a,"float32")}return null}function EE(e,t){return Ay(e,t)}function _E(e,t){let n,r,a=t;n=a.xs,r=a.ys,pc.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=RE("input",e.inputNames,n),i=RE("output",e.outputNames,r),o=s[0].shape[0];pc.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),pc.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)pc.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)pc.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function RE(e,t,n){if(n instanceof jc)return[n];if(Array.isArray(n))return pc.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new nN(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function ME(e){return"function"==typeof e.iterator}function $E(e){pc.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function FE(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>lT(e,t,n-t))):lT(e,t,n-t)}function OE(e,t){return ny((()=>null==e?null:Array.isArray(e)?e.map((e=>OE(e,t))):gT(e,"int32"===t.dtype?t:Im(t,"int32"))))}function zE(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function DE(e,t,n,r,a,s,i,o,l,u,d,h,p,c,f){null==a&&(a=32),null==s&&(s=1),null==d&&(d=!0),null==p&&(p=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==c))throw new nN("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g,y=e.checkNumSamples(n,a,c,"steps_per_epoch");null!=y&&(g=aT(0,y)),null==i&&(i=1);let{callbackList:A,history:b}=PC(o,i,s,p,y,c,a,m,h);A.setModel(e),e.history=b,await A.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<s;++i){await A.onEpochBegin(i);let s={};if(null!=c)throw new rN("stepsPerEpoch mode is not implemented yet.");{if("batch"===d)throw new rN("batch shuffling is not implemneted yet");d&&pc.shuffle(g);let i=ev(g),o=zE(y,a);for(let d=0;d<o.length;++d){let h={};if(await A.onBatchBegin(d,h),ny((()=>{let p=o[d][0],c=o[d][1],f=lT(i,p,c-p);h.batch=d,h.size=c-p;let g=OE(n,f),y=t(g);for(let e=0;e<r.length;++e){let t=r[e],n=y[e];h[t]=n,ay(n)}if(d===o.length-1&&m){let t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){let n=r[e],a=t[e];ay(a),s["val_"+n]=a}}})),await A.onBatchEnd(d,h),EC(h),e.stopTraining_)break}i.dispose()}if(await A.onEpochEnd(i,s),e.stopTraining_)break}return await A.onTrainEnd(),await e.history.syncData(),e.history}function PE(e){let t=[];e instanceof jc&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(iT(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function LE(e,t){if(null==e)return;let n=[];if(t instanceof jc)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof jc)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function WE(e){return Array.isArray(e)}function BE(e){return!function(e){return e instanceof jc}(e)&&!WE(e)}function UE(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(WE(e)&&e.length>0)t=!0;else if(BE(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new nN(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(BE(e)){e=e,r=[];for(let n of t){if(null==e[n])throw new nN(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(WE(e)){if((e=e).length!==t.length)throw new nN(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(e=e,t.length>1)throw new nN(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=PE(r),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=r[e];if(i.shape.length!==n[e].length)throw new nN(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;let r=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&r!==o)throw new nN(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return r}function VE(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new nN(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new nN(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=r[e];if(i.shape.length!==n[e].length)throw new nN(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let r=0;r<n[e].length;++r){if(0===r&&!a)continue;let o=i.shape[r],l=n[e][r];if(null!=l&&l!==o)throw new nN(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var GE=class extends NE{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new nN("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log,s=hE(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),r=[];for(let t in e.nodesByDepth)r.push(...e.nodesByDepth[t])}a("_".repeat(t)),pE(i,n,a),a("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?cE(o[e],n,a):fE(o[e],n,r,a),a((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=dE(e),u=fC(e.nonTrainableWeights);a(`Total params: ${l+u}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${u}`),a("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>qw.adagrad(.01),Adadelta:()=>qw.adadelta(1,.95,QS()),Adam:()=>qw.adam(.001,.9,.999,QS()),Adamax:()=>qw.adamax(.002,.9,.999,QS(),0),RMSProp:()=>qw.rmsprop(.001,.9,0,QS()),SGD:()=>qw.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new nN(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Pw))throw new nN("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new nN(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>XC(e)))}else{let n=XC(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new nN(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(XC(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],XN("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};XN("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===HC?-1!==["accuracy","acc"].indexOf(i)?r=ZC:-1!==["crossentropy","ce"].indexOf(i)&&(r=eE):this.lossFunctions[e]===jC?-1!==["accuracy","acc"].indexOf(i)?r=tE:-1!==["crossentropy","ce"].indexOf(i)&&(r=rE):-1!==["accuracy","acc"].indexOf(i)?r=YC:-1!==["crossentropy","ce"].indexOf(i)&&(r=nE),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=sE(i),n=""+iE(i);let t;XN(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=null==n.batchSize?32:n.batchSize;$E(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let s=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction;return lN(this.testLoop(i,s,r,n.verbose,n.steps))}finally{LE(a[0],e),LE(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new rN("Verbose mode is not implemented yet.");pc.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=ny((()=>{if(t.value){let{xs:n,ys:r}=_E(e,t.value),i=n.concat(r),u=ny((()=>a(i)));if(ry(i),0===l)for(let e=0;e<u.length;++e)s.push(_x(0));let d=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=ny((()=>my(s[e],Ay(d,t)))),l>0&&ry(n)}ry(u),o+=d,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=yy(s[e],o),ry(t)}return lN(s)}(this,e,t)}checkNumSamples(e,t,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new nN(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new nN(`Either the input data should have a defined shape, or ${a} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new nN("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new bE;if(e instanceof jc&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new nN(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new nN(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=wE(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=sN(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new nN(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ny((()=>{let r=this.checkNumSamples(e);if(n)throw new rN("Verbose predictLoop() is not implemented yet.");let a=zE(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)ny((()=>{let n=a[t][0],r=a[t][1],s=FE(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new bE(i);return wE(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return lN(s.map((e=>Yy(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=PE(e);VE(n,this.inputNames,this.feedInputShapes,!1);try{let r=null==t.batchSize?32:t.batchSize;return $E(r),this.predictLoop(n,r)}finally{LE(n,e)}}predictOnBatch(e){VE(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new tN("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===jC?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){let r=yN(e.map((e=>e.shape[0])));r.sort();let a=yN(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new nN(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new nN(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!pc.arraysEqual(r,a))throw new nN(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=UE(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=UE(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){let r=[BC,HC,GC];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===GC&&1===s.shape[s.shape.length-1])throw new nN(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new nN(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!=0)throw new nN(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0,[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=TE(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await CE(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4?arguments[4]:void 0;return ny((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new rN("Verbose mode is not implemented yet.");if(null!=a)throw new rN("steps mode in testLoop() is not implemented yet");{let r=zE(s,n),a=ev(aT(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=lT(a,s,o-s),u=OE(t,l),d=e(u);if(0===n)for(let e=0;e<d.length;++e)i.push(_x(0));for(let e=0;e<d.length;++e){let t=d[e];i[e]=my(i[e],Ay(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=yy(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;oN(e,r)>1&&(a+=`_${oN(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new bE(e),l=wE(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=this.lossFunctions[e](r[e],l[e]);null!=a[e]&&(n=EE(n,a[e]));let s=Lb(n);t.push(s),i=0===e?n:my(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Lb(t(r[a],l[a]))}ay(n),s.push(n)}return i=Lb(i),this.calculateLosses().forEach((e=>{i=my(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>ny((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new bE(s),o=wE(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=Lb(r(a[e],o[e]));t=0===e?s:my(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Lb(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t){return async function(e,t,n){let r,a,s,i,o,l,u,d,h,p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let c=null==p.batchSize?32:p.batchSize;$E(c);let f=!1,m=await e.standardizeUserData(t,n,p.sampleWeight,p.classWeight,f,c);r=m[0],a=m[1],h=m[2];let g,y=!1;if(null!=p.validationData&&p.validationData.length>0){if(y=!0,2!==p.validationData.length)throw 3===p.validationData.length?new rN("validationData including sample weights is not supported yet."):new nN(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${p.validationData} is invalid.`);o=p.validationData[0],l=p.validationData[1];let t=!0,n=await e.standardizeUserData(o,l,null,null,t,c);u=n[0],d=n[1],g=u.concat(d)}else if(null!=p.validationSplit&&p.validationSplit>0&&p.validationSplit<1){y=!0;let e=Math.floor(r[0].shape[0]*(1-p.validationSplit)),t=r[0].shape[0];u=FE(r,e,t),s=r,r=FE(r,0,e),d=FE(a,e,t),i=a,a=FE(a,0,e),g=u.concat(d)}else null!=p.validationSteps&&(y=!0);let A=r.concat(a).concat(h);e.checkTrainableWeightsConsistency();let b,x,v=e.makeTrainFunction(),w=e.getDedupedMetricsNames();y?(e.makeTestFunction(),b=e.testFunction,x=w.slice().concat(w.map((e=>"val_"+e)))):(b=null,g=[],x=w.slice());let k=OC(p.callbacks,p.yieldEvery);return await DE(e,v,A,w,c,p.epochs,p.verbose,k,b,g,p.shuffle,x,p.initialEpoch,null,null)}finally{e.isTraining=!1,LE(r,t),LE(a,n),LE(s,t),LE(i,n),LE(u,o),LE(d,l),null!=h&&ry(h)}}(this,e,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}async fitDataset(e,t){return async function(e,t,n){let r=null!=n.batchesPerEpoch;if(pc.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),pc.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),pc.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),pc.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),pc.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(ME(n.validationData))pc.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new rN("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let d=OC(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:c}=PC(d,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);p.setModel(e),e.history=c,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await p.onEpochBegin(f);let d=0,h=0;for(r||(m=await t.iterator());!r||d<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=_E(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);let i=[];if(null!=n.classWeight){let t=TE(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await CE(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);ry(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,ay(n)}await p.onBatchEnd(h,s),EC(s),h++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(i){let t;t=ME(n.validationData)?uN(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):uN(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,o),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return ry(s),LE(n[0],e),LE(n[1],t),lN(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=ey().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ey().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=dN(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>dN(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=dN(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[dN(iE(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>dN(iE(e))));{let e={};for(let t in this.metrics)e[t]=dN(iE(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=LC(gE(e.optimizer_config));if("string"==typeof e.loss)t=hN(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>hN(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=hN(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>hN(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=hN(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=Tm.getSaveHandlers(e);if(0===t.length)throw new nN(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new nN(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new nN("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Tm.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${AE}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await Tm.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Tm.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(lE(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){lE(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};GE.className="Model",Rg.registerClass(GE);var jE=class extends GE{};async function HE(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);let r=LC(gE(n),t);if(null!=e.weightsManifest){let t=await Tm.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),ry(t)}return r}jE.className="Functional",Rg.registerClass(jE);var qE=class extends GE{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:uC("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new nN(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof qE||e instanceof GE;if(n){if(t=e,1!==t.outputs.length)throw new nN("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new nN("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new nN("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=TC({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new nN(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new nN("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=SC(this.outputs[0])}this.inboundNodes=[],new wC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:sN(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(cC(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new GE({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new tN("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new tN("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new tN("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new tN("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new nN("Legacy serialization format not supported yet.");n=t}else pc.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,a=t;let s=new e(a);if(!(s instanceof qE))throw new rN(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(let e of n){let t=LC(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(e){if(null==this.model)throw new nN("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new nN("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},KE=qE;function XE(e){return new GE(e)}function ZE(e){return new KE(e)}function YE(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){let n=Tm.getLoadHandlers(e,t);if(0===n.length)n.push(Tm.browserHTTPRequest(e,t));else if(n.length>1)throw new nN(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new nN("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=LC(gE(a),void 0,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new nN("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=Tm.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),ry(e),ry(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function JE(e){return TC(e)}function QE(e,t){DC.registerCallbackConstructor(e,t)}KE.className="Sequential",Rg.registerClass(KE);var e_=class extends Rg.Serializable{getConfig(){return{}}},t_=class extends e_{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new rN(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return LA(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}};t_.className="elu",Rg.registerClass(t_);var n_=class extends e_{apply(e){return Rx(e)}};n_.className="selu",Rg.registerClass(n_);var r_=class extends e_{apply(e){return vx(e)}};r_.className="relu",Rg.registerClass(r_);var a_=class extends e_{apply(e){return ny((()=>Gb(6,vx(e))))}};a_.className="relu6",Rg.registerClass(a_);var s_=class extends e_{apply(e){return e}};s_.className="linear",Rg.registerClass(s_);var i_=class extends e_{apply(e){return Jy(e)}};i_.className="sigmoid",Rg.registerClass(i_);var o_=class extends e_{apply(e){return function(e){return ny((()=>{let t=my(.5,Ay(.2,e));return pA(t,0,1)}))}(e)}};o_.className="hardSigmoid",Rg.registerClass(o_);var l_=class extends e_{apply(e){return gb(e)}};l_.className="softplus",Rg.registerClass(l_);var u_=class extends e_{apply(e){return function(e){return ny((()=>yy(e,my(by(e),1))))}(e)}};u_.className="softsign",Rg.registerClass(u_);var d_=class extends e_{apply(e){return eA(e)}};d_.className="tanh",Rg.registerClass(d_);var h_=class extends e_{apply(e){return Bx(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}};h_.className="softmax",Rg.registerClass(h_);var p_=class extends e_{apply(e){return vb(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}};p_.className="logSoftmax",Rg.registerClass(p_);var c_=class extends e_{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return ny((()=>Ay(Jy(Ay(e,t)),e)))}};c_.className="swish",Rg.registerClass(c_);var f_=class extends e_{apply(e){return ny((()=>Ay(e,eA(gb(e)))))}};function m_(e){return e.getClassName()}function g_(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return mN(e,Rg.SerializationMap.getMap().classNameMap,t,"activation")}function y_(e){if(null==e){return g_({className:"linear",config:{}})}if("string"==typeof e){let t={};return t.className=e,t.config={},g_(t)}return e instanceof e_?e:g_(e)}function A_(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}f_.className="mish",Rg.registerClass(f_);var b_=class extends Rg.Serializable{},x_=class extends b_{constructor(e){super(),A_(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ny((()=>{let t=Wb([1]);return this.hasL1&&(t=my(t,xb(Ay(this.l1,by(e))))),this.hasL2&&(t=my(t,xb(Ay(this.l2,yT(e))))),Ky(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};x_.className="L1L2",Rg.registerClass(x_);var v_={l1l2:"L1L2"};function w_(e){return cN(e)}function k_(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return mN(e,Rg.SerializationMap.getMap().classNameMap,t,"regularizer")}function I_(e){return null==e?null:"string"==typeof e?k_({className:e in v_?v_[e]:e,config:{}}):e instanceof b_?e:k_(e)}var S_=class extends IC{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=pC(e);let n=vx(e);return null!=this.maxValue&&(n=pA(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};S_.className="ReLU",Rg.registerClass(S_);var N_=class extends IC{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=pC(e);return tb(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};N_.className="LeakyReLU",Rg.registerClass(N_);var T_=class extends IC{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=VT(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=I_(e.alphaRegularizer),this.alphaConstraint=$N(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new nN(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=cC(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new bC({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=pC(e),lx(e,this.alpha.read())}getConfig(){let e={alphaInitializer:UT(this.alphaInitializer),alphaRegularizer:w_(this.alphaRegularizer),alphaConstraint:RN(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};T_.className="PReLU",Rg.registerClass(T_);var C_=class extends IC{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new rN(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=pC(e);return LA(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};C_.className="ELU",Rg.registerClass(C_);var E_=class extends IC{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=pC(e);return Ay(n,Im(XA(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};E_.className="ThresholdedReLU",Rg.registerClass(E_);var __=class extends IC{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new h_).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=pC(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function R_(e,t,n){if("number"==typeof e)return sN(e,t);if(e.length!==t)throw new nN(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!eT(a))throw new nN(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function M_(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(null==e)return e;let s,i=t+(t-1)*(a-1);return s="same"===n?e:e-i+1,Math.floor((s+r-1)/r)}function $_(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+rT([n-t,0]);else{if("same"!==r)throw new nN(`Unsupport padding mode: ${r}.`);e*=t}return e}function F_(e,t){return ny((()=>(jN(t),"channelsFirst"===t?qm(e,[0,2,3,1]):e)))}function O_(e,t){return ny((()=>(jN(t),"channelsFirst"===t?qm(e,[0,2,3,4,1]):e)))}function z_(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return ny((()=>{if(null==s&&(s="channelsLast"),jN(s),3!==e.rank&&4!==e.rank)throw new nN(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new nN(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=F_(e,s);if("causal"===a)throw new rN("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Sv.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=qm(l,[0,3,1,2])),l}))}__.className="Softmax",Rg.registerClass(__);var D_=class extends IC{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",D_.verifyArgs(t),this.rank=e,vN(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new rN(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=R_(t.kernelSize,e,"kernelSize"),this.strides=R_(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,HN(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,jN(this.dataFormat),this.activation=y_(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=VT(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=$N(t.biasConstraint),this.biasRegularizer=I_(t.biasRegularizer),this.activityRegularizer=I_(t.activityRegularizer),this.dilationRate=R_(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new nN(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new nN(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new nN(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(iN("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!xN(e.kernelSize,"number",1,3))throw new nN(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:m_(this.activation),useBias:this.useBias,biasInitializer:UT(this.biasInitializer),biasRegularizer:w_(this.biasRegularizer),activityRegularizer:w_(this.activityRegularizer),biasConstraint:RN(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},P_=class extends D_{constructor(e,t){super(e,t),this.kernel=null,P_.verifyArgs(t),this.filters=t.filters,vN(this.filters,"filters"),this.kernelInitializer=VT(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=$N(t.kernelConstraint),this.kernelRegularizer=I_(t.kernelRegularizer)}build(e){e=cC(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new nN(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ny((()=>{e=pC(e);let t,n=null==this.bias?null:this.bias.read(),r=kN(this.activation.getClassName());if(null!=r&&2===this.rank)t=z_(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return ny((()=>{if(null==s&&(s="channelsLast"),jN(s),3!==e.shape.length)throw new nN(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new nN(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new nN(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=qm(e,[0,2,1])),"causal"===a)throw new rN("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=AA(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=bT(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=z_(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new rN("convolutions greater than 3D are not implemented yet.");t=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return ny((()=>{if(null==s&&(s="channelsLast"),jN(s),4!==e.rank&&5!==e.rank)throw new nN(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new nN(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=O_(e,s);if("causal"===a)throw new rN("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=vA(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=bT(o,n)),"channelsFirst"===s&&(o=qm(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=cC(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=M_(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:UT(this.kernelInitializer),kernelRegularizer:w_(this.kernelRegularizer),kernelConstraint:RN(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new nN(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},L_=class extends P_{constructor(e){super(2,e),L_.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!xN(e.kernelSize,"number",1,2))throw new nN(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},W_=L_;W_.className="Conv2D",Rg.registerClass(W_);var B_=class extends P_{constructor(e){super(3,e),B_.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new nN(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},U_=B_;U_.className="Conv3D",Rg.registerClass(U_);var V_=class extends W_{constructor(e){if(super(e),this.inputSpec=[new bC({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new nN(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=cC(e)).length)throw new nN("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new nN("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new bC({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ny((()=>{let t=pC(e);if(4!==t.shape.length)throw new nN(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[s,$_(i,d,l,this.padding),$_(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=qm(t,[0,2,3,1]));let c=xA(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=qm(c,[0,3,1,2])),null!=this.bias&&(c=bT(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,r,a=(e=cC(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=$_(a[n],o,s,this.padding),a[r]=$_(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};V_.className="Conv2DTranspose",Rg.registerClass(V_);var G_=class extends U_{constructor(e){if(super(e),this.inputSpec=[new bC({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new nN(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=cC(e)).length)throw new nN("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new nN("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new bC({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ny((()=>{let t=pC(e);if(5!==t.shape.length)throw new nN(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=[i,$_(o,c,d,this.padding),$_(l,f,h,this.padding),$_(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=qm(t,[0,2,3,4,1]));let y=kA(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=qm(y,[0,4,1,2,3])),null!==this.bias&&(y=bT(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){let t,n,r,a,s=(e=cC(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],d=this.strides[1],h=this.strides[2];return s[t]=this.filters,s[n]=$_(s[n],u,i,this.padding),s[r]=$_(s[r],d,o,this.padding),s[a]=$_(s[a],h,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};G_.className="Conv3DTranspose",Rg.registerClass(G_);var j_=class extends P_{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new nN("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new nN("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new nN(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=VT(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=I_(t.depthwiseRegularizer),this.depthwiseConstraint=$N(t.depthwiseConstraint),this.pointwiseInitializer=VT(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=I_(t.pointwiseRegularizer),this.pointwiseConstraint=$N(t.pointwiseConstraint)}build(e){if((e=cC(e)).length<this.rank+2)throw new nN(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new nN(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new bC({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ny((()=>{let t;if(e=pC(e),1===this.rank)throw new rN("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=qm(e,[0,2,3,1])),t=Mx(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=bT(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=qm(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=UT(this.depthwiseInitializer),e.pointwiseInitializer=UT(this.pointwiseInitializer),e.depthwiseRegularizer=w_(this.depthwiseRegularizer),e.pointwiseRegularizer=w_(this.pointwiseRegularizer),e.depthwiseConstraint=RN(this.depthwiseConstraint),e.pointwiseConstraint=RN(this.pointwiseConstraint),e}};j_.className="SeparableConv";var H_=class extends j_{constructor(e){super(2,e)}};H_.className="SeparableConv2D",Rg.registerClass(H_);var q_=class extends P_{constructor(e){super(1,e),q_.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!xN(e.kernelSize,"number",1,1))throw new nN(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},K_=q_;K_.className="Conv1D",Rg.registerClass(K_);var X_=class extends IC{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ny((()=>{if(e=pC(e),"channelsLast"===this.dataFormat){let t=dT(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return dT(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=dT(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return dT(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};X_.className="Cropping2D",Rg.registerClass(X_);var Z_=class extends IC{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,jN(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){bN(WN,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ny((()=>{let t=pC(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=qm(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?$w.resizeNearestNeighbor(t,[e,r]):$w.resizeBilinear(t,[e,r]);return qm(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?$w.resizeNearestNeighbor(t,[e,r]):$w.resizeBilinear(t,[e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Z_.className="UpSampling2D",Rg.registerClass(Z_);var Y_=class extends D_{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=VT(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=$N(e.depthwiseConstraint),this.depthwiseRegularizer=I_(e.depthwiseRegularizer)}build(e){if((e=cC(e)).length<4)throw new nN(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new nN(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ny((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return ny((()=>{null==a&&(a="channelsLast"),jN(a);let i=F_(e,a);if(4!==e.rank)throw new nN(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new nN(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=_A(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=qm(i,[0,3,1,2])),i}))}(e=pC(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=bT(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=cC(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=M_(t,this.kernelSize[0],this.padding,this.strides[0]),s=M_(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=UT(this.depthwiseInitializer),e.depthwiseRegularizer=w_(this.depthwiseRegularizer),e.depthwiseConstraint=RN(this.depthwiseRegularizer),e}};function J_(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new nN("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Q_(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return ny((()=>{let l=t.shape.length;if(l<3)throw new nN(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(aT(2,l));if(t=qm(t,u),null!=s)throw new rN("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=Im(Im(a,"bool"),"float32"),a.rank===l-1&&(a=UA(a,-1)),a=qm(a,u)),r&&(t=kx(t,0),null!=a&&(a=kx(a,0)));let d,h,p,c=[],f=n,m=t.shape[0],g=uv(t);null!=a&&(h=uv(a));for(let t=0;t<m;++t){let n=g[t],r=ny((()=>e(n,f)));if(null==a)d=r[0],f=r[1];else{let e=ny((()=>{let e=h[t],n=bb(Jb(e),e);return{output:my(Ay(r[0],e),Ay(f[0],n)),newStates:f.map(((t,a)=>my(Ay(r[1][a],e),Ay(t,n))))}}));d=e.output,f=e.newStates}o&&c.push(d)}return o&&(p=Zx(c,1)),[d,p,f]}))}Y_.className="DepthwiseConv2D",Rg.registerClass(Y_);var eR=class extends IC{constructor(e){let t;if(super(e),null==e.cell)throw new nN("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new uR({cells:e.cell}):e.cell,null==t.stateSize)throw new nN("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new bC({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?aT(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){dC(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return ny((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new rN("Constants support is not implemented in RNN yet.");dC(e)&&(e=e[0]),e=e;let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new bC({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!pc.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new nN(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new bC({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];ny((()=>{if(!this.stateful)throw new eN("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new nN("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Wb([n,e]))):this.states_=[Wb([n,this.cell.stateSize])];else if(null==e)ry(this.states_),null!=this.keptStates&&(ry(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Wb([n,e]))):this.states_[0]=Wb([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new nN(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ry(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!pc.arraysEqual(r.shape,s))throw new nN(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>ay(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=J_(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new bC({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof xC){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return ny((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=pC(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new nN(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=Q_(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],d=o[2];this.stateful&&this.resetStates(d,r);let h=this.returnSequences?u:l;return this.returnState?[h].concat(d):h}))}getInitialState(e){return ny((()=>{let t=Wb(e.shape);return t=xb(t,[1,2]),t=iT(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?cT(t,[1,e]):t)):this.cell.stateSize>1?[cT(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===eR.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=LC(t.cell,n);return new e(Object.assign(t,{cell:r}))}},tR=eR;tR.className="RNN",Rg.registerClass(tR);var nR=class extends IC{},rR=class extends nR{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,vN(this.units,"units"),this.activation=y_(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=VT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=VT(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=VT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=I_(e.kernelRegularizer),this.recurrentRegularizer=I_(e.recurrentRegularizer),this.biasRegularizer=I_(e.biasRegularizer),this.kernelConstraint=$N(e.kernelConstraint),this.recurrentConstraint=$N(e.recurrentConstraint),this.biasConstraint=$N(e.biasConstraint),this.dropout=nT([1,rT([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=nT([1,rT([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=cC(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ny((()=>{if(2!==(e=e).length)throw new nN(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dR({ones:()=>Jb(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dR({ones:()=>Jb(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=mT(null!=s?Ay(e,s):e,this.kernel.read()),null!=this.bias&&(a=bT(a,this.bias.read())),null!=i&&(n=Ay(n,i));let o=my(a,mT(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){return{...super.getConfig(),units:this.units,activation:m_(this.activation),useBias:this.useBias,kernelInitializer:UT(this.kernelInitializer),recurrentInitializer:UT(this.recurrentInitializer),biasInitializer:UT(this.biasInitializer),kernelRegularizer:w_(this.kernelRegularizer),recurrentRegularizer:w_(this.recurrentRegularizer),biasRegularizer:w_(this.biasRegularizer),activityRegularizer:w_(this.activityRegularizer),kernelConstraint:RN(this.kernelConstraint),recurrentConstraint:RN(this.recurrentConstraint),biasConstraint:RN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout}}};rR.className="SimpleRNNCell",Rg.registerClass(rR);var aR=class extends tR{constructor(e){e.cell=new rR(e),super(e)}call(e,t){return ny((()=>{null!=this.cell.dropoutMask&&(ry(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ry(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};aR.className="SimpleRNN",Rg.registerClass(aR);var sR=class extends nR{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new nN("GRUCell does not support reset_after parameter set to true.");this.units=e.units,vN(this.units,"units"),this.activation=y_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=y_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=VT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=VT(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=VT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=I_(e.kernelRegularizer),this.recurrentRegularizer=I_(e.recurrentRegularizer),this.biasRegularizer=I_(e.biasRegularizer),this.kernelConstraint=$N(e.kernelConstraint),this.recurrentConstraint=$N(e.recurrentConstraint),this.biasConstraint=$N(e.biasConstraint),this.dropout=nT([1,rT([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=nT([1,rT([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=cC(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ny((()=>{if(2!==(e=e).length)throw new nN(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dR({ones:()=>Jb(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dR({ones:()=>Jb(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=Ay(e,o[0]));let u=mT(e,this.kernel.read());this.useBias&&(u=bT(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ay(r,l[0]));let d=this.recurrentKernel.read(),[h,p]=jx(d,[2*this.units,this.units],d.rank-1),c=mT(r,h),[f,m,g]=jx(u,3,u.rank-1),[y,A]=jx(c,2,c.rank-1);a=this.recurrentActivation.apply(my(f,y)),s=this.recurrentActivation.apply(my(m,A));let b=mT(Ay(s,r),p);i=this.activation.apply(my(g,b));let x=my(Ay(a,r),Ay(my(1,mb(a)),i));return[x,x]}))}getConfig(){return{...super.getConfig(),units:this.units,activation:m_(this.activation),recurrentActivation:m_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:UT(this.kernelInitializer),recurrentInitializer:UT(this.recurrentInitializer),biasInitializer:UT(this.biasInitializer),kernelRegularizer:w_(this.kernelRegularizer),recurrentRegularizer:w_(this.recurrentRegularizer),biasRegularizer:w_(this.biasRegularizer),activityRegularizer:w_(this.activityRegularizer),kernelConstraint:RN(this.kernelConstraint),recurrentConstraint:RN(this.recurrentConstraint),biasConstraint:RN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1}}};sR.className="GRUCell",Rg.registerClass(sR);var iR=class extends tR{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new sR(e),super(e)}call(e,t){return ny((()=>{null!=this.cell.dropoutMask&&(ry(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ry(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};iR.className="GRU",Rg.registerClass(iR);var oR=class extends nR{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,vN(this.units,"units"),this.activation=y_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=y_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=VT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=VT(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=VT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=I_(e.kernelRegularizer),this.recurrentRegularizer=I_(e.recurrentRegularizer),this.biasRegularizer=I_(e.biasRegularizer),this.kernelConstraint=$N(e.kernelConstraint),this.recurrentConstraint=$N(e.recurrentConstraint),this.biasConstraint=$N(e.biasConstraint),this.dropout=nT([1,rT([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=nT([1,rT([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=cC(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends IT{apply(t,n){let a=e.apply([r]),s=(new NT).apply([r]),i=e.apply([2*r]);return pT(pT(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ny((()=>{let n=null!=t.training&&t.training;if(3!==(e=e).length)throw new nN(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dR({ones:()=>Jb(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dR({ones:()=>Jb(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,d=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=Ay(e,u[0]));let h=mT(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ay(r,d[0])),h=my(h,mT(r,this.recurrentKernel.read())),this.useBias&&(h=bT(h,this.bias.read()));let[p,c,f,m]=jx(h,4,h.rank-1);s=this.recurrentActivation.apply(p),i=this.recurrentActivation.apply(c),o=my(Ay(i,a),Ay(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=Ay(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){return{...super.getConfig(),units:this.units,activation:m_(this.activation),recurrentActivation:m_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:UT(this.kernelInitializer),recurrentInitializer:UT(this.recurrentInitializer),biasInitializer:UT(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:w_(this.kernelRegularizer),recurrentRegularizer:w_(this.recurrentRegularizer),biasRegularizer:w_(this.biasRegularizer),activityRegularizer:w_(this.activityRegularizer),kernelConstraint:RN(this.kernelConstraint),recurrentConstraint:RN(this.recurrentConstraint),biasConstraint:RN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation}}};oR.className="LSTMCell",Rg.registerClass(oR);var lR=class extends tR{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new oR(e),super(e)}call(e,t){return ny((()=>{null!=this.cell.dropoutMask&&(ry(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ry(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};lR.className="LSTM",Rg.registerClass(lR);var uR=class extends nR{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ny((()=>{let n=(e=e).slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;dC(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{XN(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){return{...super.getConfig(),cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))}}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=[];for(let e of t.cells)r.push(LC(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return yC(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}AC(t)}};function dR(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):xT(t(),n),o=()=>vT(i,t,r);return!a||a<=1?ay(o().clone()):Array(a).fill(void 0).map(o).map((e=>ay(e.clone())))}uR.className="StackedRNNCells",Rg.registerClass(uR);var hR=class extends tR{constructor(e){if(e.unroll)throw new rN("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new rN("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new bC({ndim:5})]}call(e,t){return ny((()=>{if(null!=this.cell.dropoutMask&&(ry(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ry(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new nN("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ny((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Wb([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];ny((()=>{if(!this.stateful)throw new eN("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new nN("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Wb(a))):this.states_=[Wb(a)];else if(null==e)ry(this.states_),null!=this.keptStates&&(ry(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Wb(a))):this.states_[0]=Wb(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new nN(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ry(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!pc.arraysEqual(n.shape,r))throw new nN(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ay(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],d=M_(l,r[0],a,s[0],i[0]),h=M_(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,d,h]:[d,h,n]]}};hR.className="ConvRNN2D";var pR=class extends oR{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super({...e,units:t}),this.filters=t,vN(this.filters,"filters"),this.kernelSize=R_(n,2,"kernelSize"),this.kernelSize.forEach((e=>vN(e,"kernelSize"))),this.strides=R_(r||1,2,"strides"),this.strides.forEach((e=>vN(e,"strides"))),this.padding=a||"valid",HN(this.padding),this.dataFormat=s||"channelsLast",jN(this.dataFormat),this.dilationRate=R_(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>vN(e,"dilationRate")))}build(e){var t;e=cC(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new nN(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends IT{apply(e,t){return hT([n.apply([r]),Bb([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ny((()=>{if(3!==e.length)throw new nN(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dR({ones:()=>Jb(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Ay(t[n],e):e,l=o(r,i,0),u=o(r,i,1),d=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dR({ones:()=>Jb(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let p=this.recurrentDropoutMask,c=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3),[y,A,b,x]=jx(this.kernel.read(),4,3),[v,w,k,I]=this.useBias?jx(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,A,w,this.padding),d=this.inputConv(d,b,k,this.padding),h=this.inputConv(h,x,I,this.padding);let[S,N,T,C]=jx(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,S),f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,C);let E=this.recurrentActivation.apply(my(l,c)),_=this.recurrentActivation.apply(my(u,f)),R=my(Ay(_,s),Ay(E,this.activation.apply(my(d,m)))),M=Ay(this.recurrentActivation.apply(my(h,g)),this.activation.apply(R));return[M,M,R]}))}getConfig(){let{units:e,...t}=super.getConfig();return{...t,filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides}}inputConv(e,t,n,r){let a=yA(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?bT(a,n,this.dataFormat):a}recurrentConv(e,t){return yA(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};pR.className="ConvLSTM2DCell",Rg.registerClass(pR);var cR=class extends hR{constructor(e){let t=new pR(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};cR.className="ConvLSTM2D",Rg.registerClass(cR);var fR=class extends IC{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return ny((()=>{this.invokeCallHook(e,t);let n=pC(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return vT((()=>xT(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};fR.className="Dropout",Rg.registerClass(fR);var mR=class extends fR{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};mR.className="SpatialDropout1D",Rg.registerClass(mR);var gR=class extends IC{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,vN(this.units,"units"),this.activation=y_(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=VT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=VT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=$N(e.kernelConstraint),this.biasConstraint=$N(e.biasConstraint),this.kernelRegularizer=I_(e.kernelRegularizer),this.biasRegularizer=I_(e.biasRegularizer),this.activityRegularizer=I_(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=cC(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=cC(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ny((()=>{this.invokeCallHook(e,t);let n,r=pC(e),a=kN(this.activation.getClassName());return null!=a?n=mT(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=mT(r,this.kernel.read()),null!=this.bias&&(n=bT(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:m_(this.activation),useBias:this.useBias,kernelInitializer:UT(this.kernelInitializer),biasInitializer:UT(this.biasInitializer),kernelRegularizer:w_(this.kernelRegularizer),biasRegularizer:w_(this.biasRegularizer),activityRegularizer:w_(this.activityRegularizer),kernelConstraint:RN(this.kernelConstraint),biasConstraint:RN(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};gR.className="Dense",Rg.registerClass(gR);var yR=class extends IC{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=cC(e);for(let t of e.slice(1))if(null==t)throw new nN(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],tT(e,1)]}call(e,t){return ny((()=>{this.invokeCallHook(e,t);let n=pC(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=qm(n,e)}return function(e){if(e.rank<=1)throw new nN(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],tT(e.shape,1)];return Ky(e,t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};yR.className="Flatten",Rg.registerClass(yR);var AR=class extends IC{constructor(e){super(e),this.supportsMasking=!0,this.activation=y_(e.activation)}call(e,t){return ny((()=>{this.invokeCallHook(e,t);let n=pC(e);return this.activation.apply(n)}))}getConfig(){let e={activation:m_(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};AR.className="Activation",Rg.registerClass(AR);var bR=class extends IC{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ny((()=>function(e,t){return ny((()=>{if(2!==e.shape.length)throw new nN(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return cT(iT(e,1),[1,t,1])}))}(e=pC(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};bR.className="RepeatVector",Rg.registerClass(bR);var xR=class extends IC{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null!==s)throw new nN("Can only specifiy one unknown dimension.");s=e}else a*=t}let i=tT(e);if(null!==s){if(0===a||i%a!=0)throw new nN(n);r[s]=i/a}else if(i!==a)throw new nN(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ny((()=>{this.invokeCallHook(e,t);let n=pC(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Ky(n,a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};xR.className="Reshape",Rg.registerClass(xR);var vR=class extends IC{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=aT(1,e.dims.length+1);if(!pc.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new bC({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=cC(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return qm(pC(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};vR.className="Permute",Rg.registerClass(vR);var wR=class extends IC{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=pC(e);return Iy(Yb(n,this.maskValue),-1)}call(e,t){return ny((()=>{this.invokeCallHook(e,t);let n=pC(e),r=Iy(Yb(n,this.maskValue),-1,!0);return Ay(n,Im(r,n.dtype))}))}};wR.className="Masking",Rg.registerClass(wR);var kR=class extends IC{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(uN(e.inputLength))}this.inputDim=e.inputDim,vN(this.inputDim,"inputDim"),this.outputDim=e.outputDim,vN(this.outputDim,"outputDim"),this.embeddingsInitializer=VT(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=I_(e.embeddingsRegularizer),this.activityRegularizer=I_(e.activityRegularizer),this.embeddingsConstraint=$N(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ny((()=>this.maskZero?(e=pC(e),Yb(e,OA(e))):null))}computeOutputShape(e){if(e=cC(e),null==this.inputLength)return[...e,this.outputDim];let t=uN(this.inputLength);if(t.length!==e.length-1)throw new nN(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new nN(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ny((()=>{this.invokeCallHook(e,t);let n=pC(e);"int32"!==n.dtype&&(n=sT(n,"int32"));let r=gT(this.embeddings.read(),Ky(n,[n.size]));return Ky(r,cC(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:UT(this.embeddingsInitializer),embeddingsRegularizer:w_(this.embeddingsRegularizer),activityRegularizer:w_(this.activityRegularizer),embeddingsConstraint:RN(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};kR.className="Embedding",Rg.registerClass(kR);var IR=class extends IC{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new rN}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new nN("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[cC(e)]),(e=e).length<2)throw new nN(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=yN(t),t.length>1)throw new nN(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===yN(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ny((()=>{if(e=e,this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=rT(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=iT(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=Ky(r,[a].concat(tT(e.slice(1))));i=qm(i,[1,0]),i=Ky(i,s),t.push(i),n=!0}else if(e>1){let a=aT(1,e).concat([0]);t.push(qm(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Ky(qm(Ky(r,[-1,t]),[1,0]),n)}else if(a>1){let e=[a-1].concat(aT(0,a-1));r=qm(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=yN(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ny((()=>{if(null==t)return null;if(!Array.isArray(t))throw new nN("`mask` should be an Array");if(!Array.isArray(e))throw new nN("`inputs` should be an Array");if(t.length!==e.length)throw new nN(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:UA(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Rb(n,t[e]);return n}))}},SR=class extends IR{constructor(e){super(e)}mergeFunction(e){return ny((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=my(t,e[n]);return t}))}};SR.className="Add",Rg.registerClass(SR);var NR=class extends IR{constructor(e){super(e)}mergeFunction(e){return ny((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ay(t,e[n]);return t}))}};NR.className="Multiply",Rg.registerClass(NR);var TR=class extends IR{constructor(e){super(e)}mergeFunction(e){return ny((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=my(t,e[n]);return Ay(1/e.length,t)}))}};TR.className="Average",Rg.registerClass(TR);var CR=class extends IR{constructor(e){super(e)}mergeFunction(e){return ny((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Pb(t,e[n]);return t}))}};CR.className="Maximum",Rg.registerClass(CR);var ER=class extends IR{constructor(e){super(e)}mergeFunction(e){return ny((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Gb(t,e[n]);return t}))}};ER.className="Minimum",Rg.registerClass(ER);var _R=class extends IR{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new nN("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(pc.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new nN("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ny((()=>hT(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new nN("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new nN("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new nN("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new nN(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ny((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Im(Jb(e[n]),"bool")):t[n].rank<e[n].rank?r.push(UA(t[n],-1)):r.push(t[n]);let a=Yy(r,this.axis);return ky(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function RR(e,t){for(;e<0;)e+=t;return e}_R.className="Concatenate",Rg.registerClass(_R);var MR=class extends IR{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){pc.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new rN("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new nN(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new nN(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>RR(t,e[n].shape.length))):[RR(this.axes,n.shape.length),RR(this.axes,r.shape.length)],this.normalize&&(n=WC(n,t[0]),r=WC(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new rN("batchDot is not implemented for tensors of 4D or higher rank yet");if(pc.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),pc.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new rN("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return ny((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=Ky(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=Ky(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?xb(Ay(e,t),s[0]):xb(Ay(qm(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=jm(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=Xx(i,t)}return 1===i.shape.length&&(i=UA(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[RR(this.axes,e.length),RR(this.axes,t.length)],n}computeOutputShape(e){pc.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new rN("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};MR.className="Dot",Rg.registerClass(MR);var $R=class extends IC{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ny((()=>{this.invokeCallHook(e,t);let n=pC(e);return vT((()=>my(fT(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};$R.className="GaussianNoise",Rg.registerClass($R);var FR=class extends IC{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ny((()=>{this.invokeCallHook(e,t);let n=pC(e);return this.rate>0&&this.rate<1?vT((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return Ay(n,fT(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};FR.className="GaussianDropout",Rg.registerClass(FR);var OR=class extends IC{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||pC(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ny((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return vT((()=>{let t=pC(e),r=-1.7580993408473766,a=ZA(yx(n),this.rate);a=sT(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=my(Ay(t,a),Ay(my(a,-1),r));return my(Ay(o,s),i)}),(()=>pC(e)),t.training||!1)}return e}))}};function zR(e,t,n,r,a){let s,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=sA(e,t,n,r,a,i);else if(3===e.rank)s=iA(e,t,n,r,a,i);else{if(4!==e.rank)throw new rN(`batchNormalization is not implemented for array of rank ${e.rank} yet`);s=oA(e,t,n,r,a,i)}return s}function DR(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ny((()=>{let s=Kb(e,r),i=s.mean,o=s.variance;return[zR(e,i,o,n,t,a),i,o]}))}function PR(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ny((()=>{let s=Kb(e,r),i=s.mean,o=s.variance,l=[];for(let t of aT(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=Ky(i,l),d=Ky(o,l),h=null==t?null:Ky(t,l),p=null==n?null:Ky(n,l);return[zR(e,u,d,p,h,a),i,o]}))}OR.className="AlphaDropout",Rg.registerClass(OR);var LR=class extends IC{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=VT(e.betaInitializer||"zeros"),this.gammaInitializer=VT(e.gammaInitializer||"ones"),this.movingMeanInitializer=VT(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=VT(e.movingVarianceInitializer||"ones"),this.betaConstraint=$N(e.betaConstraint),this.gammaConstraint=$N(e.gammaConstraint),this.betaRegularizer=I_(e.betaRegularizer),this.gammaRegularizer=I_(e.gammaRegularizer)}build(e){e=cC(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new nN(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new bC({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ny((()=>{let n=null!=t.training&&t.training,r=pC(e),a=r.shape,s=a.length,i=aT(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=sN(1,s);l[o]=a[o];let u=i.slice();u.sort();let d=!pc.arraysEqual(u,aT(0,s).slice(0,s-1));if(!n)return(()=>{if(d){let e=Ky(this.movingMean.read(),l),t=Ky(this.movingVariance.read(),l),n=this.center?Ky(this.beta.read(),l):null,a=this.scale?Ky(this.gamma.read(),l):null;return zR(r,e,t,n,a,this.epsilon)}return zR(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[h,p,c]=function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return pc.arraysEqual(r.slice().sort(),aT(0,e.rank-1))?DR(e,t,n,r,a):PR(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{ny((()=>{let r=1-n,a=e.read(),s=Ay(bb(a,t),r);e.write(bb(a,s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,c,this.momentum)})(),h}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:UT(this.betaInitializer),gammaInitializer:UT(this.gammaInitializer),movingMeanInitializer:UT(this.movingMeanInitializer),movingVarianceInitializer:UT(this.movingVarianceInitializer),betaRegularizer:w_(this.betaRegularizer),gammaRegularizer:w_(this.gammaRegularizer),betaConstraint:RN(this.betaConstraint),gammaConstraint:RN(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};LR.className="BatchNormalization",Rg.registerClass(LR);var WR=class extends IC{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=VT(e.betaInitializer||"zeros"),this.gammaInitializer=VT(e.gammaInitializer||"ones"),this.betaRegularizer=I_(e.betaRegularizer),this.gammaRegularizer=I_(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=cC(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==yN(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){let n=pC(e),r=n.shape,a=r.length;return ny((()=>{let{mean:e,variance:t}=Kb(n,this.axis,!0),s=sN(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a?Ky(e,s):e,o=i(this.gamma.read()),l=i(this.beta.read()),u=[],d=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),d.push(1)):(u.push(1),d.push(r[e]));return e=GA(e,u),t=GA(t,u),o=GA(o,d),l=GA(l,d),zR(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:UT(this.betaInitializer),gammaInitializer:UT(this.gammaInitializer),betaRegularizer:w_(this.betaRegularizer),gammaRegularizer:w_(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};WR.className="LayerNormalization",Rg.registerClass(WR);var BR=class extends IC{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new nN(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new nN(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new nN(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new bC({ndim:4})]}computeOutputShape(e){let t,n;return e=cC(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ny((()=>function(e,t,n){return ny((()=>{if(4!==e.rank)throw new nN(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new nN("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new nN(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],ex(e,r)}))}(pC(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function UR(e,t,n,r,a,s){return ny((()=>{jN(a),qN(s),HN(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=F_(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Ob(e,t,n,o):Xy(e,t,n,o),"channelsFirst"===a&&(i=qm(i,[0,3,1,2])),i}))}function VR(e,t,n,r,a,s){return ny((()=>{jN(a),qN(s),HN(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=O_(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?zb(e,t,n,o):Zy(e,t,n,o),"channelsFirst"===a&&(i=qm(i,[0,4,1,2,3])),i}))}BR.className="ZeroPadding2D",Rg.registerClass(BR);var GR=class extends IC{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new nN(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(vN(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new nN(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}vN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,HN(this.padding),this.inputSpec=[new bC({ndim:3})]}computeOutputShape(e){let t=M_((e=cC(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ny((()=>{this.invokeCallHook(e,t),e=iT(pC(e),2);let n=this.poolingFunction(pC(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Xx(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},jR=class extends GR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return jN(a),HN(r),UR(e,t,n,r,a,"max")}};jR.className="MaxPooling1D",Rg.registerClass(jR);var HR=class extends GR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return jN(a),HN(r),UR(e,t,n,r,a,"avg")}};HR.className="AveragePooling1D",Rg.registerClass(HR);var qR=class extends IC{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new nN(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];vN(this.poolSize,"poolSize"),vN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,jN(this.dataFormat),HN(this.padding),this.inputSpec=[new bC({ndim:4})]}computeOutputShape(e){e=cC(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=M_(t,this.poolSize[0],this.padding,this.strides[0]),n=M_(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ny((()=>(this.invokeCallHook(e,t),this.poolingFunction(pC(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},KR=class extends qR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return jN(a),HN(r),UR(e,t,n,r,a,"max")}};KR.className="MaxPooling2D",Rg.registerClass(KR);var XR=class extends qR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return jN(a),HN(r),UR(e,t,n,r,a,"avg")}};XR.className="AveragePooling2D",Rg.registerClass(XR);var ZR=class extends IC{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new nN(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];vN(this.poolSize,"poolSize"),vN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,jN(this.dataFormat),HN(this.padding),this.inputSpec=[new bC({ndim:5})]}computeOutputShape(e){e=cC(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=M_(t,this.poolSize[0],this.padding,this.strides[0]),n=M_(n,this.poolSize[1],this.padding,this.strides[1]),r=M_(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return ny((()=>(this.invokeCallHook(e,t),this.poolingFunction(pC(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},YR=class extends ZR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return jN(a),HN(r),VR(e,t,n,r,a,"max")}};YR.className="MaxPooling3D",Rg.registerClass(YR);var JR=class extends ZR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return jN(a),HN(r),VR(e,t,n,r,a,"avg")}};JR.className="AveragePooling3D",Rg.registerClass(JR);var QR=class extends IC{constructor(e){super(e),this.inputSpec=[new bC({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new rN}},eM=class extends QR{constructor(e){super(e||{})}call(e,t){return ny((()=>{let t=pC(e);return Lb(t,1)}))}};eM.className="GlobalAveragePooling1D",Rg.registerClass(eM);var tM=class extends QR{constructor(e){super(e||{})}call(e,t){return ny((()=>{let t=pC(e);return Ab(t,1)}))}};tM.className="GlobalMaxPooling1D",Rg.registerClass(tM);var nM=class extends IC{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,jN(this.dataFormat),this.inputSpec=[new bC({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new rN}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},rM=class extends nM{call(e,t){return ny((()=>{let t=pC(e);return"channelsLast"===this.dataFormat?Lb(t,[1,2]):Lb(t,[2,3])}))}};rM.className="GlobalAveragePooling2D",Rg.registerClass(rM);var aM=class extends nM{call(e,t){return ny((()=>{let t=pC(e);return"channelsLast"===this.dataFormat?Ab(t,[1,2]):Ab(t,[2,3])}))}};aM.className="GlobalMaxPooling2D",Rg.registerClass(aM);var sM=class extends IC{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=LC(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},iM=class extends sM{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=cC(e)).length<3)throw new nN(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=cC(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return ny((()=>Q_(((e,n)=>[pC(this.layer.call(e,t)),[]]),e=pC(e),[],!1,null,null,!1,!0)[1]))}};iM.className="TimeDistributed",Rg.registerClass(iM);var oM=class extends sM{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=LC(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=LC(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){bN(VN,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new rN("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState&&(r=a.slice(1)),t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):lN(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=J_(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new nN("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new bC({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new rN("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof xC;for(let e of s)if(e instanceof xC!==o)throw new nN("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return ny((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=kx(r,1)),"concat"===this.mergeMode?s=hT([n,r]):"sum"===this.mergeMode?s=my(n,r):"ave"===this.mergeMode?s=Ay(.5,my(n,r)):"mul"===this.mergeMode?s=Ay(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){XN(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),XN(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=LC(t.layer);if(delete t.layer,null!=t.numConstants)throw new rN("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};function lM(e){return new NC(e)}function uM(e){return new C_(e)}function dM(e){return new S_(e)}function hM(e){return new N_(e)}function pM(e){return new T_(e)}function cM(e){return new __(e)}function fM(e){return new E_(e)}function mM(e){return new K_(e)}function gM(e){return new W_(e)}function yM(e){return new V_(e)}function AM(e){return new U_(e)}function bM(e){return new G_(e)}function xM(e){return new H_(e)}function vM(e){return new X_(e)}function wM(e){return new Z_(e)}function kM(e){return new Y_(e)}function IM(e){return new AR(e)}function SM(e){return new gR(e)}function NM(e){return new fR(e)}function TM(e){return new mR(e)}function CM(e){return new yR(e)}function EM(e){return new bR(e)}function _M(e){return new xR(e)}function RM(e){return new vR(e)}function MM(e){return new kR(e)}function $M(e){return new SR(e)}function FM(e){return new TR(e)}function OM(e){return new _R(e)}function zM(e){return new CR(e)}function DM(e){return new ER(e)}function PM(e){return new NR(e)}function LM(e){return new MR(e)}function WM(e){return new LR(e)}function BM(e){return new WR(e)}function UM(e){return new BR(e)}function VM(e){return new HR(e)}function GM(e){return VM(e)}function jM(e){return VM(e)}function HM(e){return new XR(e)}function qM(e){return HM(e)}function KM(e){return HM(e)}function XM(e){return new JR(e)}function ZM(e){return XM(e)}function YM(e){return XM(e)}function JM(e){return new eM(e)}function QM(e){return new rM(e)}function e$(e){return new tM(e)}function t$(e){return new aM(e)}function n$(e){return new jR(e)}function r$(e){return new KR(e)}function a$(e){return new YR(e)}function s$(e){return new iR(e)}function i$(e){return new sR(e)}function o$(e){return new lR(e)}function l$(e){return new oR(e)}function u$(e){return new aR(e)}function d$(e){return new rR(e)}function h$(e){return new cR(e)}function p$(e){return new pR(e)}function c$(e){return new tR(e)}function f$(e){return new uR(e)}function m$(e){return new oM(e)}function g$(e){return new iM(e)}oM.className="Bidirectional",Rg.registerClass(oM);var y$=e$,A$=t$,b$=n$,x$=r$;function v$(e){return new $R(e)}function w$(e){return new FR(e)}function k$(e){return new OR(e)}function I$(e){return new wR(e)}var S$={};function N$(e,t){return ZC(e,t)}function T$(e,t){return eE(e,t)}function C$(e,t){return tE(e,t)}function E$(e,t){return YC(e,t)}function _$(e,t){return nE(e,t)}function R$(e,t){return QC(e,t)}function M$(e,t){return function(e,t){return ny((()=>{let n=JC(e,t),r=function(e,t){return ny((()=>Im(xb(Rb($A(e,1),$A(t,0))),"float32")))}(e,t),a=my(n,r);return Im(FA(XA(a,0),yy(n,a),0),"float32")}))}(e,t)}function $$(e,t){return qC(e,t)}function F$(e,t){return UC(e,t)}function O$(e,t){return VC(e,t)}function z$(e,t){return VC(e,t)}function D$(e,t){return VC(e,t)}function P$(e,t){return BC(e,t)}function L$(e,t){return BC(e,t)}function W$(e,t){return BC(e,t)}bl(S$,{MAPE:()=>z$,MSE:()=>L$,binaryAccuracy:()=>N$,binaryCrossentropy:()=>T$,categoricalAccuracy:()=>E$,categoricalCrossentropy:()=>_$,cosineProximity:()=>$$,mape:()=>D$,meanAbsoluteError:()=>F$,meanAbsolutePercentageError:()=>O$,meanSquaredError:()=>P$,mse:()=>W$,precision:()=>R$,recall:()=>M$,sparseCategoricalAccuracy:()=>C$});var B$={};bl(B$,{modelFromJSON:()=>HE});var U$={};function V$(e){return new x_(e)}function G$(e){return function(e){return A_(e),new x_({l1:null!=e?e.l1:null,l2:0})}(e)}function j$(e){return function(e){return A_(e),new x_({l2:null!=e?e.l2:null,l1:0})}(e)}bl(U$,{l1:()=>G$,l1l2:()=>V$,l2:()=>j$});var H$=class extends _C{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof GE))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function q$(e,t){return e<t}function K$(e,t){return e>t}var X$=class extends H${constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new rN("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=q$:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=K$:this.monitorFunc=q$,this.monitorFunc===q$&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===q$?1/0:-1/0}async onEpochEnd(e,t){await CC(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}},Z$={earlyStopping:function(e){return new X$(e)}};Uu().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}));var Y$,J$=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(J$||{});(e=>{let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(Y$||(Y$={}));var Q$={};function eF(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Q$[e]=n}function tF(e){return Q$[e]}function nF(e){delete Q$[e]}function rF(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return aF(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>aF(e,n,r,a)));let o=aF(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:pc.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function aF(e,t,n,r){let[a,s]=oF(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[iF(a,e)]));return void 0!==i?t[iF(a,i)][s]:void 0}function sF(e,t){let[n,r,a]=oF(e);return[iF(n,t&&t.currentContextId),r,a]}function iF(e,t){return t?`${e}-${t}`:e}function oF(e){let t=e.split(":");if(1===t.length)return[e,0,void 0];let n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function lF(e,t,n){let r=rF("pad",e,t,n);if("explicit"===r){r=rF("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function uF(e){return e.kept?e:Sm(e)}var dF={};bl(dF,{json:()=>hF});var hF=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],pF={};bl(pF,{json:()=>cF});var cF=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fF={};bl(fF,{json:()=>mF});var mF=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],gF={};bl(gF,{json:()=>yF});var yF=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],AF={};bl(AF,{json:()=>bF});var bF=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],xF={};bl(xF,{json:()=>vF});var vF=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],wF={};bl(wF,{json:()=>kF});var kF=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],IF={};bl(IF,{json:()=>SF});var SF=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],NF={};bl(NF,{json:()=>TF});var TF=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],CF={};bl(CF,{json:()=>EF});var EF=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],_F={};bl(_F,{json:()=>RF});var RF=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],MF={};bl(MF,{json:()=>$F});var $F=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],FF={};bl(FF,{json:()=>OF});var OF=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],zF={};bl(zF,{json:()=>DF});var DF=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],PF={};bl(PF,{json:()=>LF});var LF=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],WF={};bl(WF,{json:()=>BF});var BF=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],UF={};bl(UF,{json:()=>VF});var VF=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],GF={};bl(GF,{json:()=>jF});var jF=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],HF={};bl(HF,{json:()=>qF});var qF=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],KF=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[dF,pF,fF,gF,AF,xF,wF,IF,NF,CF,_F,MF,FF,zF,PF,WF,UF,GF,HF].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},d={};null!=t&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[r,,a]=sF(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(d).length?h.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(d).forEach((e=>{let[t]=sF(e),n=i[t];null!=n&&(n.signatureKey=d[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=sF(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=tF(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=ZF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ZF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=iO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=iO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=JF(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=JF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=sO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=sO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=YF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=YF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=lO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=lO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=aO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=aO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=oO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=tO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=tO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=nO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=nO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=eO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=eO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=sF(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:QF(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach(((e,n)=>{let[a,,s]=sF(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=sF(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function XF(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Uu().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ZF(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=e[t];return null!=a?XF(a.s,r):n}function YF(e,t,n){let r=e[t];return r?r.b:n}function JF(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function QF(e){switch("string"==typeof e&&(e=J$[e]),e){case 1:case 19:case 2:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 7:return"string";default:return null}}function eO(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function tO(e,t,n){let r=e[t];return r&&r.type?QF(r.type):n}function nO(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>QF(e))):n}function rO(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function aO(e,t,n){let r=e[t];return r&&r.shape?rO(r.shape):n}function sO(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function iO(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>XF(e,r))):n}function oO(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>rO(e))):n}function lO(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function uO(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!=typeof e&&"number"!=typeof t){pc.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];pc.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function dO(e){return!("number"==typeof e||e.some((e=>e<0)))}function hO(e,t,n){let r=pO(e,n),a=!dO(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=pO(e.shape,r)})),!dO(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function pO(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var cO=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);uO(t,e.shape,"TensorList shape mismatch: "),ay(e)})),this.idTensor=_x(0),this.maxNumElements=r,ay(this.idTensor)}get id(){return this.idTensor.id}copy(){return new cO([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);uO(e,this.elementShape,"TensorList shape mismatch: ");let r=hO(this.elementShape,this.tensors,e);return ny((()=>{let e=this.tensors.map((e=>Ky(e,r)));return Zx(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=hO(this.elementShape,this.tensors,e),r=this.tensors.pop();return uO(r.shape,e,"TensorList shape mismatch: "),Ky(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(uO(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ay(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new cO([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);uO(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=hO(this.elementShape,this.tensors,t);return Ky(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);uO(this.elementShape,t.shape,"TensorList shape mismatch: "),ay(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);uO(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=hO(this.elementShape,this.tensors,n);return 0===e.length?Rf([],[0].concat(r)):ny((()=>{let t=e.map((e=>Ky(this.tensors[e],r)));return Zx(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);uO(this.elementShape,t,"TensorList shape mismatch: ");let n=hO(this.elementShape,this.tensors,t);return 0===this.size()?Rf([],[0].concat(n)):ny((()=>{let e=this.tensors.map((e=>Ky(e,n)));return Yy(e,0)}))}},fO=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=rF("thenBranch",e,t,n),a=rF("elseBranch",e,t,n),s=rF("cond",e,t,n),i=rF("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=rF("body",e,t,n),a=rF("cond",e,t,n),s=rF("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[uF(rF("pred",e,t,n))];case"Switch":{let r=rF("pred",e,t,n),a=rF("data",e,t,n);return a.kept||(a=uF(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==aF(e,t,n)));return r?[uF(aF(r,t,n))]:void 0}case"Enter":{let r=rF("frameName",e,t,n),a=rF("tensor",e,t,n);return n.enterFrame(r),[uF(a)]}case"Exit":{let r=rF("tensor",e,t,n);return n.exitFrame(),[uF(r)]}case"NextIteration":{let r=rF("tensor",e,t,n);return n.nextIteration(),[uF(r)]}case"TensorArrayV3":{let r=rF("size",e,t,n),a=rF("dtype",e,t,n),s=rF("elementShape",e,t,n),i=rF("dynamicSize",e,t,n),o=rF("clearAfterRead",e,t,n),l=rF("identicalElementShapes",e,t,n),u=rF("name",e,t,n),d=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=_x(0),ay(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),uO(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ay(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Rf([],[0].concat(this.elementShape));let n=this.readMany(e);return uO(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Zx(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Rf([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return uO(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Yy(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,uv(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];ny((()=>{t=Ky(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Ky(Qy(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(u,a,r,s,l,i,o);return n.addTensorArray(d),[d.idTensor,_x(1)]}case"TensorArrayWriteV3":{let r=rF("tensorArrayId",e,t,n),a=rF("index",e,t,n),s=rF("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=rF("tensorArrayId",e,t,n),a=rF("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=rF("tensorArrayId",e,t,n),a=rF("indices",e,t,n),s=rF("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=rF("tensorArrayId",e,t,n),a=rF("indices",e,t,n),s=rF("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=rF("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=rF("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=rF("tensorArrayId",e,t,n),a=rF("tensor",e,t,n),s=rF("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=rF("tensorArrayId",e,t,n);return[_x(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=rF("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=rF("tensorListId",e,t,n),a=rF("index",e,t,n),s=rF("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=rF("tensorListId",e,t,n),a=rF("index",e,t,n),s=rF("elementShape",e,t,n),i=rF("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=rF("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new cO([],n,e.dtype,r),i=uv(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(rF("tensor",e,t,n),r,rF("elementShape",e,t,n),rF("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=rF("elementShape",e,t,n),s=rF("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=function(e,t,n){return new cO([],e,t,n)}(a,s,rF(r,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=rF("tensorListId",e,t,n),a=rF("indices",e,t,n),s=rF("elementShape",e,t,n),i=rF("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=rF("tensorListId",e,t,n),a=rF("elementShape",e,t,n),s=rF("elementDType",e,t,n),i=rF("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);uO(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=uv(e);return new cO(a,t,r)}(rF("tensor",e,t,n),rF("elementShape",e,t,n),rF("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{let r=rF("tensorListId",e,t,n),a=n.getTensorList(r.id),s=rF("dtype",e,t,n),i=rF("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=rF("tensorListId",e,t,n),a=rF("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=rF("tensorListId",e,t,n),a=rF("elementShape",e,t,n),s=rF("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=rF("tensor",e,t,n),a=rF("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=pO(e.shape.slice(1),n),i=0===r?0:e.size/r,o=ny((()=>{let n=[];e=Ky(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=Ky(Qy(e,o,l),s)}return e.dispose(),n})),l=new cO([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,rF("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let r=rF("tensorListId",e,t,n);return[_x(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=rF("tensorListId",e,t,n),a=rF("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function mO(e,t,n){let[r,a]=rF("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=rF("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=rF("strides",e,t,n),h=lF(e,t,n),p=rF("dataFormat",e,t,n).toUpperCase(),c=rF("dilations",e,t,n),[f,m]=rF("args",e,t,n);return i&&(m=f,f=void 0),{stride:d,pad:h,dataFormat:p,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:rF("leakyreluAlpha",e,t,n)}}function gO(e,t,n){return{boxes:rF("boxes",e,t,n),scores:rF("scores",e,t,n),maxOutputSize:rF("maxOutputSize",e,t,n),iouThreshold:rF("iouThreshold",e,t,n),scoreThreshold:rF("scoreThreshold",e,t,n),softNmsSigma:rF("softNmsSigma",e,t,n)}}var yO=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=rF("keyDType",e,t,n),s=rF("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=_x(0),this.tensorMap=new Map,ay(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return _x(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),ny((()=>{let e=uv(t),r=n.length,a=e.length;pc.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];ay(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return ny((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Zx(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let a=rF("tableHandle",e,t,n,r),s=rF("keys",e,t,n),i=rF("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=rF("tableHandle",e,t,n,r),s=rF("keys",e,t,n),i=rF("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=rF("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function AO(e,t,n,r){let a=((e,t,n)=>{switch(e.category){case"arithmetic":return ny((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[my(rF("a",e,t,n),rF("b",e,t,n))];case"AddN":return[wy(rF("tensors",e,t,n))];case"FloorMod":case"Mod":return[Hb(rF("a",e,t,n),rF("b",e,t,n))];case"Mul":return[Ay(rF("a",e,t,n),rF("b",e,t,n))];case"RealDiv":case"Div":return[yy(rF("a",e,t,n),rF("b",e,t,n))];case"DivNoNan":return[zA(rF("a",e,t,n),rF("b",e,t,n))];case"FloorDiv":return[gy(rF("a",e,t,n),rF("b",e,t,n))];case"Sub":return[bb(rF("a",e,t,n),rF("b",e,t,n))];case"Minimum":return[Gb(rF("a",e,t,n),rF("b",e,t,n))];case"Maximum":return[Pb(rF("a",e,t,n),rF("b",e,t,n))];case"Pow":return[ox(rF("a",e,t,n),rF("b",e,t,n))];case"SquaredDifference":return[Kx(rF("a",e,t,n),rF("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return ny((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[by(rF("x",e,t,n))];case"Acos":return[xy(rF("x",e,t,n))];case"Acosh":return[vy(rF("x",e,t,n))];case"Asin":return[Ty(rF("x",e,t,n))];case"Asinh":return[Cy(rF("x",e,t,n))];case"Atan":return[Ey(rF("x",e,t,n))];case"Atan2":return[_y(rF("x",e,t,n),rF("y",e,t,n))];case"Atanh":return[Ry(rF("x",e,t,n))];case"Ceil":return[hA(rF("x",e,t,n))];case"Complex":return[Ef(rF("real",e,t,n),rF("imag",e,t,n))];case"Cos":return[IA(rF("x",e,t,n))];case"Cosh":return[SA(rF("x",e,t,n))];case"Elu":return[LA(rF("x",e,t,n))];case"Erf":return[WA(rF("x",e,t,n))];case"Exp":return[BA(rF("x",e,t,n))];case"Expm1":return[VA(rF("x",e,t,n))];case"Floor":return[qA(rF("x",e,t,n))];case"Log":return[ib(rF("x",e,t,n))];case"Log1p":return[ob(rF("x",e,t,n))];case"Imag":return[YA(rF("x",e,t,n))];case"Neg":return[mb(rF("x",e,t,n))];case"Reciprocal":return[xx(rF("x",e,t,n))];case"Real":return[bx(rF("x",e,t,n))];case"Relu":return[vx(rF("x",e,t,n))];case"Round":return[Cx(rF("x",e,t,n))];case"Selu":return[Rx(rF("x",e,t,n))];case"Sigmoid":return[Jy(rF("x",e,t,n))];case"Sin":return[Ox(rF("x",e,t,n))];case"Sign":return[Fx(rF("x",e,t,n))];case"Sinh":return[zx(rF("x",e,t,n))];case"Softplus":return[gb(rF("x",e,t,n))];case"Sqrt":return[qx(rF("x",e,t,n))];case"Square":return[qb(rF("x",e,t,n))];case"Tanh":return[eA(rF("x",e,t,n))];case"Tan":return[Qx(rF("x",e,t,n))];case"ClipByValue":return[pA(rF("x",e,t,n),rF("clipValueMin",e,t,n),rF("clipValueMax",e,t,n))];case"Relu6":return[wx(rF("x",e,t,n))];case"Rsqrt":return[Ex(aF(e.inputNames[0],t,n))];case"Prod":return[ux(rF("x",e,t,n),rF("axes",e,t,n))];case"LeakyRelu":return[tb(rF("x",e,t,n),rF("alpha",e,t,n))];case"Prelu":return[lx(rF("x",e,t,n),rF("alpha",e,t,n))];case"IsNan":return[eb(aF(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return fO(e,t,n);case"convolution":return ny((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{let r=rF("stride",e,t,n),a=rF("pad",e,t,n),s=rF("dataFormat",e,t,n).toUpperCase(),i=rF("dilation",e,t,n);return[AA(rF("x",e,t,n),rF("filter",e,t,n),r,a,s,i)]}case"Conv2D":{let r=rF("strides",e,t,n),a=lF(e,t,n),s=rF("dataFormat",e,t,n).toUpperCase(),i=rF("dilations",e,t,n);return[yA(rF("x",e,t,n),rF("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:d}=mO(e,t,n);return[Sv.conv2d({x:rF("x",e,t,n),filter:rF("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:d}=mO(e,t,n);return[Sv.depthwiseConv2d({x:rF("x",e,t,n),filter:rF("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=rF("outputShape",e,t,n),a=rF("strides",e,t,n),s=lF(e,t,n);return[xA(rF("x",e,t,n),rF("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=rF("strides",e,t,n),a=lF(e,t,n),s=rF("dilations",e,t,n),i=rF("dataFormat",e,t,n).toUpperCase();return[_A(rF("input",e,t,n),rF("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{let r=rF("strides",e,t,n),a=rF("pad",e,t,n),s=rF("dataFormat",e,t,n).toUpperCase(),i=rF("dilations",e,t,n);return[vA(rF("x",e,t,n),rF("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{let r=rF("strides",e,t,n),a=rF("pad",e,t,n),s=rF("kernelSize",e,t,n);return[Xy(rF("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=rF("strides",e,t,n),a=rF("pad",e,t,n),s=rF("kernelSize",e,t,n);return[Ob(rF("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=rF("strides",e,t,n),a=rF("pad",e,t,n),s=rF("kernelSize",e,t,n),i=rF("includeBatchInIndex",e,t,n),{result:o,indexes:l}=Db(rF("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,l]}case"AvgPool3D":{let r=rF("strides",e,t,n),a=rF("pad",e,t,n),s=rF("kernelSize",e,t,n);return[Zy(rF("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=rF("strides",e,t,n),a=rF("pad",e,t,n),s=rF("kernelSize",e,t,n);return[zb(rF("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=rF("strides",e,t,n),a=rF("pad",e,t,n),s=rF("dilations",e,t,n),i=r[1],o=r[2],l=s[1],u=s[2];return[MA(rF("x",e,t,n),rF("filter",e,t,n),[i,o],a,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return ny((()=>((e,t,n)=>{switch(e.op){case"Fill":{let r=rF("shape",e,t,n),a=rF("dtype",e,t,n);return[HA(r,rF("value",e,t,n),a)]}case"LinSpace":return[ab(rF("start",e,t,n),rF("stop",e,t,n),rF("num",e,t,n))];case"Multinomial":{let r=rF("logits",e,t,n),a=rF("numSamples",e,t,n),s=rF("seed",e,t,n);return[Zb(r,a,s)]}case"OneHot":{let r=rF("indices",e,t,n),a=rF("depth",e,t,n),s=rF("onValue",e,t,n),i=rF("offValue",e,t,n);return[Hm(r,a,s,i)]}case"Ones":return[Bb(rF("shape",e,t,n),rF("dtype",e,t,n))];case"OnesLike":return[Jb(rF("x",e,t,n))];case"RandomUniform":return[yx(rF("shape",e,t,n),rF("minval",e,t,n),rF("maxval",e,t,n),rF("dtype",e,t,n))];case"Range":return[Ax(rF("start",e,t,n),rF("stop",e,t,n),rF("step",e,t,n),rF("dtype",e,t,n))];case"TruncatedNormal":{let r=rF("shape",e,t,n),a=rF("mean",e,t,n),s=rF("stdDev",e,t,n),i=rF("seed",e,t,n);return[iv(r,a,s,rF("dtype",e,t,n),i)]}case"Zeros":return[Wb(rF("shape",e,t,n),rF("dtype",e,t,n))];case"ZerosLike":return[OA(rF("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=gO(e,t,n),u=await $w.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=gO(e,t,n),l=rF("padToMaxOutputSize",e,t,n),u=await $w.nonMaxSuppressionPaddedAsync(r,a,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=gO(e,t,n);return[await $w.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{let r=Im(rF("condition",e,t,n),"bool"),a=[await pv(r)];return r.dispose(),a}case"ListDiff":return $x(rF("x",e,t,n),rF("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return ny((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{let r=rF("x",e,t,n),a=rF("k",e,t,n),s=rF("sorted",e,t,n),i=sv(r,a,s);return[i.values,i.indices]}case"Unique":{let r=rF("x",e,t,n),a=ov(r);return[a.values,a.indices]}case"UniqueV2":{let r=rF("x",e,t,n),a=rF("axis",e,t,n),s=ov(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return ny((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{let r=rF("images",e,t,n),a=rF("size",e,t,n),s=rF("alignCorners",e,t,n),i=rF("halfPixelCenters",e,t,n);return[$w.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{let r=rF("images",e,t,n),a=rF("size",e,t,n),s=rF("alignCorners",e,t,n),i=rF("halfPixelCenters",e,t,n);return[$w.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{let r=rF("image",e,t,n),a=rF("boxes",e,t,n),s=rF("boxInd",e,t,n),i=rF("cropSize",e,t,n),o=rF("method",e,t,n),l=rF("extrapolationValue",e,t,n);return[$w.cropAndResize(r,a,s,i,o,l)]}case"ImageProjectiveTransformV3":{let r=rF("images",e,t,n),a=rF("transforms",e,t,n),s=rF("outputShape",e,t,n),i=rF("fillValue",e,t,n),o=rF("interpolation",e,t,n),l=rF("fillMode",e,t,n);return[$w.transform(r,a,o.toLowerCase(),l.toLowerCase(),i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return ny((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=rF("default",e,t,n);return[aF(e.name,t,n)||r];case"Placeholder":return[aF(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[uF(rF("x",e,t,n))];case"IdentityN":return rF("x",e,t,n).map((e=>uF(e)));case"Shape":return[ev(rF("x",e,t,n).shape,"int32")];case"ShapeN":return rF("x",e,t,n).map((e=>ev(e.shape)));case"Size":return[_x(rF("x",e,t,n).size,"int32")];case"Rank":return[_x(rF("x",e,t,n).rank,"int32")];case"NoOp":return[_x(1)];case"Print":let a=rF("x",e,t,n),s=rF("data",e,t,n),i=rF("message",e,t,n),o=rF("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return ny((()=>((e,t,n)=>{switch(e.op){case"Equal":return[$A(rF("a",e,t,n),rF("b",e,t,n))];case"NotEqual":return[Yb(rF("a",e,t,n),rF("b",e,t,n))];case"Greater":return[XA(rF("a",e,t,n),rF("b",e,t,n))];case"GreaterEqual":return[ZA(rF("a",e,t,n),rF("b",e,t,n))];case"Less":return[nb(rF("a",e,t,n),rF("b",e,t,n))];case"LessEqual":return[rb(rF("a",e,t,n),rF("b",e,t,n))];case"LogicalAnd":return[Rb(rF("a",e,t,n),rF("b",e,t,n))];case"LogicalNot":return[Mb(rF("a",e,t,n))];case"LogicalOr":return[$b(rF("a",e,t,n),rF("b",e,t,n))];case"Select":case"SelectV2":return[FA(rF("condition",e,t,n),rF("a",e,t,n),rF("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return ny((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[jm(rF("a",e,t,n),rF("b",e,t,n),rF("transposeA",e,t,n),rF("transposeB",e,t,n))];case"Einsum":return[PA(rF("equation",e,t,n),...rF("tensors",e,t,n))];case"Transpose":return[qm(rF("x",e,t,n),rF("perm",e,t,n))];case"_FusedMatMul":let[r,a]=rF("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=rF("numArgs",e,t,n),l=rF("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,d]=rF("args",e,t,n);return[Sv.matMul({a:rF("a",e,t,n),b:rF("b",e,t,n),transposeA:rF("transposeA",e,t,n),transposeB:rF("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:d,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return ny((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[aA(rF("x",e,t,n),rF("mean",e,t,n),rF("variance",e,t,n),rF("offset",e,t,n),rF("scale",e,t,n),rF("epsilon",e,t,n))];case"LRN":return[sb(rF("x",e,t,n),rF("radius",e,t,n),rF("bias",e,t,n),rF("alpha",e,t,n),rF("beta",e,t,n))];case"Softmax":return[Bx(rF("x",e,t,n))];case"LogSoftmax":return[vb(rF("x",e,t,n))];case"SparseToDense":return[bv(rF("sparseIndices",e,t,n),rF("outputShape",e,t,n),rF("sparseValues",e,t,n),rF("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return ny((()=>((e,t,n)=>{switch(e.op){case"Max":{let r=rF("axis",e,t,n),a=rF("keepDims",e,t,n);return[Ab(rF("x",e,t,n),r,a)]}case"Mean":{let r=rF("axis",e,t,n),a=rF("keepDims",e,t,n);return[Lb(rF("x",e,t,n),r,a)]}case"Min":{let r=rF("axis",e,t,n),a=rF("keepDims",e,t,n);return[Vb(rF("x",e,t,n),r,a)]}case"Sum":{let r=rF("axis",e,t,n),a=rF("keepDims",e,t,n);return[xb(rF("x",e,t,n),r,a)]}case"All":{let r=rF("axis",e,t,n),a=rF("keepDims",e,t,n);return[ky(rF("x",e,t,n),r,a)]}case"Any":{let r=rF("axis",e,t,n),a=rF("keepDims",e,t,n);return[Iy(rF("x",e,t,n),r,a)]}case"ArgMax":{let r=rF("axis",e,t,n);return[Sy(rF("x",e,t,n),r)]}case"ArgMin":{let r=rF("axis",e,t,n);return[Ny(rF("x",e,t,n),r)]}case"Prod":{let r=rF("axis",e,t,n),a=rF("keepDims",e,t,n);return[ux(rF("x",e,t,n),r,a)]}case"Cumprod":{let r=rF("axis",e,t,n),a=rF("exclusive",e,t,n),s=rF("reverse",e,t,n);return[NA(rF("x",e,t,n),r,a,s)]}case"Cumsum":{let r=rF("axis",e,t,n),a=rF("exclusive",e,t,n),s=rF("reverse",e,t,n);return[TA(rF("x",e,t,n),r,a,s)]}case"Bincount":let r=rF("x",e,t,n),a=rF("weights",e,t,n),s=rF("size",e,t,n);return[lA(r,a,s)];case"DenseBincount":{let r=rF("x",e,t,n),a=rF("weights",e,t,n),s=rF("size",e,t,n),i=rF("binaryOutput",e,t,n);return[CA(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return ny((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=rF("n",e,t,n),a=rF("axis",e,t,n),s=rF("tensors",e,t,n);return s=s.slice(0,r),[Yy(s,a)]}case"Gather":{let r=rF("x",e,t,n),a=rF("indices",e,t,n);return[KA(r,Im(a,"int32"),0)]}case"GatherV2":{let r=rF("axis",e,t,n),a=rF("batchDims",e,t,n),s=rF("x",e,t,n),i=rF("indices",e,t,n);return[KA(s,Im(i,"int32"),r,a)]}case"Reverse":{let r=rF("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);let s=rF("x",e,t,n);return[kx(s,a)]}case"ReverseV2":{let r=rF("axis",e,t,n),a=rF("x",e,t,n);return[kx(a,r)]}case"Slice":{let r=rF("begin",e,t,n),a=rF("size",e,t,n);return[Qy(rF("x",e,t,n),r,a)]}case"StridedSlice":{let r=rF("begin",e,t,n),a=rF("end",e,t,n),s=rF("strides",e,t,n),i=rF("beginMask",e,t,n),o=rF("endMask",e,t,n),l=rF("ellipsisMask",e,t,n),u=rF("newAxisMask",e,t,n),d=rF("shrinkAxisMask",e,t,n),h=rF("x",e,t,n);return[Jx(h,r,a,s,i,o,l,u,d)]}case"Pack":return ny((()=>{let r=rF("axis",e,t,n),a=rF("tensors",e,t,n),s=a[0].shape,i=Xx(a[0]).shape,o=a.map((e=>{let t=pc.arraysEqual(e.shape,s);if(!t&&!pc.arraysEqual(Xx(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Ky(e,s)}));return[Zx(o,r)]}));case"Unpack":{let r=rF("axis",e,t,n),a=rF("tensor",e,t,n);return uv(a,r)}case"Tile":{let r=rF("reps",e,t,n);return[GA(rF("x",e,t,n),r)]}case"Split":case"SplitV":{let r=rF("axis",e,t,n),a=rF("numOrSizeSplits",e,t,n),s=rF("x",e,t,n);return jx(s,a,r)}case"ScatterNd":{let r=rF("indices",e,t,n),a=rF("values",e,t,n),s=rF("shape",e,t,n);return[yv(r,a,s)]}case"GatherNd":{let r=rF("x",e,t,n),a=rF("indices",e,t,n);return[xv(r,a)]}case"SparseToDense":{let r=rF("sparseIndices",e,t,n),a=rF("outputShape",e,t,n),s=rF("sparseValues",e,t,n),i=rF("defaultValue",e,t,n);return[bv(r,s,a,s.dtype===i.dtype?i:Im(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return ny((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=zw.sparseFillEmptyRows(rF("indices",e,t,n),rF("values",e,t,n),rF("denseShape",e,t,n),rF("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{let{outputIndices:r,outputShape:a}=zw.sparseReshape(rF("inputIndices",e,t,n),rF("inputShape",e,t,n),rF("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[zw.sparseSegmentMean(rF("data",e,t,n),rF("indices",e,t,n),rF("segmentIds",e,t,n))];case"SparseSegmentSum":return[zw.sparseSegmentSum(rF("data",e,t,n),rF("indices",e,t,n),rF("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return ny((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Ux(rF("x",e,t,n))];case"IFFT":return[Vx(rF("x",e,t,n))];case"RFFT":return[Hx(rF("x",e,t,n))];case"IRFFT":return[Gx(rF("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return ny((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:a}=Dw.stringNGrams(rF("data",e,t,n),rF("dataSplits",e,t,n),rF("separator",e,t,n),rF("nGramWidths",e,t,n),rF("leftPad",e,t,n),rF("rightPad",e,t,n),rF("padWidth",e,t,n),rF("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{let{indices:r,values:a,shape:s}=Dw.stringSplit(rF("input",e,t,n),rF("delimiter",e,t,n),rF("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[Dw.stringToHashBucketFast(rF("input",e,t,n),rF("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return ny((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Im(rF("x",e,t,n),rF("dtype",e,t,n))];case"ExpandDims":{let r=rF("axis",e,t,n);return[UA(rF("x",e,t,n),r)]}case"Squeeze":{let r=rF("axis",e,t,n);return[Xx(rF("x",e,t,n),r)]}case"Reshape":return[Ky(rF("x",e,t,n),rF("shape",e,t,n))];case"MirrorPad":return[jb(rF("x",e,t,n),rF("padding",e,t,n),rF("mode",e,t,n))];case"PadV2":case"Pad":return[ex(rF("x",e,t,n),rF("padding",e,t,n),rF("constantValue",e,t,n))];case"SpaceToBatchND":{let r=rF("blockShape",e,t,n),a=rF("paddings",e,t,n);return[sx(rF("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=rF("blockShape",e,t,n),a=rF("crops",e,t,n);return[nA(rF("x",e,t,n),r,a)]}case"DepthToSpace":{let r=rF("blockSize",e,t,n),a=rF("dataFormat",e,t,n).toUpperCase();return[EA(rF("x",e,t,n),r,a)]}case"BroadcastTo":return[dA(rF("x",e,t,n),rF("shape",e,t,n))];case"BroadcastArgs":return[uA(rF("s0",e,t,n),rF("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return yO(e,t,n,r);case"custom":let a=tF(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return aF(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return aF(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return JF(this.node.rawAttrs,e,t);if(null!=n.s)return ZF(this.node.rawAttrs,e,t);if(null!=n.b)return YF(this.node.rawAttrs,e,t);if(null!=n.shape)return aO(this.node.rawAttrs,e,t);if(null!=n.type)return tO(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return sO(this.node.rawAttrs,e,t);if(null!=n.list.s)return iO(this.node.rawAttrs,e,t);if(null!=n.list.shape)return oO(this.node.rawAttrs,e,t);if(null!=n.list.b)return lO(this.node.rawAttrs,e,t);if(null!=n.list.type)return nO(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return pc.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var bO=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function xO(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>oF(e)[0])),d=[];null!=r&&(d=r.map((e=>oF(e.name)[0])));let h=[...t];for(;h.length>0;){let e=h.pop();if((IO(e)||SO(e)||NO(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===d.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var vO=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],wO=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],kO=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function IO(e){return vO.indexOf(e.op)>=0}function SO(e){return wO.indexOf(e.op)>=0}function NO(e){return kO.indexOf(e.op)>=0}var TO=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new TO(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=xO(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>oF(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[oF(e)[0]])),a=t.map((e=>oF(e)[0])),s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return ny((()=>{let n=new bO(this.weightMap,l,u,this.functionExecutorMap),r={...this.weightMap};Object.keys(e).forEach((t=>{let[n,a]=oF(t),s=[];s[a]=e[t],r[n]=s}));let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=AO(t,r,n,this._resourceManager);if(pc.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>aF(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let s=function(e,t,n){return t[iF(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){let n=i[e.id];if(1===n){if(this.keepTensorForDebug){let[n,a]=sF(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{e&&!e.kept&&!e.isDisposed&&!this.keepIds.has(e.id)&&e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Uu().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();let s=new bO(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);let i=t.map((e=>aF(e,this.tensorsMap,s))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[oF(e)[0]])),i=n.map((e=>oF(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:h}=xO(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),c={...this.weightMap};Object.keys(e).forEach((t=>{let[n,r]=oF(t),a=[];a[r]=e[t],c[n]=a}));let f={},m=this.getFrozenTensorIds(c),g={};for(;p.length>0;){let e=this.processStack(s,p,t,c,g,m,i,f,l);await Promise.all(e)}null==d&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter((e=>!IO(e)&&!aF(e.name,c,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&rF("isConstant",e.node,r,n)&&([d]=sF(e.node.name,n)),null==r[e.node.name]){let h=AO(e.node,r,n,this._resourceManager);d||([d]=sF(e.node.name,n));let p=n.currentContext;pc.isPromise(h)?u.push(h.then((u=>(r[d]=u,n.currentContext=p,this.checkTensorForDisposal(d,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[d]=h,this.checkTensorForDisposal(d,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=sF(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!aF(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!aF(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=oF(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));pc.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&pc.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){let t={};for(let n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=oF(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{let[t]=oF(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},CO="?tfjs-format=file",EO="model.json",_O=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Tm.browserHTTPRequest(e,this.loadOptions);else{let t=Tm.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(Tm.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t,n=this.artifacts.modelTopology;t=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=t,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;let r=Tm.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new TO(KF.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=KF.Instance.transformGraph(e.modelInitializer);this.initializer=new TO(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){let t=Tm.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof jc||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function RO(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${EO}${CO}`);let n=new _O(e,t);return await n.load(),n}var MO="0.0.0",$O={};bl($O,{CSVDataset:()=>Sz,Dataset:()=>pz,FileDataSource:()=>Pz,TextLineDataset:()=>Az,URLDataSource:()=>Lz,array:()=>fz,csv:()=>Wz,func:()=>Bz,generator:()=>Uz,microphone:()=>Gz,version_data:()=>jz,webcam:()=>Vz,zip:()=>mz});var FO=xl(Ml()),OO=xl(Ml());function zO(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(WO(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=zO(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function DO(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set,r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(WO(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=DO(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function PO(e){return null===e?null:WO(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function LO(e,t){let n=new Map;zO(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(pc.isPromise(t)){let r=await t;n.set(e,r)}}return zO(e,t,n)}function WO(e){let t=!1;if(Uu().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=$l();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof jc)&&!(e instanceof Promise)&&!t)}function BO(e){return function(e,t){return zO(e,t)}(e,UO)}function UO(e){return e instanceof jc?{value:e.clone(),recurse:!1}:WO(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var VO=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},GO=class extends VO{constructor(){super(GO.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},jO=GO;function HO(e){return new XO(e)}function qO(e){return new ZO(e)}jO.INITIAL_CAPACITY=32;var KO=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new rz(this,e)}filter(e){return new tz(this,e)}map(e){return new nz(this,e)}mapAsync(e){return new az(this,e)}serialMapAsync(e){return new az(this,e).serial()}flatmap(e){return new iz(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new ez(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:PO;return this.rowMajorBatch(e,t).map((e=>function(e){return DO(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:PO)}(e,n)))}concatenate(e,t){return new oz(HO([this,e]),t)}take(e){return e<0||null==e?this:new QO(this,e)}skip(e){return e<0||null==e?this:new JO(this,e)}prefetch(e){return new dz(this,e)}shuffle(e,t){return new hz(this,e,t)}serial(){return new YO(this)}},XO=class extends KO{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:BO(e),done:!1}}},ZO=class extends KO{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},YO=class extends KO{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},JO=class extends KO{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;ry(e.value)}return this.upstream.next()}},QO=class extends KO{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},ez=class extends KO{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},tz=class extends KO{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ry(e.value)}}},nz=class extends KO{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=qc.getTensorsInContainer(e.value),n=this.transform(e.value),r=qc.getTensorsInContainer(n);for(let e of t)qc.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},rz=class extends KO{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},az=class extends KO{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=qc.getTensorsInContainer(e.value),n=await this.transform(e.value),r=qc.getTensorsInContainer(n);for(let e of t)qc.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},sz=class extends KO{constructor(){super(),this.outputQueue=new jO,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},iz=class extends sz{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=qc.getTensorsInContainer(e.value),n=this.transform(e.value),r=qc.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)qc.isTensorInList(e,r)||e.dispose();return!0}},oz=class extends KO{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},lz=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(lz||{}),uz=class extends KO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0,r=await LO(this.iterators,(function(e){return e instanceof KO?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0}}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},dz=class extends KO{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new VO(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},hz=class extends dz{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=OO.alea(n||pc.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},pz=class{constructor(){this.size=null}batch(e){let t,n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=this;return pc.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),t=this.size===1/0||null==this.size?this.size:n?Math.ceil(this.size/e):Math.floor(this.size/e),cz((async()=>(await r.iterator()).columnMajorBatch(e,n,gz)),t)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,cz((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,cz((async()=>(await n.iterator()).filter((t=>ny((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return cz((async()=>(await t.iterator()).map((t=>ny((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return cz((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return cz((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,cz((async()=>function(e,t){return new oz(e,void 0)}(qO((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,cz((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=FO.alea(t||pc.now().toString());return cz((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,cz((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function cz(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends pz{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function fz(e){return cz((async()=>HO(e)),e.length)}function mz(e){if(!WO(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return cz((async()=>function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:lz.FAIL;return new uz(e,t)}(await LO(e,(e=>{if(e instanceof pz)return{value:e.iterator(),recurse:!1};if(WO(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),1)),t)}function gz(e){return null===e?null:function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof jc||pc.isTypedArray(e)}(e[0])?{value:yz(e),recurse:!1}:{value:null,recurse:!0}}function yz(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof jc?Zx(e):Rf(e)}pz.MAX_BUFFER_SIZE=1e4;var Az=class extends pz{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},bz='"',xz=Symbol("out"),vz=Symbol("field"),wz=Symbol("quote"),kz=Symbol("quoteafterquote"),Iz=Symbol("quoteinquote"),Sz=class extends pz{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Az(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(pc.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&pc.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(pc.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=[],r=0,a=e.length,s=xz;for(let t=0;t<a;t++)switch(s){case xz:switch(e.charAt(t)){case bz:r=t+1,s=wz;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=xz;break;default:s=vz,r=t}break;case vz:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),s=xz,r=t+1);break;case wz:e.charAt(t)===bz&&(s=kz);break;case kz:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=xz,r=t+1;break;case bz:s=wz;break;default:s=Iz}break;case Iz:e.charAt(t)===bz&&(s=wz)}if(s===kz?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},Nz=class extends KO{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!Uu().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new Nz(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(pc.sizeFromShape(t));return n.set(e,n.length-e.length),Rf(n,t)}},Tz=class extends KO{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=ev([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=tv([r,n,s,a],[1,4])}else this.cropBox=tv([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Uu().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new Tz(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&pc.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=eg.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return ny((()=>{let t,n=UA(Im(e,"float32"),0);t=$w.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return Ky(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},Cz=class{},Ez=class extends KO{split(e){return new _z(this,e)}},_z=class extends Ez{constructor(e,t){super(),this.upstream=e,this.impl=new Rz(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Rz=class extends sz{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},Mz=class extends KO{decodeUTF8(){return new $z(this)}},$z=class extends Ez{constructor(e){super(),this.upstream=e,this.impl=new Fz(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Fz=class extends sz{constructor(e){if(super(),this.upstream=e,Uu().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=$l();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Uu().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},Oz=class extends Mz{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.file=e,this.options=t,pc.assert(e instanceof Uint8Array||!!Uu().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}},zz=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function Dz(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var Pz=class extends Cz{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.input=e,this.options=t}async iterator(){if(Dz(this.input)&&Uu().get("IS_NODE")){let e=Fl();this.input=e.readFileSync(this.input.slice(7))}return new Oz(this.input,this.options)}},Lz=class extends Cz{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.url=e,this.fileOptions=t}async iterator(){return Dz(this.url)?new Pz(this.url,this.fileOptions).iterator():async function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2?arguments[2]:void 0;"string"==typeof e?t=e:(t=e.url,n=zz(e));let s=await(a||pc.fetch)(t,n);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new Oz(e,r)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function Wz(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new Sz(new Lz(e),t)}function Bz(e){let t=qO(e);return cz((async()=>t))}function Uz(e){return cz((async()=>{let t=await e();return qO((()=>t.next()))}))}async function Vz(e,t){return Tz.create(e,t)}async function Gz(e){return Nz.create(e)}var jz="0.0.0";function Hz(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&pc.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var qz=Xk.whereImpl,Kz=class extends Ul{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Bl(this,Qg())}nextDataId(){return Kz.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Uu().get("IS_NODE")&&Zw.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&pc.isString(n[0])){let a=n.map((e=>pc.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Zw.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>pc.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return km(e.shape,e.dtype,n)}makeOutput(e,t,n){let r=this.write(e,t,n);return Qg().makeTensorFromDataId(r,t,n,this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=pc.now();return e(),{kernelMs:pc.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Hz([e],"where");let t=this.readSync(e.dataId);return qz(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Xz=Kz;Xz.nextDataId=0;var Zz={};function Yz(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}bl(Zz,{addImpl:()=>hD,bincountImpl:()=>mD,bincountReduceImpl:()=>gD,ceilImpl:()=>xD,concatImpl:()=>kD,equalImpl:()=>ID,expImpl:()=>TD,expm1Impl:()=>_D,floorImpl:()=>$D,gatherNdImpl:()=>zD,gatherV2Impl:()=>DD,greaterEqualImpl:()=>BD,greaterImpl:()=>PD,lessEqualImpl:()=>qD,lessImpl:()=>GD,linSpaceImpl:()=>ZD,logImpl:()=>YD,maxImpl:()=>eP,maximumImpl:()=>tP,minimumImpl:()=>aP,multiplyImpl:()=>oP,negImpl:()=>hP,notEqualImpl:()=>cP,prodImpl:()=>bP,rangeImpl:()=>vP,rsqrtImpl:()=>wP,sigmoidImpl:()=>SP,simpleAbsImpl:()=>Yz,sliceImpl:()=>CP,sparseFillEmptyRowsImpl:()=>RP,sparseReshapeImpl:()=>MP,sparseSegmentReductionImpl:()=>$P,sqrtImpl:()=>FP,squaredDifferenceImpl:()=>DP,stridedSliceImpl:()=>WP,stringNGramsImpl:()=>BP,stringSplitImpl:()=>VP,stringToHashBucketFastImpl:()=>GP,subImpl:()=>jP,tileImpl:()=>XP,topKImpl:()=>JP,transposeImpl:()=>gP,uniqueImpl:()=>QP});var Jz={kernelName:qu,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;Hz(t,"abs");let r=new Float32Array(pc.sizeFromShape(t.shape));return r=Yz(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function Qz(e){return(t,n,r,a,s)=>{let i=Zw.assertAndGetBroadcastShape(t,n),o=i.length,l=pc.computeStrides(i),u=pc.sizeFromShape(i),d=pc.getTypedArrayFromDType(s,u),h=t.length,p=n.length,c=pc.computeStrides(t),f=pc.computeStrides(n),m=Zw.getBroadcastDims(t,i),g=Zw.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<d.length;++t){let n=pc.indexToLoc(t,o,l),s=n.slice(-h);m.forEach((e=>s[e]=0));let i=pc.locToIndex(s,h,c),u=n.slice(-p);g.forEach((e=>u[e]=0));let y=pc.locToIndex(u,p,f);d[t]=e(r[i],a[y])}return[d,i]}}function eD(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var tD={kernelName:bd,backendName:"cpu",kernelFunc:eD};function nD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n)return eD({inputs:{real:nD(e,t,"float32"),imag:nD(e,t,"float32")},backend:e});let r=pc.makeZerosTypedArray(pc.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function rD(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var aD={kernelName:oh,backendName:"cpu",kernelFunc:rD};function sD(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var iD={kernelName:Qh,backendName:"cpu",kernelFunc:sD};function oD(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return rD({inputs:{x:a},backend:n});let e=nD(n,a.shape,a.dtype),t=oD({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=eD({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=sD({inputs:{input:a},backend:n}),t=oD({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!pc.hasEncodingLoss(a.dtype,s)){let e=rD({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){let e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){let e=n.data.get(a.dataId).values,t=pc.toTypedArray([0],a.dtype),[r,s]=Qz(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var lD={kernelName:gd,backendName:"cpu",kernelFunc:oD};function uD(e,t,n,r){return null==n?n=>{let{inputs:a,backend:s}=n,{a:i,b:o}=a,l=s;Hz([i,o],e);let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,h="string"===i.dtype?Zw.fromUint8ToStringArray(u):u,p="string"===i.dtype?Zw.fromUint8ToStringArray(d):d,c=r||i.dtype,[f,m]=t(i.shape,o.shape,h,p,c);return l.makeTensorInfo(m,c,f)}:e=>{let{inputs:a,backend:s}=e,{a:i,b:o}=a,l=s;if("complex64"===i.dtype||"complex64"===o.dtype){let e=oD({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,s=l.data.get(r.dataId).values,u=l.data.get(a.dataId).values,d=oD({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(d.dataId),p=h.complexTensorInfos.real,c=h.complexTensorInfos.imag,f=l.data.get(p.dataId).values,m=l.data.get(c.dataId).values,[g,y,A]=n(i.shape,o.shape,s,u,f,m),b=l.makeTensorInfo(A,"float32",g),x=l.makeTensorInfo(A,"float32",y),v=eD({inputs:{real:b,imag:x},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo(b),l.disposeIntermediateTensorInfo(x),v}{let e=l.data.get(i.dataId).values,n=l.data.get(o.dataId).values,a=r||i.dtype,[s,u]=t(i.shape,o.shape,e,n,a);return l.makeTensorInfo(u,a,s)}}}function dD(e){return(t,n,r,a,s,i)=>{let o=Zw.assertAndGetBroadcastShape(t,n),l=pc.sizeFromShape(o),u=o.length,d=pc.computeStrides(o),h=pc.getTypedArrayFromDType("float32",l),p=pc.getTypedArrayFromDType("float32",l),c=Zw.getBroadcastDims(t,o),f=Zw.getBroadcastDims(n,o),m=Zw.mergeRealAndImagArrays(r,a),g=Zw.mergeRealAndImagArrays(s,i),y=t.length,A=pc.computeStrides(t),b=n.length,x=pc.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<h.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){let n=pc.indexToLoc(t,u,d),r=n.slice(-y);c.forEach((e=>r[e]=0));let a=pc.locToIndex(r,y,A),s=n.slice(-b);f.forEach((e=>s[e]=0));let i=pc.locToIndex(s,b,x),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}var hD=Qz(((e,t)=>e+t)),pD=dD(((e,t,n,r)=>({real:e+n,imag:t+r}))),cD=uD(Zu,hD,pD),fD={kernelName:Zu,backendName:"cpu",kernelFunc:cD};function mD(e,t,n,r,a){let s=pc.sizeFromShape(r),i=pc.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function gD(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=e.shape[0],s=e.shape[1],i=km([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function yD(e){return(t,n,r)=>{let a=pc.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function AD(e,t,n){return r=>{let{inputs:a,attrs:s,backend:i}=r,{x:o}=a;if(Hz(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let l=i,u=l.data.get(o.dataId).values,d=pc.sizeFromShape(o.shape),h=n||o.dtype,p=pc.getArrayFromDType(h,d);for(let e=0;e<d;++e)p[e]=t(u[e],s);return l.makeTensorInfo(o.shape,h,p)}}function bD(e,t,n){return r=>{let{inputs:a,attrs:s,backend:i}=r,{x:o}=a;if(Hz(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let l=i,u=l.data.get(o.dataId).values,d=n||o.dtype,h=t(u,d,s);return l.makeTensorInfo(o.shape,d,h)}}var xD=yD((e=>Math.ceil(e))),vD=bD(yd,xD),wD={kernelName:yd,backendName:"cpu",kernelFunc:vD};function kD(e,t,n,r){let a=pc.getArrayFromDType(n,pc.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=pc.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?Zw.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var ID=Qz(((e,t)=>e===t?1:0)),SD=uD(qd,ID,null,"bool"),ND={kernelName:qd,backendName:"cpu",kernelFunc:SD},TD=yD((e=>Math.exp(e))),CD=bD(Kd,TD,"float32"),ED={kernelName:Kd,backendName:"cpu",kernelFunc:CD},_D=yD((e=>Math.expm1(e))),RD=bD(Zd,_D),MD={kernelName:Zd,backendName:"cpu",kernelFunc:RD},$D=yD((e=>Math.floor(e))),FD=bD(eh,$D),OD={kernelName:eh,backendName:"cpu",kernelFunc:FD};function zD(e,t,n,r,a,s,i,o,l){let u=km([r,s],n);for(let n=0;n<r;n++){let r=[],d=0;for(let t=0;t<a;t++){let s=e[n*a+t];d+=s*i[t],r.push(s)}if(d<0||d>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(d*s+e))}return u}function DD(e,t,n){let r=km(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}var PD=Qz(((e,t)=>e>t?1:0)),LD=uD(sh,PD,null,"bool"),WD={kernelName:sh,backendName:"cpu",kernelFunc:LD},BD=Qz(((e,t)=>e>=t?1:0)),UD=uD(ih,BD,null,"bool"),VD={kernelName:ih,backendName:"cpu",kernelFunc:UD},GD=Qz(((e,t)=>e<t?1:0)),jD=uD(fh,GD,null,"bool"),HD={kernelName:fh,backendName:"cpu",kernelFunc:jD},qD=Qz(((e,t)=>e<=t?1:0)),KD=uD(mh,qD,null,"bool"),XD={kernelName:mh,backendName:"cpu",kernelFunc:KD};function ZD(e,t,n){let r=(t-e)/(n-1),a=pc.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var YD=yD((e=>Math.log(e))),JD=bD(yh,YD),QD={kernelName:yh,backendName:"cpu",kernelFunc:JD};function eP(e,t,n,r){let a=pc.getTypedArrayFromDType(r,pc.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var tP=Qz(((e,t)=>Math.max(e,t))),nP=uD(Nh,tP),rP={kernelName:Nh,backendName:"cpu",kernelFunc:nP},aP=Qz(((e,t)=>Math.min(e,t))),sP=uD(Fh,aP),iP={kernelName:Fh,backendName:"cpu",kernelFunc:sP},oP=Qz(((e,t)=>e*t)),lP=dD(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),uP=uD(Ph,oP,lP),dP={kernelName:Ph,backendName:"cpu",kernelFunc:uP};function hP(e,t,n){let r=pc.createScalarValue(-1,n);return oP([],t,r,e,n)}var pP={kernelName:Lh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;Hz(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=hP(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},cP=Qz(((e,t)=>e!==t?1:0)),fP=uD(Wh,cP,null,"bool"),mP={kernelName:Wh,backendName:"cpu",kernelFunc:fP};function gP(e,t,n,r,a){let s=t.length,i=pc.sizeFromShape(t),o=pc.computeStrides(t),l=pc.computeStrides(a),u=pc.getTypedArrayFromDType(n,pc.sizeFromShape(a));for(let t=0;t<i;++t){let n=pc.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[pc.locToIndex(a,s,l)]=e[t]}return u}function yP(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;Hz(a,"transpose");let i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=gP(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var AP={kernelName:Up,backendName:"cpu",kernelFunc:yP};function bP(e,t,n,r){let[a,s]=Zw.computeOutAndReduceShapes(e,r),i=tf(t,"int32"),o=pc.makeZerosTypedArray(pc.sizeFromShape(a),i),l=pc.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var xP={kernelName:Yh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Hz(a,"prod");let o=a.shape.length,l=pc.parseAxisParam(s,a.shape),u=Zw.getAxesPermutation(l,o),d=l,h=a,p=[];null!=u&&(h=yP({inputs:{x:a},backend:n,attrs:{perm:u}}),p.push(h),d=Zw.getInnerMostAxes(d.length,o));let c=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=bP(h.shape,h.dtype,c,d),y=m;return i&&(y=Zw.expandShapeToKeepDim(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function vP(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return pc.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=pc.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var wP=yD((e=>1/Math.sqrt(e))),kP=bD(dp,wP),IP={kernelName:dp,backendName:"cpu",kernelFunc:kP},SP=yD((e=>1/(1+Math.exp(-e)))),NP=AD(Ap,(e=>1/(1+Math.exp(-e)))),TP={kernelName:Ap,backendName:"cpu",kernelFunc:NP};function CP(e,t,n,r,a){let s=cg.isSliceContinous(r,t,n),i=pc.sizeFromShape(n),o=pc.computeStrides(r);if(s){let n=cg.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=km(r,a,"string"===a?Zw.fromUint8ToStringArray(e):e),u=km(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?Zw.fromStringArrayToUint8(u.values):u.values}function EP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;Hz(a,"slice");let[o,l]=cg.parseSliceParams(a,s,i);cg.assertParamsValid(a,o,l);let u=CP(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var _P={kernelName:fp,backendName:"cpu",kernelFunc:EP};function RP(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),d=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(Zw.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[pc.getArrayFromDType(n,0),[0,h],pc.getArrayFromDType(a,0),u,d]}let p=!0,c=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*h];if(n<0)throw new Error(Zw.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(Zw.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],p=p&&n>=c,c=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){let t=e,n=r;for(let e=0;e<o;++e)d[e]=e;return[t,[o,h],n,u,d]}{let t=f[l-1],s=pc.getArrayFromDType(n,t*h),p=pc.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*h],a=c[n],i=(0===n?0:f[n-1])+a;c[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];p[i]=r[t],d[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=i}return[s,[t,h],p,u,d]}}function MP(e,t,n,r,a){let s=pc.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,d=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==d)throw new Error(Zw.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,l.push(1)}else{if(t<0)throw new Error(Zw.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==d){if(u<=0)throw new Error(Zw.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(Zw.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=e}if(pc.sizeFromShape(l)!==s)throw new Error(Zw.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=pc.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[f,[i,o],l]}function $P(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=r.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?a[o-1]+1:0;if(d<0)throw new Error(Zw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=d;let p=h.reduce(((e,t)=>e*t),1),c=pc.getArrayFromDType(n,p);if(0===o)return d>0&&c.fill(i),[c,h];if(d<=0)throw new Error(Zw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(Zw.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(Zw.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&c.fill(i,g*u,y*u);for(let t=f;t<m;++t){let n=r[t];if(n<0||n>=l[0])throw new Error(Zw.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)c[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<d&&c.fill(i,g*u,d*u),[c,h]}var FP=yD((e=>Math.sqrt(e))),OP=AD(xp,(e=>Math.sqrt(e))),zP={kernelName:xp,backendName:"cpu",kernelFunc:OP},DP=Qz(((e,t)=>{let n=e-t;return n*n})),PP=uD(_p,DP),LP={kernelName:_p,backendName:"cpu",kernelFunc:PP};function WP(e,t,n,r){let a=km(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}function BP(e,t,n,r,a,s,i,o){return new class{constructor(e,t,n,r,a,s){this.separator=pc.encodeString(e),this.nGramWidths=t,this.leftPad=pc.encodeString(n),this.rightPad=pc.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),d=s-(l+u),h=t+(l>0?0:i-o),p=0;p+=l*this.leftPad.length;for(let t=0;t<d;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+d-1)*this.separator.length,n[r+i]=new Uint8Array(p);let c=n[r+i],f=0,m=e=>e.forEach((e=>c[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<d-1;++t)m(e[h+t]),m(this.separator);if(d>0){m(e[h+d-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=pc.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let n=t[e]-t[e-1],r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}let i=new Array(s[a]);for(let n=0;n<a;++n){let r=t[n],a=s[n];if(this.nGramWidths.forEach((s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l})),this.preserveShort&&a===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth,l=1;this.createNGrams(e,r,i,a,l,o)}}return[i,s]}}(n,r,a,s,i,o).compute(e,t)}function UP(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function VP(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let l=0;l<r;++l){let r=a.length;UP(e[l],t,n,a);let u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}let l=pc.getArrayFromDType("int32",2*s),u=new Array(s),d=[r,i],h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=a[h],++h;return[l,u,d]}function GP(e,t){let n=pc.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=pc.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var jP=Qz(((e,t)=>e-t)),HP=dD(((e,t,n,r)=>({real:e-n,imag:t-r}))),qP=uD(zp,jP,HP),KP={kernelName:zp,backendName:"cpu",kernelFunc:qP};function XP(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=km(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var ZP=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function YP(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);YP(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}let a=e[t],s=n,i=r;for(pc.swap(e,n,t),ZP(e[r],a)>0&&pc.swap(e,n,r);s<i;){for(pc.swap(e,s,i),s++,i--;ZP(e[s],a)<0;)s+=1;for(;ZP(e[i],a)>0;)i-=1}0===ZP(e[n],a)?pc.swap(e,n,i):(i+=1,pc.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function JP(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=pc.getTypedArrayFromDType(n,i*r),u=pc.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(YP(i,r),i=i.slice(0,r)),a&&i.sort(ZP);let d=t*r,h=l.subarray(d,d+r),p=u.subarray(d,d+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}let d=t.slice();return d[d.length-1]=r,[km(d,n,l),km(d,"int32",u)]}function QP(e,t,n,r){let a=pc.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i={},o=new Int32Array(n[a]),l=new Uc(s,r,e),u=[],d=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(d)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{let e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}let h=s.slice();h[1]=Object.keys(i).length;let p=new Uc(h,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=h[1],{outputValues:p.values,outputShape:c,indices:o}}var eL="0.0.0";py("cpu",(()=>new Xz),1);var tL=AD(Gd,(e=>e>=0?e:Math.exp(e)-1)),nL={kernelName:Gd,backendName:"cpu",kernelFunc:tL};function rL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;Hz([a],"leakyRelu");let i=pc.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=pc.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var aL={kernelName:ch,backendName:"cpu",kernelFunc:rL},sL=Qz(((e,t)=>e<0?t*e:e));function iL(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;Hz([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=sL(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var oL={kernelName:Zh,backendName:"cpu",kernelFunc:iL},lL=AD(tp,(e=>Math.max(0,e))),uL={kernelName:tp,backendName:"cpu",kernelFunc:lL},dL=AD(op,(e=>Math.min(Math.max(0,e),6))),hL={kernelName:op,backendName:"cpu",kernelFunc:dL};function pL(e,t,n,r,a){if("linear"===n)return rD({inputs:{x:t},backend:e});if("relu"===n)return lL({inputs:{x:t},backend:e});if("elu"===n)return tL({inputs:{x:t},backend:e});if("relu6"===n)return dL({inputs:{x:t},backend:e});if("prelu"===n)return iL({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return rL({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return NP({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function cL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=pc.sizeFromShape(a.shape),o=pc.inferFromImplicitShape(s,i),l=pc.sizeFromShape(o);pc.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var fL={kernelName:np,backendName:"cpu",kernelFunc:cL};function mL(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;Hz([a,s],"matMul");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=pc.sizeFromShape(f),y=pc.sizeFromShape(m),A=Xm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);pc.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let b=o?[y,c,h]:[y,h,c],x=cL({inputs:{x:a},backend:n,attrs:{shape:i?[g,d,p]:[g,p,d]}}),v=cL({inputs:{x:s},backend:n,attrs:{shape:b}}),w=i?x.shape[1]:x.shape[2],k=i?x.shape[2]:x.shape[1],I=o?v.shape[1]:v.shape[2],S=Math.max(g,y),N=n.data.get(x.dataId).values,T=n.data.get(v.dataId).values,C=pc.computeStrides(x.shape),E=pc.computeStrides(v.shape),[_,R,M]=i?[C[0],1,C[1]]:[C[0],C[1],1],[$,F,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],z=k*I,D=km([S,k,I],x.dtype),P=D.values,L=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<k;t+=L)for(let n=0;n<I;n+=L)for(let r=0;r<w;r+=L){let a=Math.min(t+L,k),s=Math.min(n+L,I),i=Math.min(r+L,w);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){let r=Math.min(e,g-1)*_,s=Math.min(e,y-1)*O;n+=N[r+o*R+a*M]*T[a*$+t*F+s]}P[e*z+(o*I+t)]+=n}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(A,D.dtype,D.values)}var gL={kernelName:hd,backendName:"cpu",kernelFunc:mL},yL={kernelName:Zp,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:d}=a,{transposeA:h,transposeB:p,activation:c,leakyreluAlpha:f}=i,m=[];t=mL({inputs:{a:o,b:l},attrs:{transposeA:h,transposeB:p},backend:s}),u&&(n=cD({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=pL(s,t,c,d,f),m.push(t),t=r);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},AL=AD(Ku,(e=>Math.acos(e))),bL={kernelName:Ku,backendName:"cpu",kernelFunc:AL},xL=AD(Xu,(e=>Math.acosh(e))),vL={kernelName:Xu,backendName:"cpu",kernelFunc:xL},wL={kernelName:Yu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;Hz(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=km(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}},kL={kernelName:Ju,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Hz(a,"all");let o=pc.parseAxisParam(s,a.shape),l=o,u=Zw.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=yP({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Zw.getInnerMostAxes(l.length,a.shape.length)),Zw.assertAxesAreInnerMostDims("all",l,d.shape.length);let[h,p]=Zw.computeOutAndReduceShapes(d.shape,l),c=pc.sizeFromShape(p),f=pc.makeZerosTypedArray(pc.sizeFromShape(h),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,f);if(i){let e=cL({inputs:{x:g},backend:n,attrs:{shape:Zw.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},IL={kernelName:Qu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Hz(a,"any");let o=pc.parseAxisParam(s,a.shape),l=o,u=Zw.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=yP({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Zw.getInnerMostAxes(l.length,a.shape.length)),Zw.assertAxesAreInnerMostDims("any",l,d.shape.length);let[h,p]=Zw.computeOutAndReduceShapes(d.shape,l),c=pc.sizeFromShape(p),f=pc.makeZerosTypedArray(pc.sizeFromShape(h),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,f);if(i){let e=cL({inputs:{x:g},backend:n,attrs:{shape:Zw.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},SL={kernelName:ed,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Hz(a,"argMax");let i=pc.parseAxisParam(s,a.shape),o=Zw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=yP({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Zw.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],Zw.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[d,h]=Zw.computeOutAndReduceShapes(l.shape,i),p=pc.sizeFromShape(d),c=pc.makeZerosTypedArray(p,"int32"),f=pc.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",c)}},NL={kernelName:td,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Hz(a,"argMin");let i=pc.parseAxisParam(s,a.shape),o=Zw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=yP({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Zw.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],Zw.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[d,h]=Zw.computeOutAndReduceShapes(l.shape,i),p=pc.sizeFromShape(d),c=pc.makeZerosTypedArray(p,"int32"),f=pc.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",c)}},TL=AD(nd,(e=>Math.asin(e))),CL={kernelName:nd,backendName:"cpu",kernelFunc:TL},EL=AD(rd,(e=>Math.asinh(e))),_L={kernelName:rd,backendName:"cpu",kernelFunc:EL},RL=AD(ad,(e=>Math.atan(e))),ML={kernelName:ad,backendName:"cpu",kernelFunc:RL},$L=Qz(((e,t)=>Math.atan2(e,t))),FL=uD(id,$L),OL={kernelName:id,backendName:"cpu",kernelFunc:FL},zL=AD(sd,(e=>Math.atanh(e))),DL={kernelName:sd,backendName:"cpu",kernelFunc:zL};function PL(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,d=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=km(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],A=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let x=y*i-p,v=Math.max(0,x),w=Math.min(a.inHeight,d+x),k=n+y*A;for(let n=0;n<a.outWidth;++n){let i=n*o-c,d=Math.max(0,i),p=Math.min(a.inWidth,h+i),y=f,A=0,x=0;for(let n=v;n<w;n+=l){let a=m+n*r[1];for(let n=d;n<p;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(A+=i,x++)}if(isNaN(y))break}g[k+n*b+t]="avg"===s?A/x:y}}}return m}function LL(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=km(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=km(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let A=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){let h=o*l-f,c=h;for(;c<0;)c+=d;let b=Math.min(r.inWidth,p+h),x=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<A;n+=u){let i=n-g;for(let o=c;o<b;o+=d){let l=o-h,u=m.get(e,n,o,t);u>x&&(x=u,v=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+l)}}i.set(v,e,n,o,t)}}return i}function WL(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,d=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,A="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=km(a.outShape,n),x=b.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],w=a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[3]*a.outShape[4],I=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*v,b=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){let S=v*i-m,N=S;for(;N<0;)N+=u;let T=Math.min(a.inDepth,p+S),C=n+v*w;for(let n=0;n<a.outHeight;++n){let i=n*o-g,p=i;for(;p<0;)p+=d;let m=Math.min(a.inHeight,c+i),v=C+n*k;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=h;let c=Math.min(a.inWidth,f+i),g=v+n*I,w=A,k=0,S=0;for(let n=N;n<T;n+=u){let a=b+n*r[1];for(let n=p;n<m;n+=d){let i=a+n*r[2];for(let n=o;n<c;n+=h){let a=e[i+n*r[3]+t];if("max"===s&&a>w?w=a:"avg"===s&&(k+=a,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}x[g+t]="avg"===s?k/S:w}}}}return b}var BL={kernelName:od,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Hz(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;pc.assert(Zw.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,d=Zw.computePool2DInfo(a.shape,s,i,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&pc.arraysEqual(d.inShape,d.outShape))u=rD({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=pc.computeStrides(a.shape),r=PL(e,a.shape,a.dtype,t,d,"avg");u=n.makeTensorInfo(d.outShape,a.dtype,r.values)}return u}},UL={kernelName:ud,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Hz(a,"avgPool3d");let d=Zw.computePool3DInfo(a.shape,s,i,1,o,l,u),h=WL(n.data.get(a.dataId).values,a.shape,a.dtype,pc.computeStrides(a.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},VL={kernelName:dd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Hz([a,s],"avgPool3DGrad");let d=Zw.computePool3DInfo(s.shape,i,o,1,l,u),h=d.strideDepth,p=d.strideHeight,c=d.strideWidth,f=d.filterDepth,m=d.filterHeight,g=d.filterWidth,y=d.dilationDepth,A=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterDepth,v=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=x-1-d.padInfo.front,I=w-1-d.padInfo.left,S=v-1-d.padInfo.top,N=km(s.shape,"float32"),T=1/(f*m*g),C=n.bufferSync(a);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){let s=n-k,i=r-S,o=a-I,l=0;for(let n=0;n<x;n+=y){let r=(s+n)/h;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=A){let a=(i+n)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<w;n+=b){let s=(o+n)/c;s<0||s>=d.outWidth||Math.floor(s)!==s||(l+=C.get(e,r,a,s,t))}}}N.set(l*T,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},GL={kernelName:ld,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Hz([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=Zw.computePool2DInfo(i.shape,o,l,1,u),h=d.strideHeight,p=d.strideWidth,c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,A=d.effectiveFilterWidth,b=A-1-d.padInfo.left,x=y-1-d.padInfo.top,v=km(i.shape,"float32"),w=1/(c*f),k=n.data.get(a.dataId).values,I=km(a.shape,"float32",k);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=n-x,s=r-b,i=0;for(let n=0;n<y;n+=m){let r=(a+n)/h;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<A;n+=g){let a=(s+n)/p;a<0||a>=d.outWidth||Math.floor(a)!==a||(i+=I.get(e,r,a,t))}}v.set(i*w,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},jL={kernelName:nh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;pc.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),pc.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),pc.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Hz([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let d=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(d.length),g=f.length,y=c.length,A=p.length,b=h.length,x=0,v=0,w=0,k=0;for(let e=0;e<d.length;++e)m[e]=f[x++]+(d[e]-h[v++])*c[w++]/Math.sqrt(p[k++]+u),x>=g&&(x=0),v>=b&&(v=0),w>=y&&(w=0),k>=A&&(k=0);return n.makeTensorInfo(a.shape,a.dtype,m)}},HL={kernelName:pd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Hz([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=Zw.getReshaped(a.shape,s,o),u=Zw.getPermuted(l.length,s.length),d=Zw.getReshapedPermuted(a.shape,s,o),h=Zw.getSliceBeginCoords(i,s.length),p=Zw.getSliceSize(d,i,s.length),c=cL({inputs:{x:a},backend:n,attrs:{shape:l}}),f=yP({inputs:{x:c},backend:n,attrs:{perm:u}}),m=cL({inputs:{x:f},backend:n,attrs:{shape:d}}),g=EP({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},qL={kernelName:cd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=mD(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},KL={kernelName:md,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=Zw.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},XL=AD(Ad,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),ZL={kernelName:Ad,backendName:"cpu",kernelFunc:XL},YL={kernelName:xd,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(pc.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function JL(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var QL={kernelName:uh,backendName:"cpu",kernelFunc:JL};function eW(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=pc.parseAxisParam(a,t[0].shape)[0],i=Zw.computeOutShape(t.map((e=>e.shape)),s);if(0===pc.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>pc.sizeFromShape(e.shape)>0));if(1===o.length)return rD({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));if(Zw.assertParamsConsistent(l,s),"complex64"===o[0].dtype){let e=o.map((e=>sD({inputs:{input:e},backend:n}))),t=o.map((e=>JL({inputs:{input:e},backend:n}))),r=eW({inputs:e,backend:n,attrs:{axis:s}}),a=eW({inputs:t,backend:n,attrs:{axis:s}}),i=eD({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=o.map((e=>{let t=pc.sizeFromShape(e.shape.slice(s));return cL({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Zw.computeOutShape(u.map((e=>e.shape)),1);let h=1===u[0].shape[0],p=kD(d,i,t[0].dtype,h),c=Zw.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var tW={kernelName:vd,backendName:"cpu",kernelFunc:eW};function nW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r;Hz([a,s],"conv2d");let h=Zw.convertConv2DDataFormat(l),p=Zw.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,h),c=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,A=p.padInfo.top,b="channelsLast"===p.dataFormat,x=new Uc(p.outShape,a.dtype),v=pc.computeStrides(a.shape),w=pc.computeStrides(s.shape),k=v[0],I=b?v[1]:v[2],S=b?v[2]:1,N=b?1:v[1],T=x.strides[0],C=b?x.strides[1]:x.strides[2],E=b?x.strides[2]:1,_=b?1:x.strides[1],R=n.data.get(a.dataId).values,M=n.data.get(s.dataId).values,$=x.values;for(let e=0;e<p.batchSize;++e){let t=e*k,n=e*T;for(let e=0;e<p.outHeight;++e){let r=n+e*C,a=e*p.strideHeight-A;for(let e=0;e<c;++e){let n=a+e*m;if(n<0||n>=p.inHeight)continue;let s=e*w[0],i=t+n*I;for(let e=0;e<p.outWidth;++e){let t=r+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=p.inWidth)continue;let a=i+r*S,o=s+e*w[1];for(let e=0;e<p.inChannels;++e){let n=R[a+e*N];for(let e=0;e<p.outChannels;++e)$[t+e*_]+=n*M[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,$)}var rW={kernelName:wd,backendName:"cpu",kernelFunc:nW},aW={kernelName:kd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r;Hz([a,s],"conv2dBackpropFilter");let h=Zw.convertConv2DDataFormat(l),p=Zw.computeConv2DInfo(a.shape,d,i,1,o,u,!1,h),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,A=new Uc(p.filterShape,"float32"),b=p.padInfo.left,x=p.padInfo.top,v=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,k=new Uc(a.shape,a.dtype,v),I=new Uc(s.shape,s.dtype,w);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((x-e)/c)),n=Math.min(p.outHeight,(p.inHeight+x-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((b-r)/f)),s=Math.min(p.outWidth,(p.inWidth+b-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let d=t;d<n;++d){let t=e+d*c-x;for(let e=a;e<s;++e){let n=r+e*f-b;l+=y?k.get(u,t,n,i)*I.get(u,d,e,o):k.get(u,i,t,n)*I.get(u,o,d,e)}}A.set(l,e,r,i,o)}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}},sW={kernelName:Id,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r;Hz([a,s],"conv2dBackpropInput");let h=pc.computeStrides(s.shape),p=pc.computeStrides(a.shape),c=Zw.convertConv2DDataFormat(u),f=Zw.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),m=new Uc(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,A=n.data.get(s.dataId).values,[b,x,v]=h,{batchSize:w,filterHeight:k,filterWidth:I,inChannels:S,inHeight:N,inWidth:T,outChannels:C,outHeight:E,outWidth:_,strideHeight:R,strideWidth:M}=f;c=f.dataFormat;let $=k-1-f.padInfo.top,F=I-1-f.padInfo.left,O="channelsLast"===c,z=m.strides[0],D=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,L=O?1:m.strides[1],W=p[0],B=O?p[1]:p[2],U=O?p[2]:1,V=O?1:p[1];for(let e=0;e<w;++e)for(let t=0;t<S;++t)for(let n=0;n<N;++n){let r=n-$,a=Math.max(0,Math.ceil(r/R)),s=Math.min(E,(k+r)/R);for(let i=0;i<T;++i){let o=i-F,l=Math.max(0,Math.ceil(o/M)),u=Math.min(_,(I+o)/M),d=0;for(let n=a;n<s;++n){let a=n*R-r;for(let r=l;r<u;++r){let s=W*e+B*n+U*r,i=b*(k-1-a)+x*(I-1-(r*M-o))+v*t;for(let e=0;e<C;++e)d+=y[s+V*e]*A[i+e]}}g[z*e+D*n+P*i+L*t]=d}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},iW={kernelName:Sd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;Hz([a,s],"conv3d");let u=Zw.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,A=g.left,b=g.top,x=new Uc(u.outShape,a.dtype),v=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,k=x.values,I=pc.computeStrides(a.shape),S=pc.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*I[0],n=e*x.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*x.strides[1],a=e*u.strideDepth-y;for(let e=0;e<d;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*S[0],i=t+n*I[1];for(let e=0;e<u.outHeight;++e){let t=r+e*x.strides[2],n=e*u.strideHeight-b;for(let e=0;e<h;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*S[1],o=i+r*I[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-A;for(let e=0;e<p;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*S[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=v[i+e];for(let e=0;e<u.outChannels;++e)k[n+e]+=t*w[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},oW={kernelName:Nd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;Hz([a,s],"conv3dBackpropFilterV2");let u=pc.computeStrides(a.shape),d=pc.computeStrides(s.shape),h=Zw.computeConv3DInfo(a.shape,l,i,1,o),p=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,A=new Uc(h.filterShape,"float32"),b=A.values,[x,v,w,k]=A.strides,I=n.data.get(s.dataId).values,[S,N,T,C]=d,E=n.data.get(a.dataId).values,[_,R,M,$]=u,F=h.padInfo.front,O=h.padInfo.left,z=h.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((F-e)/p)),n=Math.min(h.outDepth,(h.inDepth+F-e)/p),r=e*x;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((z-a)/c)),i=Math.min(h.outHeight,(h.inHeight+z-a)/c),o=a*v+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((O-r)/f)),u=Math.min(h.outWidth,(h.inWidth+O-r)/f),d=r*w+o;for(let o=0;o<h.inChannels;++o){let m=o*k+d;for(let d=0;d<h.outChannels;++d){let g=0;for(let m=0;m<h.batchSize;++m){let h=m*_,y=m*S;for(let m=t;m<n;++m){let t=(e+m*p-F)*R+h,n=m*N+y;for(let e=s;e<i;++e){let s=(a+e*c-z)*M+t,i=e*T+n;for(let e=l;e<u;++e){let t=e*C+i;g+=E[(r+e*f-O)*$+s+o]*I[t+d]}}}}b[m+d]=g}}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}},lW={kernelName:Td,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;Hz([a],"conv3dBackpropInputV2");let u=pc.computeStrides(a.shape),d=pc.computeStrides(s.shape),h=Zw.computeConv3DInfo(l,s.shape,o,1,i),p=new Uc(h.inShape,"float32"),c=p.values,[f,m,g,y]=p.strides,A=n.data.get(a.dataId).values,[b,x,v,w]=u,k=n.data.get(s.dataId).values,[I,S,N,T]=d,{batchSize:C,filterDepth:E,filterHeight:_,filterWidth:R,inChannels:M,inDepth:$,inHeight:F,inWidth:O,outChannels:z,outDepth:D,outHeight:P,outWidth:L,strideDepth:W,strideHeight:B,strideWidth:U}=h,V=E-1-h.padInfo.front,G=_-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<M;++t)for(let n=0;n<$;++n){let r=n-V,a=Math.max(0,Math.ceil(r/W)),s=Math.min(D,(E+r)/W);for(let i=0;i<F;++i){let o=i-G,l=Math.max(0,Math.ceil(o/B)),u=Math.min(P,(_+o)/B);for(let d=0;d<O;++d){let h=d-j,p=Math.max(0,Math.ceil(h/U)),C=Math.min(L,(R+h)/U),M=0;for(let n=a;n<s;++n){let a=n*W-r;for(let r=l;r<u;++r){let s=r*B-o;for(let i=p;i<C;++i){let o=b*e+x*n+v*r+w*i,l=I*(E-1-a)+S*(_-1-s)+N*(R-1-(i*U-h))+T*t;for(let e=0;e<z;++e)M+=A[o+e]*k[l+e]}}}c[f*e+m*n+g*i+y*d+t]=M}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},uW=AD(Cd,(e=>Math.cos(e))),dW={kernelName:Cd,backendName:"cpu",kernelFunc:uW},hW=AD(Ed,(e=>Math.cosh(e))),pW={kernelName:Ed,backendName:"cpu",kernelFunc:hW},cW={kernelName:Md,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[d,h,p,c]=a.shape,f=s.shape[0],[m,g]=o,y=km([f,m,g,c],"float32"),A=n.data.get(s.dataId).values,b=n.data.get(i.dataId).values,x=n.data.get(a.dataId).values,v=pc.computeStrides(a.shape),w=pc.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=A[t],r=A[t+1],a=A[t+2],s=A[t+3],i=b[e];if(i>=d)continue;let o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){let d=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(d<0||d>h-1)for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*w[2]+t*w[1]+e*w[0];y.values[a]=u}else if("bilinear"===l){let n=Math.floor(d),a=Math.ceil(d),o=d-n;for(let l=0;l<g;l++){let d=g>1?r*(p-1)+l*f:.5*(r+s)*(p-1);if(d<0||d>p-1){for(let n=0;n<c;n++){let r=n+l*w[2]+t*w[1]+e*w[0];y.values[r]=u}continue}let h=Math.floor(d),m=Math.ceil(d),A=d-h;for(let r=0;r<c;r++){let s=r+h*v[2]+n*v[1]+i*v[0],u=x[s];s=r+m*v[2]+n*v[1]+i*v[0];let d=x[s];s=r+h*v[2]+a*v[1]+i*v[0];let p=x[s];s=r+m*v[2]+a*v[1]+i*v[0];let c=u+(d-u)*A,f=p+(x[s]-p)*A;s=r+l*w[2]+t*w[1]+e*w[0],y.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(p-1)+n*f:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<c;r++){let a=r+n*w[2]+t*w[1]+e*w[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(d);for(let r=0;r<c;r++){let a=r+o*v[2]+l*v[1]+i*v[0],s=r+n*w[2]+t*w[1]+e*w[0];y.values[s]=x[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},fW={kernelName:_d,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Hz(a,"cumprod");let l=Zw.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=yP({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=Zw.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let h=tf(u.dtype,"int32"),p=pc.makeOnesTypedArray(pc.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)p[n]=i?1:c[n];else{let r=m(e,t-1);p[n]=i?c[r]*p[r]:c[n]*p[r]}}let g=n.makeTensorInfo(u.shape,h,p);if(null!=l){let e=yP({inputs:{x:g},backend:n,attrs:{perm:Zw.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},mW={kernelName:Rd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Hz(a,"cumsum");let l=Zw.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=yP({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=Zw.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let h=tf(u.dtype,"int32"),p=pc.makeZerosTypedArray(pc.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)p[n]=i?0:c[n];else{let r=m(e,t-1);p[n]=i?c[r]+p[r]:c[n]+p[r]}}let g=n.makeTensorInfo(u.shape,h,p);if(null!=l){let e=yP({inputs:{x:g},backend:n,attrs:{perm:Zw.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},gW={kernelName:$d,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=mD(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=gD(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},yW={kernelName:Fd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;pc.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],d=a.shape[3],h=l*s,p=u*s,c=d/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*p*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){let a=Math.floor(t/s),i=(r*s+t%s)*c;for(let t=0;t<c;++t){let r=t+i+d*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,p,c],a.dtype,m)}};function AW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;Hz([a,s],"depthwiseConv2DNative");let d=pc.computeStrides(a.shape),h=pc.computeStrides(s.shape),p=l;null==p&&(p=[1,1]),pc.assert(Zw.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));let c=Zw.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:A}=c,b=A.left,x=A.top,v=c.outChannels/c.inChannels,w=new Uc(c.outShape,a.dtype),k=n.data.get(a.dataId).values,I=n.data.get(s.dataId).values,S=w.values;for(let e=0;e<c.batchSize;++e){let t=e*d[0],n=e*w.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*w.strides[1],a=e*c.strideHeight-x;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*h[0],i=t+n*d[1];for(let e=0;e<c.outWidth;++e){let t=r+e*w.strides[2],n=e*c.strideWidth-b;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*h[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=k[o+e];for(let e=0;e<v;++e)S[l+e]+=t*I[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var bW={kernelName:Od,backendName:"cpu",kernelFunc:AW},xW={kernelName:zd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r;Hz([a,s],"depthwiseConv2dNativeBackpropFilter");let h=Zw.computeConv2DInfo(a.shape,d,i,o,l,u,!0),{strideHeight:p,strideWidth:c,filterHeight:f,filterWidth:m}=h,g=new Uc(h.filterShape,"float32"),y=h.padInfo.left,A=h.padInfo.top,b=h.outChannels/h.inChannels,x=n.data.get(a.dataId).values,v=new Uc(a.shape,a.dtype,x),w=n.data.get(s.dataId).values,k=new Uc(s.shape,s.dtype,w);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((A-e)/p)),n=Math.min(h.outHeight,(h.inHeight+A-e)/p);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(h.outWidth,(h.inWidth+y-r)/c);for(let i=0;i<h.outChannels;++i){let o=Math.trunc(i/b),l=i%b,u=0;for(let l=0;l<h.batchSize;++l)for(let d=t;d<n;++d){let t=e+d*p-A;for(let e=a;e<s;++e){let n=r+e*c-y;u+=v.get(l,t,n,o)*k.get(l,d,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},vW={kernelName:Dd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r;Hz([a,s],"depthwiseConv2DNativeBackpropInput");let h=pc.computeStrides(a.shape),p=pc.computeStrides(s.shape),c=Zw.computeConv2DInfo(d,s.shape,i,o,l,u,!0),f=new Uc(c.inShape,"float32"),m=f.values,[g,y,A]=f.strides,b=n.data.get(a.dataId).values,[x,v,w]=h,k=n.data.get(s.dataId).values,[I,S,N]=p,{batchSize:T,filterHeight:C,filterWidth:E,inChannels:_,inHeight:R,inWidth:M,outChannels:$,outHeight:F,outWidth:O,strideHeight:z,strideWidth:D}=c,P=C-1-c.padInfo.top,L=E-1-c.padInfo.left,W=$/_;for(let e=0;e<T;++e)for(let t=0;t<_;++t)for(let n=0;n<R;++n){let r=n-P,a=Math.max(0,Math.ceil(r/z)),s=Math.min(F,(C+r)/z);for(let i=0;i<M;++i){let o=i-L,l=Math.max(0,Math.ceil(o/D)),u=Math.min(O,(E+o)/D),d=0;for(let n=a;n<s;++n){let a=n*z-r;for(let r=l;r<u;++r){let s=x*e+v*n+w*r,i=I*(C-1-a)+S*(E-1-(r*D-o))+N*t;for(let e=0;e<W;++e)d+=b[s+(t*W+e)]*k[i+e]}}m[g*e+y*n+A*i+t]=d}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},wW={kernelName:Pd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=pc.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=km([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},kW={kernelName:Ld,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=n,d=u.data.get(a.dataId).values,h=a.shape.length,p=u.data.get(s.dataId).values,c=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:A,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=Zw.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),C=pc.sizeFromShape(T),E=T.length,_=pc.getArrayFromDType(a.dtype,C);for(let e=0;e<f;++e)for(let t=0;t<A;++t){let n=t*v-x.top;for(let r=0;r<b;++r){let i=r*w-x.left;for(let o=0;o<y;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){let r=n+t*S;if(r>=0&&r<m)for(let n=0;n<I;++n){let u=i+n*N;if(u>=0&&u<g){let i=pc.locToIndex([e,r,u,o],h,pc.computeStrides(a.shape)),f=pc.locToIndex([t,n,o],c,pc.computeStrides(s.shape)),m=d[i]+p[f];m>l&&(l=m)}}}_[pc.locToIndex([e,t,r,o],E,pc.computeStrides(T))]=l}}}return{dataId:u.write(pc.toTypedArray(_,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},IW={kernelName:Bd,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r,d=n,h=pc.toNestedArray(a.shape,d.data.get(a.dataId).values),p=pc.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Zw.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u);pc.assert(i.rank===N.length,(()=>`Error in ${Bd}, dy must have the same rank as output ${N.length}, but got ${i.rank}`));let T=pc.toNestedArray(N,d.data.get(i.dataId).values),C=pc.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*x-b.top;for(let r=0;r<A;++r){let a=r*v-b.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<f)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<m){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=t,l=n)}}}C[o][l][s]+=T[e][t][r][s]}}}return{dataId:d.write(pc.toTypedArray(C,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},SW={kernelName:Wd,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r,d=n,h=pc.toNestedArray(a.shape,d.data.get(a.dataId).values),p=pc.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Zw.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u);pc.assert(i.rank===N.length,(()=>`Error in ${Wd}, dy must have the same rank as output ${N.length}, but got ${i.rank}`));let T=pc.toNestedArray(N,d.data.get(i.dataId).values),C=pc.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*x-b.top;for(let r=0;r<A;++r){let a=r*v-b.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<f)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<m){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=r,l=u)}}}C[e][o][l][s]+=T[e][t][r][s]}}}return{dataId:d.write(pc.toTypedArray(C,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};function NW(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;Hz(s,"sum"),t="bool"===s.dtype?oD({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):rD({inputs:{x:s},backend:r});let l=t.shape.length,u=pc.parseAxisParam(i,t.shape),d=Zw.getAxesPermutation(u,l),h=u,p=t;null!=d&&(p=yP({inputs:{x:t},backend:r,attrs:{perm:d}}),h=Zw.getInnerMostAxes(h.length,l)),Zw.assertAxesAreInnerMostDims("sum",h,p.shape.length);let[c,f]=Zw.computeOutAndReduceShapes(p.shape,h),m=nD(r,c,Zw.upcastType(p.dtype,"int32")),g=pc.sizeFromShape(f),y=r.data.get(m.dataId).values,A=r.data.get(p.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=A[t+e];y[e]=n}if(o){let e=m;m=cL({inputs:{x:m},backend:r,attrs:{shape:Zw.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=d&&r.disposeIntermediateTensorInfo(p),m}var TW={kernelName:vp,backendName:"cpu",kernelFunc:NW},CW={kernelName:Vd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Zw.decodeEinsumEquation(a,s.length);Zw.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=Zw.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,f=[];for(let e=0;e<h;++e){for(let t of d[e]){let e,{permutationIndices:r,expandDims:a}=Zw.getEinsumPermutation(c,l[t]);Zw.isIdentityPermutation(r)?e=s[t]:(e=yP({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);pc.arraysEqual(e.shape,i)||(e=cL({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===p?p=e:(p=uP({inputs:{a:e,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=NW({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},EW={kernelName:jd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;Hz([r,a],"eluGrad");let s=new Float32Array(pc.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},_W=Zw.ERF_P,RW=Zw.ERF_A1,MW=Zw.ERF_A2,$W=Zw.ERF_A3,FW=Zw.ERF_A4,OW=Zw.ERF_A5,zW=AD(Hd,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+_W*n);return t*(1-((((OW*r+FW)*r+$W)*r+MW)*r+RW)*r*Math.exp(-n*n))})),DW={kernelName:Hd,backendName:"cpu",kernelFunc:zW};function PW(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(pc.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),cL({inputs:{x:a},backend:n,attrs:{shape:o}})}var LW={kernelName:Xd,backendName:"cpu",kernelFunc:PW},WW=Qz(((e,t)=>e/t)),BW=uD(Ud,WW),UW={kernelName:Ud,backendName:"cpu",kernelFunc:BW};function VW(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],d=pc.sizeFromShape(u),h=pc.getTypedArrayFromDType("float32",d),p=pc.getTypedArrayFromDType("float32",d);for(let e=0;e<a;e++){let r=EP({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=EP({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=eD({inputs:{real:r,imag:a},backend:n}),{real:u,imag:d}=GW(i,t,n),c=Zw.mergeRealAndImagArrays(u,d);for(let t=0;t<s;t++){let n=Zw.getComplexWithIndex(c,t);h[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=eD({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function GW(e,t,n){let r=pc.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return 0==(e&e-1)}(r)){let a=jW(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",pc.createScalarValue(r,"float32")),i=rD({inputs:{x:s},backend:n}),l=UW.kernelFunc({inputs:{a:e,b:s},backend:n}),u=UW.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:d,imag:h}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=Zw.exponent(a*r,t,n),l=Zw.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),Zw.assignToTypedArray(r,s,i,a)}return r}(Zw.mergeRealAndImagArrays(s,i),r,t);return Zw.splitRealAndImagArrays(e)}}function jW(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=Zw.mergeRealAndImagArrays(e,t),i=n/2,o=Zw.complexWithEvenIndex(s),l=o.real,u=o.imag,d=[l.length],h=a.makeTensorInfo(d,"float32",l),p=a.makeTensorInfo(d,"float32",u),c=eD({inputs:{real:h,imag:p},backend:a}),f=Zw.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],A=a.makeTensorInfo(y,"float32",m),b=a.makeTensorInfo(y,"float32",g),x=eD({inputs:{real:A,imag:b},backend:a}),v=jW(l,u,i,r,a),w=v.real,k=v.imag,I=[w.length],S=a.makeTensorInfo(I,"float32",w),N=a.makeTensorInfo(I,"float32",k),T=eD({inputs:{real:S,imag:N},backend:a}),C=jW(m,g,i,r,a),E=C.real,_=C.imag,R=[E.length],M=a.makeTensorInfo(R,"float32",E),$=a.makeTensorInfo(R,"float32",_),F=eD({inputs:{real:M,imag:$},backend:a}),O=Zw.exponents(n,r),z=[O.real.length],D=a.makeTensorInfo(z,"float32",O.real),P=a.makeTensorInfo(z,"float32",O.imag),L=eD({inputs:{real:D,imag:P},backend:a}),W=uP({inputs:{a:L,b:F},backend:a}),B=cD({inputs:{a:T,b:W},backend:a}),U=qP({inputs:{a:T,b:W},backend:a}),V=sD({inputs:{input:B},backend:a}),G=sD({inputs:{input:U},backend:a}),j=JL({inputs:{input:B},backend:a}),H=JL({inputs:{input:U},backend:a}),q=eW({inputs:[V,G],backend:a,attrs:{axis:0}}),K=eW({inputs:[j,H],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Z=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Z}}var HW={kernelName:Yd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=pc.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=cL({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=VW(i,!1,n),l=cL({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function qW(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||pc.inferDtype(a),o=pc.getArrayFromDType(i,pc.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var KW={kernelName:Jd,backendName:"cpu",kernelFunc:qW},XW={kernelName:Qd,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,s=r,i=pc.getTypedArrayFromDType(a.dtype,pc.sizeFromShape(a.shape)),[o,l,u,d]=a.shape,h=s.data.get(a.dataId).values;for(let e=0;e<o;e++){let t=e*u*l*d;for(let e=0;e<l;e++){let n=e*(u*d);for(let e=0;e<u;e++){let r=e*d;for(let a=0;a<d;a++){let s=Math.round(u-e-1),o=t+n+r+a,l=h[o];s>=0&&s<u&&(l=h[t+n+s*d+a]),i[o]=l}}}}return{dataId:s.write(i,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},ZW=Qz(((e,t)=>Math.floor(e/t))),YW=uD(th,ZW,null,"int32"),JW={kernelName:th,backendName:"cpu",kernelFunc:YW},QW={kernelName:Yp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=nW({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){let e=m;m=cD({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=pL(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}},eB={kernelName:Jp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=AW({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){let e=m;m=cD({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=pL(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}},tB={kernelName:ah,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=pc.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,d,h]=Zw.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let p=zD(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,d,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,p.values)}},nB={kernelName:rh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;Hz([a,s],"gatherV2");let l=pc.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,d=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];pc.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let h=o;null==o&&(h=0);let p=pc.sizeFromShape(s.shape),c=Zw.segment_util.collectGatherOpShapeInfo(a,s,l,h),f=cL({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=cL({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,p/c.batchSize]}}),g=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize],y=n.bufferSync(m),A=DD(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,A.dtype,A.values)}},rB={kernelName:lh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=pc.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=cL({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=VW(i,!0,n),l=cL({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},aB=AD(dh,(e=>Number.isFinite(e)?1:0),"bool"),sB={kernelName:dh,backendName:"cpu",kernelFunc:aB},iB=AD(hh,(e=>Math.abs(e)===1/0?1:0),"bool"),oB={kernelName:hh,backendName:"cpu",kernelFunc:iB},lB=AD(ph,(e=>Number.isNaN(e)?1:0),"bool"),uB={kernelName:ph,backendName:"cpu",kernelFunc:lB},dB={kernelName:gh,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=ZD(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},hB=AD(Ah,(e=>Math.log1p(e))),pB={kernelName:Ah,backendName:"cpu",kernelFunc:hB},cB=Qz(((e,t)=>e&&t)),fB=uD(bh,cB,null,"bool"),mB={kernelName:bh,backendName:"cpu",kernelFunc:fB},gB=AD(xh,(e=>e?0:1),"bool"),yB={kernelName:xh,backendName:"cpu",kernelFunc:gB},AB=Qz(((e,t)=>e||t)),bB=uD(vh,AB,null,"bool"),xB={kernelName:vh,backendName:"cpu",kernelFunc:bB},vB={kernelName:kh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;Hz(a,"LRN");let u=a.shape[3],d=u-1,h=n.data.get(a.dataId).values,p=pc.sizeFromShape(a.shape),c=new Float32Array(p);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,d),a=0;for(;n<=r;n++){let e=h[n];a+=e*e}return a}for(let e=0;e<p;e++){let t=f(e),n=h[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}},wB={kernelName:Ih,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;Hz(i,"LRNGrad");let h=pc.sizeFromShape(i.shape),p=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){let t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*d*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-d)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function kB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,d=pc.parseAxisParam(s,l),h=d,p=Zw.getAxesPermutation(h,u),c=o.data.get(a.dataId).values;if(null!=p){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];c=gP(c,l,a.dtype,p,e),h=Zw.getInnerMostAxes(h.length,u),l=e}Hz(a,"max"),Zw.assertAxesAreInnerMostDims("max",h,u);let[f,m]=Zw.computeOutAndReduceShapes(l,h),g=eP(c,pc.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),A=f;return i&&(A=Zw.expandShapeToKeepDim(f,d)),{dataId:y,shape:A,dtype:a.dtype}}var IB={kernelName:Sh,backendName:"cpu",kernelFunc:kB},SB={kernelName:Th,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Hz(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;pc.assert(Zw.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,d=Zw.computePool2DInfo(a.shape,s,i,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&pc.arraysEqual(d.inShape,d.outShape))u=rD({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=pc.computeStrides(a.shape),r=PL(e,a.shape,a.dtype,t,d,"max");u=n.makeTensorInfo(d.outShape,a.dtype,r.values)}return u}},NB={kernelName:Eh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Hz(a,"maxPool3d");let d=Zw.computePool3DInfo(a.shape,s,i,1,o,l,u),h=WL(n.data.get(a.dataId).values,a.shape,a.dtype,pc.computeStrides(a.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},TB={kernelName:_h,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Hz([a,s],"maxPool3DGrad");let d=Zw.computePool3DInfo(s.shape,i,o,1,l,u),h=function(e,t){let n=km(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let A=y*r-p,b=A;for(;b<0;)b+=i;let x=Math.min(t.inDepth,u+A);for(let r=0;r<t.outHeight;++r){let u=r*a-c,p=u;for(;p<0;)p+=o;let v=Math.min(t.inHeight,d+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,w=c;for(;w<0;)w+=l;let k=Math.min(t.inWidth,h+c),I=Number.NEGATIVE_INFINITY,S=-1;for(let t=b;t<x;t+=i){let n=t-A;for(let r=p;r<v;r+=o){let a=r-u;for(let s=w;s<k;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=I&&(I=o,S=n*d*h+a*d+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),d),p=d.strideDepth,c=d.strideHeight,f=d.strideWidth,m=d.dilationDepth,g=d.dilationHeight,y=d.dilationWidth,A=d.effectiveFilterDepth,b=d.effectiveFilterHeight,x=d.effectiveFilterWidth,v=A-1-d.padInfo.front,w=x-1-d.padInfo.left,k=b-1-d.padInfo.top,I=km(s.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){let s=n-v,i=r-k,o=a-w,l=0;for(let n=0;n<A;n+=m){let r=(s+n)/p;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let a=0;a<b;a+=g){let s=(i+a)/c;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let i=0;i<x;i+=y){let u=(o+i)/f;if(u<0||u>=d.outWidth||Math.floor(u)!==u)continue;let p=A*b*x-1-h.get(e,r,s,u,t)===n*b*x+a*x+i?1:0;0!==p&&(l+=S.get(e,r,s,u,t)*p)}}}I.set(l,e,n,r,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},CB={kernelName:Ch,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Hz([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,p=Zw.computePool2DInfo(o.shape,l,u,1,d,h),c=n.data.get(o.dataId).values,f=km(p.outShape,o.dtype,LL(c,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,A=p.dilationWidth,b=p.effectiveFilterHeight,x=p.effectiveFilterWidth,v=x-1-p.padInfo.left,w=b-1-p.padInfo.top,k=km(o.shape,"float32"),I=n.data.get(a.dataId).values,S=km(a.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){let a=n-w,s=r-v,i=0;for(let n=0;n<b;n+=y){let r=(a+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<x;a+=A){let o=(s+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;let l=b*x-1-f.get(e,r,o,t)===n*x+a?1:0;0!==l&&(i+=S.get(e,r,o,t)*l)}}k.set(i,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},EB={kernelName:Rh,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=n,u=r;Hz(a,"MaxPoolWithArgmax");let d=u.data.get(a.dataId).values,h=Zw.computePool2DInfo(a.shape,s,i,[1,1],o),[p,c]=function(e,t,n,r,a){let s=PL(e,0,n,pc.computeStrides(t),a,"max"),i=LL(e,t,n,a,!0,r);return[s.values,i.values]}(d,a.shape,a.dtype,l,h),f=u.write(p,h.outShape,a.dtype),m=u.write(c,h.outShape,a.dtype);return[{dataId:f,shape:h.outShape,dtype:a.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}},_B={kernelName:Mh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=pc.parseAxisParam(s,a.shape),l=Zw.computeOutAndReduceShapes(a.shape,o)[1],u=pc.sizeFromShape(l),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);let p=oD({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(p);let c=BW({inputs:{a:p,b:h},backend:n});d.push(c);let f=NW({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},RB={kernelName:$h,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Hz(a,"min");let o=pc.parseAxisParam(s,a.shape),l=o,u=Zw.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=yP({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Zw.getInnerMostAxes(l.length,a.shape.length)),Zw.assertAxesAreInnerMostDims("min",l,d.shape.length);let[h,p]=Zw.computeOutAndReduceShapes(d.shape,l),c=pc.sizeFromShape(p),f=pc.makeZerosTypedArray(pc.sizeFromShape(h),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,f);if(i){let e=cL({inputs:{x:g},backend:n,attrs:{shape:Zw.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},MB={kernelName:Oh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;Hz(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),d="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,c=pc.computeStrides(a.shape),f=pc.sizeFromShape(o),m=o.length,g=pc.computeStrides(o),y=pc.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=pc.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-d:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+d);t=t.map(((e,t)=>e-l[t]));let n=pc.locToIndex(t,p,c);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},$B=Qz(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),FB=uD(zh,$B),OB={kernelName:zh,backendName:"cpu",kernelFunc:FB},zB=xl(Ml());function DB(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=pc.parseAxisParam([o],a.shape),u=kB({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=Zw.expandShapeToKeepDim(u.shape,l),h=cL({inputs:{x:u},backend:n,attrs:{shape:d}}),p=qP({inputs:{a,b:h},backend:n}),c=CD({inputs:{x:p},backend:n}),f=NW({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=cL({inputs:{x:f},backend:n,attrs:{shape:d}}),g=BW({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var PB={kernelName:Ip,backendName:"cpu",kernelFunc:DB},LB={kernelName:Dh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;Hz(a,"multinomial");let l=o?a:DB({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],h=n.data.get(l.dataId).values,p=[u,s],c=pc.makeZerosTypedArray(pc.sizeFromShape(p),"int32");for(let e=0;e<u;++e){let t=e*d,n=new Float32Array(d-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];let r=zB.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",c)}},WB=Xk.nonMaxSuppressionV3Impl,BB={kernelName:Bh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;Hz(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h}=WB(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},UB=Xk.nonMaxSuppressionV4Impl,VB={kernelName:Uh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Hz(a,"NonMaxSuppressionPadded");let d=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:c}=UB(d,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},GB=Xk.nonMaxSuppressionV5Impl,jB={kernelName:Vh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Hz(a,"NonMaxSuppressionWithScore");let d=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=GB(d,h,p,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},HB={kernelName:jh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;Hz(a,"oneHot");let l=pc.sizeFromShape(a.shape),u=new Float32Array(l*s);u.fill(o);let d=n.data.get(a.dataId).values;for(let e=0;e<l;++e)d[e]>=0&&d[e]<s&&(u[e*s+d[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",u)}};function qB(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=sD({inputs:{input:r},backend:n}),t=qB({inputs:{x:e},backend:n}),a=JL({inputs:{input:r},backend:n}),s=qB({inputs:{x:a},backend:n}),i=eD({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return qW({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var KB={kernelName:Hp,backendName:"cpu",kernelFunc:qB},XB={kernelName:Gh,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=sD({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=JL({inputs:{input:a},backend:r}),i=qB({inputs:{x:s},backend:r}),o=eD({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return qW({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function ZB(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return PW({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{pc.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),pc.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=eW({inputs:t.map((e=>{let t=PW({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var YB={kernelName:Hh,backendName:"cpu",kernelFunc:ZB},JB={kernelName:qh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;Hz(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,d=pc.sizeFromShape(a.shape),h=a.shape.length,p=pc.computeStrides(a.shape),c=pc.sizeFromShape(o),f=o.length,m=pc.computeStrides(o),g=pc.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<d;e++){let t=pc.indexToLoc(e,h,p).map(((e,t)=>e+l[t]));g[pc.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},QB=Qz(((e,t)=>Math.pow(e,t))),eU=uD(Xh,QB),tU={kernelName:Xh,backendName:"cpu",kernelFunc:eU},nU={kernelName:Jh,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=vP(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},rU=AD(ep,(e=>1/e)),aU={kernelName:ep,backendName:"cpu",kernelFunc:rU},sU={kernelName:sp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Hz(a,"resizeBilinear");let l=pc.computeStrides(a.shape),[u,d]=o,[h,p,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(pc.sizeFromShape([h,u,d,f])),y=[s&&u>1?p-1:p,s&&d>1?c-1:c],A=[s&&u>1?u-1:u,s&&d>1?d-1:d],b=0,x=y[0]/A[0],v=y[1]/A[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?x*(t+.5)-.5:x*t;let r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<d;e++){let t;t=i?v*(e+.5)-.5:v*e;let n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(c-1,Math.ceil(t)),d=o+n*l[2],h=u+n*l[2],p=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[d+e],n=m[h+e],s=t+(m[p+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[b++]=i}}}return n.makeTensorInfo([h,u,d,f],"float32",g)}},iU={kernelName:ip,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Hz([s,a],"resizeBilinearGrad");let o=pc.computeStrides(a.shape),[l,u,d,h]=a.shape,[,p,c]=s.shape,f=new Float32Array(l*u*d*h),m=[i&&p>1?u-1:u,i&&c>1?d-1:d],g=[i&&p>1?p-1:p,i&&c>1?c-1:c],y=m[0]/g[0],A=m[1]/g[1],b=n.data.get(s.dataId).values,x=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<p;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,p=1-l;for(let e=0;e<c;e++){let t=e*A,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=p*u,w=p*a,k=l*u,I=l*a;for(let e=0;e<h;e++){let t=b[x++];f[c+e]+=t*v,f[m+e]+=t*w,f[g+e]+=t*k,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,d,u,h],"float32",f)}},oU={kernelName:rp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Hz(a,"resizeNearestNeighbor");let l=pc.computeStrides(a.shape),[u,d]=o,[h,p,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*u*d*f),y=[s&&u>1?p-1:p,s&&d>1?c-1:c],A=[s&&u>1?u-1:u,s&&d>1?d-1:d],b=y[0]/A[0],x=y[1]/A[1],v=0;for(let e=0;e<h;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?b*(e+.5):b*e,r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<d;e++){let t=i?x*(e+.5):x*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,u,d,f],a.dtype,g)}},lU={kernelName:ap,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Hz([s,a],"resizeNearestNeighborGrad");let o=pc.computeStrides(a.shape),l=pc.computeStrides(s.shape),[u,d,h,p]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*d*h*p),g=n.data.get(s.dataId).values,y=[i&&c>1?d-1:d,i&&f>1?h-1:h],A=[i&&c>1?c-1:c,i&&f>1?f-1:f],b=y[0]/A[0],x=y[1]/A[1],v=1/b,w=1/x,k=2*Math.ceil(v)+2,I=2*Math.ceil(w)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=t+e*o[1],r=Math.floor(e*v),a=Math.floor(r-k/2);for(let r=0;r<h;r++){let s=n+r*o[2],u=Math.floor(r*w),y=Math.floor(u-I/2);for(let n=0;n<p;n++){let o=0;for(let s=0;s<k;s++){let u=s+a;if(u<0||u>=c)continue;let p=t+u*l[1],m=u*b;if(e===Math.min(d-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){let t=e+y;if(t<0||t>=f)continue;let a=p+t*l[2],s=t*x;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},uU={kernelName:lp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;Hz(a,"reverse");let i=a.shape.length,o=pc.parseAxisParam(s,a.shape);if(0===i)return rD({inputs:{x:a},backend:n});let l=new Uc(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},dU={kernelName:Xp,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=n,l=r,u=pc.getTypedArrayFromDType(a.dtype,pc.sizeFromShape(a.shape)),[d,h,p,c]=a.shape,[f,m]=Zw.getImageCenter(o,h,p),g=Math.sin(s),y=Math.cos(s),A=l.data.get(a.dataId).values;for(let e=0;e<d;e++){let t=e*p*h*c;for(let e=0;e<h;e++){let n=e*(p*c);for(let r=0;r<p;r++){let a=r*c;for(let s=0;s<c;s++){let o=[d,e,r,s],l=o[2],b=o[1],x=(l-f)*y-(b-m)*g,v=(l-f)*g+(b-m)*y;x=Math.round(x+f),v=Math.round(v+m);let w=i;"number"!=typeof i&&(w=3===s?255:i[s]),x>=0&&x<p&&v>=0&&v<h&&(w=A[t+v*(p*c)+x*c+s]),u[t+n+a+s]=w}}}}return{dataId:l.write(u,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},hU=AD(up,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),pU={kernelName:up,backendName:"cpu",kernelFunc:hU};function cU(e,t,n,r,a,s,i,o,l,u){let d=[r/a,a],h=e.values,p=t.values;if(0===r)return km(n,t.dtype);let c=km(d,t.dtype);c.values.fill(l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=h[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[l*a+n]+=p[e*a+n]:c.values[l*a+n]=0===t.rank?p[0]:p[e*a+n]}return c}var fU={kernelName:hp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=Zw.calculateShapes(s,a,i),p=cU(n.bufferSync(a),n.bufferSync(s),i,h,u,l,o,d,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},mU={kernelName:pp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;Hz([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=tf(a.dtype,s.dtype),h=pc.makeZerosTypedArray(pc.sizeFromShape(a.shape),d),p=0,c=0===i||i>1||1===a.shape.length?1:pc.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?h[p++]=l[e]:h[p++]=u[e];return n.makeTensorInfo(a.shape,d,h)}},gU=Zw.SELU_SCALEALPHA,yU=Zw.SELU_SCALE,AU=AD(cp,(e=>e>=0?yU*e:gU*(Math.exp(e)-1))),bU={kernelName:cp,backendName:"cpu",kernelFunc:AU},xU=AD(yp,(e=>e<0?-1:e>0?1:0)),vU={kernelName:yp,backendName:"cpu",kernelFunc:xU},wU=AD(mp,(e=>Math.sin(e))),kU={kernelName:mp,backendName:"cpu",kernelFunc:wU},IU=AD(gp,(e=>Math.sinh(e))),SU={kernelName:gp,backendName:"cpu",kernelFunc:IU},NU=Math.log(1.1920928955078125e-7)+2,TU=AD(bp,(e=>{let t,n=e>-NU,r=e<NU,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),CU={kernelName:bp,backendName:"cpu",kernelFunc:TU},EU={kernelName:wp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Hz([a],"spaceToBatchND");let o=pc.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=JB.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=Zw.getReshaped(u.shape,s,o,!1),h=Zw.getPermuted(d.length,s.length,!1),p=Zw.getReshapedPermuted(u.shape,s,o,!1),c=cL({inputs:{x:u},backend:n,attrs:{shape:d}}),f=yP({inputs:{x:c},backend:n,attrs:{perm:h}}),m=cL({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}},_U={kernelName:Sp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values[0],[h,p,c,f,m]=RP(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},RU={kernelName:Np,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,d,h]=MP(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},MU={kernelName:Tp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=$P(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}},$U={kernelName:Cp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=$P(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}},FU={kernelName:Ep,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=Zw.calculateShapes(s,a,o),c=cU(n.bufferSync(a),n.bufferSync(s),o,p,d,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,c.dtype,c.values)}},OU={kernelName:kp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=pc.parseAxisParam(i,a.shape)[0],l=Zw.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let r=EP({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},zU={kernelName:Rp,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{x:r}=t,a=n;Hz(r,"square");let s=a.data.get(r.dataId).values,i=new Float32Array(s.length);for(let e=0;e<s.length;++e){let t=s[e];i[e]=t*t}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},DU=AD(qp,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),PU={kernelName:qp,backendName:"cpu",kernelFunc:DU},LU={kernelName:Mp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;Hz(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:v}=cg.sliceInfo(a.shape,s,i,o,l,u,d,h,p);if(g)c=cL({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||A){pc.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));let e=cg.computeOutShape(b,x,v),t=EP({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});c=cL({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=WP(f,n.bufferSync(a),v,b);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}},WU={kernelName:$p,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.data.get(d.dataId).values,c=n.data.get(h.dataId).values,[f,m]=BP(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},BU={kernelName:Fp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,d,h]=VP(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},UU={kernelName:Op,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=GP(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},VU=AD(Dp,(e=>Math.tan(e))),GU={kernelName:Dp,backendName:"cpu",kernelFunc:VU},jU=AD(Pp,(e=>Math.tanh(e))),HU={kernelName:Lp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;Hz(a,"tile");let i=XP(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},qU={kernelName:Wp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;Hz(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=JP(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},KU={kernelName:Bp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[d,h,p,c]=a.shape,[f,m]=null!=u?u:[h,p],g=[d,f,m,c],y=pc.computeStrides(a.shape),A=y[0],b=y[1],x=y[2],v=pc.getTypedArrayFromDType(a.dtype,pc.sizeFromShape(g));v.fill(l);let w=r.data.get(a.dataId).values,k=r.data.get(s.dataId).values;for(let e=0;e<d;++e){let t=1===s.shape[0]?k:k.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<c;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let d=(t[0]*r+t[1]*n+t[2])/u,c=(t[3]*r+t[4]*n+t[5])/u,f=XU(d,p,o),m=XU(c,h,o);switch(i){case"nearest":s=YU(w,h,p,A,b,x,e,m,f,a,l);break;case"bilinear":s=JU(w,h,p,A,b,x,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*A+n*b+r*x+a]=s}return r.makeTensorInfo(g,a.dtype,v)}return{dataId:r.write(v,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function XU(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return pc.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return pc.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return pc.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function ZU(e,t,n,r,a,s,i,o,l,u,d){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:d}function YU(e,t,n,r,a,s,i,o,l,u,d){return ZU(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,d)}function JU(e,t,n,r,a,s,i,o,l,u,d){let h=Math.floor(o),p=Math.floor(l),c=h+1,f=p+1;return(c-o)*((f-l)*ZU(e,t,n,r,a,s,i,h,p,u,d)+(l-p)*ZU(e,t,n,r,a,s,i,h,f,u,d))+(o-h)*((f-l)*ZU(e,t,n,r,a,s,i,c,p,u,d)+(l-p)*ZU(e,t,n,r,a,s,i,c,f,u,d))}var QU={kernelName:Vp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Hz(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=QP(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},eV={kernelName:Gp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let d=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let p=new Array(o);for(let e=0;e<p.length;e++){d[s]=e;let t=EP({inputs:{x:a},backend:n,attrs:{begin:d,size:h}});p[e]=cL({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},tV={kernelName:jp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;Hz(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,d=s;for(let e=0;e<u;++e){let t=PW({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,l.push(t)}for(let e=0;e<i;++e){let t=pc.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=SD({inputs:{a:r,b:d},backend:n}),i=oD({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=uP({inputs:{a:i,b:a},backend:n}),h=NW({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(s),l.push(i),l.push(u),l.push(h)}let h=ZB({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},nV=[yL,Jz,bL,vL,fD,wL,kL,IL,SL,NL,CL,_L,ML,OL,DL,BL,UL,VL,GL,gL,jL,HL,qL,KL,lD,wD,ZL,tD,YL,tW,rW,aW,sW,iW,oW,lW,dW,pW,cW,fW,mW,gW,yW,bW,xW,vW,wW,kW,IW,SW,CW,nL,EW,ND,DW,ED,LW,MD,HW,KW,XW,OD,JW,QW,eB,tB,nB,WD,VD,aD,rB,QL,sB,oB,uB,aL,HD,XD,dB,QD,pB,mB,yB,xB,vB,wB,IB,rP,SB,NB,TB,CB,EB,_B,RB,iP,MB,OB,LB,dP,pP,BB,VB,jB,mP,HB,XB,YB,JB,tU,oL,xP,nU,iD,UW,aU,uL,hL,fL,sU,iU,oU,lU,uU,dU,pU,IP,fU,mU,bU,TP,vU,kU,SU,_P,PB,CU,EU,_U,RU,MU,$U,FU,OU,zP,zU,LP,PU,LU,WU,BU,UU,KP,TW,GU,{kernelName:Pp,backendName:"cpu",kernelFunc:jU},HU,qU,KU,AP,QU,eV,tV,KB];for(let e of nV)ic(e);var rV={};bl(rV,{assertNotComplex:()=>oG,bindCanvasToFramebuffer:()=>DV,bindColorTextureToFramebuffer:()=>PV,bindTextureToProgramUniformSampler:()=>zV,bindTextureUnit:()=>MV,bindVertexBufferToProgramAttribute:()=>RV,callAndCheck:()=>pV,canBeRepresented:()=>cV,createFragmentShader:()=>yV,createFramebuffer:()=>_V,createProgram:()=>wV,createStaticIndexBuffer:()=>NV,createStaticVertexBuffer:()=>SV,createTexture:()=>CV,createVertexShader:()=>gV,getBatchDim:()=>GV,getExtensionOrThrow:()=>mV,getFramebufferErrorMessage:()=>BV,getMaxTexturesInShader:()=>QV,getNumChannels:()=>TV,getProgramUniformLocation:()=>OV,getProgramUniformLocationOrThrow:()=>FV,getRowsCols:()=>jV,getShapeAs3D:()=>HV,getTextureShapeFromLogicalShape:()=>qV,getWebGLDisjointQueryTimerVersion:()=>eG,getWebGLErrorMessage:()=>fV,getWebGLMaxTextureSize:()=>ZV,hasExtension:()=>tG,isCapableOfRenderingToFloatTexture:()=>rG,isDownloadFloatTextureEnabled:()=>aG,isReshapeFree:()=>XV,isWebGLFenceEnabled:()=>iG,isWebGLVersionEnabled:()=>nG,linkProgram:()=>kV,logShaderSourceAndInfoLog:()=>vV,resetMaxTextureSize:()=>YV,resetMaxTexturesInShader:()=>JV,unbindColorTextureFromFramebuffer:()=>LV,unbindTextureUnit:()=>$V,validateFramebuffer:()=>WV,validateProgram:()=>IV,validateTextureSize:()=>EV});var aV={},sV={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function iV(e,t){aV[e]=t}function oV(e,t){if(!(e in aV)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete aV[e]}),!1),1===e?n.getContext("webgl",sV)||n.getContext("experimental-webgl",sV):n.getContext("webgl2",sV)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;aV[e]=n}let n=aV[e];return null==n||n.isContextLost()?(delete aV[e],oV(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),aV[e])}function lV(e,t){return[t,e]}function uV(e){let t=pc.sizeFromShape(e),n=Math.ceil(t/4);return pc.sizeToSquarishShape(n)}function dV(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function hV(e,t){let n,r,a,s,i,o,l,u,d,h,p=e;return 2===Uu().getNumber("WEBGL_VERSION")?(n=p.R32F,r=p.R16F,a=p.RGBA16F,s=p.RGBA32F,i=p.RED,l=4,u=1,d=p.HALF_FLOAT,h=p.FLOAT,o=p.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=p.RGBA,i=e.RGBA,l=4,u=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:h}}function pV(e,t){let n=t();return Uu().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+fV(e,t))}(e),n}function cV(e){return!!(Uu().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function fV(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function mV(e,t){return UV(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function gV(e,t){let n=UV(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(pV(e,(()=>e.shaderSource(n,t))),pV(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function yV(e,t){let n=UV(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(pV(e,(()=>e.shaderSource(n,t))),pV(e,(()=>e.compileShader(n))),Uu().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw vV(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var AV,bV,xV=/ERROR: [0-9]+:([0-9]+):/g;function vV(e,t){let n=xV.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>pc.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),d=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${pc.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function wV(e){return UV(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function kV(e,t){if(pV(e,(()=>e.linkProgram(t))),!Uu().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function IV(e,t){if(pV(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function SV(e,t){let n=UV(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return pV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),pV(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function NV(e,t){let n=UV(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return pV(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),pV(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function TV(){return 2===Uu().getNumber("WEBGL_VERSION")?1:4}function CV(e){return UV(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function EV(e,t){let n=Uu().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function _V(e){return UV(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function RV(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(pV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),pV(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),pV(e,(()=>e.enableVertexAttribArray(o))),!0)}function MV(e,t,n){VV(e,n),pV(e,(()=>e.activeTexture(e.TEXTURE0+n))),pV(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function $V(e,t){VV(e,t),pV(e,(()=>e.activeTexture(e.TEXTURE0+t))),pV(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function FV(e,t,n){return UV(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function OV(e,t,n){return e.getUniformLocation(t,n)}function zV(e,t,n,r){pV(e,(()=>MV(e,t,r))),pV(e,(()=>e.uniform1i(n,r)))}function DV(e){pV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),pV(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),pV(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function PV(e,t,n){pV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),pV(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function LV(e,t){pV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),pV(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function WV(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+BV(e,t))}function BV(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function UV(e,t,n){let r=pV(e,(()=>t()));if(null==r)throw new Error(n);return r}function VV(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function GV(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return pc.sizeFromShape(e.slice(0,e.length-t))}function jV(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function HV(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[GV(e),...jV(e)]),t}function qV(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Uu().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?pc.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=pc.squeezeShape(e).newShape);let r=pc.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let t=GV(e),n=2,a=2;return e.length&&([n,a]=jV(e)),r=t*(n/2)*(a/2),pc.sizeToSquarishShape(r).map((e=>2*e))}return pc.sizeToSquarishShape(r)}function KV(e){return e%2==0}function XV(e,t){if(e=e.slice(-2),t=t.slice(-2),pc.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||KV(n)&&KV(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&KV(e[0])&&KV(t[0])}function ZV(e){if(null==AV){let t=oV(e);AV=t.getParameter(t.MAX_TEXTURE_SIZE)}return AV}function YV(){AV=null}function JV(){bV=null}function QV(e){if(null==bV){let t=oV(e);bV=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,bV)}function eG(e){if(0===e)return 0;let t,n=oV(e);return t=tG(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:tG(n,"EXT_disjoint_timer_query")?1:0,t}function tG(e,t){return null!=e.getExtension(t)}function nG(e){try{if(null!=oV(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function rG(e){if(0===e)return!1;let t=oV(e);if(1===e){if(!tG(t,"OES_texture_float"))return!1}else if(!tG(t,"EXT_color_buffer_float"))return!1;return sG(t)}function aG(e){if(0===e)return!1;let t=oV(e);if(1!==e){if(tG(t,"EXT_color_buffer_float"))return sG(t);let e="EXT_color_buffer_half_float";if(tG(t,e)){let n=t.getExtension(e);return function(e,t){let n=hV(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!(!tG(t,"OES_texture_float")||!tG(t,"WEBGL_color_buffer_float"))&&sG(t)}function sG(e){let t=hV(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function iG(e){return 2===e&&null!=oV(e).fenceSync}function oG(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&pc.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var lG=Uu();function uG(){let e,t,n,r,a,s,i,o,l,u;return 2===Uu().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function dG(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",r=pc.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function hG(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",r=pc.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function pG(e,t){let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}function cG(e){let t=pc.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}lG.registerFlag("HAS_WEBGL",(()=>lG.getNumber("WEBGL_VERSION")>0)),lG.registerFlag("WEBGL_VERSION",(()=>nG(2)?2:nG(1)?1:0)),lG.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),lG.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===lG.get("WEBGL_VERSION"))),lG.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),lG.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),lG.registerFlag("WEBGL_PACK",(()=>lG.getBool("HAS_WEBGL"))),lG.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>lG.getBool("WEBGL_PACK"))),lG.registerFlag("WEBGL_PACK_CLIP",(()=>lG.getBool("WEBGL_PACK"))),lG.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>lG.getBool("WEBGL_PACK"))),lG.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>lG.getBool("WEBGL_PACK"))),lG.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>lG.getBool("WEBGL_PACK"))),lG.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>lG.getBool("WEBGL_PACK"))),lG.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>lG.getBool("WEBGL_PACK"))),lG.registerFlag("WEBGL_PACK_REDUCE",(()=>lG.getBool("WEBGL_PACK"))),lG.registerFlag("WEBGL_LAZILY_UNPACK",(()=>lG.getBool("WEBGL_PACK"))),lG.registerFlag("WEBGL_CONV_IM2COL",(()=>lG.getBool("WEBGL_PACK"))),lG.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>ZV(lG.getNumber("WEBGL_VERSION")))),lG.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>QV(lG.getNumber("WEBGL_VERSION")))),lG.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=lG.getNumber("WEBGL_VERSION");return 0===e?0:eG(e)})),lG.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>lG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!yf.isMobile())),lG.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>rG(lG.getNumber("WEBGL_VERSION")))),lG.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!lG.getBool("WEBGL_FORCE_F16_TEXTURES")&&lG.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),lG.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>aG(lG.getNumber("WEBGL_VERSION")))),lG.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>iG(lG.getNumber("WEBGL_VERSION")))),lG.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>lG.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),lG.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),lG.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>yf.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),lG.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),lG.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),lG.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),lG.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var fG="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:mG}=Zw;function gG(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e.shapeInfo.logicalShape;switch(n.length){case 0:return kG(e,t);case 1:return IG(e,t);case 2:return SG(e,t);case 3:return NG(e,t);case 4:return TG(e,t);case 5:return CG(e);case 6:return EG(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function yG(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${uG().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=uG();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=uG();if(null!=s&&pc.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=[1,2],s=["b","row","col"];return`\n        ${yG(OG(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${zG(s,r)});\n        }\n      `}let o=uG();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],d=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d*Math.ceil(n[1]/2)}, ${d}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=uG();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],h=Math.ceil(s[i-1]/2),p=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var AG="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",bG="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",xG="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vG="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function wG(e){return`offset${e}`}function kG(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=wG(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function IG(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${_G(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=wG(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function SG(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&pc.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=pc.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${gG(OG(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${zG(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${_G(e)}\n      }\n    `;let u=s[0],d=s[1],h=wG(r);return 1===d?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function NG(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=pc.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${gG(OG(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${zG(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${_G(e)}\n      }\n    `;let d=e.shapeInfo.texShape,h=d[0],p=d[1],c=e.shapeInfo.flatOffset;if(p===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=wG(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function TG(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=pc.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${gG(OG(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${zG(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${_G(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=wG(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}function CG(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=pc.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${gG(OG(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${zG(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${_G(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1];return c===o&&null==d?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:c===a&&null==d?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${wG(n)};\n      vec2 uv = uvFromFlat(${p}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function EG(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=pc.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${gG(OG(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${zG(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${_G(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,c=p[0],f=p[1];return f===d&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===i&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${wG(n)};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function _G(e){let t=e.name,n=pc.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function RG(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=mG(e.shapeInfo.logicalShape,t.logicalShape),u=$G(o),d=o-i,h=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${h[e+d]} = 0;`)).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+d]}`)).join(", ");let c="return outputValue;",f=1===pc.sizeFromShape(e.shapeInfo.logicalShape),m=1===pc.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${p});\n      ${c}\n    }\n  `}function MG(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&pc.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,d=$G(l),h=mG(e.shapeInfo.logicalShape,t.logicalShape),p=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${c[e+p]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+p]}`)).join(", "),`\n    float ${a}() {\n      ${d} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}function $G(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function FG(e,t,n){let{newShape:r,keptDims:a}=pc.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!pc.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function OG(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function zG(e,t){return t.map((t=>e[t])).join(", ")}function DG(e,t,n){let r,a,s,i={},o={},l={},u=[],d=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===Uu().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(n,"INFINITY",!1));let p=!1;for(let r=0;r<t.variableNames.length;r++){let a=t.variableNames[r];i[a]=e.getUniformLocation(n,a,p),i[`offset${a}`]=e.getUniformLocation(n,`offset${a}`,p),t.enableShapeUniforms&&(o[`${a}Shape`]=e.getUniformLocation(n,`${a}Shape`,p),l[`${a}TexShape`]=e.getUniformLocation(n,`${a}TexShape`,p))}return t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",p),s=e.getUniformLocation(n,"outShapeStrides",p),a=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{u[r]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:i,customUniformLocations:u,infLoc:d,nanLoc:h,inShapesLocations:o,inTexShapesLocations:l,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function PG(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!pc.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!pc.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function LG(e){return Uu().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var WG={};function BG(e){let t=uG();return gV(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function UG(e){return SV(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function VG(e){return NV(e,new Uint16Array([0,1,2,2,1,3]))}function GG(e,t,n,r,a,s){EV(t,n);let i=CV(e),o=e.TEXTURE_2D;return pV(e,(()=>e.bindTexture(o,i))),pV(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),pV(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),pV(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),pV(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Uu().getNumber("WEBGL_VERSION")?pV(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):pV(e,(()=>e.texStorage2D(o,1,r,t,n))),pV(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function jG(e){return e.internalFormatFloat}function HG(e,t,n,r){let[a,s]=lV(t,n);return GG(e,a,s,jG(r),r.textureFormatFloat,e.FLOAT)}function qG(e){return e.internalFormatHalfFloat}function KG(e,t,n,r){let[a,s]=lV(t,n);return GG(e,a,s,qG(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function XG(e){return e.downloadTextureFormat}function ZG(e,t,n,r){let[a,s]=lV(t,n);return GG(e,a,s,XG(r),e.RGBA,e.UNSIGNED_BYTE)}function YG(e){return e.internalFormatPackedFloat}function JG(e,t,n,r){let[a,s]=dV(t,n);return GG(e,a,s,YG(r),e.RGBA,e.FLOAT)}function QG(e){return e.internalFormatPackedHalfFloat}function ej(e,t,n,r){let[a,s]=dV(t,n);return GG(e,a,s,QG(r),e.RGBA,r.textureTypeHalfFloat)}function tj(e,t,n){return pV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),RV(e,t,"clipSpacePos",n,3,20,0)&&RV(e,t,"uv",n,2,20,12)}function nj(e,t,n,r,a,s){let i,o,l;pV(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Uu().getNumber("WEBGL_VERSION")?pV(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):pV(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),pV(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function rj(e,t,n){pV(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Uu().getNumber("WEBGL_VERSION")?pV(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):pV(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Uu().getNumber("WEBGL_VERSION")?pV(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):pV(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),pV(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function aj(e,t,n,r){let a=e.createBuffer();pV(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return pV(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),pV(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),pV(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function sj(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function ij(e,t,n,r){let[a,s]=lV(t,n),i=new Uint8Array(function(e,t){return 4*e}(t*n));return pV(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function oj(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=dV(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function lj(e,t,n){let r=new Float32Array(t*n*4);return pV(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}bl(WG,{bindVertexProgramAttributeStreams:()=>tj,createBufferFromOutputTexture:()=>aj,createFloat16MatrixTexture:()=>KG,createFloat16PackedMatrixTexture:()=>ej,createFloat32MatrixTexture:()=>HG,createIndexBuffer:()=>VG,createPackedMatrixTexture:()=>JG,createUnsignedBytesMatrixTexture:()=>ZG,createVertexBuffer:()=>UG,createVertexShader:()=>BG,downloadByteEncodedFloatMatrixFromOutputTexture:()=>ij,downloadFloat32MatrixFromBuffer:()=>sj,downloadMatrixFromPackedOutputTexture:()=>lj,downloadPackedMatrixFromBuffer:()=>oj,getInternalFormatForFloat16MatrixTexture:()=>qG,getInternalFormatForFloat16PackedMatrixTexture:()=>QG,getInternalFormatForFloat32MatrixTexture:()=>jG,getInternalFormatForPackedMatrixTexture:()=>YG,getInternalFormatForUnsignedBytesMatrixTexture:()=>XG,uploadDenseMatrixToTexture:()=>nj,uploadPixelDataToTexture:()=>rj});var uj=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Uu().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,iV(t,e)):this.gl=oV(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Uu().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=mV(this.gl,e),tG(this.gl,t))this.textureHalfFloatExtension=mV(this.gl,t);else if(Uu().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),tG(this.gl,r))this.colorBufferHalfFloatExtension=mV(this.gl,r);else if(Uu().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",tG(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!tG(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=UG(this.gl),this.indexBuffer=VG(this.gl),this.framebuffer=_V(this.gl),this.textureConfig=hV(this.gl,this.textureHalfFloatExtension)}get debug(){return Uu().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;pV(e,(()=>e.finish())),pV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),pV(e,(()=>e.deleteFramebuffer(this.framebuffer))),pV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),pV(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),pV(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),HG(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),KG(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),ZG(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),rj(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),nj(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),ej(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),JG(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(LV(this.gl,this.framebuffer),this.outputTexture=null),pV(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>ij(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return oj(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return sj(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=aj(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Uu().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>lj(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=BG(t));let n=wV(t);return pV(t,(()=>t.attachShader(n,this.vertexShader))),pV(t,(()=>t.attachShader(n,e))),kV(t,n),this.debug&&IV(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=tj(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&pV(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&IV(this.gl,this.program),pV(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?FV(this.gl,e,t):OV(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),pV(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),zV(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=dV(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&IV(this.gl,this.program),WV(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),pV(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pV(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=mV(this.gl,2===Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await pc.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&pc.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),PV(this.gl,e,this.framebuffer),this.debug&&WV(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(PV(this.gl,this.outputTexture,this.framebuffer),this.debug&&WV(this.gl)):LV(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;PV(r,e,this.framebuffer),this.debug&&WV(r),this.outputTexture=e,pV(r,(()=>r.viewport(0,0,t,n))),pV(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),pV(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}},{addImpl:dj,bincountImpl:hj,bincountReduceImpl:pj,ceilImpl:cj,concatImpl:fj,equalImpl:mj,expImpl:gj,expm1Impl:yj,floorImpl:Aj,gatherNdImpl:bj,gatherV2Impl:xj,greaterImpl:vj,greaterEqualImpl:wj,lessImpl:kj,lessEqualImpl:Ij,linSpaceImpl:Sj,logImpl:Nj,maxImpl:Tj,maximumImpl:Cj,minimumImpl:Ej,multiplyImpl:_j,negImpl:Rj,notEqualImpl:Mj,prodImpl:$j,rangeImpl:Fj,rsqrtImpl:Oj,sigmoidImpl:zj,simpleAbsImpl:Dj,sliceImpl:Pj,sparseFillEmptyRowsImpl:Lj,sparseReshapeImpl:Wj,sparseSegmentReductionImpl:Bj,sqrtImpl:Uj,stridedSliceImpl:Vj,stringNGramsImpl:Gj,stringSplitImpl:jj,stringToHashBucketFastImpl:Hj,subImpl:qj,tileImpl:Kj,topKImpl:Xj,transposeImpl:Zj,uniqueImpl:Yj}=Zz;function Jj(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Qj(e,t){return 1===t?[e]:Jj(e,t)}var eH=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=LG(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",r=pG(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):dG(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":cG(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function tH(e,t,n,r,a){let s,i=function(e,t){switch(e){case 3:return YG(t);case 4:return QG(t);case 1:return jG(t);case 0:return qG(t);case 2:return XG(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=dV(e[0],e[1]);s=t*n}else{let[t,n]=lV(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function nH(e,t){if(1===e)return 3;if(0===e||null==e)return function(e){return Uu().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}(t);if(3===e||2===e)return 2;throw new Error(`Unknown logical texture type ${e}`)}function rH(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var aH=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=LG(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},sH="if (isnan(x)) return x;",iH="return x;",oH="return abs(x);",lH="return (x >= 0.0) ? x : (exp(x) - 1.0);",uH=sH+"\n  return (x < 0.0) ? 0.0 : x;\n",dH=sH+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",hH="return x;",pH="return 1.0 / (1.0 + exp(-1.0 * x));",cH="return x;",fH="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",mH="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",gH="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",yH="return 1.0 / (1.0 + exp(-1.0 * x));",AH=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=LG(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},bH=Xk.whereImpl,xH={},vH=Uu().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),wH=class extends Ul{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Uu().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof uj)t=e;else{let n=oV(Uu().getNumber("WEBGL_VERSION"),e);t=new uj(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=oV(Uu().getNumber("WEBGL_VERSION"));t=new uj(e),this.binaryCache=function(e){return e in xH||(xH[e]={}),xH[e]}(Uu().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=nH(t,n),a=rH(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=tH(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return 3===r?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):4===r?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):1===r?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):0===r?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):2===r&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=nH(n,r),s=rH(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=tH(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Uu().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Uu().global.screen?1024:Uu().global.screen.height*Uu().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Bl(this,Qg())}nextDataId(){return wH.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Uu().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Uu().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:1,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(Uu().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:1,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new AH(i,hH):new aH(i,hH);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,d=null!=this.activeTimers;if(d&&(l=pc.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=Zw.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return d&&(this.downloadWaitMs+=pc.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new AH(r,hH):new aH(r,hH);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Uu().getBool("DEBUG")&&!Uu().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Uu().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==s&&Uu().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...uV(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=Zw.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{let e=pc.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){let e=this.gpgpu.gl;pV(e,(()=>e.deleteBuffer(d)))}let h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Qg().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new AH(a,hH):new aH(a,hH);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape);return{tensorRef:Qg().makeTensorFromDataId(u.dataId,u.shape,u.dtype),...this.texData.get(u.dataId).texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>pc.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return km(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!cV(n))throw Uu().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=pc.sizeFromShape(t);if(Uu().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...uV(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Uu().getBool("WEBGL_PACK")&&!0===r,i=s?HV(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=uG();this.outputShape=e,this.userCode=`\n      ${fG}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=uG();this.outputShape=e,this.userCode=`\n      ${fG}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=pc.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=pc.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=pc.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:pc.now(),endMs:null}}endTimer(e){return Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=pc.now(),e)}async getQueryTime(e){if(Uu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:vH;return Uu().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&pc.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Zw.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return bH(e.shape,t)}packedUnaryOp(e,t,n){let r=new AH(e.shape,t),a=this.compileAndRun(r,[e],n);return Qg().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=Dj(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Uu().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,oH,e.dtype);let t=new aH(e.shape,oH),n=this.compileAndRun(t,[e]);return Qg().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&pc.isString(n[0])){let a=n.map((e=>pc.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:r}=this.makeTensorInfo(e,t,n);return Qg().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=LG(this.outputShape.length);let t=e.length,n=Qj("rc",t),r=$G(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=LG(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=Qj("rc",this.rank),t=$G(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[GV(e.shape),...jV(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[GV(t),...jV(t)],s=new eH(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=pc.sizeFromShape(a),n=t[0]*t[1]*4;pc.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=HV(a);i=r?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=uG();this.outputShape=e,this.enableShapeUniforms=LG(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?hG(["r","c","d"],e):dG(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}(o):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=uG();this.outputShape=e,this.enableShapeUniforms=LG(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?hG(["r","c","d"],e):dG(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}(o);let l=[null!=t?t:uV(o)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0,i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),0===e.outPackingScheme){let t=null!=s?s:uV(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===pc.sizeFromShape(i.shape))return o.values=pc.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&pc.sizeFromShape(t.shape)<=Uu().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!XV(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let d,h={shape:i.shape,texData:o,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=FG(e.packedInputs,t.shape,s),u="",d="",h="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=pc.computeStrides(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else d=`${o[0]>1}_${o[1]>1}`;let p=t.shape.length,c=2===o.length&&pc.arraysEqual(t.shape,s),f=1===pc.sizeFromShape(t.shape),m=Zw.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&pc.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${d}_${h}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${Uu().getNumber("WEBGL_VERSION")}`,s}(e,u,h),c=this.getAndSaveBinary(p,(()=>function(e,t,n,r){let a=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=function(e,t,n){let r=[];if(e.forEach((e=>{let t=pc.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=FG(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let a,s,i=r.join("\n"),o=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,a="";a+=n?yG(e,r):gG(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?RG(e,t):MG(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=uG(),d=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${AG}\n    ${bG}\n    ${xG}\n  `}(u);return t.isPacked?(a=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(pc.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(a=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return pc.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${hG(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=dG(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${hG(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=dG(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=dG(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=dG(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(h+=vG),[h,d,s,i,a,o,n.userCode].join("\n")}(a,i,t),l=yV(e.gl,o),u=e.createProgram(l);return Uu().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,...DG(e,t,u)}}(this.gpgpu,e,u,h))),f=null!=this.activeTimers;f&&(d=this.startTimer()),Uu().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(PG(t.inShapeInfos,n),PG([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Uu().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(o){let{uniformShape:r}=FG(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(pc.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}}));let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=pc.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{let s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,c,u,h,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let m=Uu().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=pc.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Uu().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Uu().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ny((()=>{if(!Uu().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Uu().getBool("DEBUG");Uu().set("DEBUG",!1);let t=this.abs(_x(1e-8)).dataSync()[0];if(Uu().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=pc.now());let d=t.texShape;if(null==d&&(d=qV(n,o),t.texShape=d),null!=a){let e,s=HV(n),i=d[1],h=d[0],p=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!p)&&([i,h]=dV(d[0],d[1])),e=o?new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=uG();this.outputShape=e,this.enableShapeUniforms=LG(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":cG(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}(s,p):new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=uG();this.outputShape=e,this.enableShapeUniforms=LG(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":cG(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}(s,p);let c=p?[h,i]:d,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=p?2:1,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);let g=[[h,i]],y=!0,A=this.runWebGLProgram(e,[f],r,g,y),b=this.texData.get(A.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,Uu().get("ENGINE_COMPILE_ONLY")?this.disposeData(A.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(A.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=pc.now()-l)}else{let e=this.acquireTexture(d,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*pc.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Xw(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(vV(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=DG(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}},kH=wH;kH.nextDataId=0;var IH="0.0.0";function SH(){Uu().set("WEBGL_FORCE_F16_TEXTURES",!0)}yf.isBrowser()&&py("webgl",(()=>new kH),2);var NH={forceHalfFloat:SH},TH=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Zw.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=LG(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},CH=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Zw.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=LG(a);let s="";if(r)if(0===a||1===pc.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${$G(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=Qj("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function EH(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var _H={kernelName:oh,backendName:"webgl",kernelFunc:EH};function RH(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=EH({inputs:{x:r},backend:n}),l=EH({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var MH={kernelName:bd,backendName:"webgl",kernelFunc:RH},$H="return (a < 0.) ? b * a : a;",FH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",OH={kernelName:ch,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",pc.createScalarValue(s,"float32")),o=Uu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CH(FH,a.shape,i.shape):new TH($H,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},zH="return (a < 0.) ? b * a : a;",DH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",PH={kernelName:Zh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Uu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CH(DH,r.shape,a.shape):new TH(zH,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};function LH(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:a}=e;return e=>{let s,{inputs:i,backend:o}=e,{x:l}=i,u=o,d=a||l.dtype;if(u.shouldExecuteOnCPU([l])&&null!=r){let e=u.texData.get(l.dataId),t=r(e.values,d);return u.makeTensorInfo(l.shape,d,t)}return s=Uu().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new AH(l.shape,n):new aH(l.shape,t),u.runWebGLProgram(s,[l],d)}}function WH(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:i}=e;return e=>{let{inputs:o,backend:l}=e,{a:u,b:d}=o,h=l;if(a&&"complex64"===u.dtype){let e=h.texData.get(u.dataId),n=h.texData.get(d.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{let[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:d.shape},i=new TH(t,u.shape,d.shape);return h.runWebGLProgram(i,[a,s],tf(n.dtype,r.dtype))})),s=RH({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}let p,c=i||tf(u.dtype,d.dtype);if(("string"===u.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([u,d]))&&null!=s){let e=h.texData.get(u.dataId).values,t=h.texData.get(d.dataId).values,n="string"===u.dtype?Zw.fromUint8ToStringArray(e):e,r="string"===u.dtype?Zw.fromUint8ToStringArray(t):t,[a,i]=s(u.shape,d.shape,n,r,c),o=h.makeTensorInfo(i,c);return h.texData.get(o.dataId).values=a,o}return p=Uu().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new CH(n,u.shape,d.shape,r):new TH(t,u.shape,d.shape),h.runWebGLProgram(p,[u,d],c)}}function BH(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?cH:iH;if("relu"===e)return t?mH:uH;if("elu"===e)return t?fH:lH;if("relu6"===e)return t?gH:dH;if("prelu"===e)return t?DH:zH;if("leakyrelu"===e)return t?FH:$H;if("sigmoid"===e)return t?yH:pH;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var UH=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=LG(this.outputShape.length);let u=r?e[1]:e[2],d=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let A="rc.x",b="rc.x";e[0]<t[0]?A=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${d}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${d}; i++) {\n          int batchA = ${A};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},VH=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Zw.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},GH="return a * b;";function jH(e){let t,{inputs:n,backend:r}=e,{a,b:s}=n,i=Zw.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new VH("return areal * breal - aimag * bimag;",a.shape,s.shape),i=new VH("return areal * bimag + aimag * breal;",a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),d=RH({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),d}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=_j(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=Uu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CH(GH,a.shape,s.shape):new TH(GH,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var HH={kernelName:Ph,backendName:"webgl",kernelFunc:jH};function qH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=pc.sizeFromShape(a.shape),l=pc.inferFromImplicitShape(s,o),u=pc.sizeFromShape(l);pc.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let d=i.texData.get(a.dataId);return!d.isPacked||XV(a.shape,l)||null!==d.texture&&XV(d.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[GV(e.shape),...jV(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[GV(t),...jV(t)],i=new eH(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}var KH={kernelName:np,backendName:"webgl",kernelFunc:qH},XH=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${pc.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},ZH=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),d=n%4,h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}};function YH(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=Zw.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:d,outSize:h}=a[i];o="mean"===n?0===i?new XH({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:h},u):new XH({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:h}):new ZH({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:h},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}function JH(e,t,n){let r=Uu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=$G(this.rank),a=Jj("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=$G(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function QH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=pc.parseAxisParam(a,e.shape),o=i,l=Zw.getAxesPermutation(o,s),u=null!=l,d=e;u&&(d=JH(e,l,r),o=Zw.getInnerMostAxes(o.length,s)),Zw.assertAxesAreInnerMostDims("sum",o,s);let[h,p]=Zw.computeOutAndReduceShapes(d.shape,o),c=h;n&&(c=Zw.expandShapeToKeepDim(h,i));let f=pc.sizeFromShape(p),m=qH({inputs:{x:d},attrs:{shape:[pc.sizeFromShape(e.shape)/f,f]},backend:r}),g=YH(m,nf(e.dtype),"sum",r),y=qH({inputs:{x:g},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(d),y}(a,s,i,n)}var eq={kernelName:vp,backendName:"webgl",kernelFunc:QH};function tq(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=Zj(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=JH(s,i,o);return t}var nq={kernelName:Up,backendName:"webgl",kernelFunc:tq};function rq(e){let{a:t,b:n,transposeA:r,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=t.shape.length,h=n.shape.length,p=r?t.shape[d-2]:t.shape[d-1],c=a?n.shape[h-1]:n.shape[h-2],f=r?t.shape[d-1]:t.shape[d-2],m=a?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),A=pc.sizeFromShape(g),b=pc.sizeFromShape(y),x=Xm.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);pc.assert(p===c,(()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${a} must match.`));let v,w=r?[A,p,f]:[A,f,p],k=a?[b,m,c]:[b,c,m],I=qH({inputs:{x:t},backend:s,attrs:{shape:w}}),S=qH({inputs:{x:n},backend:s,attrs:{shape:k}}),N=[I,S],T=Math.max(A,b),C=r?I.shape[1]:I.shape[2],E=null!=i,_=null!=o,R="leakyrelu"===u,M=null!=u?BH(u,!0):null;if((1===f||1===m)&&C>1e3&&!1===(E||_||R||null!=M)){let e=I,t=S;r&&(e=tq({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),a&&(t=tq({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));let n=1===m,i=e;1!==m&&(i=qH({inputs:{x:e},backend:s,attrs:{shape:[T,C,1]}}),N.push(i));let o=1===m?2:1,l=t;n&&(l=qH({inputs:{x:t},backend:s,attrs:{shape:[T,1,C]}}),N.push(l));let u=jH({inputs:{a:i,b:l},backend:s});v=QH({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{let e=tf(t.dtype,n.dtype),u=new UH(w,k,[T,f,m],r,a,E,M,_,R),d=[I,S];if(null!=i&&d.push(i),_&&d.push(o),R){let e=s.makeTensorInfo([],"float32",pc.createScalarValue(l,"float32"));d.push(e),N.push(e)}v=s.runWebGLProgram(u,d,e)}let $=qH({inputs:{x:v},backend:s,attrs:{shape:x}});N.push(v);for(let e of N)s.disposeIntermediateTensorInfo(e);return $}var aq={kernelName:Zp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r;return rq({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:d})}},sq="return abs(x);",iq={kernelName:qu,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=Dj(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Uu().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new AH(a.shape,sq):new aH(a.shape,sq),r.runWebGLProgram(t,[a],a.dtype)}},oq=LH({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),lq={kernelName:Ku,backendName:"webgl",kernelFunc:oq},uq=LH({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),dq={kernelName:Xu,backendName:"webgl",kernelFunc:uq},hq="return a + b;",pq=WH({opSnippet:hq,packedOpSnippet:hq,supportsComplex:!0,cpuKernelImpl:dj}),cq={kernelName:Zu,backendName:"webgl",kernelFunc:pq},fq={kernelName:Yu,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return EH({inputs:{x:a[0]},backend:r});if(a.length>Uu().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>tf(e,t))),i=a.map((e=>e.shape)),o=Uu().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},mq={kernelName:Ju,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=pc.parseAxisParam(s,a.shape),u=l,d=Zw.getAxesPermutation(u,o),h=a;null!=d&&(h=tq({inputs:{x:a},backend:n,attrs:{perm:d}}),u=Zw.getInnerMostAxes(u.length,o)),Zw.assertAxesAreInnerMostDims("all",u,o);let p,[c,f]=Zw.computeOutAndReduceShapes(h.shape,u),m=qH({inputs:{x:h},backend:n,attrs:{shape:[-1,pc.sizeFromShape(f)]}}),g=YH(m,m.dtype,"all",n);return p=qH(i?{inputs:{x:g},backend:n,attrs:{shape:Zw.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),p}},gq={kernelName:Qu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=pc.parseAxisParam(s,a.shape),u=l,d=Zw.getAxesPermutation(u,o),h=a;null!=d&&(h=tq({inputs:{x:a},backend:n,attrs:{perm:d}}),u=Zw.getInnerMostAxes(u.length,o)),Zw.assertAxesAreInnerMostDims("any",u,o);let p,[c,f]=Zw.computeOutAndReduceShapes(h.shape,u),m=qH({inputs:{x:h},backend:n,attrs:{shape:[-1,pc.sizeFromShape(f)]}}),g=YH(m,m.dtype,"any",n);return p=qH(i?{inputs:{x:g},backend:n,attrs:{shape:Zw.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),p}},yq=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},Aq=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,pc.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,d=$G(u),h=Qj("coords",u);if(1===s){o=u+1;let e=$G(o);i=`\n        ${e} sourceLocR = ${e}(${h.join()}, 0);\n        ++${h[u-1]};\n        ${e} sourceLocG = ${e}(${h.join()}, 0);\n        ++${h[u-2]};\n        ${e} sourceLocA = ${e}(${h.join()}, 0);\n        --${h[u-1]};\n        ${e} sourceLocB = ${e}(${h.join()}, 0);\n        --${h[u-2]};`}else o=u,i=`\n        ${d} sourceLocR = coords;\n        ++${h[u-1]};\n        ${d} sourceLocG = coords;\n        ++${h[u-2]};\n        ${d} sourceLocA = coords;\n        --${h[u-1]};\n        ${d} sourceLocB = coords;\n        --${h[u-2]};`;let p=["x","y","z","w","u","v"].slice(0,o),c="."+p[o-1],f=p.map((e=>"int "+e)),m=Qj("sourceLocR",o-1).concat("inIdx.r"),g=Qj("sourceLocG",o-1).concat("inIdx.g"),y=Qj("sourceLocB",o-1).concat("inIdx.b"),A=Qj("sourceLocA",o-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${A.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${A.join()}) : 0.)`,w=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${d} coords = getOutputCoords();\n        bool hasNextCol = ${h[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${h[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function bq(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=Zw.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new yq(o,n,null==r),u=[t];null!=r&&u.push(r);let d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;let h=bq(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function xq(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=null!=r?r.shape:t.shape,s=a[a.length-1],i=Zw.computeOptimalWindowSize(s),o=new Aq(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=xq(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function vq(e,t,n,r){let a=[n];if(Zw.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Uu().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=Zw.computeOutAndReduceShapes(i.shape,a),u=pc.sizeFromShape(l),d=qH({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(d);let h=bq(e,d,r);n.push(h);let p=qH({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return xq(e,t,r)}var wq={kernelName:ed,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=pc.parseAxisParam(s,a.shape),o=Zw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=tq({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Zw.getInnerMostAxes(i.length,l.shape.length)),Zw.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=vq(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},kq={kernelName:td,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=pc.parseAxisParam(s,a.shape),o=Zw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=tq({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Zw.getInnerMostAxes(i.length,l.shape.length)),Zw.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=vq(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Iq=LH({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Sq={kernelName:nd,backendName:"webgl",kernelFunc:Iq},Nq=LH({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Tq={kernelName:rd,backendName:"webgl",kernelFunc:Nq},Cq=LH({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Eq={kernelName:ad,backendName:"webgl",kernelFunc:Cq},_q=WH({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Rq={kernelName:id,backendName:"webgl",kernelFunc:_q},Mq=LH({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),$q={kernelName:sd,backendName:"webgl",kernelFunc:Mq},Fq=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(A="avgValue / count");let b=4*Math.floor(s/4),x=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${d};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${A});\n      }\n    `}},Oq=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let A="avg"===t,b="0.0";if(A||(b="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${d}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");let v=4*Math.floor(s/4),w=s%4,k=`\n      if (${A}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}},zq={kernelName:od,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;oG(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;pc.assert(Zw.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=Zw.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&pc.arraysEqual(u.inShape,u.outShape))return EH({inputs:{x:a},backend:n});let d=new Fq(u,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}},Dq={kernelName:ud,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=Zw.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),h=new Oq(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},Pq={kernelName:dd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=Zw.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),p=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=d-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a],i.dtype)}},Lq={kernelName:ld,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;oG([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=Zw.computePool2DInfo(i.shape,o,l,1,u),h=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${d});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(h,[a],i.dtype)}},Wq={kernelName:hd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return rq({a,b:s,transposeA:i,transposeB:o,backend:n})}},Bq={kernelName:nh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,mean:s,variance:i,offset:o,scale:l}=t;pc.assert(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),pc.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),pc.assert(null==l||s.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=r;null==u&&(u=.001);let d=[a,s,i],h=null;null!=o&&(h=o.shape,d.push(o));let p=null;null!=l&&(p=l.shape,d.push(l));let c=Uu().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Zw.assertAndGetBroadcastShape(e,t),Zw.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(Zw.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Zw.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(a.shape,s.shape,i.shape,h,p,u):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Zw.assertAndGetBroadcastShape(e,t),Zw.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(Zw.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Zw.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(a.shape,s.shape,i.shape,h,p,u);return n.runWebGLProgram(c,d,d[0].dtype)}},Uq=["x","y","z","w","u","v"];function Vq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=cg.parseSliceParams(a,s,i);if(cg.assertParamsValid(a,o,l),0===pc.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=Pj(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),d=cg.isSliceContinous(a.shape,o,l);if(u||!d){let e=Uu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=$G(this.rank),n=Qj("coords",this.rank),r=Qj("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}(l):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=$G(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return Uq.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Uq[t]} = start[${t}] + coords.${Uq[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}}(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=cg.computeFlatOffset(t,pc.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var Gq={kernelName:fp,backendName:"webgl",kernelFunc:Vq},jq={kernelName:pd,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;pc.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=Zw.getReshaped(a.shape,s,o),u=Zw.getPermuted(l.length,s.length),d=Zw.getReshapedPermuted(a.shape,s,o),h=Zw.getSliceBeginCoords(i,s.length),p=Zw.getSliceSize(d,i,s.length),c=[],f=qH({inputs:{x:a},backend:n,attrs:{shape:l}}),m=tq({inputs:{x:f},backend:n,attrs:{perm:u}}),g=qH({inputs:{x:m},backend:n,attrs:{shape:d}}),y=Vq({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Hq={kernelName:cd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=hj(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},qq={kernelName:md,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=Zw.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Kq=WH({opSnippet:"return float(a != b);",cpuKernelImpl:Mj,dtype:"bool"}),Xq={kernelName:Wh,backendName:"webgl",kernelFunc:Kq};function Zq(e){let{inputs:t,backend:n}=e,{input:r}=t;return EH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var Yq={kernelName:Qh,backendName:"webgl",kernelFunc:Zq},Jq={kernelName:gd,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return EH({inputs:{x:s},backend:r});let t=Wb(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=RH({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=Zq({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!pc.hasEncodingLoss(s.dtype,i)){let e=EH({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new aH(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",pc.getTypedArrayFromDType("bool",1)),t=Kq({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},Qq="return ceil(x);",eK=LH({opSnippet:Qq,packedOpSnippet:Qq,cpuKernelImpl:cj}),tK={kernelName:yd,backendName:"webgl",kernelFunc:eK},nK={kernelName:Ad,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Uu().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(s.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}};function rK(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var aK={kernelName:xd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[rK(r,a.complexTensorInfos.real),rK(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function sK(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function iK(e){let{inputs:t,backend:n}=e,{input:r}=t;return EH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var oK={kernelName:uh,backendName:"webgl",kernelFunc:iK};function lK(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>Zq({inputs:{input:e},backend:n}))),a=e.map((e=>iK({inputs:{input:e},backend:n}))),s=lK(r,t,n),i=lK(a,t,n),o=RH({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=pc.sizeFromShape(e.shape.slice(t));return qH({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Zw.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=fj(s,i,r,o),u=Zw.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}if(e.length>Uu().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let r=Math.floor(e.length/2),a=lK(e.slice(0,r),t,n),s=lK(e.slice(r),t,n),i=lK([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Uu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Zw.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=$G(r),s=Qj("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),d=i.join(),h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${sK(i,l,t)}),\n            vec2(${sK(u,l,t)}));\n        }`}let p=o.length,c=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${sK(i,l,c)}),\n          vec2(${sK(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}let{tensors2D:s,outShape:i}=function(e,t,n){let r=Zw.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>qH({inputs:{x:e},attrs:{shape:[-1,pc.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new class{constructor(e){this.outputShape=[],this.outputShape=Zw.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(s.map((e=>e.shape))),l=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));let u=qH({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function uK(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=pc.parseAxisParam(a,t[0].shape)[0],i=Zw.computeOutShape(t.map((e=>e.shape)),s);if(0===pc.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>pc.sizeFromShape(e.shape)>0));if(1===o.length)return EH({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return Zw.assertParamsConsistent(l,s),lK(o,s,n)}var dK={kernelName:vd,backendName:"webgl",kernelFunc:uK},hK=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,A=m?3:1,b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${A}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}};function pK(e){let t,{x:n,filter:r,convInfo:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=n.shape,h=s.texData.get(n.dataId),p=a.inChannels,c=d[0]*d[1]*d[2],f=a.outChannels,m="channelsLast"===a.dataFormat,g=[];if((1!==c&&1!==f||!(p>1e3))&&h.isPacked&&m&&null!=h.texture&&d[2]%2!=0&&pc.arraysEqual(h.shape.slice(-3),d.slice(-3))){let e=d[0]*d[1]*(d[2]+1),p={dataId:n.dataId,shape:[1,e,a.inChannels],dtype:n.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,pc.assert(XV(h.shape,p.shape),(()=>`packed reshape ${h.shape} to ${p.shape} isn't free`));let f=qH({inputs:{x:r},backend:s,attrs:{shape:[1,a.inChannels,a.outChannels]}});g.push(f);let m=rq({a:p,b:f,backend:s,transposeA:!1,transposeB:!1,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l}),y=s.texData.get(m.dataId);pc.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=c,y.shape=a.outShape,t=EH({inputs:{x:m},backend:s}),t.shape=a.outShape,g.push(m)}else{let e=qH({inputs:{x:n},backend:s,attrs:{shape:[1,m?d[0]*d[1]*d[2]:d[0]*d[2]*d[3],a.inChannels]}}),h=qH({inputs:{x:r},backend:s,attrs:{shape:[1,a.inChannels,a.outChannels]}}),p=rq({a:e,b:h,transposeA:!1,transposeB:!1,backend:s,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l});t=qH({inputs:{x:p},backend:s,attrs:{shape:a.outShape}}),g.push(e),g.push(h),g.push(p)}for(let e of g)s.disposeIntermediateTensorInfo(e);return t}function cK(e){let{x:t,filter:n,convInfo:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e,{filterWidth:u,filterHeight:d,inChannels:h,outWidth:p,outHeight:c,dataFormat:f}=r,m="channelsLast"===f,g=u*d*h,y=c*p,A=[g,y],b=[],x=qH({inputs:{x:t},backend:a,attrs:{shape:t.shape.slice(1)}}),v=qH({inputs:{x:n},backend:a,attrs:{shape:[1,g,pc.sizeFromShape(n.shape)/g]}});b.push(x),b.push(v);let w=new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=LG(this.outputShape.length);let{dataFormat:n}=t,r=uG(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}(A,r),k=[x.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],I=a.runWebGLProgram(w,[x],"float32",k),S=qH({inputs:{x:I},backend:a,attrs:{shape:[1,A[0],A[1]]}});b.push(I),b.push(S);let N=null!=s,T=null!=i,C="leakyrelu"===l,E=l?BH(l,!0):null,_=new UH(S.shape,v.shape,[1,y,r.outChannels],!0,!1,N,E,T,C),R=[S,v];if(s&&R.push(s),T&&R.push(i),C){let e=a.makeTensorInfo([],"float32",pc.createScalarValue(o,"float32"));R.push(e),b.push(e)}let M=a.runWebGLProgram(_,R,"float32"),$=qH({inputs:{x:M},backend:a,attrs:{shape:m?[1,c,p,r.outChannels]:[1,r.outChannels,c,p]}});b.push(M);for(let e of b)a.disposeIntermediateTensorInfo(e);return $}var fK={kernelName:wd,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}=a,p=Zw.convertConv2DDataFormat(u),c=Zw.computeConv2DInfo(s.shape,i.shape,o,d,l,h,!1,p);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(Uu().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=cK({x:s,filter:i,convInfo:c,backend:r});else{let e=new hK(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=pK({x:s,filter:i,convInfo:c,backend:r});let f=qH({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}},mK={kernelName:kd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r,h=Zw.convertConv2DDataFormat(l),p=Zw.computeConv2DInfo(a.shape,d,i,1,o,u,!1,h),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(c,[a,s],"float32")}},gK={kernelName:Id,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,h=Zw.convertConv2DDataFormat(u),p=Zw.computeConv2DInfo(i,s.shape,o,1,l,d,!1,h),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,d=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${d}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(c,[a,s],"float32")}},yK={kernelName:Sd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=Zw.computeConv3DInfo(a.shape,s.shape,i,l,o),d=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${d}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(d,[a,s],"float32")}},AK={kernelName:Nd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=Zw.computeConv3DInfo(a.shape,l,i,1,o),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(d,[a,s],"float32")}},bK={kernelName:Td,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=Zw.computeConv3DInfo(l,s.shape,o,1,i),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(d,[a,s],"float32")}},xK=LH({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),vK={kernelName:Cd,backendName:"webgl",kernelFunc:xK},wK=LH({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),kK={kernelName:Ed,backendName:"webgl",kernelFunc:wK},IK={kernelName:Md,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[d,h]=n;this.outputShape=[u,d,h,l];let p="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=d>1?[""+(i-1)/(d-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[A,b,x]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${A});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,l,u);return n.runWebGLProgram(d,[a,s,i],"float32")}},SK=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,a=t?"1.0":`getX(${NK(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${$G(r)} coords = getOutputCoords();\n        int end = ${TK(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${TK(r,"coords")} = idx;\n          val *= getX(${NK(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function NK(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function TK(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}var CK={kernelName:_d,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=Zw.getAxesPermutation([s],l),d=a;null!=u&&(d=tq({inputs:{x:a},backend:n,attrs:{perm:u}}));let h=Zw.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);let p=d.shape[h],c=EH({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){let t=new SK(d.shape,!1,o),r=[[e]],a=c;c=n.runWebGLProgram(t,[c],c.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){let e=new SK(d.shape,i,o),t=c;c=n.runWebGLProgram(e,[c],c.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){let e=tq({inputs:{x:c},backend:n,attrs:{perm:Zw.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),e}return c}},EK=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,a=t?"0.0":`getX(${_K(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${$G(r)} coords = getOutputCoords();\n        int end = ${RK(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${RK(r,"coords")} = idx;\n          val += getX(${_K(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function _K(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function RK(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var MK={kernelName:Rd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=Zw.getAxesPermutation([s],l),d=a;null!=u&&(d=tq({inputs:{x:a},backend:n,attrs:{perm:u}}));let h=Zw.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);let p=d.shape[h],c=EH({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){let t=new EK(d.shape,!1,o),r=[[e]],a=c;c=n.runWebGLProgram(t,[c],c.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){let e=new EK(d.shape,i,o),t=c;c=n.runWebGLProgram(e,[c],c.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){let e=tq({inputs:{x:c},backend:n,attrs:{perm:Zw.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),e}return c}},$K={kernelName:$d,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=hj(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=pj(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},FK={kernelName:Fd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(h,s,i);return n.runWebGLProgram(p,[a],a.dtype)}},OK=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=LG(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${d}\n        ${u}\n        setOutput(result);\n      }\n    `}},zK=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=LG(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d,p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<d;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){let t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<d&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){let e=i%2==0?pc.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}},DK={kernelName:Od,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;null==d&&(d=[1,1]),pc.assert(Zw.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let h,p=Zw.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0);h=Uu().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new zK(p):new OK(p);let c=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(h,[a,s],"float32",c)}},PK={kernelName:zd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r,h=Zw.computeConv2DInfo(a.shape,d,i,o,l,u,!0),p=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a,s],"float32")}},LK={kernelName:Dd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r,h=Zw.computeConv2DInfo(d,s.shape,i,o,l,u,!0),p=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a,s],"float32")}},WK={kernelName:Pd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=pc.sizeFromShape(r.shape),i=qH({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),l=n.runWebGLProgram(o,[i],i.dtype),u=qH({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},BK={kernelName:Ld,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,d=Zw.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${d}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(d);t=r.runWebGLProgram(h,[s,i],"float32");let p=qH({inputs:{x:t},backend:r,attrs:{shape:d.outShape}});return r.disposeIntermediateTensorInfo(t),p}},UK={kernelName:Vd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Zw.decodeEinsumEquation(a,s.length);Zw.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=Zw.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,f=[];for(let e=0;e<h;++e){for(let t of d[e]){let e,{permutationIndices:r,expandDims:a}=Zw.getEinsumPermutation(c,l[t]);Zw.isIdentityPermutation(r)?e=s[t]:(e=tq({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);pc.arraysEqual(e.shape,i)||(e=qH({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===p?p=e:(p=jH({inputs:{a:e,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=QH({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},VK=LH({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),GK={kernelName:Gd,backendName:"webgl",kernelFunc:VK},jK={kernelName:jd,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Uu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new CH("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new TH("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},HK=WH({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:mj}),qK={kernelName:qd,backendName:"webgl",kernelFunc:HK},KK=LH({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Zw.ERF_P};\n  float a1 = ${Zw.ERF_A1};\n  float a2 = ${Zw.ERF_A2};\n  float a3 = ${Zw.ERF_A3};\n  float a4 = ${Zw.ERF_A4};\n  float a5 = ${Zw.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),XK={kernelName:Hd,backendName:"webgl",kernelFunc:KK},ZK=LH({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:gj,dtype:"float32"}),YK={kernelName:Kd,backendName:"webgl",kernelFunc:ZK};function JK(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(pc.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),qH({inputs:{x:s},backend:r,attrs:{shape:o}})}var QK={kernelName:Xd,backendName:"webgl",kernelFunc:JK},eX="return exp(x) - 1.0;",tX=LH({opSnippet:eX,packedOpSnippet:eX,cpuKernelImpl:yj}),nX={kernelName:Zd,backendName:"webgl",kernelFunc:tX},rX=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function aX(e,t,n){let r=n.texData.get(e.dataId),a=pc.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=qH({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new rX("real",o,t),u=new rX("imag",o,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),c=RH({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);let f=qH({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var sX={kernelName:Yd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return aX(r,!1,n)}};function iX(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||pc.inferDtype(a),"string"===s){let e=pc.getArrayFromDType(s,pc.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var oX,lX={kernelName:Jd,backendName:"webgl",kernelFunc:iX},uX={kernelName:Qd,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{image:r}=t,a=n,s=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(r.shape);return a.runWebGLProgram(s,[r],r.dtype)}},dX="return floor(x);",hX=LH({opSnippet:dX,packedOpSnippet:dX,cpuKernelImpl:Aj}),pX={kernelName:eh,backendName:"webgl",kernelFunc:hX},cX=WH({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),fX={kernelName:th,backendName:"webgl",kernelFunc:cX},mX={kernelName:Kp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[u,l],h=[u,l,s];(o||i)&&(null==oX&&(oX=document.createElement("canvas").getContext("2d")),oX.canvas.width=l,oX.canvas.height=u,oX.drawImage(a,0,0,l,u),a=oX.canvas);let p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=2,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);let c=Uu().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=uG(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(h):new class{constructor(e){this.variableNames=["A"];let t=uG(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(h),f=n.runWebGLProgram(c,[p],"int32");return n.disposeData(p.dataId),f}},gX={kernelName:Yp,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:d,dataFormat:h,dilations:p,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=Zw.convertConv2DDataFormat(h),y=Zw.computeConv2DInfo(s.shape,i.shape,u,p,d,c,!1,g),A=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(Uu().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=cK({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=null!=o,n=null!=l,a="leakyrelu"===f,u=f?BH(f,!1):null,d=new hK(y,e,u,n,a),h=[s,i];if(o&&h.push(o),l&&h.push(l),a){let e=r.makeTensorInfo([],"float32",pc.createScalarValue(m,"float32"));h.push(e),A.push(e)}t=r.runWebGLProgram(d,h,"float32")}else t=pK({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let b=qH({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return A.push(t),A.forEach((e=>r.disposeIntermediateTensorInfo(e))),b}},yX={kernelName:Jp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:c}=r,f=[],m=d;null==m&&(m=[1,1]),pc.assert(Zw.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=Zw.computeConv2DInfo(a.shape,s.shape,l,m,u,h,!0),A=Uu().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,b=p?BH(p,A):null,x=[a,s],v=null!=i,w=null!=o,k="leakyrelu"===p;if(v&&x.push(i),w&&x.push(o),k){let e=n.makeTensorInfo([],"float32",pc.createScalarValue(c,"float32"));x.push(e),f.push(e)}g=A?new zK(y,v,b,w,k):new OK(y,v,b,w,k);let I=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],S=n.runWebGLProgram(g,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}},AX={kernelName:ah,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=pc.sizeFromShape(r.shape),[l,u,d,h]=Zw.prepareAndValidate(r,a),p=qH({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=qH({inputs:{x:r},backend:n,attrs:{shape:[pc.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=bj(e,t,r.dtype,u,i,d,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let r=$G(t.length),a=$G(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,h,[u,d]),m=n.runWebGLProgram(f,[c,p],c.dtype),g=qH({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}};function bX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=pc.parseAxisParam(i,a.shape)[0];if(Uu().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];pc.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}let u=Zw.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=pc.sizeFromShape(s.shape),h=[],p=qH({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=qH({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(p),r=xj(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=$G(this.rank),r=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}(p.shape,f),g=n.runWebGLProgram(m,[p,c],p.dtype);h.push(g);let y=qH({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var xX={kernelName:rh,backendName:"webgl",kernelFunc:bX},vX=WH({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:vj,dtype:"bool"}),wX={kernelName:sh,backendName:"webgl",kernelFunc:vX},kX=WH({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:wj}),IX={kernelName:ih,backendName:"webgl",kernelFunc:kX},SX={kernelName:lh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return aX(r,!0,n)}},NX=LH({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),TX={kernelName:dh,backendName:"webgl",kernelFunc:NX},CX=LH({opSnippet:"return float(isinf(x));",dtype:"bool"}),EX={kernelName:hh,backendName:"webgl",kernelFunc:CX},_X=LH({opSnippet:"return float(isnan(x));",dtype:"bool"}),RX={kernelName:ph,backendName:"webgl",kernelFunc:_X},MX=WH({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:kj,dtype:"bool"}),$X={kernelName:fh,backendName:"webgl",kernelFunc:MX},FX=WH({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Ij,dtype:"bool"}),OX={kernelName:mh,backendName:"webgl",kernelFunc:FX},zX={kernelName:gh,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Sj(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},DX=LH({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Nj}),PX={kernelName:yh,backendName:"webgl",kernelFunc:DX},LX=LH({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),WX={kernelName:Ah,backendName:"webgl",kernelFunc:LX},BX=WH({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),UX={kernelName:bh,backendName:"webgl",kernelFunc:BX},VX=LH({opSnippet:"return float(!(x >= 1.0));"}),GX={kernelName:xh,backendName:"webgl",kernelFunc:VX},jX=WH({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),HX={kernelName:vh,backendName:"webgl",kernelFunc:jX},qX={kernelName:kh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Uu().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,l):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},KX={kernelName:Ih,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,l,u,d);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function XX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=pc.parseAxisParam(s,a.shape),u=l,d=Zw.getAxesPermutation(u,o),h=null!=d,p=n.shouldExecuteOnCPU([a]),c=a;if(h){if(p){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];let r=Zj(e,a.shape,a.dtype,d,t);c=n.makeTensorInfo(t,a.dtype),n.texData.get(c.dataId).values=r}else c=JH(a,d,n);u=Zw.getInnerMostAxes(u.length,o)}Zw.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=Zw.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=Zw.expandShapeToKeepDim(m,l)),p){let e=n.texData.get(c.dataId).values,t=Tj(e,pc.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=pc.sizeFromShape(t),s=qH({inputs:{x:e},attrs:{shape:[pc.sizeFromShape(e.shape)/a,a]},backend:r}),i=YH(s,e.dtype,"max",r),o=qH({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return h&&n.disposeIntermediateTensorInfo(c),f}var ZX={kernelName:Sh,backendName:"webgl",kernelFunc:XX},YX=WH({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Cj}),JX={kernelName:Nh,backendName:"webgl",kernelFunc:YX},QX={kernelName:Th,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;oG(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;pc.assert(Zw.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=Zw.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&pc.arraysEqual(u.inShape,u.outShape))return EH({inputs:{x:a},backend:n});let d=new Fq(u,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}},eZ={kernelName:Eh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,d=Zw.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),h=new Oq(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},tZ={kernelName:_h,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=Zw.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),p=new Oq(h,"max",!0),c=n.runWebGLProgram(p,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h),m=n.runWebGLProgram(f,[a,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}},nZ={kernelName:Ch,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;oG([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,p=Zw.computePool2DInfo(o.shape,l,u,1,d,h),c=new Fq(p,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},rZ={kernelName:Rh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=n,u=r;pc.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));let d=[1,1];pc.assert(Zw.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let h=Zw.computePool2DInfo(a.shape,s,i,d,o),[p,c]=function(e,t,n,r){let a=new Fq(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new Fq(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,l,h,u);return[p,c]}},aZ={kernelName:Mh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{keepDims:s,axis:i}=n,o=r,l=a.shape.length,u=pc.parseAxisParam(i,a.shape),d=u,h=Zw.getAxesPermutation(d,l),p=null!=h,c=o.shouldExecuteOnCPU([a]),f=[],m=a;if(p){if(c){let e=o.texData.get(m.dataId).values,t=new Array(l);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];let n=Zj(e,a.shape,a.dtype,h,t);m=o.makeTensorInfo(t,a.dtype),o.texData.get(m.dataId).values=n}else m=JH(a,h,o);f.push(m),d=Zw.getInnerMostAxes(d.length,l)}Zw.assertAxesAreInnerMostDims("sum",d,l);let[g,y]=Zw.computeOutAndReduceShapes(m.shape,d),A=g;s&&(A=Zw.expandShapeToKeepDim(g,u));let b=function(e,t,n,r){let a=pc.sizeFromShape(t),s=qH({inputs:{x:e},attrs:{shape:[pc.sizeFromShape(e.shape)/a,a]},backend:r}),i=YH(s,"float32","mean",r),o=qH({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(m,y,A,o);for(let e of f)o.disposeIntermediateTensorInfo(e);return b}},sZ={kernelName:$h,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=pc.parseAxisParam(s,a.shape),u=l,d=Zw.getAxesPermutation(u,o),h=a;null!=d&&(h=tq({inputs:{x:a},backend:n,attrs:{perm:d}}),u=Zw.getInnerMostAxes(u.length,a.shape.length)),Zw.assertAxesAreInnerMostDims("min",u,o);let p,[c,f]=Zw.computeOutAndReduceShapes(h.shape,u),m=qH({inputs:{x:h},backend:n,attrs:{shape:[-1,pc.sizeFromShape(f)]}}),g=YH(m,m.dtype,"min",n);return p=qH(i?{inputs:{x:g},backend:n,attrs:{shape:Zw.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),p}},iZ=WH({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Ej}),oZ={kernelName:Fh,backendName:"webgl",kernelFunc:iZ},lZ={kernelName:Oh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r,o=Uu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=$G(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Qj("rc",r),l=Qj("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1,p="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${d});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${d});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=$G(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(a.shape,s,i);return n.runWebGLProgram(o,[a],a.dtype)}},uZ=WH({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),dZ={kernelName:zh,backendName:"webgl",kernelFunc:uZ},hZ=WH({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),pZ={kernelName:Ud,backendName:"webgl",kernelFunc:hZ},cZ="return a - b;",fZ=WH({opSnippet:cZ,packedOpSnippet:cZ,supportsComplex:!0,cpuKernelImpl:qj}),mZ={kernelName:zp,backendName:"webgl",kernelFunc:fZ};function gZ(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=pc.parseAxisParam([s],a.shape),o=XX({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Zw.expandShapeToKeepDim(o.shape,i),u=qH({inputs:{x:o},backend:n,attrs:{shape:l}}),d=fZ({inputs:{a,b:u},backend:n}),h=ZK({inputs:{x:d},backend:n}),p=QH({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=qH({inputs:{x:p},backend:n,attrs:{shape:l}}),f=hZ({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),f}var yZ={kernelName:Ip,backendName:"webgl",kernelFunc:gZ},AZ={kernelName:Dh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:gZ({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],d=l.shape[1],h=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(u,d,s),p=[[i]],c=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),c}},bZ={kernelName:Lh,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=Rj(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Uu().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new AH(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new aH(a.shape,"if (isnan(x)) return x;\n  return -x;\n"),r.runWebGLProgram(t,[a],a.dtype)}},xZ=Xk.nonMaxSuppressionV3Impl,vZ={kernelName:Bh,backendName:"webgl",kernelFunc:function(e){Zw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=xZ(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},wZ=Xk.nonMaxSuppressionV4Impl,kZ={kernelName:Uh,backendName:"webgl",kernelFunc:function(e){Zw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:c}=wZ(d,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},IZ=Xk.nonMaxSuppressionV5Impl,SZ={kernelName:Vh,backendName:"webgl",kernelFunc:function(e){Zw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=IZ(d,h,p,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},NZ={kernelName:jh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=pc.sizeFromShape(a.shape),u=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(l,s,i,o),d=qH({inputs:{x:a},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[d],a.dtype);n.disposeIntermediateTensorInfo(d);let p=qH({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),p}};function TZ(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=Zq({inputs:{input:r},backend:n}),t=TZ({inputs:{x:e},backend:n}),a=iK({inputs:{input:r},backend:n}),s=TZ({inputs:{x:a},backend:n}),i=RH({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return iX({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var CZ={kernelName:Hp,backendName:"webgl",kernelFunc:TZ},EZ={kernelName:Gh,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=Zq({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=iK({inputs:{input:a},backend:r}),i=TZ({inputs:{x:s},backend:r}),o=RH({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return iX({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},_Z={kernelName:Hh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return JK({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{pc.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),pc.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=uK({inputs:t.map((e=>{let t=JK({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},RZ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===pc.sizeFromShape(a.shape))return iX({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}});let o=Uu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=$G(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Qj("rc",r),l=Qj("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${d});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=$G(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},MZ={kernelName:qh,backendName:"webgl",kernelFunc:RZ},$Z=WH({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),FZ={kernelName:Xh,backendName:"webgl",kernelFunc:$Z},OZ={kernelName:Yh,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],d=pc.parseAxisParam(i,s.shape),h=d,p=Zw.getAxesPermutation(h,l),c=s;if(null!=p&&(c=tq({inputs:{x:s},backend:r,attrs:{perm:p}}),h=Zw.getInnerMostAxes(h.length,l),u.push(c)),Zw.assertAxesAreInnerMostDims("prod",h,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=$j(c.shape,c.dtype,e,h);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=Zw.computeOutAndReduceShapes(c.shape,h),a=pc.sizeFromShape(n),i=qH({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=YH(i,nf(s.dtype),"prod",r);t=qH({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=Zw.expandShapeToKeepDim(t.shape,d);t=qH({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}},zZ=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Fj(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},DZ={kernelName:Jh,backendName:"webgl",kernelFunc:zZ},PZ=LH({opSnippet:"return 1.0 / x;"}),LZ={kernelName:ep,backendName:"webgl",kernelFunc:PZ},WZ=LH({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),BZ={kernelName:tp,backendName:"webgl",kernelFunc:WZ},UZ=LH({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),VZ={kernelName:op,backendName:"webgl",kernelFunc:UZ},GZ={kernelName:sp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=Uu().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]},\n          ${d[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],"float32")}},jZ={kernelName:ip,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],h=1/u,p=1/d,c=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},HZ={kernelName:rp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=Uu().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]},\n          ${d[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],a.dtype)}},qZ={kernelName:ap,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],h=1/u,p=1/d,c=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},KZ={kernelName:lp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=pc.parseAxisParam(s,a.shape);if(0===i)return EH({inputs:{x:a},backend:n});let l=Uu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=Qj("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=$G(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=$G(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},XZ={kernelName:Xp,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=n,l=r,u=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(a.shape,i),[d,h]=Zw.getImageCenter(o,a.shape[1],a.shape[2]),p=[[d,h,Math.sin(s),Math.cos(s)]];return l.runWebGLProgram(u,[a],a.dtype,p)}},ZZ=LH({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),YZ={kernelName:up,backendName:"webgl",kernelFunc:ZZ},JZ=LH({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Oj}),QZ={kernelName:dp,backendName:"webgl",kernelFunc:JZ},eY=class{constructor(e,t,n,r,a,s){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let i=$G(a.length),o=$G(s.length),l="";1===n?l="i":2===n&&(l="i, j");let u=`getIndices(${l})`,d="";1===r?d="i":2===r&&(d="i, coords[1]");let h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${o} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${u});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}},tY={kernelName:hp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=Zw.calculateShapes(s,a,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,a.dtype);let c=qH({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=qH({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new eY(l,o,c.shape.length,f.shape.length,d,p),y=n.runWebGLProgram(g,[f,c,m],f.dtype),A=qH({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),A}},nY={kernelName:pp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=$G(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],tf(a.dtype,s.dtype))}},rY=LH({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Zw.SELU_SCALEALPHA};\n  float scale = ${Zw.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),aY={kernelName:cp,backendName:"webgl",kernelFunc:rY},sY=LH({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:zj}),iY={kernelName:Ap,backendName:"webgl",kernelFunc:sY},oY=LH({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),lY={kernelName:yp,backendName:"webgl",kernelFunc:oY},uY=LH({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),dY={kernelName:mp,backendName:"webgl",kernelFunc:uY},hY=LH({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),pY={kernelName:gp,backendName:"webgl",kernelFunc:hY},cY=LH({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),fY={kernelName:bp,backendName:"webgl",kernelFunc:cY},mY={kernelName:wp,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;pc.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],d=RZ({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=Zw.getReshaped(d.shape,s,o,!1),p=Zw.getPermuted(h.length,s.length,!1),c=Zw.getReshapedPermuted(d.shape,s,o,!1),f=qH({inputs:{x:d},backend:n,attrs:{shape:h}}),m=tq({inputs:{x:f},backend:n,attrs:{perm:p}}),g=qH({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},gY={kernelName:Sp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),d=n.readSync(i.dataId)[0],[h,p,c,f,m]=Lj(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},yY={kernelName:Np,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,d,h]=Wj(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},AY={kernelName:Tp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=Bj(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}},bY={kernelName:Cp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=Bj(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}},xY={kernelName:Ep,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:d,outputSize:h}=Zw.calculateShapes(s,a,o),p=new eY(u,l,a.shape.length,s.shape.length,d,[h,1],!1),c=n.runWebGLProgram(p,[s,a,i],s.dtype),f=qH({inputs:{x:c},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(c),f}},vY={kernelName:kp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=pc.parseAxisParam(i,a.shape)[0],l=Zw.prepareSplitSize(a,s,o),u=a.shape.length,d=new Array(u).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=Vq({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,r}))}},wY="return sqrt(x);",kY=LH({opSnippet:wY,packedOpSnippet:wY,cpuKernelImpl:Uj}),IY={kernelName:xp,backendName:"webgl",kernelFunc:kY},SY=LH({opSnippet:"return x * x;"}),NY={kernelName:Rp,backendName:"webgl",kernelFunc:SY},TY="return (a - b) * (a - b);",CY=WH({opSnippet:TY,packedOpSnippet:TY}),EY={kernelName:_p,backendName:"webgl",kernelFunc:CY},_Y={kernelName:qp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new aH(a.shape,s);return r.runWebGLProgram(i,[a],a.dtype)}},RY={kernelName:Mp,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:v}=cg.sliceInfo(s.shape,i,o,l,u,d,h,p,c);if(g)t=qH({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||A){pc.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=cg.computeOutShape(b,x,v),n=Vq({inputs:{x:s},backend:r,attrs:{begin:b,size:e}});t=qH({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=km(s.shape,s.dtype,e),a=Vj(f,n,v,b);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=$G(n.length),s=$G(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(b,v,f);t=r.runWebGLProgram(e,[s],s.dtype)}let w=qH({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),w}},MY={kernelName:$p,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.readSync(d.dataId),c=n.readSync(h.dataId),[f,m]=Gj(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},$Y={kernelName:Fp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,d,h]=jj(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},FY={kernelName:Op,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=Hj(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},OY=LH({opSnippet:"return tan(x);"}),zY={kernelName:Dp,backendName:"webgl",kernelFunc:OY},DY=LH({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),PY={kernelName:Pp,backendName:"webgl",kernelFunc:DY};function LY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>pc.decodeString(e))):e,r=km(a.shape,a.dtype,t),i=Kj(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=$G(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var WY={kernelName:Lp,backendName:"webgl",kernelFunc:LY},BY=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function UY(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function VY(e){let t=1;for(;t<e;)t*=2;return t}var GY={kernelName:Wp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Uu().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Uu().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([a])||d<o||s>l){let e=n.readSync(a.dataId),[t,r]=Xj(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[a,iX({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(a.dataId),p=null!==h&&h.isPacked,c=p?n.unpackTensor(a):a,f=pc.sizeFromShape(u)/d,m=qH({inputs:{x:c},attrs:{shape:[f,d]},backend:n});p&&UY(n,c);let g=VY(s),y=VY(d),A=null,b=()=>null===A?[m,m]:[m,A],x=(e,t,r)=>{let a=b(),s=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(r),i=[[d],[null===A?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=A;A=n.runWebGLProgram(s,a,"int32",i),UY(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)x(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=b(),r=new BY([f,e/2]),a=[[d],[null===A?1:0],[g]],s=A;A=n.runWebGLProgram(r,t,"int32",a),UY(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)x(o,e,A.shape)}let v=A;A=Vq({inputs:{x:A},backend:n,attrs:{begin:0,size:[f,s]}}),UY(n,v);let w=bX({inputs:{x:m,indices:A},backend:n,attrs:{axis:1,batchDims:1}});UY(n,m);let k=u.slice(0,-1);k.push(s),v=A,A=qH({inputs:{x:A},attrs:{shape:k},backend:n}),UY(n,v);let I=w;return w=qH({inputs:{x:w},attrs:{shape:k},backend:n}),UY(n,I),[w,A]}},jY={kernelName:Bp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,h,p,c]=a.shape,[f,m]=null!=u?u:[h,p],g=[d,f,m,c],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(h,p,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}},HY={kernelName:Vp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;oG(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=Yj(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},qY={kernelName:Gp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==s&&(u[d++]=i.shape[e]);let h=[],p=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){p[s]=e;let t=Vq({inputs:{x:i},backend:n,attrs:{begin:p,size:c}}),r=qH({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},KY={kernelName:jp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,d=Zw.getAxesPermutation([u],o),h=a;null!=d&&(h=tq({inputs:{x:a},backend:n,attrs:{perm:d}}),l.push(h),u=Zw.getInnerMostAxes(1,o)[0]);let p=Zw.segment_util.computeOutShape(h.shape,u,i),c=pc.sizeFromShape([h.shape[u]]),f=qH({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=nf(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=Zw.segment_util.segOpComputeOptimalWindowSize(o,s),d={windowSize:u,inSize:o,batchSize:i,numSegments:s},h=new class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}(d,t),p=n.compileAndRun(h,[e,r],a);if(l.push(p),p.shape[1]===s)return p;let c=zZ({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=LY({inputs:{x:c},backend:n,attrs:{reps:[o/u]}});return l.push(c),l.push(f),g(p,t,f,a,s)},y=qH({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}}),A=y;if(null!=d){l.push(y);let e=Zw.getUndoAxesPermutation(d);A=tq({inputs:{x:A},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}},XY=[aq,iq,lq,dq,cq,fq,mq,gq,wq,kq,Sq,Tq,Eq,Rq,$q,zq,Dq,Pq,Lq,Wq,Bq,jq,Hq,qq,Jq,tK,nK,MH,aK,dK,fK,mK,gK,yK,AK,bK,vK,kK,IK,CK,MK,$K,FK,DK,PK,LK,WK,BK,UK,GK,jK,qK,XK,YK,QK,nX,sX,lX,uX,pX,fX,mX,gX,yX,AX,xX,wX,IX,_H,SX,oK,TX,EX,RX,OH,$X,OX,zX,PX,WX,UX,GX,HX,qX,KX,ZX,JX,QX,eZ,tZ,nZ,rZ,aZ,sZ,oZ,lZ,dZ,AZ,HH,bZ,vZ,kZ,SZ,Xq,NZ,EZ,_Z,MZ,FZ,PH,OZ,DZ,Yq,pZ,LZ,BZ,VZ,KH,GZ,jZ,HZ,qZ,KZ,XZ,YZ,QZ,tY,nY,aY,iY,lY,dY,pY,Gq,yZ,fY,mY,gY,yY,AY,bY,xY,vY,IY,NY,EY,_Y,RY,MY,$Y,FY,mZ,eq,zY,PY,WY,GY,jY,nq,HY,qY,KY,CZ];for(let e of XY)ic(e);var ZY=Uu();ZY.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),ZY.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),ZY.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",(()=>4)),ZY.registerFlag("WEBGPU_USE_NAIVE_CONV2D",(()=>!1)),ZY.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!1)),ZY.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),ZY.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),ZY.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),ZY.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),ZY.registerFlag("WEBGPU_USE_IMPORT",(()=>!1));var YY="\n  if (isNaN.r) {\n    resultTemp.r = uniforms.NAN;\n  }\n  if (isNaN.g) {\n    resultTemp.g = uniforms.NAN;\n  }\n  if (isNaN.b) {\n    resultTemp.b = uniforms.NAN;\n  }\n  if (isNaN.a) {\n    resultTemp.a = uniforms.NAN;\n  }\n  ",JY=`\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;\n  ${YY}\n  return resultTemp;\n  `;function QY(e,t){let n=t?YY:"\n  if (isnan(a)) { return a; }\n  if (isnan(b)) { return b; }\n  ";return t?`\n    var resultTemp = vec4<f32>(${e}(a, b));\n    let isNaN = isnanVec4(a) | isnanVec4(b);\n    `+n+"\n    return resultTemp;\n  ":n+`\n    return ${e}(a, b);\n  `}function eJ(e,t){switch(e){case 0:return"return a * b;";case 1:return"return a + b;";case 2:return"return a - b;";case 3:return"return a / b;";case 4:return t?"return vec4<f32>(a == b);":"return f32(a == b);";case 5:return t?"return vec4<f32>(a > b);":"return f32(a > b);";case 6:return t?"return vec4<f32>(a >= b);":"return f32(a >= b);";case 7:return t?"return vec4<f32>(a < b);":"return f32(a < b);";case 8:return t?"return vec4<f32>(a <= b);":"return f32(a <= b);";case 9:return t?"return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));":"return f32(f32(a) >= 1.0 && f32(b) >= 1.0);";case 10:return t?"return vec4<f32>(a != b);":"return f32(a != b);";case 11:return"return (a - b) * (a - b);";case 12:return t?"\n  let ia = vec4<i32>(round(a));\n  let ib = vec4<i32>(round(b));\n  let cond = ib != vec4<i32>(0);\n  var resultTemp = vec4<i32>(0);\n  let s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    resultTemp[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    resultTemp[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    resultTemp[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    resultTemp[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4<f32>(resultTemp);\n  ":"\n  let s = sign(a) * sign(b);\n  let ia = i32(round(a));\n  let ib = i32(round(b));\n  return f32(idiv(ia, ib, s));\n  ";case 14:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n  ":"if (a < 0.0) { return b * a; }  return a;";case 15:return QY("max",t);case 16:return QY("min",t);case 13:return t?JY:"\n  if(a < 0.0 && floor(b) < b) {\n    return uniforms.NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  if (round(abs(b) % 2.0) != 1.0) {\n    return pow(abs(a), b);\n  }\n  return sign(a) * pow(abs(a), b);\n  ";case 17:return"return areal * breal - aimag * bimag;";case 18:return"return areal * bimag + aimag * breal;";default:throw new Error(`BinaryType ${e} is not implemented!`)}}function tJ(e,t){switch(e){case 0:return"return abs(a);";case 2:return"return cos(a);";case 3:return"\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n";case 1:return"return ceil(a);";case 4:return t?"\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case 5:return"return exp(a);";case 6:return"return exp(a) - 1.0;";case 7:return"return floor(a);";case 8:return"return a;";case 9:return"if (a < 0.0) { return 1.0/0.0; }\n  return log(a);";case 10:return"return f32(!(a >= 1.0));";case 11:return"return -a;";case 14:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return uniforms.alpha * a; } return a;";case 12:return t?"\n  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));\n  let isNaN = isnanVec4(a);\n\n  if (isNaN.r) {\n    resFloat.r = a.r;\n  }\n  if (isNaN.g) {\n    resFloat.g = a.g;\n  }\n  if (isNaN.b) {\n    resFloat.b = a.b;\n  }\n  if (isNaN.a) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if(a < 0.0) { return 0.0; } return a;";case 13:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case 15:return"return 1.0/sqrt(a);";case 18:return"return 1.0 / (1.0 + exp(-1.0 * a));";case 16:return"return sin(a);";case 17:return"\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n";case 19:return"return sqrt(a);";case 20:return"return a * a;";case 21:return"\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n";case 22:return"return f32(i32((a)));";default:throw new Error(`BinaryType ${e} is not implemented!`)}}function nJ(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(null===e)return null;if("linear"===e)return tJ(8);if("relu"===e)return tJ(12,t);if("elu"===e)return tJ(4,t);if("relu6"===e)return tJ(13,t);if("prelu"===e)return eJ(14,t);if("sigmoid"===e)return tJ(18,t);if("leakyrelu"===e)return tJ(14,t);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function rJ(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}function aJ(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function sJ(e,t){return"float32"===e?t?"vec4<f32>":"f32":"int32"===e||"bool"===e?t?"vec4<i32>":"i32":e}function iJ(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=[];if(a.push(`\n    let workGroupSizeX = ${n.workGroupSize[0]}u;\n    let workGroupSizeY = ${n.workGroupSize[1]}u;\n    let workGroupSizeZ = ${n.workGroupSize[2]}u;\n\n    var<private> localId: vec3<u32>;\n    var<private> globalId: vec3<u32>;\n    var<private> numWorkgroups: vec3<u32>;\n\n    // Only used when the y/z dimension of workgroup size is 1.\n    fn getGlobalIndex() -> i32 {\n      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {\n        return i32(globalId.x);\n      }\n\n      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +\n          localId.y * workGroupSizeX + localId.x;\n      let workGroupID = (globalId - localId)/vec3<u32>(\n          workGroupSizeX, workGroupSizeY, workGroupSizeZ);\n\n      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +\n        workGroupID.y * numWorkgroups.x + workGroupID.x) *\n        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +\n        localInvocationIndex);\n    }\n  `),!0===r)return a.push(`\n      struct Uniform {\n        size            : i32,\n        numChannels     : i32,\n        outShapeStrides : vec2<i32>,\n        dispatchSize    : vec3<u32>,\n      };\n\n      @group(0) @binding(0) var<storage, write> result: array<${sJ(t.dtype,n.isVec4)}>;\n      @group(0) @binding(2) var<uniform> uniforms: Uniform;\n    `),[oJ,a.join("\n"),pJ(t.shape),n.getUserCode()].join("\n");let s="struct Uniforms { NAN : f32, ";n.variableNames.forEach(((t,n)=>{s+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${aJ(e[n].shape.length)}, `})),s+=`outShape : ${aJ(t.shape.length)}, `;let i=t.shape.length-1;s+=`\n       outShapeStrides: ${aJ(i)}, `,n.size&&(s+="size : i32, "),n.uniforms&&(s+=n.uniforms),s+="};",a.push(s),n.atomic?a.push("\n    @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n  "):a.push(`\n    @group(0) @binding(0) var<storage, write> result: array<${sJ(t.dtype,n.isVec4)}>;\n  `),n.variableNames.forEach(((t,r)=>{a.push(`\n    @group(0) @binding(${1+r}) var<storage, read> ${t}: array<${sJ(e[r].dtype,n.isVec4)}>;\n    `)})),""!==s&&a.push(`\n    @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;\n    `);let[o,l]=hJ(t.shape,n.dispatchLayout),u=[oJ,a.join("\n"),pJ(t.shape),o,lJ(t.shape.length)];if(n.atomic||u.push(uJ(t.shape,t.dtype,n.isVec4)),l===t.shape.length){let r=e.map((e=>dJ(e,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length))).join("\n");u.push(r)}return u.push(n.getUserCode()),u.join("\n")}var oJ="\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n\n  fn idiv(a: i32, b: i32, sign: f32) -> i32 {\n    var res: i32 = a / b;\n    let mod: i32 = a % b;\n    if (sign < 0. && mod != 0) {\n      res = res - 1;\n    }\n    return res;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));\n  }\n";function lJ(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;default:pc.assert(!1,(()=>`Unsupported ${e}D shape`))}return t}function uJ(e,t,n){let r,a=e.length,s=sJ(t,n);if(r=n?`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {\n      result[flatIndex] = ${s}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {\n      result[flatIndex] = ${s}(value);\n    }`:`fn setOutputAtIndex(flatIndex : i32, value : f32) {\n      result[flatIndex] = ${s}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {\n      result[flatIndex] = ${s}(value);\n    }`,a>=2){let e=["d0","d1","d2","d3"].slice(0,a),t=aJ(a);r+=n?`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<f32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex / 4, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<i32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex / 4, value);\n      }\n    `:`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : f32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : i32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex, value);\n      }\n    `}return r}function dJ(e,t,n,r){let a=function(e,t){let n=e.name,r=e.shape.length,a=aJ(r),s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3"].slice(0,r),o=i.map((e=>`${e} : i32`)).join(", ");if(r<1)return t?`\n        fn ${s}() -> vec4<f32> {\n          return vec4<f32>(${n}[0]);\n        }\n      `:`\n      fn ${s}() ->f32 {\n        return f32(${n}[0]);\n      }\n    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,u=`${r}D`;return 0===r&&(u="1D"),t?`\n      fn ${s}(${o}) -> vec4<f32> {\n        return vec4<f32>(${n}[getIndexFromCoords${u}(${a}(${i.join(",")}),\n          ${l}) / 4]);\n      }\n      `:`\n    fn ${s}(${o}) -> f32 {\n      return f32(${n}[getIndexFromCoords${u}(${a}(${i.join(",")}),\n        ${l})]);\n    }\n   `}(e,n);return e.shape.length<=t.length&&(a+=function(e,t,n,r){let a=e.name,s=a.charAt(0).toUpperCase()+a.slice(1),i="get"+s+"ByOutput",o=e.shape.length,l=t.length,u=aJ(l);if(pc.arraysEqual(e.shape,t)&&r)return n?`\n        fn ${i}Index(globalIndex : i32) -> vec4<f32> {\n          return vec4<f32>(${a}[globalIndex]);\n        }\n\n        fn ${i}Coords(coords : ${u}) -> vec4<f32> {\n          return vec4<f32>(${a}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);\n        }\n        `:`\n      fn ${i}Index(globalIndex : i32) -> f32 {\n        return f32(${a}[globalIndex]);\n      }\n\n      fn ${i}Coords(coords : ${u}) -> f32 {\n        return f32(${a}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);\n      }\n      `;let d=Zw.getBroadcastDims(e.shape,t),h=l-o,p="";if(0===o)return n?`\n      fn ${i}Index(globalIndex : i32) -> vec4<f32> {\n        return get${s}();\n      }\n\n      fn ${i}Coords(coords : ${u}) -> vec4<f32> {\n        return get${s}();\n      }\n    `:`\n      fn ${i}Index(globalIndex : i32) -> f32{\n        return get${s}();\n      }\n\n      fn ${i}Coords(coords : ${u}) -> f32{\n        return get${s}();\n      }\n    `;p=l<2&&d.length>=1?"coords = 0;":d.map((e=>`coords[${e+h}] = 0;`)).join("\n");let c="";c=l<2&&o>0?"coords":l>1?`${aJ(o)}(${e.shape.map(((e,t)=>`coords[${t+h}]`)).join(", ")})`:"coords";let f=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,m=`${o}D`;return n?`\n      fn ${i}Index(globalIndex : i32) -> vec4<f32> {\n        var coords = getCoordsFromIndex(globalIndex);\n        ${p}\n        return ${a}[getIndexFromCoords${m}(${c}, ${f}) / 4];\n      }\n\n      fn ${i}Coords(coordsIn : ${u}) -> vec4<f32> {\n        var coords = coordsIn;\n        ${p}\n        return ${a}[getIndexFromCoords${m}(${c}, ${f}) / 4];\n      }\n    `:`\n    fn ${i}Index(globalIndex : i32) -> f32 {\n      var coords = getCoordsFromIndex(globalIndex);\n      ${p}\n      return f32(${a}[getIndexFromCoords${m}(${c}, ${f})]);\n    }\n\n    fn ${i}Coords(coordsIn : ${u}) -> f32 {\n      var coords = coordsIn;\n      ${p}\n      return f32(${a}[getIndexFromCoords${m}(${c}, ${f})]);\n    }\n  `}(e,t,n,r)),a}function hJ(e,t){let{x:n,y:r=[],z:a=[]}=t,s=e.length;if(n.length===s)return[`fn getOutputCoords() -> ${aJ(s)}{\n      let globalIndex = getGlobalIndex();\n      return getCoordsFromIndex(globalIndex);\n    }\n    `,s];let i="",o=[n,r,a],l=0;for(let e=0;e<o.length;e++){let t=o[e];if(0!==t.length)if(l+=t.length,1===t.length)i+=`let d${t[0]} = i32(globalId[${e}]);`;else{let n=rJ(t,"uniforms.outShape");i+=`var index${e} = i32(globalId[${e}]);`;for(let r=0;r<n.length;r++)i+=`let d${t[r]} = index${e} / ${n[r]};`,r===n.length-1?i+=`let d${t[r+1]} = index${e} - d${t[r]} * ${n[r]};`:i+=`index${e} = index${e} - d${t[r]} * ${n[r]};`}}let u=[];for(let e=0;e<l;e++)u.push(`d${e}`);let d=aJ(l),h=`fn getOutputCoords() -> ${d} {\n    ${i}\n  `;return 0===u.length?h+=`return ${d}(0); }`:h+=`return ${d}(${u.join(",")}); }`,[h,l]}function pJ(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=pc.computeStrides(e),r=aJ(t),a=[];for(let e=0;e<t;e++)a.push(`d${e}`);return 1===n.length?"    fn getCoordsFromIndex(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;\n      return vec2<i32>(d0, d1);\n    }":`\n    fn getCoordsFromIndex(index : i32) -> ${r} {\n      ${"var index2 = index;"+n.map(((e,t)=>`let ${a[t]} = index2 / uniforms.outShapeStrides[${t}]; ${t===n.length-1?`let ${a[t+1]} = index2 - ${a[t]} * uniforms.outShapeStrides[${t}]`:`index2 = index2 - ${a[t]} * uniforms.outShapeStrides[${t}]`};`)).join("")}\n      return ${r}(${a.join(",")});\n    }\n  `}var cJ={};bl(cJ,{ArrayBufferToTypedArray:()=>wJ,GPUBytesPerElement:()=>vJ,computeDispatch:()=>gJ,computeWorkGroupSizeForConv2d:()=>yJ,computeWorkGroupSizeForMatMul:()=>AJ,computeWorkPerThreadForConv2d:()=>bJ,flatDispatchLayout:()=>xJ,isWebGPUSupported:()=>kJ,tilesFitEvenlyIntoShape:()=>mJ});var fJ=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function mJ(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every(((t,n)=>t%e[n]==0))}function gJ(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],[a,s,i]=[Math.ceil(fJ(e.x.map((e=>t[e])))/(n[0]*r[0])),e.y?Math.ceil(fJ(e.y.map((e=>t[e])))/(n[1]*r[1])):1,e.z?Math.ceil(fJ(e.z.map((e=>t[e])))/(n[2]*r[2])):1];return[a,s,i]}function yJ(e,t){let n=fJ(e.x.map((e=>t[e]))),r=fJ(e.y.map((e=>t[e])));return n<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function AJ(e,t,n){return 1===e?[32,1,1]:1===n?[1,32,1]:[8,8,1]}function bJ(e,t){let n=fJ(e.x.map((e=>t[e]))),r=fJ(e.y.map((e=>t[e])));return n<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function xJ(e){return{x:e.map(((e,t)=>t))}}function vJ(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}function wJ(e,t){if("float32"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function kJ(){return("undefined"!=typeof window||"undefined"!=typeof WorkerGlobalScope)&&!!navigator.gpu}function IJ(e,t,n,r){return pc.assert(r%4==0&&4===e[0],(()=>"tileInner must be divisible by 4. And ColPerThread must be 4")),`\n  var<workgroup> mm_Asub : array<array<vec4<f32>, ${r/e[0]}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${r}>;\n\n  let RowPerThread = ${e[1]};\n  let ColPerThread = ${e[0]};\n  let TileInner = ${r};\n\n  \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n\n    let tileRow = ${1===t?"0":"i32(localId.y) * RowPerThread"};\n    let tileCol = i32(localId.x);\n\n    let globalRow = ${1===t?"0":"i32(globalId.y) * RowPerThread"};\n    let globalCol = i32(globalId.x);\n    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;\n\n    var acc: array<vec4<f32>, RowPerThread>;\n    var ACached : vec4<f32>;\n    var BCached : array<vec4<f32>, 4>;\n\n    // Loop over shared dimension.\n    var globalColA = tileCol;\n    let RowPerThreadB = TileInner / i32(workGroupSizeY);\n    let tileRowB = i32(localId.y) * RowPerThreadB;\n    for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);\n        }\n        globalColA = globalColA + TileInner / ColPerThread;\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {\n            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];\n            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];\n            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];\n            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];\n\n            for (var i = 0; i < RowPerThread; i = i + 1) {\n                ACached = mm_Asub[tileRow + i][k];\n                acc[i] = BCached[0] * ACached.x + acc[i];\n                acc[i] = BCached[1] * ACached.y + acc[i];\n                acc[i] = BCached[2] * ACached.z + acc[i];\n                acc[i] = BCached[3] * ACached.w + acc[i];\n            }\n        }\n\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n        mm_write(globalRow + innerRow,\n                 globalCol,\n                 acc[innerRow], globalId);\n    }\n  }`}function SJ(e,t){let n=t[1]*e[1],r=t[0]*e[0],a=n>r?n:r;return`\n    var<workgroup> mm_Asub : array<array<f32, ${a}>, ${n}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${r}>, ${a}>;\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let tileRow = i32(localId.y) * ${e[1]};\n      let tileCol = i32(localId.x) * ${e[0]};\n\n      let globalRow = i32(globalId.y) * ${e[1]};\n      let globalCol = i32(globalId.x) * ${e[0]};\n\n      let numTiles = (uniforms.dimInner - 1) / ${a} + 1;\n\n      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;\n      var ACached : f32;\n      var BCached : array<f32, ${e[0]}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n\n      let ColPerThreadA = ${a} / ${t[0]};\n      let tileColA = i32(localId.x) * ColPerThreadA;\n      let RowPerThreadB = ${a} / ${t[1]};\n      let tileRowB = i32(localId.y) * RowPerThreadB;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileColA + innerCol;\n\n            mm_Asub[inputRow][inputCol] = mm_readA(\n                globalRow + innerRow,\n                t * ${a} + inputCol, globalId);\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol + innerCol;\n\n            mm_Bsub[inputRow][inputCol] = mm_readB(\n              t * ${a} + inputRow,\n              globalCol + innerCol, globalId);\n          }\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${a}; k = k + 1) {\n          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {\n            BCached[inner] = mm_Bsub[k][tileCol + inner];\n          }\n\n          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n            ACached = mm_Asub[tileRow + innerRow][k];\n            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n            }\n          }\n        }\n\n        workgroupBarrier();\n      }\n\n      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n\n          if ((globalCol + innerCol) < uniforms.dimBOuter &&\n              (globalRow + innerRow) < uniforms.dimAOuter) {\n            mm_write(globalRow + innerRow,\n                     globalCol + innerCol,\n                     acc[innerRow][innerCol], globalId);\n          }\n        }\n      }\n    }\n  `}var NJ=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=r?e[1]:e[2];this.workGroupSize=AJ(t[1],0,t[2]),(1===t[1]||1===t[2])&&(n=1),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),pc.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let u=null!=s,d=null!=o;u&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=r,this.transposeB=a,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=d;let h=this.outputShape[2],p=this.transposeB?[this.outputShape[0],h,l]:[this.outputShape[0],l,h];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${r}_${a}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,r=t>n?t:n;1===this.outputShape[1]&&(r*=4),pc.assert(r%this.workGroupSize[0]==0&&r%this.workGroupSize[1]==0,(()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y"));let a=[r,n];return[mJ([t,r],this.aShape.slice(1)),mJ(a,e.slice(1))]}getUserCode(){let e,t;e=!1===this.transposeA?this.fitA?"return A[batch * batchASize + row * uniforms.dimInner + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n             return A[batch * batchASize + row * uniforms.dimInner + col];\n           }\n           return 0.0;":this.fitA?"return A[batch * batchASize + col * uniforms.dimAOuter + row];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n             return A[batch* batchASize + col * uniforms.dimAOuter + row];\n           }\n           return 0.0;",t=!1===this.transposeB?this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B[batch * batchBSize + row * uniforms.dimBOuter + col];\n           }\n           return 0.0;":this.fitB?"return B[batch * batchBSize + col * uniforms.dimInner + row];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B[batch * batchBSize + col * uniforms.dimInner + row];\n           }\n           return 0.0;";let n="",r="";if(this.activation){let e=nJ(this.activation,!1);n=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${e}\n            }`:`\n              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n                ${e}\n              }\n            `,r="value = activation(value, outCoord);"}return`\n      ${n}\n\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        let batch = i32(globalId.z);\n        ${e}\n      }\n\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batch = i32(globalId.z);\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        ${t}\n      }\n\n      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {\n        var value = valueIn;\n        let batch = i32(globalId.z);\n        let outCoord = vec3<i32>(batch, row, col);\n        ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n        ${r}\n        setOutputAtCoords(batch, row, col, value);\n      }\n      ${this.outputShape[1]>1?SJ([this.workPerThread,this.workPerThread,1],this.workGroupSize):function(e){return`\n    let TileSize = ${4*e[0]};\n    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;\n\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;\n\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        let colA = t * TileSize + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),\n                                mm_readA(globalRow, colA + 1, globalId),\n                                mm_readA(globalRow, colA + 2, globalId),\n                                mm_readA(globalRow, colA + 3, globalId));\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileSize / 4; k = k + 1) {\n          let rowB = t * TileSize + k * 4;\n          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),\n                              mm_readB(rowB + 1, globalCol, globalId),\n                              mm_readB(rowB + 2, globalCol, globalId),\n                              mm_readB(rowB + 3, globalCol, globalId));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {\n        mm_write(globalRow, globalCol, acc, globalId);\n      }\n    }\n  `}(this.workGroupSize)}\n    `}};function TJ(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=pc.sizeFromShape(r.shape),i=pc.inferFromImplicitShape(a,s),o=pc.sizeFromShape(i);return pc.assert(s===o,(()=>`The new shape (${i}) has ${o} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var CJ={kernelName:np,backendName:"webgpu",kernelFunc:TJ};function EJ(e){let{a:t,b:n,transposeA:r,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=t.shape.length,h=n.shape.length,p=r?t.shape[d-2]:t.shape[d-1],c=a?n.shape[h-1]:n.shape[h-2],f=r?t.shape[d-1]:t.shape[d-2],m=a?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),A=pc.sizeFromShape(g),b=pc.sizeFromShape(y),x=Xm.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);pc.assert(p===c,(()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${a} must match.`));let v,w=r?[A,p,f]:[A,f,p],k=a?[b,m,c]:[b,c,m],I=TJ({inputs:{x:t},backend:s,attrs:{shape:w}}),S=TJ({inputs:{x:n},backend:s,attrs:{shape:k}}),N=[I,S],T=Math.max(A,b),C=p%4==0&&m%4==0&&!r&&!a&&m>=32;v=f*m<=32?new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize);let i=null!=r,o=null!=s;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e,t;e=!1===this.transposeA?"return A[batch * batchASize + row * uniforms.dimInner + col];":"return A[batch * batchASize + col * uniforms.dimAOuter + row];",t=!1===this.transposeB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":"return B[batch * batchBSize + col * uniforms.dimInner + row];";let n="",r="";if(this.activation){let e=nJ(this.activation,!1);n=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${e}\n            }`:`\n              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n                ${e}\n              }\n            `,r="value = activation(value, outCoord);"}return`\n      ${n}\n\n      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        ${e}\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        ${t}\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {\n        var value = valueIn;\n        let outCoord = vec3<i32>(batch, row, col);\n        ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n        ${r}\n        setOutputAtCoords(batch, row, col, value);\n      }\n      \n    var<workgroup> sumValues : array<f32, workGroupSizeX>;\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {\n        let dataA = mm_readA(batch, row, k);\n        let dataB = mm_readB(batch, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  \n    `}}([T,f,m],r,a,i,u,o):r||a||!(f<=16&&(m<=512||c>=2*m)||m<=16&&(f<=512||p>=2*f))?C?new class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},1===t[1]?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let i=null!=r,o=null!=s;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=1===t[1]?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],r=[this.tileAOuter,this.tileInner],a=[this.tileInner,this.tileBOuter];return[mJ(r,this.aShape.slice(1)),mJ(a,n.slice(1))]}getUserCode(){let e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner / 4 + col]":"if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n            return A[batch * batchASize + row * uniforms.dimInner / 4 + col];\n        }\n        return vec4<f32>(0.0)",t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":"if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];\n        }\n        return vec4<f32>(0.0)",n="",r="";if(this.activation){let e=nJ(this.activation,this.isVec4);n=this.hasPreluActivationWeights?`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {\n                  let b = getPreluActivationWeightsByOutputCoords(outCoord);\n                  ${e}\n                }`:`\n            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {\n              ${e}\n            }`,r="value = activation(value, outCoord);"}return`\n      ${n}\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;\n        let batch = i32(globalId.z);\n        ${e};\n      }\n\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;\n        let batch = i32(globalId.z);\n        ${t};\n      }\n\n      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {\n        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])\n        {\n          var value = valueIn;\n          let batch = i32(globalId.z);\n          let outCoord = vec3<i32>(batch, row, col * 4);\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${r}\n          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);\n        }\n      }\n      ${IJ(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}\n    `}}(w,[T,f,m],Uu().get("WEBGPU_MATMUL_WORK_PER_THREAD"),i,u,o):new NJ(w,[T,f,m],Uu().get("WEBGPU_MATMUL_WORK_PER_THREAD"),r,a,i,u,o):new class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,16,1],pc.assert(e[1]<=16||t[2]<=16,(()=>"This program can be only used when A width or B Height are small")),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(2*n[1]/this.workGroupSize[1]),n[0]];let i=null!=r;i&&this.variableNames.push("bias");let o=null!=s;o&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let n=nJ(this.activation,!1);e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n            let b = getPreluActivationWeightsByOutputCoords(outCoord);\n            ${n}\n            }`:`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n            ${n}\n        }`,t="value = activation(value, outCoord);"}return`\n      ${e}\n\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        let batch = i32(globalId.z);\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n          return A[batch * batchASize + row * uniforms.dimInner + col];\n        }\n        return 0.0;\n      }\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batch = i32(globalId.z);\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return B[batch * batchBSize + row * uniforms.dimBOuter + col];\n         }\n         return 0.0;\n      }\n      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {\n          let batch = i32(globalId.z);\n          let outCoord = vec3<i32>(batch, row, col);\n          var value = valueIn;\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${t}\n          setOutputAtCoords(batch, row, col, value);\n        }\n      }\n      ${function(e){let t=e[1]/2,n=e[0],r=t>n?t:n;return`\n  var<workgroup> mm_Asub1 : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${r}>;\n  var<workgroup> mm_Asub2 : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${r}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Introduces two shared memory buffers, some logical threads could handle\n  // arithmetic operations and others handle IO operations between barrier api,\n  // makes ALUs and load/store units work simultaneously, could improves\n  // the performance.\n  \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = tileRow;\n    for (var t = 0; t < numTiles; t = t + 1) {\n      if (t == 0) {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub1[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        }\n      } else {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub1[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        } else {\n          // Compute acc values for a single thread.\n          for (var k = 0; k < ${r}; k = k + 1) {\n            let subRow = tileRow - ${t};\n            if (subRow < 0) {\n              continue;\n            }\n            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];\n          }\n        }\n      }\n      workgroupBarrier();\n      if (t != 0) {\n        t = t + 1;\n      }\n\n      if (t < numTiles) {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub2[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        } else {\n          // Compute acc values for a single thread.\n          for (var k = 0; k < ${r}; k = k + 1) {\n            let subRow = tileRow - ${t};\n            if (subRow < 0) {\n              continue;\n            }\n            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};\n    if (tileRow >= ${t} && writeCol >= 0) {\n      mm_write(writeCol, globalCol, acc, globalId);\n    }\n  }\n  `}(this.workGroupSize)}\n    `}}(w,k,[T,f,m],i,u,o);let E=[I,S];i&&E.push(i),o&&E.push(o);let _=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[p]}];"leakyrelu"===u&&(_.push({type:"float32",data:[l]}),v.uniforms+=" alpha : f32,");let R=s.runWebGPUProgram(v,E,t.dtype,_),M=TJ({inputs:{x:R},backend:s,attrs:{shape:x}});N.push(R);for(let e of N)s.disposeData(e.dataId);return M}var _J={kernelName:Zp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r;return EJ({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:d})}},RJ=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=Zw.assertAndGetBroadcastShape(t,n),this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${eJ(this.op,!1)}\n      }\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}},MJ=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0,this.workGroupSize=[128,1,1],this.outputShape=Zw.assertAndGetBroadcastShape(t,n),this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOperation(a : f32, b : f32) -> f32 {\n        ${eJ(this.op,!1)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          let b = getBByOutputIndex(index);\n          setOutputAtIndex(index, binaryOperation(a, b));\n        }\n      }\n      `}};function $J(e,t,n){if(pc.arraysEqual(t,n)&&pc.sizeFromShape(t)%4==0)return new class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0,this.workGroupSize=[128,1,1],this.outputShape=Zw.assertAndGetBroadcastShape(t,n),this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`\n      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n        ${eJ(this.op,this.isVec4)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          let b = getBByOutputIndex(index);\n          setOutputAtIndex(index, binaryOperation(a, b));\n        }\n      }\n    `}}(e,t,n);let r=1===t.length&&n.length>1&&t[0]<1024,a=1===n.length&&t.length>1&&n[0]<1024;return r||a?new class{constructor(e,t,n,r){this.variableNames=["A","B"],this.size=!0,this.workGroupSize=[256,1,1],this.outputShape=Zw.assertAndGetBroadcastShape(t,n),this.dispatchLayout=xJ(this.outputShape),this.lastDimensionSize=r?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=r,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);\n         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];\n         let b = getBByOutputCoords(coords);`;return`\n        fn binaryOperation(a : f32, b : f32) -> f32 {\n          ${eJ(this.op,!1)}\n        }\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n          // Fill in the shared memory buffer. Here we need a loop to make sure\n          // that all data in A|B are uploaded when |sharedMemorySize| is larger\n          // than work group size.\n          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);\n          }\n          workgroupBarrier();\n\n          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n            let flatIndex = index * ${this.workPerThread} + i;\n            if(flatIndex < uniforms.size) {\n              let coords = getCoordsFromIndex(flatIndex);\n\n              ${t}\n              setOutputAtIndex(flatIndex, binaryOperation(a, b));\n            }\n          }\n        }\n        `}}(e,t,n,a):new MJ(e,t,n)}function FJ(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var OJ={kernelName:oh,backendName:"webgpu",kernelFunc:FJ};function zJ(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.tensorMap.get(s.dataId),o=FJ({inputs:{x:r},backend:n}),l=FJ({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var DJ={kernelName:bd,backendName:"webgpu",kernelFunc:zJ},PJ=class{constructor(e,t){this.variableNames=["A"],this.size=!0,this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${tJ(this.op,!1)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}};function LJ(e){let{opType:t,cpuKernelImpl:n,dtype:r}=e;return e=>{let{inputs:a,backend:s}=e,{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){let e=o.tensorMap.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u=new PJ(i.shape,t);return o.runWebGPUProgram(u,[i],l)}}function WJ(e){let{opSnippet:t,cpuKernelImpl:n,supportsComplex:r=!1,dtype:a}=e;return e=>{let{inputs:s,backend:i}=e,{a:o,b:l}=s,u=i;if(r&&"complex64"===o.dtype){let e,n,r=u.tensorMap.get(o.dataId),a=u.tensorMap.get(l.dataId);if(0!==t)[e,n]=[[r.complexTensorInfos.real,a.complexTensorInfos.real],[r.complexTensorInfos.imag,a.complexTensorInfos.imag]].map((e=>{let[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:o.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=$J(t,o.shape,l.shape);return u.runWebGPUProgram(i,[a,s],tf(n.dtype,r.dtype))}));else{let t=new RJ(17,o.shape,l.shape),s=new RJ(18,o.shape,l.shape),i=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o.shape},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:l.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:l.shape}];e=u.runWebGPUProgram(t,i,"float32"),n=u.runWebGPUProgram(s,i,"float32")}let s=zJ({inputs:{real:e,imag:n},backend:u});return u.disposeData(e.dataId),u.disposeData(n.dataId),s}let d=a||tf(o.dtype,l.dtype);if(("string"===o.dtype||"string"===l.dtype||u.shouldExecuteOnCPU([o,l]))&&null!=n){let e=u.tensorMap.get(o.dataId).values,t=u.tensorMap.get(l.dataId).values,r="string"===o.dtype?Zw.fromUint8ToStringArray(e):e,a="string"===o.dtype?Zw.fromUint8ToStringArray(t):t,[s,i]=n(o.shape,l.shape,r,a,d);return u.makeTensorInfo(i,d,s)}let h=$J(t,o.shape,l.shape);return u.runWebGPUProgram(h,[o,l],d)}}var{addImpl:BJ,ceilImpl:UJ,concatImpl:VJ,equalImpl:GJ,expImpl:jJ,expm1Impl:HJ,floorImpl:qJ,gatherNdImpl:KJ,gatherV2Impl:XJ,greaterEqualImpl:ZJ,greaterImpl:YJ,lessEqualImpl:JJ,lessImpl:QJ,logImpl:eQ,maxImpl:tQ,maximumImpl:nQ,minimumImpl:rQ,multiplyImpl:aQ,negImpl:sQ,notEqualImpl:iQ,prodImpl:oQ,rangeImpl:lQ,rsqrtImpl:uQ,simpleAbsImpl:dQ,sliceImpl:hQ,stridedSliceImpl:pQ,stringNGramsImpl:cQ,subImpl:fQ,tileImpl:mQ,topKImpl:gQ,transposeImpl:yQ,uniqueImpl:AQ}=Zz,bQ=LJ({opType:0,cpuKernelImpl:dQ}),xQ={kernelName:qu,backendName:"webgpu",kernelFunc:bQ},vQ=WJ({opSnippet:1,cpuKernelImpl:BJ,supportsComplex:!0}),wQ={kernelName:Zu,backendName:"webgpu",kernelFunc:vQ},kQ={kernelName:Yu,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;if(1===r.length)return FJ({inputs:{x:r[0]},backend:n});let a=r.map((e=>e.dtype)).reduce(((e,t)=>tf(e,t))),s=r.map((e=>e.shape)),i=new class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)}));let t=this.variableNames.map((e=>`v${e}`)).join(" + ");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}}(s);return n.runWebGPUProgram(i,r,a)}},IQ=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32, infinityValue : f32,",this.size=!0;let r=[t];Zw.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.length),this.op="min"===n?"<":">";let[a]=Zw.computeOutAndReduceShapes(e,r);this.outputShape=0===a.length?[1]:a,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=e=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape[${e}]`;return`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      \n      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;\n      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n    \n\n      // In order to get a flattened index into the input tensor, we need to\n      // add back the index along the reduced dimension to |outputCoords|.\n      // This function outputs the offset to the first value along\n      // |axis| and the stride to get the next value of the input along |axis|.\n      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        var i = ${this.outputShape.length-1};\n\n        var stride = 1;\n        var inputStride = 1;\n        var offset = 0;\n\n        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {\n          let length = ${e(`${this.inputShape.length} - r`)};\n          if (${this.inputShape.length} - r == uniforms.axis) {\n            inputStride = stride;\n          } else {\n            offset = offset + ${((e,t)=>1===this.outputShape.length?e:`${e}[i]`)("outputCoords")} * stride;\n            i = i - 1;\n          }\n          stride = stride * length;\n        }\n\n        return vec2<i32>(offset, inputStride);\n      }\n\n      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{\n        return coordInfo[0] + coordInfo[1] * index;\n      }\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        let outputIndex = index / i32(workGroupSizeX);\n        let coordInfo = getInputCoordInfo(outputIndex);\n        let Length = ${e("uniforms.axis")};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n\n        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n            k = k + i32(workGroupSizeX)) {\n          let candidate = f32(x[getInputIndex(coordInfo, k)]);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(Length), workGroupSizeX);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `}};function SQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=a.shape[s[e]];if(n.shouldExecuteOnCPU([a])){let e=i.tensorMap.get(a.dataId).values,t=yQ(e,a.shape,a.dtype,s,l);return n.makeTensorInfo(l,a.dtype,t)}if(2===a.shape.length&&pc.arraysEqual(s,[1,0])){let e=new class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`\n      let TILE_DIM = ${this.workGroupSize[0]};\n      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;\n      \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(local_invocation_id) localId : vec3<u32>,\n              @builtin(workgroup_id) workgroupId : vec3<u32>) {\n        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);\n        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = A[y * width + x];\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);\n        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}}(a.shape,s);return i.runWebGPUProgram(e,[a],a.dtype)}let u=new class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=aJ(this.outputShape.length),t=function(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let t=0;t<e.length;t++)n[e[t]]=`resRC[${t}]`;return n.join()}(this.newDim);return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let resRC = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}}(a.shape,s);return i.runWebGPUProgram(u,[a],a.dtype)}var NQ={kernelName:Up,backendName:"webgpu",kernelFunc:SQ},TQ={kernelName:ed,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=pc.parseAxisParam(s,a.shape),o=Zw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=SQ({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Zw.getInnerMostAxes(i.length,l.shape.length)),Zw.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=new IQ(l.shape,i[0],"max"),h=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(d,[l],"int32",h);return u.forEach((e=>n.disposeData(e.dataId))),p}},CQ={kernelName:td,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=pc.parseAxisParam(s,a.shape),o=Zw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=SQ({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Zw.getInnerMostAxes(i.length,l.shape.length)),Zw.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=new IQ(l.shape,i[0],"min"),h=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(d,[l],"int32",h);return u.forEach((e=>n.disposeData(e.dataId))),p}},EQ=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";"avg"===this.poolType&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return"avg"===this.poolType&&(t="resultValue / count"),`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};\n          var count = 0.0;\n\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, coords[3]);\n              ${e}\n            }\n          }\n\n          setOutputAtIndex(index, ${t});\n        }\n      }\n    `}},_Q=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.stride;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    "}},RQ={kernelName:od,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=Zw.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&pc.arraysEqual(u.inShape,u.outShape))return FJ({inputs:{x:a},backend:n});let d,h=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return 1===u.filterHeight&&1===u.filterWidth?d=new _Q(u):(d=new EQ(u,"avg"),h.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(d,[a],a.dtype,h)}},MQ={kernelName:hd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return EJ({a,b:s,transposeA:i,transposeB:o,backend:n})}},$Q=["x","y","z","w","u","v"];function FQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=cg.parseSliceParams(a,s,i);if(cg.assertParamsValid(a,o,l),n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.tensorMap.get(a.dataId),t=hQ(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}if(0===pc.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);let u=new class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${aJ(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e,t=aJ(this.rank),n=function(e){if(1===e)return"sourceLoc";if(e<=6)return $Q.slice(0,e).map((e=>`sourceLoc.${e}`)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);return e=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${$Q[t]} = uniforms.start[${t}] + coords.${$Q[t]};`)),`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          var sourceLoc : ${t};\n          let coords = getCoordsFromIndex(index);\n          ${e.join("\n")}\n          setOutputAtIndex(index, getSource(${n}));\n        }\n      }\n    `}}(o,l),d=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[a],a.dtype,d)}var OQ={kernelName:fp,backendName:"webgpu",kernelFunc:FQ},zQ={kernelName:pd,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;pc.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=Zw.getReshaped(a.shape,s,o),u=Zw.getPermuted(l.length,s.length),d=Zw.getReshapedPermuted(a.shape,s,o),h=Zw.getSliceBeginCoords(i,s.length),p=Zw.getSliceSize(d,i,s.length),c=[],f=TJ({inputs:{x:a},backend:n,attrs:{shape:l}}),m=SQ({inputs:{x:f},backend:n,attrs:{perm:u}}),g=TJ({inputs:{x:m},backend:n,attrs:{shape:d}}),y=FQ({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeData(e.dataId))),y}},DQ=WJ({opSnippet:10,dtype:"bool",cpuKernelImpl:iQ}),PQ={kernelName:Wh,backendName:"webgpu",kernelFunc:DQ};function LQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return FJ({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.real},backend:n})}var WQ={kernelName:Qh,backendName:"webgpu",kernelFunc:LQ},BQ={kernelName:gd,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return FJ({inputs:{x:s},backend:r});let t=Wb(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=zJ({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeData(n.dataId),a}if("complex64"===s.dtype){let t=LQ({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeData(t.dataId),n}if(!pc.hasEncodingLoss(s.dtype,i)){let e=FJ({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new PJ(e.shape,22),r=t.runWebGPUProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",pc.getTypedArrayFromDType("bool",1)),t=DQ({inputs:{a:s,b:e},backend:r});return r.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},UQ=LJ({opType:1,cpuKernelImpl:UJ}),VQ={kernelName:yd,backendName:"webgpu",kernelFunc:UQ},GQ={kernelName:Ad,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a,l=[{type:"float32",data:[i]},{type:"float32",data:[o]}];return t=pc.sizeFromShape(s.shape)%4==0?new class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue : vec4<f32>;\n          for (var i = 0; i < 4; i = i + 1) {\n            if (isnan(value[i])) {\n              clampedValue[i] = value[i];\n            } else {\n              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);\n            }\n          }\n\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    "}}(s.shape):new class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    "}}(s.shape),r.runWebGPUProgram(t,[s],s.dtype,l)}};function jQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return FJ({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.imag},backend:n})}var HQ={kernelName:uh,backendName:"webgpu",kernelFunc:jQ};function qQ(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>LQ({inputs:{input:e},backend:n}))),a=e.map((e=>jQ({inputs:{input:e},backend:n}))),s=qQ(r,t,n),i=qQ(a,t,n),o=zJ({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeData(e.dataId))),a.forEach((e=>n.disposeData(e.dataId))),n.disposeData(s.dataId),n.disposeData(i.dataId),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=pc.sizeFromShape(e.shape.slice(t));return TJ({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Zw.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=VJ(s,i,r,o),u=Zw.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeData(e.dataId))),d}let{tensors2D:s,outShape:i}=function(e,t,n){let r=Zw.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>TJ({inputs:{x:e},backend:n,attrs:{shape:[pc.sizeFromShape(e.shape.slice(0,t)),pc.sizeFromShape(e.shape.slice(t))]}}))),outShape:r}}(e,t,n),o=s.map((e=>e.shape)),l=new class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=Zw.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);let t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}}(o),u=[],d=new Array(o.length-1);if(d.length>0){d[0]=o[0][1],u.push({type:"int32",data:[d[0]]});for(let e=1;e<d.length;e++)d[e]=d[e-1]+o[e][1],u.push({type:"int32",data:[d[e]]})}let h=n.runWebGPUProgram(l,s,s[0].dtype,u);s.forEach((e=>n.disposeData(e.dataId)));let p=TJ({inputs:{x:h},backend:n,attrs:{shape:i}});return n.disposeData(h.dataId),p}function KQ(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=pc.parseAxisParam(a,t[0].shape)[0],i=Zw.computeOutShape(t.map((e=>e.shape)),s);if(0===pc.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>pc.sizeFromShape(e.shape)>0));if(1===o.length)return FJ({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return Zw.assertParamsConsistent(l,s),qQ(o,s,n)}var XQ={kernelName:vd,backendName:"webgpu",kernelFunc:KQ};function ZQ(e){let t,{x:n,filter:r,convInfo:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=null!=i,h=null!=o;if(a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type||1===a.filterHeight&&1===a.filterWidth&&1===a.dilationHeight&&1===a.dilationWidth&&1===a.strideHeight&&1===a.strideWidth&&("SAME"===a.padInfo.type||"VALID"===a.padInfo.type))return function(e){let t,n,{x:r,filter:a,convInfo:s,backend:i,bias:o=null,preluActivationWeights:l=null,leakyreluAlpha:u=0,activation:d=null}=e,h=r.shape,p="channelsLast"===s.dataFormat;if(s.filterHeight===s.inHeight&&s.filterWidth===s.inWidth&&"VALID"===s.padInfo.type){let e=s.inHeight*s.inWidth*s.inChannels;t=TJ({inputs:{x:r},backend:i,attrs:{shape:[1,s.batchSize,e]}}),n=TJ({inputs:{x:a},backend:i,attrs:{shape:[1,e,s.outChannels]}})}else t=TJ({inputs:{x:r},backend:i,attrs:{shape:[1,p?h[0]*h[1]*h[2]:h[0]*h[2]*h[3],s.inChannels]}}),n=TJ({inputs:{x:a},backend:i,attrs:{shape:[1,s.inChannels,s.outChannels]}});let c=EJ({a:t,b:n,transposeA:!1,transposeB:!1,backend:i,bias:o,activation:d,preluActivationWeights:l,leakyreluAlpha:u}),f=TJ({inputs:{x:c},backend:i,attrs:{shape:s.outShape}});return i.disposeData(t.dataId),i.disposeData(n.dataId),i.disposeData(c.dataId),f}({x:n,filter:r,convInfo:a,backend:s,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l});if(Uu().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&1===n.shape[0])return function(e){let{x:t,filter:n,convInfo:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e,{filterWidth:u,filterHeight:d,inChannels:h,strideWidth:p,strideHeight:c,padInfo:f,outWidth:m,outHeight:g,dilationWidth:y,dilationHeight:A,dataFormat:b}=r,x="channelsLast"===b,v=u*d*h,w=g*m,k=[w,v],I=[],S=TJ({inputs:{x:t},backend:a,attrs:{shape:t.shape.slice(1)}}),N=TJ({inputs:{x:n},backend:a,attrs:{shape:[1,v,-1]}});I.push(S),I.push(N);let T=new class{constructor(e,t){this.variableNames=["A"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n      inChannels : i32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n      for(var i = 0; i<${this.workPerThread}; i = i + 1) {\n        let flatIndex = index * ${this.workPerThread} + i;\n\n        let rc = getCoordsFromIndex(flatIndex);\n\n        if(flatIndex < uniforms.size) {\n          let blockIndex = rc[0];\n          let pos = rc[1];\n\n          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];\n          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;\n          var value = 0.0;\n          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {\n            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -\n              uniforms.pad[0];\n            let d1 = offsetX + uniforms.dilation[0] * ((pos %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n            let ch = pos % uniforms.inChannels;\n            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {\n              value = getA(d0, d1, ch);\n            }\n          }\n          setOutputAtIndex(flatIndex, value);\n        }\n      }\n    }\n  `}}(k,x),C=[{type:"int32",data:[f.left,f.top]},{type:"int32",data:[p,c]},{type:"int32",data:[y,A]},{type:"int32",data:[m]},{type:"int32",data:[h*u]},{type:"int32",data:[h]}],E=a.runWebGPUProgram(T,[S],S.dtype,C),_=TJ({inputs:{x:E},backend:a,attrs:{shape:[1,k[0],k[1]]}});I.push(E),I.push(_);let R=[1,k[0],k[1]],M=new NJ(R,[1,w,r.outChannels],Uu().get("WEBGPU_MATMUL_WORK_PER_THREAD"),!1,!1,s,l,i),$=R[2],F=[{type:"int32",data:[R[1]]},{type:"int32",data:[r.outChannels]},{type:"int32",data:[$]}],O=[_,N];s&&O.push(s),i&&O.push(i),"leakyrelu"===l&&(C.push({type:"float32",data:[o]}),M.uniforms+=" alpha : f32,");let z=a.runWebGPUProgram(M,O,_.dtype,F),D=TJ({inputs:{x:z},backend:a,attrs:{shape:x?[1,g,m,r.outChannels]:[1,r.outChannels,g,m]}});I.push(z);for(let e of I)a.disposeData(e.dataId);return D}({x:n,filter:r,convInfo:a,backend:s,bias:i,preluActivationWeights:o,leakyreluAlpha:l,activation:u});let p=Uu().getBool("WEBGPU_USE_NAIVE_CONV2D"),c=(a.inChannels%4==0||3===a.inChannels&&"VALID"===a.padInfo.type)&&a.outChannels%4==0,f=[a.padInfo.top,a.padInfo.left],m=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];if(p)t=new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),pc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let n=nJ(this.activation);e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec4<i32>) -> f32{\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${n}\n             }`:`\n                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{\n                    ${n}\n                  }\n                `,t="value = activation(value, outCoord);"}return`\n      ${e}\n      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if(coordsInBounds4D(coord, uniforms.xShape)) {\n          return getX(batch, row, col, chan);\n        }\n        return 0.0;\n      }\n\n      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n        let coord = vec4<i32>(row, col, xChannel, outChannel);\n        if(coordsInBounds4D(coord, uniforms.wShape)) {\n          return getW(row, col, xChannel, outChannel);\n        }\n        return 0.0;\n      }\n\n      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if (coordsInBounds4D(coord, uniforms.outShape)) {\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${t}\n          setOutputAtCoords(batch, row, col, chan, value);\n        }\n      }\n\n      \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let outChannel = coords[3];\n\n        var acc = 0.0;\n\n        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {\n              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];\n              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];\n              let v = readInp(batch, coordRow, coordCol, xChannel);\n              let f = readFilt(row, col, xChannel, outChannel);\n              acc = acc + v * f;\n            }\n          }\n        }\n\n        writeResult(batch, coords[1], coords[2], outChannel, acc);\n      }\n    `}}(a,d,u,h);else{t=c?new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,\n      dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,pc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},1===this.outputShape[1]?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,this.hasLeakyreluAlpha=a,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=1===this.outputShape[1]?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],r=this.outputShape[3],a=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[mJ(e,[n,a]),mJ(t,[a,r])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);\n    let divBy4Remainder${e} = flatIndex${e} % 4;\n    let divBy4Index${e} = flatIndex${e} / 4;\n    let curData${e} = x[divBy4Index${e}];\n    if (divBy4Remainder${e} == 0) {\n      temp = curData${e};\n    } else {\n      // TODO: This could end up being a redundant load with another one in\n      // the same shader invocation. Perhaps there's an opportunity for\n      // optimization\n      let nextData${e} = x[divBy4Index${e} + 1];\n      if (divBy4Remainder${e} == 1) {\n        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);\n      } else if (divBy4Remainder${e} == 2) {\n        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);\n      } else if (divBy4Remainder${e} == 3) {\n        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);\n      }\n    }\n    `}getUserCode(){let e=IJ(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),t=`let outRow = r / uniforms.outShape[2];\n        let outCol = r % uniforms.outShape[2];\n        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);\n        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];\n        let inChCoord = c % uniforms.xShape[3];\n        var coord = vec4<i32>(\n            batch,\n            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],\n            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],\n            inChCoord);\n        var resData = vec4<f32>(0.0);\n        ${this.convInfo.inChannels%4==0?"// The bounds checking is always needed since we use it to pad zero for\n          // the 'same' padding type.\n          if (coordsInBounds4D(coord, uniforms.xShape)) {\n            resData = x[getIndexFromCoords4D(coord, uniforms.xShape) / 4];\n          } else {\n            resData = vec4<f32>(0.0); }":`var temp = vec4<f32>(0.0);\n          ${this.getSampleAWithRemainder(1)}\n          resData = temp;\n          if (WCol == (uniforms.filterDims[1] - 1)) {\n            coord = vec4<i32>(\n              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);\n              ${this.getSampleAWithRemainder(2)}\n            if (inChCoord == 0) {\n              resData = vec4<f32>(resData.xyz, temp.x);\n            } else if (inChCoord == 1) {\n              resData = vec4<f32>(resData.xy, temp.xy);\n            } else {\n              resData = vec4<f32>(resData.x, temp.xyz);\n            }\n          }\n          `}\n        return resData;`,n=this.fitA?`${t}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {\n          ${t}\n         }\n         return vec4<f32>(0.0);\n        `,r=this.fitB?"return W[row * uniforms.dimBOuter / 4 + col];":"if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return W[row * uniforms.dimBOuter / 4 + col];\n         }\n         return vec4<f32>(0.0);\n        ",a="",s="";if(this.activation){let e=nJ(this.activation,this.isVec4);if(this.hasPreluActivationWeights)a=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${e}\n        }`;else{if(this.hasLeakyreluAlpha)throw a=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {\n          let b = getLeakyreluAlphaByOutputCoords(outCoord);\n          ${e}\n        }`,new Error("Leakyrelu is not supported.");a=`\n        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          ${e}\n        }`}s="value = activation(value, outCoord);"}return`\n        ${a}\n        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {\n          let r = row;\n          let c = col * 4;\n          var batch = i32(globalId.z);\n          ${n}\n        }\n\n        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {\n          ${r}\n        }\n\n        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {\n          var batch = i32(globalId.z);\n          var value = valueInput;\n          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)\n          {\n            let outCoord = vec4<i32>(\n              batch,\n              row / uniforms.outShape[2],\n              row % uniforms.outShape[2],\n              col * 4);\n            ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n            ${s}\n            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],\n              value);\n          }\n        }\n        ${e}\n      `}}(a,d,u,h):new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,pc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=yJ(this.dispatchLayout,this.outputShape),this.elementsPerThread=bJ(this.dispatchLayout,this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;pc.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,(()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y"));let r=[e,n],a=[n,t],s=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],o=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[mJ(r,[s,o]),mJ(a,[o,i])]}getUserCode(){let e=SJ(this.elementsPerThread,this.workGroupSize),t="\n    let outRow = row / uniforms.outShape[2];\n    let outCol = row % uniforms.outShape[2];\n\n    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);\n    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];\n    let coord = vec4<i32>(\n        batch,\n        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],\n        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],\n        col % uniforms.xShape[3]);\n    // The bounds checking is always needed since we use it to pad zero for the\n    // 'same' padding type.\n    if(coordsInBounds4D(coord, uniforms.xShape)) {\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)];\n    }\n    return 0.0;",n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      ${t}\n    }\n    return 0.0;\n    `,r=this.fitB?"return W[row * uniforms.dimBOuter + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return W[row * uniforms.dimBOuter + col];\n\t }\n\t return 0.0;\n\t ",a="",s="";if(this.activation){let e=nJ(this.activation,!1);a=this.hasPreluActivationWeights?`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {\n                  let b = getPreluActivationWeightsByOutputCoords(outCoord);\n                  ${e}\n                }`:`\n                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n                    ${e}\n                  }\n                `,s="value = activation(value, outCoord);"}return`\n    ${a}\n    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      var batch = i32(globalId.z);\n      ${n}\n    }\n\n    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      ${r}\n    }\n\n    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {\n      var batch = i32(globalId.z);\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n      ${s}\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;\n    }\n    ${e}\n  `}}(a,d,u,h);let e=a.outShape[1]*a.outShape[2],n=a.outShape[3],r=a.filterHeight*a.filterWidth*a.inShape[3];m.push({type:"int32",data:[e]},{type:"int32",data:[n]},{type:"int32",data:[r]})}let g=[n,r];return d&&g.push(i),h&&g.push(o),"leakyrelu"===u&&(m.push({type:"float32",data:[l]}),t.uniforms+=" alpha : f32,"),s.runWebGPUProgram(t,g,n.dtype,m)}var YQ={kernelName:wd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=n,h=Zw.convertConv2DDataFormat(l);return ZQ({x:a,filter:s,convInfo:Zw.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,h),backend:r})}},JQ={kernelName:Id,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{dy:s,filter:i}=n,{inputShape:o,strides:l,pad:u,dataFormat:d,dimRoundingMode:h}=a,p=Zw.convertConv2DDataFormat(d),c=Zw.computeConv2DInfo(o,i.shape,l,1,u,h,!1,p),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}];if(Uu().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))t=new class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3;return`\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${this.isChannelsLast?3:1}];\n\n        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = dyR;\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = dyC;\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              if (${this.isChannelsLast}) {\n                let xValue = getDy(batch, idyR, idyC, d2);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              } else {\n                let xValue = getDy(batch, d2, idyR, idyC);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}(c);else{t=new class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,pc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=yJ(this.dispatchLayout,this.outputShape),this.elementsPerThread=bJ(this.dispatchLayout,this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`\n    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      var batch = i32(globalId.z);\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      \n    let outRow = row / uniforms.outShape[2];\n    let outCol = row % uniforms.outShape[2];\n\n    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);\n    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);\n    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n      return 0.0;\n    }\n    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n      return 0.0;\n    }\n    let coord = vec4<i32>(\n        batch,\n        i32(xR),\n        i32(xC),\n        col % uniforms.outBackprop[3]);\n    return x[getIndexFromCoords4D(coord, uniforms.xShape)];\n    }\n    return 0.0;\n    }\n\n    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      let coordX = uniforms.filterDims.x - 1 -\n          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let coordY = uniforms.filterDims.y - 1 -\n          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n          coordX >= 0 && coordY >= 0) {\n        let coord = vec4<i32>(coordX, coordY, col,\n            row % uniforms.outBackprop[3]);\n        return W[getIndexFromCoords4D(coord, uniforms.wShape)];\n      }\n      return 0.0;\n    }\n\n    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {\n      var batch = i32(globalId.z);\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;\n    }\n\n    ${SJ(this.elementsPerThread,this.workGroupSize)}\n  `}}(c);let e=c.inShape[1]*c.inShape[2],n=c.inShape[3],r=c.filterHeight*c.filterWidth*c.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[n]},{type:"uint32",data:[r]})}return r.runWebGPUProgram(t,[s,i],"float32",f)}},QQ=LJ({opType:2}),e1={kernelName:Cd,backendName:"webgpu",kernelFunc:QQ},t1=LJ({opType:3}),n1={kernelName:Ed,backendName:"webgpu",kernelFunc:t1},r1={kernelName:Md,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new class{constructor(e,t,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[a]=t;this.outputShape=[a,n[0],n[1],e],this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId="bilinear"===r?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,r,a]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${s});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${r};\n        let width_scale = ${i};\n        let in_y = ${a};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${o};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}}(a.shape[3],s.shape,o,l),h=[{type:"float32",data:[u]}];return n.runWebGPUProgram(d,[a,s,i],"float32",h)}},a1={kernelName:Fd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=[{type:"int32",data:[s]}],c=new class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(h,i);return n.runWebGPUProgram(c,[a],a.dtype,p)}},s1=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),pc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let n=nJ(this.activation,this.isVec4);e=this.hasPreluActivation?`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${n}\n        }`:`\n        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n            ${n}\n          }\n        `,t="dotProd[i] = activation(dotProd[i], coords);"}return`\n      ${e}\n\n      \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {\n        let batch = 0;\n        let r = i32(globalId.x);\n        let c = i32(globalId.y) * 4;\n        let d2 = i32(globalId.z) * 4;\n        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;\n        let d1 = d2;\n        let q = 0;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n\n        var wVals : array<vec4<f32>, 9>;\n        wVals[0] = getW(0, 0, d1, q);\n        wVals[1] = getW(0, 1, d1, q);\n        wVals[2] = getW(0, 2, d1, q);\n        wVals[3] = getW(1, 0, d1, q);\n        wVals[4] = getW(1, 1, d1, q);\n        wVals[5] = getW(1, 2, d1, q);\n        wVals[6] = getW(2, 0, d1, q);\n        wVals[7] = getW(2, 1, d1, q);\n        wVals[8] = getW(2, 2, d1, q);\n\n        var xVals : array<array<vec4<f32>, 6>, 3>;\n        for (var wR = 0; wR < 3; wR = wR + 1) {\n          let xR = xRCorner + wR * uniforms.dilation[0];\n          for (var wC = 0; wC < 6; wC = wC + 1) {\n            let xC = xCCorner + wC * uniforms.dilation[1];\n            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {\n              xVals[wR][wC] = vec4<f32>(0.0);\n            } else {\n              xVals[wR][wC] = getX(batch, xR, xC, d1);\n            }\n          }\n        }\n\n        var dotProd : array<vec4<f32>, 4>;\n        dotProd[0] = vec4<f32>(0.0);\n        dotProd[1] = vec4<f32>(0.0);\n        dotProd[2] = vec4<f32>(0.0);\n        dotProd[3] = vec4<f32>(0.0);\n\n        for (var wR = 0; wR < 3; wR = wR + 1) {\n          for (var wC = 0; wC < 3; wC = wC + 1) {\n            let indexW = wR * 3 + wC;\n            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];\n            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];\n            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];\n            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];\n          }\n        }\n\n        for (var i = 0; i < 4; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d2);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            ${this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":""}\n            ${t}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n          }\n        }\n      }\n    `}},i1=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,\n      inDims : vec2<i32>, filterHeight : i32, filterWidth : i32,\n      channelMul : i32,",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),pc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let n=nJ(this.activation,!1);e=this.hasPreluActivation?`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${n}\n        }`:`\n          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n            ${n}\n          }\n        `,t="dotProd = activation(dotProd, coords);"}return`\n      ${e}\n\n      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,\n          value : f32) {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if (coordsInBounds4D(coord, uniforms.outShape)) {\n          setOutputAtCoords(batch, row, col, chan, value);\n        }\n      }\n\n      \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n        let d2 = coords[3];\n        let d1 = d2 / uniforms.channelMul;\n        let q = d2 - d1 * uniforms.channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n        let inputRowEnd = inputRowStart + uniforms.filterHeight *\n            uniforms.dilation[0];\n        let inputColEnd = inputColStart + uniforms.filterWidth *\n            uniforms.dilation[1];\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n\n        // Extract if checking out of for loop for performance.\n        if (inputRowStart >= 0 && inputColStart >= 0 &&\n          inputRowEnd < uniforms.inDims[0] &&\n              inputColEnd < uniforms.inDims[1]) {\n            // Here using a constant value |this.convInfo.filterHeight| instead\n            // of uniform value is in order to loop unrolling.\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                let xVal = getX(batch, xR, xC, d1);\n                let wVal = getW(wR, wC, d1, q);\n                dotProd = dotProd + xVal * wVal;\n              }\n            }\n          } else {\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              if (xR < 0 || xR >= uniforms.inDims[0]) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                if (xC < 0 || xC >= uniforms.inDims[1]) {\n                  continue;\n                }\n\n                let xVal = getX(batch, xR, xC, d1);\n                let wVal = getW(wR, wC, d1, q);\n                dotProd = dotProd + xVal * wVal;\n              }\n            }\n          }\n\n        ${this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":""}\n        ${t}\n        writeResult(batch, coords[1], coords[2], d2, dotProd);\n      }\n    `}},o1={kernelName:Od,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;null==d&&(d=[1,1]);let h,p=Zw.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),c=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]}];return 1===p.batchSize&&p.inHeight===p.outHeight&&p.inWidth===p.outWidth&&1===p.strideHeight&&1===p.strideWidth&&p.filterHeight===p.filterWidth&&p.inChannels===p.outChannels&&1===p.dilationHeight&&1===p.dilationWidth&&3===p.filterHeight&&p.inChannels%4==0?h=new s1(p):(h=new i1(p),c.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.outChannels/p.inChannels]})),n.runWebGPUProgram(h,[a,s],a.dtype,c)}},l1=WJ({opSnippet:0,cpuKernelImpl:aQ,supportsComplex:!0}),u1={kernelName:Ph,backendName:"webgpu",kernelFunc:l1};function d1(e,t,n,r,a){let s=e.shape.length,i=[],o=pc.parseAxisParam(t,e.shape),l=o,u=Zw.getAxesPermutation(l,s),d=e;null!=u&&(d=SQ({inputs:{x:e},attrs:{perm:u},backend:a}),l=Zw.getInnerMostAxes(l.length,s),i.push(d)),Zw.assertAxesAreInnerMostDims(r,l,s);let h,[p,c]=Zw.computeOutAndReduceShapes(d.shape,l),f=p;if(n&&(f=Zw.expandShapeToKeepDim(p,o)),"max"!==r&&"prod"!==r||!a.shouldExecuteOnCPU([d])){let t=pc.sizeFromShape(c),n={windowSize:t,inSize:t,batchSize:pc.sizeFromShape(d.shape)/t,outSize:1},s="mean"===r?"float32":nf(e.dtype),o=[{type:"int32",data:[t]}],l=new class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=Zw.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===n.length?[1]:n,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       \n         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n       \n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n         let outputIndex = index / i32(workGroupSizeX);\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + i32(workGroupSizeX)) {\n           let candidate = f32(x[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), workGroupSizeX);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${n}\n        }\n       }\n     `}}(n,r),u=a.runWebGPUProgram(l,[d],s,o);i.push(u),h=TJ({inputs:{x:u},attrs:{shape:f},backend:a})}else{let t=a.tensorMap.get(d.dataId).values;switch(r){case"max":let n=tQ(t,pc.sizeFromShape(c),f,e.dtype);h=a.makeTensorInfo(f,e.dtype,n);break;case"prod":let{outVals:s,outShape:i,outDtype:o}=oQ(d.shape,d.dtype,t,l);h=a.makeTensorInfo(i,o,s);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}return i.forEach((e=>a.disposeData(e.dataId))),h}function h1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return d1(a,s,i,"sum",n)}var p1={kernelName:vp,backendName:"webgpu",kernelFunc:h1},c1={kernelName:Vd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Zw.decodeEinsumEquation(a,s.length);Zw.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=Zw.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,f=[];for(let e=0;e<h;++e){for(let t of d[e]){let e,{permutationIndices:r,expandDims:a}=Zw.getEinsumPermutation(c,l[t]);Zw.isIdentityPermutation(r)?e=s[t]:(e=SQ({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);pc.arraysEqual(e.shape,i)||(e=TJ({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===p?p=e:(p=l1({inputs:{a:e,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=h1({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let e of f)e!==p&&n.disposeData(e.dataId);return p}},f1=LJ({opType:4}),m1={kernelName:Gd,backendName:"webgpu",kernelFunc:f1},g1=WJ({opSnippet:4,dtype:"bool",cpuKernelImpl:GJ}),y1={kernelName:qd,backendName:"webgpu",kernelFunc:g1},A1=LJ({opType:5,cpuKernelImpl:jJ,dtype:"float32"}),b1={kernelName:Kd,backendName:"webgpu",kernelFunc:A1};function x1(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(pc.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),TJ({inputs:{x:s},backend:r,attrs:{shape:o}})}var v1={kernelName:Xd,backendName:"webgpu",kernelFunc:x1},w1=LJ({opType:6,cpuKernelImpl:HJ}),k1={kernelName:Zd,backendName:"webgpu",kernelFunc:w1};function I1(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||pc.inferDtype(a),"string"===s){let e=pc.getArrayFromDType(s,pc.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return"\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  "}}(r),n=[{type:"float32",data:[a]}];return t.runWebGPUProgram(e,[],s,n)}}var S1={kernelName:Jd,backendName:"webgpu",kernelFunc:I1},N1={kernelName:Qd,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{image:r}=t,a=n,s=new class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    "}}(r.shape);return a.runWebGPUProgram(s,[r],r.dtype)}},T1=LJ({opType:7,cpuKernelImpl:qJ}),C1={kernelName:eh,backendName:"webgpu",kernelFunc:T1},E1=WJ({opSnippet:12,dtype:"int32"}),_1={kernelName:th,backendName:"webgpu",kernelFunc:E1},R1=function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i={dtype:a.dtype,shape:a.shape},o=iJ(r,i,t,s),l=e.createShaderModule({code:o,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"},label:t.constructor.name})};function M1(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map((e=>e.length)).join(",")+n.join(",")+e.variableNames.join(",")+r+a}function $1(e){let{externalImage:t,backend:n,attrs:r,outShape:a,useImport:s}=e,{numChannels:i}=r,o=pc.sizeFromShape(a),l=pc.computeStrides(a),u=n.makeTensorInfo(a,"int32"),d=n.getFromPixelsProgram(s?"import":"copyExternal");d.updateOutputShape(a);let h=[u.shape],p=[u.dtype,s?"import":"copyExternal"],c=M1(d,h,p),f=d.getLayout(n.device),m=n.getAndSavePipeline(c,(()=>R1(n.device,d,f.pipelineLayout,[],u,!0)));d.setPipeline(m),s||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:d.makeInputTexture(n.device,a[1],a[0])},[a[1],a[0]]);let g=n.tensorMap.get(u.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let y,A=[o,i,...l,...d.dispatch];if(d.setUniform(n.device,A),s){let e={source:t};y=n.device.importExternalTexture(e)}else y=d.inputTexture.createView();return n.runFromPixelsProgram(d,g.bufferInfo.buffer,f,y,u.dataId),u}var F1,O1={kernelName:Kp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r;if(null==a)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,l="undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&a instanceof OffscreenCanvas,u="undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap,[d,h]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[h,d,s];if(Uu().getBool("WEBGPU_USE_IMPORT")&&i)return $1({externalImage:a,backend:n,attrs:r,outShape:p,useImport:!0});if((i||o)&&(null==F1&&(F1=document.createElement("canvas").getContext("2d")),F1.canvas.width=d,F1.canvas.height=h,F1.drawImage(a,0,0,d,h),a=F1.canvas),u||l||i||o)return $1({externalImage:a,backend:n,attrs:r,outShape:p,useImport:!1});let c=a.data,f=c;if(null!=s&&4!==s){f=new Uint8Array(a.width*a.height*s);let e=c.length,t=0;for(let n=0;n<e;n++)n%4<s&&(f[t++]=c[n])}let m=n.makeTensorInfo(p,"int32");return n.tensorMap.get(m.dataId).values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}},z1={kernelName:nh,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t,{varianceEpsilon:u}=n,d=r,h=[a,o,l],p=null;null!=i&&(p=i.shape,h.push(i));let c=null;null!=s&&(c=s.shape,h.push(s));let f=new class{constructor(e,t,n,r,a){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Zw.assertAndGetBroadcastShape(e,t),Zw.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),null!=r&&(Zw.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset")),null!=a&&(Zw.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=a,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}}(a.shape,o.shape,l.shape,p,c),m=[{type:"float32",data:[u]}];return d.runWebGPUProgram(f,h,a.dtype,m)}},D1={kernelName:Yp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=Zw.convertConv2DDataFormat(d);return ZQ({x:a,filter:s,convInfo:Zw.computeConv2DInfo(a.shape,s.shape,l,h,u,p,!1,m),backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:c})}},P1={kernelName:Jp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:c}=r,f=d;null==f&&(f=[1,1]),pc.assert(Zw.eitherStridesOrDilationsAreOne(l,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`));let m=Zw.computeConv2DInfo(a.shape,s.shape,l,f,u,h,!0),g=[a,s],y=null!=i,A=null!=o;y&&g.push(i),A&&g.push(o);let b,x=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}];return 1===m.batchSize&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&1===m.strideHeight&&1===m.strideWidth&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&3===m.filterHeight&&m.inChannels%4==0?b=new s1(m,y,p,A):(b=new i1(m,y,p,A),x.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),"leakyrelu"===p&&(x.push({type:"float32",data:[c]}),b.uniforms+=" alpha : f32,"),n.runWebGPUProgram(b,g,"float32",x)}},L1={kernelName:ah,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=pc.sizeFromShape(r.shape),[l,u,d,h]=Zw.prepareAndValidate(r,a),p=TJ({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=TJ({inputs:{x:r},backend:n,attrs:{shape:[pc.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=KJ(e,t,r.dtype,u,i,d,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${aJ(e)},`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}}(i,[u,d]),m=[{type:"int32",data:[i]},{type:"int32",data:h}],g=n.runWebGPUProgram(f,[c,p],c.dtype,m),y=TJ({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(c.dataId),n.disposeData(g.dataId),y}};function W1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=pc.parseAxisParam(i,a.shape)[0],u=Zw.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=pc.sizeFromShape(s.shape),h=[],p=TJ({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=TJ({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])){let e=n.tensorMap.get(c.dataId).values,t=km(c.shape,c.dtype,e),r=n.tensorMap.get(p.dataId).values,a=km(p.shape,p.dtype,r),s=XJ(a,t,f);return h.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("indexZ"):n.push(`${t[r]}`);return n.join()}(this.aShape)}));\n        }\n      }\n    `}}(p.shape,f),g=n.runWebGPUProgram(m,[p,c],p.dtype);h.push(g);let y=TJ({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeData(e.dataId))),y}var B1={kernelName:rh,backendName:"webgpu",kernelFunc:W1},U1=WJ({opSnippet:5,cpuKernelImpl:YJ,dtype:"bool"}),V1={kernelName:sh,backendName:"webgpu",kernelFunc:U1},G1=WJ({opSnippet:6,dtype:"bool",cpuKernelImpl:ZJ}),j1={kernelName:ih,backendName:"webgpu",kernelFunc:G1},H1={kernelName:ch,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=[{type:"float32",data:[s]}],o=new PJ(a.shape,14);return o.uniforms="alpha : f32,",n.runWebGPUProgram(o,[a],"float32",i)}},q1=WJ({opSnippet:7,dtype:"bool",cpuKernelImpl:QJ}),K1={kernelName:fh,backendName:"webgpu",kernelFunc:q1},X1=WJ({opSnippet:8,dtype:"bool",cpuKernelImpl:JJ}),Z1={kernelName:mh,backendName:"webgpu",kernelFunc:X1},Y1=LJ({opType:9,cpuKernelImpl:eQ}),J1={kernelName:yh,backendName:"webgpu",kernelFunc:Y1},Q1=WJ({opSnippet:9,dtype:"bool"}),e0={kernelName:bh,backendName:"webgpu",kernelFunc:Q1},t0=LJ({opType:10}),n0={kernelName:xh,backendName:"webgpu",kernelFunc:t0};function r0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r;return d1(a,s,i,"max",n)}var a0={kernelName:Sh,backendName:"webgpu",kernelFunc:r0},s0=WJ({opSnippet:15,cpuKernelImpl:nQ}),i0={kernelName:Nh,backendName:"webgpu",kernelFunc:s0},o0={kernelName:Th,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=Zw.computePool2DInfo(s.shape,i,o,1,l,u),h=[];if(1===d.filterHeight&&1===d.filterWidth){if(pc.arraysEqual(d.inShape,d.outShape))return FJ({inputs:{x:s},backend:r});t=new _Q(d),h.push({type:"int32",data:[d.strideHeight,d.strideWidth]})}else t=new EQ(d,"max"),h.push({type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]});return r.runWebGPUProgram(t,[s],s.dtype,h)}},l0={kernelName:Mh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{keepDims:s,axis:i}=r;return d1(a,i,s,"mean",n)}},u0={kernelName:$h,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return d1(a,s,i,"min",n)}},d0=WJ({opSnippet:16,cpuKernelImpl:rQ}),h0={kernelName:Fh,backendName:"webgpu",kernelFunc:d0},p0={kernelName:Oh,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{paddings:s,mode:i}=n,o=r,l=s.map((e=>({type:"int32",data:[e[0],e[1]]}))),u=new class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.offset="reflect"===n?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),r=1===e?"start":"start[i]",a=1===e?"end":"end[i]",s=1===e?"outC":"outC[i]",i=aJ(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let start = ${i}(${t});\n          let end = ${i}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${s} < ${r}) {\n              ${s} = ${r} * 2 - ${s} - ${this.offset};\n            } else if(${s} >= ${a}) {\n              ${s} = (${a} - 1) * 2 - ${s} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${o}));\n        }\n      }\n    `}}(a.shape,s,i);return o.runWebGPUProgram(u,[a],a.dtype,l)}},c0={kernelName:Lh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let e=n.tensorMap.get(r.dataId),[t,a]=sQ(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a=new PJ(r.shape,11);return n.runWebGPUProgram(a,[r],r.dtype)}},f0={kernelName:Bh,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=Xk.nonMaxSuppressionV3Impl(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},m0={kernelName:Vh,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Xk.nonMaxSuppressionV5Impl(d,h,p,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};function g0(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=LQ({inputs:{input:r},backend:n}),t=g0({inputs:{x:e},backend:n}),a=jQ({inputs:{input:r},backend:n}),s=g0({inputs:{x:a},backend:n}),i=zJ({inputs:{real:t,imag:s},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(a.dataId),n.disposeData(s.dataId),i}return I1({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var y0={kernelName:Hp,backendName:"webgpu",kernelFunc:g0},A0={kernelName:Gh,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=LQ({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=jQ({inputs:{input:a},backend:r}),i=g0({inputs:{x:s},backend:r}),o=zJ({inputs:{real:n,imag:i},backend:r});return r.disposeData(t.dataId),r.disposeData(n.dataId),r.disposeData(s.dataId),r.disposeData(i.dataId),o}return I1({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},b0={kernelName:Hh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return x1({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{pc.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),pc.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=KQ({inputs:t.map((e=>{let t=x1({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}},x0=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(s.every((e=>pc.arraysEqual(e,[0,0]))))return FJ({inputs:{x:a},backend:n});if(0===pc.sizeFromShape(a.shape))return I1({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}});let o=[{type:"float32",data:[i]}];s.map((e=>o.push({type:"int32",data:[e[0],e[1]]})));let l=new class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=aJ(e),n=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),r=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(",");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let start = ${e>1?`${t}(${n})`:`${n}`};\n          let end = ${e>1?`${t}(${r})`:`${r}`};\n          let outC = getCoordsFromIndex(index);\n\n          if (${e>1?"any(outC < start)":"outC < start"} || ${e>1?"any(outC >= end)":"outC >= end"}) {\n            setOutputAtIndex(index, uniforms.constantValue);\n          } else {\n            let coords = outC - start;\n            setOutputAtIndex(index, getX(${e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords"}));\n          }\n        }\n      }\n    `}}(a.shape,s);return n.runWebGPUProgram(l,[a],a.dtype,o)},v0={kernelName:qh,backendName:"webgpu",kernelFunc:x0},w0=WJ({opSnippet:13}),k0={kernelName:Xh,backendName:"webgpu",kernelFunc:w0},I0={kernelName:Zh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=new MJ(14,r.shape,a.shape);return n.runWebGPUProgram(s,[r,a],"float32")}},S0={kernelName:Yh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return d1(a,s,i,"prod",n)}},N0={kernelName:Jh,backendName:"webgpu",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=lQ(r,a,s,i);return t.makeTensorInfo([o.length],i,o)}},T0=WJ({opSnippet:3}),C0={kernelName:Ud,backendName:"webgpu",kernelFunc:T0},E0=LJ({opType:12}),_0={kernelName:tp,backendName:"webgpu",kernelFunc:E0},R0=LJ({opType:13}),M0={kernelName:op,backendName:"webgpu",kernelFunc:R0},$0={kernelName:sp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,size:i,halfPixelCenters:o}=r,[l,u]=i,d=[{type:"float32",data:[s&&l>1?1:0,s&&u>1?1:0]},{type:"float32",data:[o?.5:0]}],h=new class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    "}}(a.shape,l,u);return n.runWebGPUProgram(h,[a],"float32",d)}},F0={kernelName:rp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=[{type:"float32",data:[s&&l>1?1:0,s&&u>1?1:0]},{type:"float32",data:[s?.5:0]}],h=new class{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}(a.shape,l,u,i);return n.runWebGPUProgram(h,[a],a.dtype,d)}},O0={kernelName:Xp,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=n,l=r,u=new class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}}(a.shape,i),[d,h]=Zw.getImageCenter(o,a.shape[1],a.shape[2]),p=[{type:"float32",data:[d]},{type:"float32",data:[h]},{type:"float32",data:[Math.sin(s)]},{type:"float32",data:[Math.cos(s)]}];return"number"==typeof i?p.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):p.push({type:"float32",data:i}),l.runWebGPUProgram(u,[a],a.dtype,p)}},z0=LJ({opType:15,cpuKernelImpl:uQ}),D0={kernelName:dp,backendName:"webgpu",kernelFunc:z0},P0={kernelName:hp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=Zw.calculateShapes(s,a,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,a.dtype);let c=TJ({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=TJ({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=I1({backend:n,attrs:{shape:p,value:0,dtype:m}}),y=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[pc.sizeFromShape(f.shape)]}],A=new class{constructor(e,t,n,r,a,s,i){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.dispatchLayout=xJ(e),this.dispatch=gJ(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${r}_${this.sliceDimGreaterThanOne}_${i}`;let o=aJ(a.length);this.uniforms=`sliceDim : i32, strides: ${o}, size: i32,`,this.updatesRank=r,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",r="",a="",s="";return 1===this.updatesRank?(r="coords[0]",a="flattenedIndex",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.updatesRank&&(r="coords[0], coords[1]",a="vec2<i32>(flattenedIndex, coords[1])",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        let d0 = index / uniforms.updatesShape[1];\n        let d1 = index - d0 * uniforms.updatesShape[1];\n        return vec2<i32>(d0, d1);\n      }\n      "),`\n    ${s}\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        if (index < uniforms.size) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue = getUpdates(${r});\n          let flatIndex = getOutputIndexFromCoords(${a});\n\n         ${"int32"===this.type?"atomicAdd(&(result[flatIndex]), i32(updateValue));":"\n     var assumed = atomicLoad(&(result[flatIndex]));\n     var success = 0;\n     for (; success == 0;) {\n       let new = bitcast<f32>(assumed) + updateValue;\n       let newI32 = bitcast<i32>(new);\n       let resValue = atomicCompareExchangeWeak(&(result[flatIndex]), assumed, newI32);\n       assumed = resValue[0];\n       success = resValue[1];\n     }\n     "}\n        }\n      }`}}(f.shape,o,c.shape.length,f.shape.length,d,p,m),b=n.runWebGPUProgram(A,[f,c],m,y,g),x=TJ({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),x}},L0={kernelName:pp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let e=0;e<this.outputShape.length;e++)a.push(`${n[e]}`),e<this.cRank&&r.push(`${n[e]}`);e=r.join(),t=a.join()}return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGPUProgram(i,[r,a,s],tf(a.dtype,s.dtype))}},W0=LJ({opType:18}),B0={kernelName:Ap,backendName:"webgpu",kernelFunc:W0},U0=LJ({opType:16}),V0={kernelName:mp,backendName:"webgpu",kernelFunc:U0},G0=LJ({opType:17}),j0={kernelName:gp,backendName:"webgpu",kernelFunc:G0},H0=WJ({opSnippet:2,cpuKernelImpl:fQ,supportsComplex:!0}),q0={kernelName:zp,backendName:"webgpu",kernelFunc:H0},K0={kernelName:Ip,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=pc.parseAxisParam([s],a.shape),o=r0({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Zw.expandShapeToKeepDim(o.shape,i),u=TJ({inputs:{x:o},backend:n,attrs:{shape:l}}),d=H0({inputs:{a,b:u},backend:n}),h=A1({inputs:{x:d},backend:n}),p=h1({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=TJ({inputs:{x:p},backend:n,attrs:{shape:l}}),f=T0({inputs:{a:h,b:c},backend:n});return n.disposeData(o.dataId),n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),n.disposeData(p.dataId),n.disposeData(c.dataId),f}},X0={kernelName:wp,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;pc.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],d=x0({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=Zw.getReshaped(d.shape,s,o,!1),p=Zw.getPermuted(h.length,s.length,!1),c=Zw.getReshapedPermuted(d.shape,s,o,!1),f=TJ({inputs:{x:d},backend:n,attrs:{shape:h}}),m=SQ({inputs:{x:f},backend:n,attrs:{perm:p}}),g=TJ({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach((e=>n.disposeData(e.dataId))),g}},Z0={kernelName:Ep,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:d,outputSize:h}=Zw.calculateShapes(s,a,o),p=[{type:"int32",data:[u]},{type:"int32",data:[l]},{type:"int32",data:d}],c=new class{constructor(e,t,n,r,a,s){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=s,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${r}_${i}`;let o=aJ(a.length);this.uniforms=`updateSize : i32, sliceDim : i32, strides: ${o},`;let l="";1===n?l="i":2===n&&(l="i, j"),this.indicesSnippet=`getIndices(${l})`;let u="";1===r?u="i":2===r&&(u="i, coords[1]"),this.updatesSnippet=`getUpdates(${u})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        let globalIndex = index * ${this.workPerThread};\n        if (globalIndex < uniforms.size) {\n          var sum = vec4<f32>(0.0);\n          var found = vec4<bool>(false);\n          for (var i = 0; i < uniforms.updateSize; i = i + 1) {\n            var flattenedIndex = 0;\n            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n              let indexInside = i32(round(${this.indicesSnippet}));\n              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};\n            }\n            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {\n              let curIndex = globalIndex + innerIndex;\n              let coords = getCoordsFromIndex(curIndex);\n              if (flattenedIndex == coords[0]) {\n                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};\n                found[innerIndex] = true;\n              }\n            }\n          }\n          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {\n            let curIndex = globalIndex + innerIndex;\n            if (curIndex < uniforms.size)\n            {\n              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));\n            }\n          }\n        }\n      }`}}(u,l,a.shape.length,s.shape.length,d,[h,1],!1),f=n.runWebGPUProgram(c,[s,a,i],s.dtype,p),m=TJ({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),m}},Y0={kernelName:kp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=pc.parseAxisParam(i,a.shape)[0],l=Zw.prepareSplitSize(a,s,o),u=a.shape.length,d=new Array(u).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=FQ({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,r}))}},J0=LJ({opType:19}),Q0={kernelName:xp,backendName:"webgpu",kernelFunc:J0},e2={kernelName:Rp,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{x:r}=t,a=n,s=new PJ(r.shape,20);return a.runWebGPUProgram(s,[r],r.dtype)}},t2=WJ({opSnippet:11}),n2={kernelName:_p,backendName:"webgpu",kernelFunc:t2},r2={kernelName:Mp,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:v}=cg.sliceInfo(s.shape,i,o,l,u,d,h,p,c);if(g)t=TJ({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||A){pc.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=cg.computeOutShape(b,x,v),n=FQ({inputs:{x:s},backend:r,attrs:{begin:b,size:e}});t=TJ({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeData(n.dataId)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=km(s.shape,s.dtype,e),a=pQ(f,n,v,b);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=aJ(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}}(f),n=[{type:"int32",data:b},{type:"int32",data:v}],a=r.runWebGPUProgram(e,[s],s.dtype,n);t=TJ({inputs:{x:a},backend:r,attrs:{shape:m}}),r.disposeData(a.dataId)}return t}},a2={kernelName:$p,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.readSync(d.dataId),c=n.readSync(h.dataId),[f,m]=cQ(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},s2=LJ({opType:21}),i2={kernelName:Pp,backendName:"webgpu",kernelFunc:s2},o2={kernelName:Lp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if(n.shouldExecuteOnCPU([a])||"string"===a.dtype||a.shape.length>=5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>pc.decodeString(e))):e,r=km(a.shape,a.dtype,t),i=mQ(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e;a++)r.push(`(${n[a]} % ${t}aShape[${a}])`);return r.join()}(this.rank,"uniforms.");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${e}));\n        }\n      }\n    `}}(a.shape,s);return n.runWebGPUProgram(i,[a],a.dtype)}},l2=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return"\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      "}};function u2(e,t){null!==t&&e.disposeData(t.dataId)}function d2(e){let t=1;for(;t<e;)t*=2;return t}var h2={kernelName:Wp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=a.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([a])){let e=n.readSync(a.dataId),[t,r]=gQ(e,o,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return o[o.length-1]=0,[n.makeTensorInfo(o,a.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(1===l)return[a,I1({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let u=pc.sizeFromShape(o)/l,d=TJ({inputs:{x:a},attrs:{shape:[u,l]},backend:n}),h=d2(s),p=d2(l),c=null,f=()=>null===c?[d,d]:[d,c],m=(e,t,r)=>{let a=f(),s=new class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return"\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      "}}(r),i=[{type:"int32",data:[l]},{type:"int32",data:[null===c?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],o=c;c=n.runWebGPUProgram(s,a,"int32",i),u2(n,o)};for(let e=1;e<h;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)m(t,n,[u,p])}for(let e=p;e>h;e/=2){let t=f(),r=new l2([u,e/2]),a=[{type:"int32",data:[l]},{type:"int32",data:[null===c?1:0]},{type:"int32",data:[h]}],s=c;c=n.runWebGPUProgram(r,t,"int32",a),u2(n,s);let i=h/2,o=2*i;for(let e=i;e>=1;e/=2)m(o,e,c.shape)}let g=c;c=FQ({inputs:{x:c},backend:n,attrs:{begin:0,size:[u,s]}}),u2(n,g);let y=W1({inputs:{x:d,indices:c},backend:n,attrs:{axis:1,batchDims:1}});u2(n,d);let A=o.slice(0,-1);A.push(s),g=c,c=TJ({inputs:{x:c},attrs:{shape:A},backend:n}),u2(n,g);let b=y;return y=TJ({inputs:{x:y},attrs:{shape:A},backend:n}),u2(n,b),[y,c]}},p2={kernelName:Bp,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{image:s,transforms:i}=n,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=a,[h,p,c,f]=s.shape,[m,g]=null!=d?d:[p,c],y=[h,m,g,f],A=new class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return"\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        "}}(y),b="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}let x=[{type:"int32",data:[b]},{type:"int32",data:[t]},{type:"float32",data:[u]}];return r.runWebGPUProgram(A,[s,i],"float32",x)}},c2={kernelName:Gp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==s&&(u[d++]=i.shape[e]);let h=[],p=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){p[s]=e;let t=FQ({inputs:{x:i},backend:n,attrs:{begin:p,size:c}}),r=TJ({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeData(e.dataId))),f}},f2=[_J,xQ,wQ,kQ,TQ,CQ,RQ,MQ,zQ,BQ,VQ,GQ,DJ,XQ,YQ,JQ,e1,n1,r1,a1,o1,c1,m1,y1,b1,v1,k1,S1,N1,O1,C1,_1,z1,D1,P1,L1,B1,V1,j1,OJ,HQ,H1,K1,Z1,J1,e0,n0,a0,i0,o0,l0,u0,h0,p0,u1,c0,f0,m0,PQ,A0,b0,v0,k0,I0,S0,N0,WQ,C0,_0,M0,CJ,$0,F0,O0,D0,P0,L0,B0,V0,j0,OQ,r2,a2,K0,X0,Z0,Y0,Q0,e2,n2,q0,p1,i2,o2,h2,p2,NQ,c2,y0];for(let e of f2)ic(e);function m2(e,t){return`${e}_${t}`}var g2=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){pc.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=xJ(this.outputShape),this.dispatch=gJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        let flatIndexBase = index * uniforms.numChannels;\n        for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n          let flatIndex = flatIndexBase + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndexBase);\n            let values = ${e};\n            result[flatIndex] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:4*t.length,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every(((e,t)=>e===this.lastUniformData[t]))||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return null===this.layout&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[n]})}}},y2=class extends g2{constructor(){super(...arguments),this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return null===this.layout&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[n]})}}},A2=Uu().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),b2=(e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,r=t.dispatchLayout,a=t.dispatch;if(a.every((e=>e<=n)))return a;pc.assert(a[0]>n&&void 0===r.y&&void 0===r.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let s=Math.ceil(Math.sqrt(a[0]));return s>n?(s=Math.ceil(Math.cbrt(a[0])),pc.assert(s<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[s,s,s]):[s,s,1]},x2=class extends Ul{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(super(),this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!kJ())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=m2(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(r).length>0){this.numFreeBuffers--;let e=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(e),e}this.numBytesAllocated+=e;let a=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(r).push(a),a}releaseBuffer(e,t,n){if(0===this.freeBuffers.size)return;let r=m2(t,n);this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.freeBuffers.get(r).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let a=this.usedBuffers.get(r),s=a.indexOf(e);if(s<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");a.splice(s,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then((()=>{this.releaseBuffer(e,t,n)}),(e=>{}))}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}(this.device),this.tensorMap=new Bl(this,Qg()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Uu().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return x2.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach((e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)})),this.uniformDisposalQueue.forEach((e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage))),this.stagingDisposalQueue.forEach((e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage))),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:r}=this.tensorMap.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.defaultGpuBufferUsage();return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);null!=t&&null!=t.bufferInfo.buffer&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){this.tensorMap.has(e)&&this.tensorMap.get(e).refCount--}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()},a=pc.sizeFromShape(t)*vJ(n);return this.tensorMap.set(r,{dtype:n,values:e,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:1}),r}move(e,t,n,r,a){if("complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s=pc.sizeFromShape(n)*vJ(r);this.tensorMap.set(e,{dtype:r,values:t,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:a})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new g2),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new y2),this.fromPixelImportProgram;default:return void pc.assert(!1,(()=>"Unsupported fromPixels shape"))}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(null!=e.values)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),null!=t&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Uu().getBool("WEBGPU_USE_PROFILE_TOOL")&&(pc.assert(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(null==n)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t,n=this.tensorMap.get(e),{values:r}=n;if(null!=r)return this.convertAndCacheOnCPU(e,r);if("complex64"===n.dtype){let e=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),r=e[0],a=e[1];t=Zw.mergeRealAndImagArrays(r,a)}else t=wJ(await this.getBufferData(n),n.dtype);return this.convertAndCacheOnCPU(e,t),t}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>pc.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return km(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=pc.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=pc.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(a);return i.kernelMs=pc.sum(o),i.getExtraProfileInfo=()=>o.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&pc.isString(n[0])){let a=n.map((e=>pc.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(null==t.bufferInfo.buffer&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let e=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),n=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(n).set(t.values):new Float32Array(n).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let r={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:e};this.stagingDisposalQueue.push(r)}}makeUniforms(e){let t=0,n=[];e.forEach((e=>{let r;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:r=4;break;case 2:r=8;break;case 3:case 4:r=16;break;default:pc.assert(!1,(()=>`Unsupported ${e.data.length}D shape`))}t=Math.ceil(t/r)*r,n.push(t),t+=4*e.data.length}));let r=new ArrayBuffer(t);e.forEach(((e,t)=>{let a=n[t];"int32"===e.type?new Int32Array(r,a,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(r,a,e.data.length).set(e.data):new Float32Array(r,a,e.data.length).set(e.data)}));let a=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,r,0,t),{offset:0,size:t,buffer:a}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let n=0;n<e;n++)t.push({binding:n+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:this.device.createPipelineLayout({bindGroupLayouts:[n]})}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,r,a){if(!a){if(a=this.makeTensorInfo(e.outputShape,n),0===pc.sizeFromShape(a.shape))return this.tensorMap.get(a.dataId).values=pc.getTypedArrayFromDType(a.dtype,0),a;this.uploadToGPU(a.dataId)}e.dispatch=b2(this.device,e);let s=[{type:"float32",data:[NaN]}],i=t.concat(a).map((e=>e.shape)),o="int32";i.map((e=>{s.push({type:o,data:e})}));let l=pc.computeStrides(a.shape);if(s.push({type:o,data:l}),e.size){let t=pc.sizeFromShape(e.outputShape);s.push({type:o,data:[e.isVec4?t/4:t]})}r&&(s=[...s,...r]);let u=this.makeUniforms(s),d=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}})),h=d.map((e=>e.dtype)).concat(a.dtype),p=d.map((e=>Zw.getBroadcastDims(e.shape,a.shape))),c=d.map((e=>pc.arraysEqual(e.shape,a.shape))).join("_"),f=p.map((e=>e.join("_"))).join(";"),m=M1(e,i,h,f,c),{bindGroupLayout:g,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),A=this.getAndSavePipeline(m,(()=>R1(this.device,e,y,d,a))),b=null!=this.activeTimers,x=((e,t,n,r,a)=>{let s=[r,...n];return a&&s.push(a),e.createBindGroup({layout:t,entries:s.map(((e,t)=>({binding:t,resource:e})))})})(this.device,g,t.map((e=>this.tensorToBinding(e))),this.tensorToBinding(a),u);this.ensureCommandEncoderReady();let v=this.getComputePass();b&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,0),v.setPipeline(A),v.setBindGroup(0,x),v.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),b&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(a.dataId);let w={byteSize:u.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:u.buffer};return this.uniformDisposalQueue.push(w),Uu().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),b&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}runFromPixelsProgram(e,t,n,r,a){e.dispatch=b2(this.device,e);let s=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:r},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let i=this.getComputePass(),o=null!=this.activeTimers;o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,0),i.setPipeline(e.pipeline),i.setBindGroup(0,s),i.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(a),this.submitQueue(),o&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let r=new BigUint64Array(n.getMappedRange()),a=Number(r[1]-r[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a/1e6}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:A2;return Uu().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).bufferInfo.buffer&&pc.sizeFromShape(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},v2=x2;v2.nextDataId=0;var w2={};bl(w2,{WebGPUBackend:()=>v2,webgpu_util:()=>cJ}),kJ()&&py("webgpu",(async()=>{Uu().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Uu().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,r={},a=t.features.has("timestamp-query");r.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension},a?r.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let s=await t.requestDevice(r);return new v2(s,a)}),3);var k2,I2=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(I2||{}),S2=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(S2||{}),N2={kernelName:Zp,backendName:"wasm",setupFunc:function(e){k2=e.wasm.cwrap(Zp,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r,p=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=S2[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],A=u?s.shape[1]:s.shape[2],b=Xm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),x=n.makeOutput([...b,y,A],a.dtype),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(a.shape).buffer),k=new Uint8Array(new Int32Array(s.shape).buffer);return k2(p,w,a.shape.length,c,k,s.shape.length,l,u,g,f,m,h||0,v),x}};function T2(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===pc.sizeFromShape(i.shape)||n(s,I2[a.dtype],o),i}}}var C2=T2(qu);function E2(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,d=Zw.assertAndGetBroadcastShape(s.shape,i.shape),h=t.makeOutput(d,u);if(0===pc.sizeFromShape(d))return h;let p=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(h.dataId).id;return r(o,p,s.shape.length,l,c,i.shape.length,I2[s.dtype],f),h}}}var _2,R2=E2(Zu),M2={kernelName:Yu,backendName:"wasm",setupFunc:function(e){_2=e.wasm.cwrap(Yu,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===pc.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return _2(s,a.length,I2[r.dtype],i),r}};function $2(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var F2,O2={kernelName:oh,backendName:"wasm",kernelFunc:$2};function z2(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=$2({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return F2(d,c,l.shape.length,I2[l.dtype],h,p,s.length),u}var D2,P2={kernelName:Up,backendName:"wasm",kernelFunc:z2,setupFunc:function(e){F2=e.wasm.cwrap(Up,null,["number","array","number","number","number","array","number"])}};function L2(e,t,n){let r=e.shape,a=e.shape.length,s=pc.parseAxisParam(t,r),i=s,o=Zw.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Zw.getInnerMostAxes(i.length,a),l=z2({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var W2,B2,U2,V2={kernelName:Ju,backendName:"wasm",setupFunc:function(e){D2=e.wasm.cwrap(Ju,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=L2(i,a,t);p&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;Zw.assertAxesAreInnerMostDims("all",d,c);let[f,m]=Zw.computeOutAndReduceShapes(l.shape,d),g=pc.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==pc.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;D2(o,g,e)}if(p&&t.disposeData(u.dataId),s){let e=Zw.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},G2={kernelName:Qu,backendName:"wasm",setupFunc:function(e){W2=e.wasm.cwrap(Qu,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=L2(i,a,t);p&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;Zw.assertAxesAreInnerMostDims("any",d,c);let[f,m]=Zw.computeOutAndReduceShapes(l.shape,d),g=pc.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==pc.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;W2(o,g,e)}if(p&&t.disposeData(u.dataId),s){let e=Zw.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},j2={kernelName:ed,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:d,inputWasTransposed:h}=L2(s,a,t);if(h){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let p=l.shape.slice(0,-1),c=t.makeOutput(p,"int32"),f=t.dataIdMap.get(c.dataId).id,m=pc.sizeFromShape(c.shape),g=l.shape[d[0]];return B2(o,I2[l.dtype],m,g,f),h&&t.disposeData(u.dataId),c},setupFunc:function(e){B2=e.wasm.cwrap(ed,null,["number","number","number","number","number"])}},H2={kernelName:od,backendName:"wasm",setupFunc:function(e){U2=e.wasm.cwrap(od,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=Zw.computePool2DInfo(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,A=d.strideWidth,b=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let x=r.makeOutput(d.outShape,"float32"),v=r.dataIdMap.get(x.dataId).id;return U2(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,f,m,g,y,A,b,v),x}};function q2(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=pc.sizeFromShape(r.shape),i=pc.inferFromImplicitShape(a,s);return pc.assert(s===pc.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var K2,X2={kernelName:np,backendName:"wasm",kernelFunc:q2},Z2={kernelName:hd,backendName:"wasm",setupFunc:function(e){K2=e.wasm.cwrap(hd,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=pc.sizeFromShape(f),y=pc.sizeFromShape(m),A=Xm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);pc.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let b=o?[y,c,h]:[y,h,c],x=q2({inputs:{x:a},backend:n,attrs:{shape:i?[g,d,p]:[g,p,d]}}),v=q2({inputs:{x:s},backend:n,attrs:{shape:b}}),w=n.dataIdMap.get(x.dataId).id,k=n.dataIdMap.get(v.dataId).id,I=i?x.shape[2]:x.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.makeOutput([N,I,S],x.dtype),C=n.dataIdMap.get(T.dataId).id,E=new Uint8Array(new Int32Array(x.shape).buffer),_=new Uint8Array(new Int32Array(v.shape).buffer);return K2(w,E,x.shape.length,k,_,v.shape.length,i,o,C),n.disposeData(x.dataId),n.disposeData(v.dataId),T.shape=A,T}};function Y2(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=cg.parseSliceParams(t,n,r),o=cg.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),d=pc.computeStrides(t.shape),h=a.dataIdMap.get(u.dataId);if(o){let e=cg.computeFlatOffset(s,d);return"string"===t.dtype?h.stringBytes=l.slice(e,e+pc.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+pc.sizeFromShape(i))),u}if("string"===t.dtype){let e=CP(l,s,i,t.shape,t.dtype);return h.stringBytes=e,u}let p=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,d[0],p,s,i);else if(3===c)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],d=o+s[0],h=l+s[1];for(let a=o;a<d;a++)for(let o=l;o<h;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,d[0],d[1],p,s,i);else if(4===c)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],d=s[2],h=l+i[0],p=u+i[1],c=d+i[2],f=s[3];for(let s=l;s<h;s++)for(let l=u;l<p;l++)for(let u=d;u<c;u++){let d=s*t+l*n+u*r+f;a.set(e.subarray(d,d+i[3]),o),o+=i[3]}}(l,d[0],d[1],d[2],p,s,i);else{let e=CP(l,s,i,t.shape,t.dtype);p.set(e)}return u}var J2={kernelName:fp,backendName:"wasm",kernelFunc:Y2},Q2={kernelName:pd,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=Zw.getReshaped(a.shape,s,o),u=Zw.getPermuted(l.length,s.length),d=Zw.getReshapedPermuted(a.shape,s,o),h=Zw.getSliceBeginCoords(i,s.length),p=Zw.getSliceSize(d,i,s.length),c=q2({inputs:{x:a},backend:n,attrs:{shape:l}}),f=z2({inputs:{x:c},backend:n,attrs:{perm:u}}),m=Y2({inputs:{x:q2({inputs:{x:f},backend:n,attrs:{shape:d}})},backend:n,attrs:{begin:h,size:p}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),m}};function e5(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var t5,n5={kernelName:gd,backendName:"wasm",kernelFunc:e5},r5=T2(yd),a5={kernelName:Ad,backendName:"wasm",setupFunc:function(e){t5=e.wasm.cwrap(Ad,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return t5(o,s,i,u),l}};function s5(e){let{inputs:t,backend:n}=e,r=pc.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=Zw.computeOutShape(t.map((e=>e.shape)),r),s=t.filter((e=>pc.sizeFromShape(e.shape)>0));if(1===s.length)return $2({inputs:{x:s[0]},backend:n});let i=n.makeOutput(a,t[0].dtype);if(0===pc.sizeFromShape(a))return i;let o=s.map((e=>e.shape));if(Zw.assertParamsConsistent(o,r),"string"===s[0].dtype){let e=s.map((e=>{let t=pc.sizeFromShape(e.shape.slice(r));return q2({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=Zw.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=kD(o,a,t[0].dtype,l),d=Zw.computeOutShape(s.map((e=>e.shape)),r);return i.shape=d,n.dataIdMap.get(i.dataId).stringBytes=Zw.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),i}let l=pc.sizeFromShape(s[0].shape.slice(0,r)),u=0,d=s.map((e=>{let t=pc.sizeFromShape(e.shape.slice(r));return u+=t,t})),h=s.map((e=>n.typedArrayFromHeap(e))),p=n.typedArrayFromHeap(i);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<h.length;n++){let r=d[n],a=e*r,s=h[n].subarray(a,a+r);p.set(s,t),t+=r}}return i}var i5,o5,l5,u5,d5,h5,p5,c5={kernelName:vd,backendName:"wasm",kernelFunc:s5},f5={kernelName:wd,backendName:"wasm",setupFunc:function(e){i5=e.wasm.cwrap(wd,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h,dataFormat:p}=n,c=Zw.convertConv2DDataFormat(p),f=Zw.computeConv2DInfo(a.shape,s.shape,l,u,d,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,b=f.padInfo.bottom,x=f.padInfo.left,v=f.dilationHeight,w=f.dilationWidth,k=f.strideHeight,I=f.strideWidth,S=f.inChannels,N=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return i5(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,A,b,x,T,v,w,k,I,S,N,E),C}},m5={kernelName:Id,backendName:"wasm",setupFunc:function(e){o5=e.wasm.cwrap(Id,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,h=Zw.convertConv2DDataFormat(l),p=Zw.computeConv2DInfo(d,s.shape,i,1,o,u,!1,h),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:A,outChannels:b,outHeight:x,outWidth:v,strideHeight:w,strideWidth:k}=p,I=f-1-p.padInfo.top,S=m-1-p.padInfo.left,N="channelsLast"===p.dataFormat,T=pc.computeStrides(p.inShape),C=pc.computeStrides(a.shape),[E,_,R]=pc.computeStrides(s.shape),M=T[0],$=N?T[1]:T[2],F=N?T[2]:1,O=N?1:T[1],z=C[0],D=N?C[1]:C[2],P=N?C[2]:1,L=N?1:C[1],W=t.makeOutput(p.inShape,"float32"),B=t.dataIdMap.get(W.dataId).id,U=t.dataIdMap.get(a.dataId).id,V=t.dataIdMap.get(s.dataId).id;return o5(U,V,c,f,m,y,A,g,x,v,b,w,k,I,S,E,_,R,M,$,F,O,z,D,P,L,B),W}},g5=T2(Cd),y5=T2(Ed),A5=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(A5||{}),b5={kernelName:Md,backendName:"wasm",setupFunc:function(e){l5=e.wasm.cwrap(Md,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:d}=r,h=u.shape[0],[p,c]=o,f=[h,p,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=e5({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,A=n.dataIdMap.get(d.dataId).id,b=n.makeOutput(f,"float32"),x=n.dataIdMap.get(b.dataId).id,v=new Uint8Array(new Int32Array(l.shape).buffer);return l5(g,y,A,h,v,p,c,A5[s],i,x),null!=t&&n.disposeData(t.dataId),b}},x5={kernelName:_d,backendName:"wasm",setupFunc:function(e){u5=e.wasm.cwrap(_d,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;pc.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`));let u=Zw.getAxesPermutation([s],l),d=a;null!==u&&(d=z2({inputs:{x:a},attrs:{perm:u},backend:n}));let h=Zw.getInnerMostAxes(1,l)[0];Zw.assertAxesAreInnerMostDims("cumprod",[h],l);let p=n.makeOutput(d.shape,d.dtype),c=d.shape[h],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(p.dataId).id;u5(f,i?1:0,o?1:0,c,m,I2[a.dtype]);let g=p;return null!==u&&(g=z2({inputs:{x:p},attrs:{perm:Zw.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)),g}},v5={kernelName:Rd,backendName:"wasm",setupFunc:function(e){d5=e.wasm.cwrap(Rd,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;pc.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=Zw.getAxesPermutation([s],l),d=a;null!==u&&(d=z2({inputs:{x:a},attrs:{perm:u},backend:n}));let h=Zw.getInnerMostAxes(1,l)[0];Zw.assertAxesAreInnerMostDims("cumsum",[h],l);let p=n.makeOutput(d.shape,d.dtype),c=d.shape[h],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(p.dataId).id;d5(f,i?1:0,o?1:0,c,m,I2[a.dtype]);let g=p;return null!==u&&(g=z2({inputs:{x:p},attrs:{perm:Zw.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)),g}},w5={kernelName:Fd,backendName:"wasm",setupFunc:function(e){h5=e.wasm.cwrap(Fd,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=t.makeOutput(h,"float32"),c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(pc.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(pc.computeStrides(h)).buffer),y=t.dataIdMap.get(p.dataId).id;return h5(c,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,h.length,y),p}},k5={kernelName:Od,backendName:"wasm",setupFunc:function(e){p5=e.wasm.cwrap(Od,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h}=n,p=null==u?[1,1]:u,c=Zw.computeConv2DInfo(a.shape,s.shape,l,p,d,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,A=c.padInfo.bottom,b=c.padInfo.left,x=c.dilationHeight,v=c.dilationWidth,w=c.strideHeight,k=c.strideWidth,I=c.inChannels,S=c.outChannels,N="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let T=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(T.dataId).id;return p5(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,A,b,N,x,v,w,k,I,S,C),T}},I5=T2(Gd),S5=E2(qd,0,"bool"),N5=T2(Kd,"float32");function T5(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(pc.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),q2({inputs:{x:a},backend:r,attrs:{shape:o}})}var C5={kernelName:Xd,backendName:"wasm",kernelFunc:T5};function E5(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var _5,R5,M5,$5,F5,O5,z5,D5,P5,L5,W5,B5,U5,V5={kernelName:Jd,backendName:"wasm",kernelFunc:E5},G5={kernelName:Qd,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,d]=r.shape;return _5(s,o,l,u,d,i),a},setupFunc:function(e){_5=e.wasm.cwrap(Qd,null,["number","number","number","number","number","number"])}},j5=T2(eh),H5=E2(th),q5={kernelName:nh,backendName:"wasm",setupFunc:function(e){R5=e.wasm.cwrap(nh,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,d=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===pc.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return R5(d,h,p,c,f,a,g),m}},K5={kernelName:Yp,backendName:"wasm",setupFunc:function(e){M5=e.wasm.cwrap(Yp,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=Zw.computeConv2DInfo(a.shape,s.shape,l,d,u,p),g=S2[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels,x=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}let v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return M5(y,$,F,O,A,v,w,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}},X5={kernelName:Jp,backendName:"wasm",setupFunc:function(e){$5=e.wasm.cwrap(Jp,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=Zw.computeConv2DInfo(a.shape,s.shape,l,d,u,p,!0),g=S2[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels,x=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}let v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return $5(y,$,F,O,A,v,w,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}},Z5={kernelName:ah,backendName:"wasm",setupFunc:function(e){F5=e.wasm.cwrap(ah,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=og.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let d=a.shape,h=d[d.length-1],p=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return F5(p,I2[r.dtype],c,i,h,o,f,m),u}},Y5={kernelName:rh,backendName:"wasm",setupFunc:function(e){O5=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=pc.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),d=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];pc.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let h=Zw.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=q2({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=pc.sizeFromShape(s.shape),f=q2({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(m,a.dtype);if(0===pc.sizeFromShape(a.shape))return g;let y=p.shape.length-1,A=t.dataIdMap.get(p.dataId).id,b=t.dataIdMap.get(f.dataId).id,x=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(pc.computeStrides(p.shape)).buffer),w=new Uint8Array(new Int32Array(pc.computeStrides(m)).buffer);return O5(A,I2[a.dtype],v,y,b,h.batchSize,w,x),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}},J5=E2(sh,0,"bool"),Q5=E2(ih,0,"bool"),e3={kernelName:ch,backendName:"wasm",setupFunc:function(e){z5=e.wasm.cwrap(ch,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==pc.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;z5(a,I2[t.dtype],n,e)}return s}},t3=E2(fh,0,"bool"),n3=E2(mh,0,"bool"),r3=T2(yh),a3=E2(bh,0,"bool"),s3={kernelName:Sh,backendName:"wasm",setupFunc:function(e){D5=e.wasm.cwrap(Sh,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=L2(i,a,t);p&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;Zw.assertAxesAreInnerMostDims("max",d,c);let[f,m]=Zw.computeOutAndReduceShapes(l.shape,d),g=pc.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==pc.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;D5(o,I2[i.dtype],g,e)}if(p&&t.disposeData(u.dataId),s){let e=Zw.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},i3=E2(Nh),o3={kernelName:Th,backendName:"wasm",setupFunc:function(e){P5=e.wasm.cwrap(Th,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;pc.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=Zw.computePool2DInfo(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.dilationHeight,A=d.dilationWidth,b=d.strideHeight,x=d.strideWidth,v=d.inChannels,w=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let k=r.makeOutput(d.outShape,"float32"),I=r.dataIdMap.get(k.dataId).id;return P5(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,f,m,g,y,A,b,x,v,w,I),k}},l3={kernelName:Mh,backendName:"wasm",setupFunc:function(e){L5=e.wasm.cwrap(Mh,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=L2(i,a,t),f=h;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=Zw.getInnerMostAxes(f.length,u.shape.length))}Zw.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=Zw.computeOutAndReduceShapes(u.shape,f),y=pc.sizeFromShape(g),A=u;"float32"!==u.dtype&&(A=e5({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(A.dataId).id);let b=t.makeOutput(m,"float32");if(0!==pc.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;L5(l,y,e)}if(c&&t.disposeData(d.dataId),s){let e=Zw.expandShapeToKeepDim(b.shape,p);b.shape=e}return"float32"!==u.dtype&&t.disposeData(A.dataId),b}},u3={kernelName:$h,backendName:"wasm",setupFunc:function(e){W5=e.wasm.cwrap($h,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=L2(i,a,t);if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let f=u.shape.length;Zw.assertAxesAreInnerMostDims("min",h,f);let[m,g]=Zw.computeOutAndReduceShapes(u.shape,h),y=pc.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==pc.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;W5(l,I2[i.dtype],y,e)}if(c&&t.disposeData(d.dataId),s){let e=Zw.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},d3=E2(Fh),h3=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(h3||{}),p3={kernelName:Oh,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return B5(i,u,t.shape.length,I2[t.dtype],p,c,h3[a],l),o},setupFunc:function(e){B5=e.wasm.cwrap(Oh,null,["number","array","number","number","array","array","number","number"])}},c3=E2(Ph),f3=T2(Lh);function m3(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var g3,y3,A3,b3,x3,v3,w3,k3,I3,S3,N3,T3,C3,E3,_3,R3,M3={kernelName:Bh,backendName:"wasm",setupFunc:function(e){U5=e.wasm.cwrap(Bh,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=U5(u,d,s,a,i),{pSelectedIndices:p,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=m3(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",p)}},$3={kernelName:Uh,backendName:"wasm",setupFunc:function(e){g3=e.wasm.cwrap(Uh,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=g3(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=m3(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}},F3={kernelName:Vh,backendName:"wasm",setupFunc:function(e){y3=e.wasm.cwrap(Vh,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=y3(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=m3(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},O3=E2(Wh,0,"bool"),z3={kernelName:jh,backendName:"wasm",setupFunc:function(e){A3=e.wasm.cwrap(jh,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(a.dataId).id;return A3(d,s,i,o,u),l}},D3={kernelName:Gh,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},P3={kernelName:Hh,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return T5({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{pc.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),pc.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=s5({inputs:t.map((e=>{let t=T5({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}},L3={kernelName:qh,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===pc.sizeFromShape(t.shape))return E5({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return b3(i,u,t.shape.length,I2[t.dtype],p,c,a,l),o},setupFunc:function(e){b3=e.wasm.cwrap(qh,null,["number","array","number","number","array","array","number","number"])}},W3=E2(Xh),B3={kernelName:Zh,backendName:"wasm",setupFunc:function(e){x3=e.wasm.cwrap(Zh,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=e5({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let d=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(d.dataId).id;return x3(o,i,h),"float32"!==l.dtype&&n.disposeData(u.dataId),d}},U3={kernelName:Yh,backendName:"wasm",setupFunc:function(e){v3=e.wasm.cwrap(Yh,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=L2(i,a,t),f=h;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=Zw.getInnerMostAxes(f.length,u.shape.length))}Zw.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=Zw.computeOutAndReduceShapes(u.shape,f),y=pc.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==pc.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;v3(l,y,I2[A.dtype],e)}if(c&&t.disposeData(d.dataId),s){let e=Zw.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},V3={kernelName:Jh,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=vP(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},G3=E2(Ud),j3=T2(tp),H3=T2(op),q3={kernelName:sp,backendName:"wasm",setupFunc:function(e){w3=e.wasm.cwrap(sp,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,d]=l,[h,p,c,f]=s.shape,m=[h,u,d,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=e5({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,A=n.makeOutput(m,"float32");if(0===pc.sizeFromShape(s.shape))return A;let b=n.dataIdMap.get(A.dataId).id;return w3(y,h,p,c,f,u,d,i?1:0,o?1:0,b),null!=t&&n.disposeData(t.dataId),A}},K3={kernelName:lp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=pc.parseAxisParam(s,a.shape);if(0===a.shape.length)return $2({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);k3(l,d,i.length,h,a.shape.length,u);let p=q2({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),p},setupFunc:function(e){k3=e.wasm.cwrap(lp,null,["number","array","number","array","number","number"])}},X3={kernelName:Xp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[h,p,c,f]=a.shape,[m,g]=Zw.getImageCenter(o,p,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],A=new Uint8Array(new Int32Array(y).buffer);return I3(u,h,p,c,f,s,m,g,A,y.length,d),l},setupFunc:function(e){I3=e.wasm.cwrap(Xp,null,["number","number","number","number","number","number","number","number","array","number","number"])}},Z3=T2(up),Y3=T2(dp),J3={kernelName:hp,backendName:"wasm",setupFunc:function(e){S3=e.wasm.cwrap(hp,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===pc.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=ug.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return S3(c,f,I2[s.dtype],l,u,d,m,p,g),o}},Q3={kernelName:pp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(u.dataId).id,h=r.shape.length,p=a.shape.length,c=0===h||h>1||1===p?1:pc.sizeFromShape(a.shape.slice(1));return N3(i,o,l,c,d),u},setupFunc:function(e){N3=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},e7={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){T3=e.wasm.cwrap(Ap,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===pc.sizeFromShape(a.shape)||T3(r,s),a}},t7=T2(mp),n7={kernelName:Ip,backendName:"wasm",setupFunc:function(e){C3=e.wasm.cwrap(Ip,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=pc.sizeFromShape(n.shape)/o;return 0===pc.sizeFromShape(s.shape)||C3(a,i,o,l),s}},r7={kernelName:wp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=pc.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=L3.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=Zw.getReshaped(u.shape,s,o,!1),h=Zw.getPermuted(d.length,s.length,!1),p=Zw.getReshapedPermuted(u.shape,s,o,!1),c=q2({inputs:{x:u},backend:n,attrs:{shape:d}}),f=z2({inputs:{x:c},backend:n,attrs:{perm:h}}),m=q2({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}},a7={kernelName:Sp,backendName:"wasm",setupFunc:function(e){E3=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],d=n.readSync(i.dataId)[0],h=[l+d,u],p=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(h,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(h.slice(0,1),s.dtype),A=n.dataIdMap.get(y.dataId).id,b=n.makeOutput([d],"bool"),x=n.dataIdMap.get(b.dataId).id,v=n.makeOutput([l],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=n.makeOutput([4],"int32"),I=n.dataIdMap.get(k.dataId).id,S=E3(p,c,I2[s.dtype],l,d,u,f,g,A,x,w,I),N=n.readSync(k.dataId);switch(N[0]){case 1:t=Zw.getSparseFillEmptyRowsIndicesDenseShapeMismatch(N[1]);break;case 2:t=Zw.getSparseFillEmptyRowsNegativeIndexErrorMessage(N[1],N[2]);break;case 3:t=Zw.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(N[1],N[2],N[3]);break;default:t=""}if(n.disposeData(k.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(b.dataId),n.disposeData(v.dataId),new Error(t);let T=m,C=y;return S!==h[0]&&(T=Y2({inputs:{x:m},attrs:{begin:0,size:[S,u]},backend:n}),C=Y2({inputs:{x:y},attrs:{begin:0,size:S},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[T,C,b,v]}},s7={kernelName:Np,backendName:"wasm",setupFunc:function(e){_3=e.wasm.cwrap(Np,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],d=pc.sizeFromShape(s.shape),h=t.makeOutput([u,d],r.dtype),p=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([d],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;_3(i,o,l,u,p,f,g);let y,A=t.readSync(m.dataId);switch(A[0]){case 0:y=Zw.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(A[1],A[2]);break;case 1:y=Zw.getSparseReshapeNegativeOutputDimErrorMessage(A[1],A[2]);break;case 2:y=Zw.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=Zw.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=Zw.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(y);return[h,c]}};function i7(e){R3=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function o7(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(Zw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=a.shape.slice();d[0]=u;let h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(d,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;R3(h,I2[a.dtype],a.shape[0],p,c,m,y,t,0);let A,b=n.readSync(g.dataId);switch(b[0]){case 0:A=Zw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:A=Zw.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:A=Zw.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:A=Zw.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:A=""}if(n.disposeData(g.dataId),A)throw n.disposeData(f.dataId),new Error(A);return f}var l7,u7,d7,h7,p7,c7,f7={kernelName:Tp,backendName:"wasm",setupFunc:i7,kernelFunc:function(e){return o7(e,!0)}},m7={kernelName:Cp,backendName:"wasm",setupFunc:i7,kernelFunc:function(e){return o7(e,!1)}},g7={kernelName:kp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=pc.parseAxisParam(i,a.shape)[0],l=Zw.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let n=Y2({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},y7=T2(xp),A7=T2(Rp),b7=E2(_p),x7={kernelName:qp,backendName:"wasm",setupFunc:function(e){l7=e.wasm.cwrap(qp,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return l7(i,a,I2[s.dtype],l),o}},v7={kernelName:Mp,backendName:"wasm",setupFunc:function(e){u7=e.wasm.cwrap(Mp,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:v}=cg.sliceInfo(s.shape,i,o,l,u,d,h,p,c);if(g)t=q2({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||A){pc.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=cg.computeOutShape(b,x,v),r=Y2({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});t=q2({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(pc.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(b).buffer),o=new Uint8Array(new Int32Array(x).buffer),l=new Uint8Array(new Int32Array(v).buffer),u=new Uint8Array(new Int32Array(f).buffer),d=new Uint8Array(new Int32Array(pc.computeStrides(f)).buffer),h=n.dataIdMap.get(e.dataId).id;u7(r,a,s.shape.length,i,o,l,u,d,f.length,h),t=q2({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}},w7=E2(zp),k7={kernelName:vp,backendName:"wasm",setupFunc:function(e){d7=e.wasm.cwrap(vp,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=L2(i,a,t),f=h;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=Zw.getInnerMostAxes(f.length,u.shape.length))}Zw.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=Zw.computeOutAndReduceShapes(u.shape,f),y=pc.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==pc.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;d7(l,y,I2[A.dtype],e)}if(c&&t.disposeData(d.dataId),s){let e=Zw.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},I7=T2(Dp),S7=T2(Pp),N7={kernelName:Lp,backendName:"wasm",setupFunc:function(e){h7=e.wasm.cwrap(Lp,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(d.dataId).id;return h7(s,l,a.shape.length,u,o.length,I2[d.dtype],h),d}},T7={kernelName:Wp,backendName:"wasm",setupFunc:function(e){p7=e.wasm.cwrap(Wp,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(a.shape).buffer),u=a.shape.slice();u[u.length-1]=s;let d=n.makeOutput(u,a.dtype),h=n.dataIdMap.get(d.dataId).id,p=n.makeOutput(u,"int32"),c=n.dataIdMap.get(p.dataId).id;return p7(o,l,a.shape.length,I2[a.dtype],s,i,h,c),[d,p]}},C7={kernelName:Bp,backendName:"wasm",setupFunc:function(e){c7=e.wasm.cwrap(Bp,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=a,[h,p,c,f]=s.shape,[m,g]=null!=d?d:[p,c],y=[h,m,g,f],A=new Uint8Array(new Int32Array(pc.computeStrides(s.shape)).buffer),b=n.makeOutput(y,s.dtype),x=n.dataIdMap.get(b.dataId).id,v=n.dataIdMap.get(s.dataId).id,w=n.dataIdMap.get(i.dataId).id,k="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return c7(v,w,i.shape[0]>1,h,m,g,f,c,p,A,s.shape.length-1,k,t,u,x),b}},E7={kernelName:Gp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let d=new Array(i),h=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<d.length;e++)h[s]=e,d[e]=Y2({inputs:{x:a},attrs:{begin:h,size:p},backend:n});return d.map((e=>{let{dataId:t,dtype:n}=e;return{dataId:t,dtype:n,shape:l}}))}},_7={kernelName:Hp,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},R7=[N2,C2,R2,M2,V2,G2,j2,H2,Z2,Q2,n5,r5,a5,c5,f5,m5,g5,y5,b5,x5,v5,w5,k5,I5,S5,N5,C5,V5,G5,j5,H5,q5,K5,X5,Z5,Y5,J5,Q5,O2,e3,t3,n3,r3,a3,s3,i3,o3,l3,u3,d3,p3,c3,f3,M3,$3,F3,O3,z3,D3,P3,L3,W3,B3,U3,V3,G3,j3,H3,X2,q3,K3,X3,Z3,Y3,J3,Q3,e7,t7,J2,n7,r7,a7,s7,f7,m7,g7,y7,A7,b7,x7,v7,w7,k7,I7,S7,N7,T7,C7,P2,E7,_7];for(let e of R7)ic(e);var M7=Uu();M7.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),M7.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(M7.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var $7=xl(Ll()),F7=xl(Wl()),O7=class extends Ul{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(j7),H7=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Bl(this,Qg())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=pc.now();return e(),{kernelMs:pc.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=pc.sizeFromShape(n),o=i*pc.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||pc.sizeFromShape(s);let o=pc.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=pc.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap(e){let{shape:t,dtype:n,dataId:r}=e,a=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(r),i=pc.sizeFromShape(t);switch(n){case"float32":return new Float32Array(a,s,i);case"int32":return new Int32Array(a,s,i);case"bool":return new Uint8Array(a,s,i);default:throw new Error(`Unknown dtype ${n}`)}}};function z7(e,t,n){if(null!=P7)return P7;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=W7&&null!=W7[r]?W7[r]:n+r}var D7=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],P7=null,L7=null,W7={},B7=!1,U7=!1;function V7(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Yg("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),B7)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");P7=e,U7=t}function G7(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(B7)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)L7=e;else{W7=e;let t=D7.filter((e=>null==W7[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}U7=t}var j7=-1,H7=-1;function q7(e){j7=e}function K7(){if(-1===H7)throw new Error("WASM backend not initialized.");return H7}var X7="0.0.0";py("wasm",(async()=>{let{wasm:e}=await async function(){let[e,t]=await Promise.all([Uu().getAsync("WASM_HAS_SIMD_SUPPORT"),Uu().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});'.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?z7(e,t,null!=L7?L7:r):r+n}};U7&&(a.instantiateWasm=function(e){return(t,n)=>(pc.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}(z7(e,t,null!=L7?L7:"")));let s,i=!1;a.onAbort=()=>{i||B7||(B7=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==P7?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+$7.default.toString()],{type:"text/javascript"}),s=(0,$7.default)(a)):s=(0,F7.default)(a),s.then((e=>{i=!0,B7=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new O7(e)}),2);var Z7="3.15.0-20220405",Y7={tfjs:Z7,"tfjs-core":Z7,"tfjs-data":Z7,"tfjs-layers":Z7,"tfjs-converter":Z7,"tfjs-backend-cpu":Z7,"tfjs-backend-webgl":Z7,"tfjs-backend-wasm":Z7},J7=(e,t,n)=>{const r=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(r,((e,t)=>(n[t]=0,e)))};function Q7(){let e=0,t=null,n=!1,r=-1,a=[null,null],s=[],i=null,o=null;const l=o4(100,100),u={},d=l.getContext("webgl");if(this.gl=d,!d)return void il("filter: cannot get webgl context");function h(e){return a[e]=a[e]||function(e,t){const n=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,n);const r=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,r);const a=d.createTexture();return d.bindTexture(d.TEXTURE_2D,a),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,e,t,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,a,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:n,texture:a}}(l.width,l.height),a[e]}function p(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!o)return;let s=null,i=null,l=!1;s=0===e?t:h(r).texture||null,e++,!n||1&a?(r=(r+1)%2,i=h(r).fbo||null):(i=null,l=e%2==0),d.bindTexture(d.TEXTURE_2D,s),d.bindFramebuffer(d.FRAMEBUFFER,i),d.uniform1f(o.uniform.flipY,l?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function c(e){if(u[e])return o=u[e],d.useProgram((o?o.id:null)||null),o;if(o=new class{constructor(e,t,n){tl(this,"uniform",{}),tl(this,"attribute",{}),tl(this,"gl"),tl(this,"id"),tl(this,"compile",((e,t)=>{const n=this.gl.createShader(t);return n?(this.gl.shaderSource(n,e),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS)?n:(il(`filter: gl compile failed: ${this.gl.getShaderInfoLog(n)}`),null)):(il("filter: could not create shader"),null)})),this.gl=e;const r=this.compile(t,this.gl.VERTEX_SHADER),a=this.compile(n,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),r&&a)if(this.id)if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){this.gl.useProgram(this.id),J7(t,"attribute",this.attribute);for(const e in this.attribute)this.attribute[e]=this.gl.getAttribLocation(this.id,e);J7(t,"uniform",this.uniform),J7(n,"uniform",this.uniform);for(const e in this.uniform)this.uniform[e]=this.gl.getUniformLocation(this.id,e)}else il(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);else il("filter: could not create webgl program")}}(d,"\n  precision highp float;\n  attribute vec2 pos;\n  attribute vec2 uv;\n  varying vec2 vUv;\n  uniform float flipY;\n  void main(void) {\n    vUv = uv;\n    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);\n  }\n",e),!o)return il("filter: could not get webgl program"),null;const t=Float32Array.BYTES_PER_ELEMENT,n=4*t;return d.enableVertexAttribArray(o.attribute.pos),d.vertexAttribPointer(o.attribute.pos,2,d.FLOAT,!1,n,0*t),d.enableVertexAttribArray(o.attribute.uv),d.vertexAttribPointer(o.attribute.uv,2,d.FLOAT,!1,n,2*t),u[e]=o,o}const f={colorMatrix:e=>{const t=new Float32Array(e);t[4]/=255,t[9]/=255,t[14]/=255,t[19]/=255;const n=c(1===t[18]&&0===t[3]&&0===t[8]&&0===t[13]&&0===t[15]&&0===t[16]&&0===t[17]&&0===t[19]?"\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];\n    gl_FragColor.a = c.a;\n  }\n":"\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];\n    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];\n  }\n");n&&(d.uniform1fv(n.uniform.m,t),p())},brightness:e=>{const t=(e||0)+1;f.colorMatrix([t,0,0,0,0,0,t,0,0,0,0,0,t,0,0,0,0,0,1,0])},saturation:e=>{const t=2*(e||0)/3+1,n=-.5*(t-1);f.colorMatrix([t,n,n,0,0,n,t,n,0,0,n,n,t,0,0,0,0,0,1,0])},desaturate:()=>{f.saturation(-1)},contrast:e=>{const t=(e||0)+1,n=-128*(t-1);f.colorMatrix([t,0,0,0,n,0,t,0,0,n,0,0,t,0,n,0,0,0,1,0])},negative:()=>{f.contrast(-2)},hue:e=>{e=(e||0)/180*Math.PI;const t=Math.cos(e),n=Math.sin(e),r=.213,a=.715,s=.072;f.colorMatrix([r+.787*t+n*-r,a+t*-a+n*-a,s+t*-s+.928*n,0,0,r+t*-r+.143*n,a+t*(1-a)+.14*n,s+t*-s+-.283*n,0,0,r+t*-r+-.787*n,a+t*-a+n*a,s+.928*t+n*s,0,0,0,0,0,1,0])},desaturateLuminance:()=>{f.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{f.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{f.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{f.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{f.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{f.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{f.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{f.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:e=>{const t=new Float32Array(e),n=1/l.width,r=1/l.height,a=c("\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  uniform float m[9];\n  void main(void) {\n    vec4 c11 = texture2D(texture, vUv - px); // top left\n    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center\n    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right\n    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left\n    vec4 c22 = texture2D(texture, vUv); // mid center\n    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right\n    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left\n    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center\n    vec4 c33 = texture2D(texture, vUv + px ); // bottom right\n    gl_FragColor = \n    c11 * m[0] + c12 * m[1] + c22 * m[2] +\n    c21 * m[3] + c22 * m[4] + c23 * m[5] +\n    c31 * m[6] + c32 * m[7] + c33 * m[8];\n    gl_FragColor.a = c22.a;\n  }\n");a&&(d.uniform1fv(a.uniform.m,t),d.uniform2f(a.uniform.px,n,r),p())},detectEdges:()=>{f.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{f.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{f.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:e=>{const t=e||1;f.convolution.call(this,[0,-1*t,0,-1*t,1+4*t,-1*t,0,-1*t,0])},emboss:e=>{const t=e||1;f.convolution.call(this,[-2*t,-1*t,0,-1*t,1,1*t,0,1*t,2*t])},blur:e=>{const t=e/7/l.width,n=e/7/l.height,r=c("\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;\n    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;\n    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;\n  }\n");r&&(d.uniform2f(r.uniform.px,0,n),p(1),d.uniform2f(r.uniform.px,t,0),p())},pixelate:e=>{const t=e/l.width,n=e/l.height,r=c("\n  precision highp float;\n  varying vec2 vUv;\n  uniform vec2 size;\n  uniform sampler2D texture;\n  vec2 pixelate(vec2 coord, vec2 size) {\n    return floor( coord / size ) * size;\n  }\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    vec2 coord = pixelate(vUv, size);\n    gl_FragColor += texture2D(texture, coord);\n  }\n");r&&(d.uniform2f(r.uniform.size,t,n),p())}};this.add=function(e){const t=Array.prototype.slice.call(arguments,1),n=f[e];s.push({func:n,args:t})},this.reset=function(){s=[]},this.get=function(){return s},this.apply=function(r){!function(e,t){if(e!==l.width||t!==l.height){if(l.width=e,l.height=t,!i){const e=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);i=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,i),d.bufferData(d.ARRAY_BUFFER,e,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),a=[null,null]}}(r.width,r.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,r);for(let e=0;e<s.length;e++){n=e===s.length-1;const t=s[e];t.func.apply(this,t.args||[])}return l},this.draw=function(e){return this.add("brightness",0),this.apply(e)}}async function e4(e){const t=4===e.shape.length?Xx(e):e,n=jx(t,3,2),r=[Vb(n[0]),Vb(n[1]),Vb(n[2])],a=[Ab(n[0]),Ab(n[1]),Ab(n[2])],s=await Promise.all(a.map((e=>e.data()))),i=.99*Math.max(s[0][0],s[1][0],s[2][0]),o=[bb(n[0],r[0]),bb(n[1],r[1]),bb(n[2],r[2])],l=[bb(a[0],r[0]),bb(a[1],r[1]),bb(a[2],r[2])],u=[yy(i,l[0]),yy(i,l[1]),yy(i,l[2])],d=[Ay(o[0],u[0]),Ay(o[1],u[1]),Ay(o[2],u[2])],h=Zx([d[0],d[1],d[2]],2),p=Ky(h,[1,t.shape[0],t.shape[1],3]);return ry([...n,...r,...a,...o,...l,...u,...d,h,t]),p}var t4,n4=2048,r4=null,a4=null,s4=null,i4={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function o4(e,t){let n;if(d4.browser)if(d4.worker){if("undefined"==typeof OffscreenCanvas)throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if("undefined"==typeof document)throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else void 0!==d4.Canvas?n=new d4.Canvas(e,t):void 0!==globalThis.Canvas&&(n=new globalThis.Canvas(e,t));return n}function l4(e,t){const n=t||o4(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function u4(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e)return t.debug&&il("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof jc||"undefined"!=typeof Image&&e instanceof Image||void 0!==d4.Canvas&&e instanceof d4.Canvas||void 0!==globalThis.Canvas&&e instanceof globalThis.Canvas||"undefined"!=typeof ImageData&&e instanceof ImageData||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLMediaElement&&e instanceof HTMLMediaElement||"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof jc){let n=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(3===e.shape.length){if(3===e.shape[2])n=UA(e,0);else if(4===e.shape[2]){const t=Lx(e,[0,0,0],[-1,-1,3]);n=UA(t,0),ry(t)}}else 4===e.shape.length&&(3===e.shape[3]?n=Sm(e):4===e.shape[3]&&(n=Wx(e,[0,0,0,0],[-1,-1,-1,3])));if(null==n||4!==n.shape.length||1!==n.shape[0]||3!==n.shape[3])throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if("int32"===n.dtype){const e=Im(n,"float32");ry(n),n=e}return{tensor:n,canvas:t.filter.return?a4:null}}{if(void 0!==e.readyState&&e.readyState<=2)return t.debug&&il("input stream is not ready"),{tensor:null,canvas:r4};const r=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,a=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!r||!a)return t.debug&&il("cannot determine input dimensions"),{tensor:null,canvas:r4};let s=r,i=a;if(s>n4&&(s=n4,i=Math.trunc(s*a/r)),i>n4&&(i=n4,s=Math.trunc(i*r/a)),(t.filter.width||0)>0?s=t.filter.width:(t.filter.height||0)>0&&(s=r*((t.filter.height||0)/a)),(t.filter.height||0)>0?i=t.filter.height:(t.filter.width||0)>0&&(i=a*((t.filter.width||0)/r)),!s||!i)throw new Error("input error: cannot determine dimension");r4&&(null==r4?void 0:r4.width)===s&&(null==r4?void 0:r4.height)===i||(r4=o4(s,i));const o=r4.getContext("2d");if("undefined"!=typeof ImageData&&e instanceof ImageData?o.putImageData(e,0,0):t.filter.flip&&void 0!==o.translate?(o.translate(r,0),o.scale(-1,1),o.drawImage(e,0,0,r,a,0,0,null==r4?void 0:r4.width,null==r4?void 0:r4.height),o.setTransform(1,0,0,1,0,0)):o.drawImage(e,0,0,r,a,0,0,null==r4?void 0:r4.width,null==r4?void 0:r4.height),a4&&r4.width===a4.width&&(null==r4?void 0:r4.height)===(null==a4?void 0:a4.height)||(a4=o4(r4.width,r4.height)),t.filter.enabled&&d4.webgl.supported){if(t4||(t4=d4.browser?new Q7:null),d4.filter=!!t4,!t4||!t4.add)return t.debug&&il("input process error: cannot initialize filters"),{tensor:null,canvas:r4};t4.reset(),0!==t.filter.brightness&&t4.add("brightness",t.filter.brightness),0!==t.filter.contrast&&t4.add("contrast",t.filter.contrast),0!==t.filter.sharpness&&t4.add("sharpen",t.filter.sharpness),0!==t.filter.blur&&t4.add("blur",t.filter.blur),0!==t.filter.saturation&&t4.add("saturation",t.filter.saturation),0!==t.filter.hue&&t4.add("hue",t.filter.hue),t.filter.negative&&t4.add("negative"),t.filter.sepia&&t4.add("sepia"),t.filter.vintage&&t4.add("brownie"),t.filter.sepia&&t4.add("sepia"),t.filter.kodachrome&&t4.add("kodachrome"),t.filter.technicolor&&t4.add("technicolor"),t.filter.polaroid&&t4.add("polaroid"),0!==t.filter.pixelate&&t4.add("pixelate",t.filter.pixelate),a4=t4.get()>0?t4.apply(r4):t4.draw(r4)}else l4(r4,a4),t4&&(t4=null),d4.filter=!!t4;if(!n)return{tensor:null,canvas:a4};if(!a4)throw new Error("canvas error: cannot create output");let l,u=3;if("undefined"!=typeof ImageData&&e instanceof ImageData||e.data&&e.width&&e.height)d4.browser&&eg?l=eg?eg.fromPixels(e):null:(u=e.data.length/e.height/e.width,l=Rf(new Uint8Array(e.data.buffer),[e.height,e.width,u],"int32"));else if(s4&&a4.width===s4.width&&a4.height===s4.height||(s4=o4(a4.width,a4.height)),eg&&d4.browser)"webgl"===t.backend||"humangl"===t.backend||"webgpu"===t.backend?l=eg.fromPixels(a4):(s4=l4(a4),l=eg.fromPixels(s4));else{const e=l4(a4).getContext("2d").getImageData(0,0,s,i);u=e.data.length/s/i,l=Rf(new Uint8Array(e.data.buffer),[s,i,u])}if(4===u){const e=Lx(l,[0,0,0],[-1,-1,3]);ry(l),l=e}if(!l)throw new Error("input error: cannot create tensor");const d=Im(l,"float32"),h=t.filter.equalization?await e4(d):UA(d,0);return ry([l,d]),{tensor:h,canvas:t.filter.return?a4:null}}}var d4=new class{constructor(){if(tl(this,"browser"),tl(this,"node"),tl(this,"worker"),tl(this,"platform",""),tl(this,"agent",""),tl(this,"backends",[]),tl(this,"initial"),tl(this,"filter"),tl(this,"tfjs"),tl(this,"offscreen"),tl(this,"perfadd",!1),tl(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),tl(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0}),tl(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),tl(this,"cpu",{model:void 0,flags:[]}),tl(this,"kernels",[]),tl(this,"Canvas"),tl(this,"Image"),tl(this,"ImageData"),this.browser="undefined"!=typeof navigator,this.node="undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node,this.tfjs={version:Y7["tfjs-core"]},this.offscreen="undefined"!=typeof OffscreenCanvas,this.initial=!0,this.worker=this.browser&&this.offscreen?"undefined"!=typeof WorkerGlobalScope:void 0,"undefined"!=typeof navigator){const e=navigator.userAgent.match(/\(([^()]+)\)/g);if(e&&e[0]){const t=e[0].match(/\(([^()]+)\)/g);this.platform=t&&t[0]?t[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(e[0],""),this.platform[1]&&(this.agent=this.agent.replace(e[1],"")),this.agent=this.agent.replace(/  /g," ")}}else"undefined"!=typeof process&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(Qg().registryFactory),this.wasm.supported="undefined"!=typeof WebAssembly,this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&"wasm"===ly()&&(this.wasm.simd=await Uu().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Uu().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));const e=o4(100,100),t=e?e.getContext("webgl2"):void 0;if(this.webgl.supported=void 0!==t,this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&("webgl"===ly()||"humangl"===ly())){const e="undefined"!==cy().gpgpu?await cy().getGPGPUContext().gl:null;e&&(this.webgl.version=e.getParameter(e.VERSION),this.webgl.renderer=e.getParameter(e.RENDERER))}this.webgpu.supported=this.browser&&void 0!==navigator.gpu,this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(e){this.webgpu.supported=!1}try{this.kernels=sc(ly()).map((e=>e.kernelName.toLowerCase()))}catch(e){}}async updateCPU(){const e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},h4={cacheModels:!1,verbose:!0,debug:!1,modelBasePath:""};async function p4(e){const t=function(e,t){const n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}(h4.modelBasePath,e||""),n=t.split("/"),r="indexeddb://"+n[n.length-1].replace(".json",""),a=await Tm.listModels(),s=h4.cacheModels&&Object.keys(a).includes(r),i="undefined"==typeof fetch?{}:{fetchFunc:(e,t)=>async function(e,t){return h4.debug&&il("load model fetch:",e,t),fetch(e,t)}(e,t)},o=new _O(s?r:t,i);let l=!1;try{o.findIOHandler(),h4.debug&&il("model load handler:",o.handler);const e=await o.handler.load();o.loadSync(e),h4.verbose&&il("load model:",o.modelUrl),l=!0}catch(e){il("error loading model:",t,e)}if(l&&h4.cacheModels&&!s)try{il("model saved:",r,await o.save(r))}catch(e){il("error saving model:",t,e)}return o}var c4,f4="2.6.5";el({},{Models:()=>Bee,load:()=>Vee,reset:()=>Uee,validate:()=>Gee});var m4=[],g4=["white","black","asian","indian","other"],y4=[15,23,28,35.5,45.5,55.5,65],A4=0,b4=0,x4=Number.MAX_SAFE_INTEGER;async function v4(e,t,n,r){var a,s;if(!c4)return{age:0,gender:"unknown",genderScore:0,race:[]};const i=x4<((null==(a=t.face.gear)?void 0:a.skipFrames)||0),o=((null==(s=t.face.gear)?void 0:s.skipTime)||0)>ol()-b4;return t.skipAllowed&&o&&i&&A4===r&&m4[n]?(x4++,m4[n]):(x4=0,new Promise((async a=>{var s,i;if(!(null==c4?void 0:c4.inputs[0].shape))return;const o={};o.resize=$w.cropAndResize(e,[[0,.1,.9,.9]],[0],[c4.inputs[0].shape[2],c4.inputs[0].shape[1]]);const l={age:0,gender:"unknown",genderScore:0,race:[]};(null==(s=t.face.gear)?void 0:s.enabled)&&([o.age,o.gender,o.race]=c4.execute(o.resize,["age_output","gender_output","race_output"]));const u=await o.gender.data();l.gender=u[0]>u[1]?"male":"female",l.genderScore=Math.round(100*(u[0]>u[1]?u[0]:u[1]))/100;const d=await o.race.data();for(let e=0;e<d.length;e++)d[e]>((null==(i=t.face.gear)?void 0:i.minConfidence)||.2)&&l.race.push({score:Math.round(100*d[e])/100,race:g4[e]});l.race.sort(((e,t)=>t.score-e.score));const h=Array.from(await o.age.data()).map(((e,t)=>[y4[t],e])).sort(((e,t)=>t[1]-e[1]));let p=h[0][0];for(let e=1;e<h.length;e++)p+=h[e][1]*(h[e][0]-p);l.age=Math.round(10*p)/10,Object.keys(o).forEach((e=>ry(o[e]))),m4[n]=l,A4=r,b4=ol(),a(l)})))}var w4,k4={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function I4(){k4.tf255=_x(255,"float32"),k4.tf1=_x(1,"float32"),k4.tf2=_x(2,"float32"),k4.tf05=_x(.5,"float32"),k4.tf127=_x(127.5,"float32"),k4.rgb=ev([.2989,.587,.114],"float32")}var S4,N4=[],T4=0,C4=0,E4=Number.MAX_SAFE_INTEGER;async function _4(e,t,n,r){var a,s,i,o;if(!w4)return{age:0};const l=E4<((null==(a=t.face.ssrnet)?void 0:a.skipFrames)||0),u=((null==(s=t.face.ssrnet)?void 0:s.skipTime)||0)>ol()-C4;return t.skipAllowed&&l&&u&&T4===r&&(null==(i=N4[n])?void 0:i.age)&&(null==(o=N4[n])?void 0:o.age)>0?(E4++,N4[n]):(E4=0,new Promise((async a=>{if(!(null==w4?void 0:w4.inputs)||!w4.inputs[0]||!w4.inputs[0].shape)return;const s={};s.resize=$w.resizeBilinear(e,[w4.inputs[0].shape[2],w4.inputs[0].shape[1]],!1),s.enhance=Ay(s.resize,k4.tf255);const i={age:0};if(t.face.ssrnet.enabled&&(s.age=w4.execute(s.enhance)),s.age){const e=await s.age.data();i.age=Math.trunc(10*e[0])/10}Object.keys(s).forEach((e=>ry(s[e]))),N4[n]=i,T4=r,C4=ol(),a(i)})))}var R4,M4=[],$4=0,F4=0,O4=Number.MAX_SAFE_INTEGER,z4=[.2989,.587,.114];async function D4(e,t,n,r){var a,s,i,o;if(!S4)return{gender:"unknown",genderScore:0};const l=O4<((null==(a=t.face.ssrnet)?void 0:a.skipFrames)||0),u=((null==(s=t.face.ssrnet)?void 0:s.skipTime)||0)>ol()-F4;return t.skipAllowed&&l&&u&&$4===r&&(null==(i=M4[n])?void 0:i.gender)&&(null==(o=M4[n])?void 0:o.genderScore)>0?(O4++,M4[n]):(O4=0,new Promise((async a=>{if(!(null==S4?void 0:S4.inputs[0].shape))return;const s={};s.resize=$w.resizeBilinear(e,[S4.inputs[0].shape[2],S4.inputs[0].shape[1]],!1),s.enhance=ny((()=>{const[e,t,n]=jx(s.resize,3,3),r=Ay(e,z4[0]),a=Ay(t,z4[1]),i=Ay(n,z4[2]),o=wy([r,a,i]);return Ay(bb(o,k4.tf05),2)}));const i={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(s.gender=S4.execute(s.enhance));const o=await s.gender.data();i.gender=o[0]>o[1]?"female":"male",i.genderScore=o[0]>o[1]?Math.trunc(100*o[0])/100:Math.trunc(100*o[1])/100,Object.keys(s).forEach((e=>ry(s[e]))),M4[n]=i,$4=r,F4=ol(),a(i)})))}var P4=[],L4=Number.MAX_SAFE_INTEGER,W4=0,B4=0;async function U4(e,t,n,r){var a,s;if(!R4)return 0;const i=((null==(a=t.face.antispoof)?void 0:a.skipTime)||0)>ol()-B4,o=L4<((null==(s=t.face.antispoof)?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&W4===r&&P4[n]?(L4++,P4[n]):(L4=0,new Promise((async t=>{const a=$w.resizeBilinear(e,[(null==R4?void 0:R4.inputs[0].shape)?R4.inputs[0].shape[2]:0,(null==R4?void 0:R4.inputs[0].shape)?R4.inputs[0].shape[1]:0],!1),s=null==R4?void 0:R4.execute(a),i=(await s.data())[0];P4[n]=Math.round(100*i)/100,W4=r,B4=ol(),ry([a,s]),t(P4[n])})))}var V4={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},G4={count:468,mouth:13,symmetryLine:[13,V4.midwayBetweenEyes[0]]},j4={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},H4=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],q4=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],K4=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],X4=([127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178].map((e=>q4[e])),[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152].map((e=>q4[e])),[33,133,362,263,1,78,308].map((e=>q4[e])),e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]),Z4=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],Y4=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],J4=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],Q4=(e,t,n)=>{const r=t.shape[1],a=t.shape[2],s=[e.startPoint[1]/r,e.startPoint[0]/a,e.endPoint[1]/r,e.endPoint[0]/a],i=$w.cropAndResize(t,[s],[0],n),o=yy(i,k4.tf255);return ry(i),o},e6=(e,t)=>{const n=Z4(e),r=X4(e),a=[t*r[0]/2,t*r[1]/2];return{startPoint:[n[0]-a[0],n[1]-a[1]],endPoint:[n[0]+a[0],n[1]+a[1]],landmarks:e.landmarks,confidence:e.confidence}},t6=e=>{const t=Z4(e),n=X4(e),r=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-r),Math.round(t[1]-r)],endPoint:[Math.round(t[0]+r),Math.round(t[1]+r)],landmarks:e.landmarks,confidence:e.confidence}},n6=e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},r6=[[1,0,0],[0,1,0],[0,0,1]],a6=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],s6=(e,t)=>{let n=0;for(let r=0;r<e.length;r++)n+=e[r]*t[r];return n},i6=(e,t)=>{const n=[];for(let r=0;r<e.length;r++)n.push(e[r][t]);return n},o6=(e,t)=>{const n=[],r=e.length;for(let a=0;a<r;a++){n.push([]);for(let s=0;s<r;s++)n[a].push(s6(e[a],i6(t,s)))}return n},l6=(e,t)=>{const n=Math.cos(e),r=Math.sin(e),a=[[n,-r,0],[r,n,0],[0,0,1]],s=a6(t[0],t[1]),i=o6(s,a),o=a6(-t[0],-t[1]);return o6(i,o)},u6=(e,t)=>[s6(e,t[0]),s6(e,t[1])];function d6(e,t,n,r,a){const s=X4(t),i=e.map((e=>[s[0]/a*(e[0]-a/2),s[1]/a*(e[1]-a/2),e[2]||0])),o=n&&0!==n&&Math.abs(n)>.2,l=o?l6(n,[0,0]):r6,u=o?i.map((e=>[...u6(e,l),e[2]])):i,d=o?(e=>{const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],r=[-s6(t[0],n),-s6(t[1],n)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]})(r):r6,h=Z4(t),p=[s6(h,d[0]),s6(h,d[1])];return u.map((e=>[Math.trunc(e[0]+p[0]),Math.trunc(e[1]+p[1]),Math.trunc(e[2]||0)]))}function h6(e,t,n,r){const a=t.landmarks.length>=G4.count?G4.symmetryLine:j4.symmetryLine;let s,i=0,o=r6;if(e&&d4.kernels.includes("rotatewithoffset"))if(i=((e,t)=>{return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n})(t.landmarks[a[0]],t.landmarks[a[1]]),i&&0!==i&&Math.abs(i)>.2){const e=Z4(t),a=[e[0]/n.shape[2],e[1]/n.shape[1]],l=$w.rotateWithOffset(n,i,0,a);o=l6(-i,e),s=Q4(t,l,[r,r]),ry(l)}else s=Q4(t,n,[r,r]);else s=Q4(t,n,[r,r]);return[i,o,s]}var p6,c6=(e,t)=>{const n=(e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]})(e),r=X4(t);return{startPoint:[n[0]-r[0]/2,n[1]-r[1]/2],endPoint:[n[0]+r[0]/2,n[1]+r[1]/2]}},f6=null,m6=0,g6=null,y6=()=>m6;var A6={};el(A6,{connected:()=>x6,kpt:()=>b6});var b6=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],x6={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},v6=[8,16,32,32,32];function w6(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1];const n=[e.map((e=>e[0])),e.map((e=>e[1]))],r=[Math.min(...n[0]),Math.min(...n[1])],a=[Math.max(...n[0]),Math.max(...n[1])],s=[r[0],r[1],a[0]-r[0],a[1]-r[1]],i=[s[0]/t[0],s[1]/t[1],s[2]/t[0],s[3]/t[1]];return{box:s,boxRaw:i}}function k6(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1];const n=[e.map((e=>e[0])),e.map((e=>e[1]))],r=[Math.min(...n[0]),Math.min(...n[1])],a=[Math.max(...n[0]),Math.max(...n[1])],s=[(r[0]+a[0])/2,(r[1]+a[1])/2],i=Math.max(s[0]-r[0],s[1]-r[1],-s[0]+a[0],-s[1]+a[1]),o=[Math.trunc(s[0]-i),Math.trunc(s[1]-i),Math.trunc(2*i),Math.trunc(2*i)],l=[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]];return{box:o,boxRaw:l}}function I6(e,t){const n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var S6={detector:null,landmarks:null},N6={detector:[224,224],landmarks:[256,256]},T6=Number.MAX_SAFE_INTEGER,C6=["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],E6=null,_6=[[0,0],[0,0],[0,0],[0,0]],R6=0,M6=e=>1-1/(1+Math.exp(e));async function $6(e,t){const n=[e.shape[2]||0,e.shape[1]||0],r=(t.body.skipTime||0)>ol()-R6,a=T6<(t.body.skipFrames||0);if(t.skipAllowed&&r&&a&&null!==E6)T6++;else{const r={};r.landmarks=await async function(e,t){const n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let r;if(e.shape[1]!==e.shape[2]){const a=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],s=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];_6=[[0,0],a,s,[0,0]],n.pad=ex(n.cropped||e,_6),n.resize=$w.resizeBilinear(n.pad,[t,t]),r=yy(n.resize,k4.tf255)}else e.shape[1]!==t?(n.resize=$w.resizeBilinear(n.cropped||e,[t,t]),r=yy(n.resize,k4.tf255)):r=yy(n.cropped||e,k4.tf255);return Object.keys(n).forEach((e=>ry(n[e]))),r}(e,256),E6=await async function(e,t,n){var r;const a={};[a.ld,a.segmentation,a.heatmap,a.world,a.poseflag]=null==(r=S6.landmarks)?void 0:r.execute(e,C6);const s=(await a.poseflag.data())[0],i=await a.ld.data(),o=await a.world.data();Object.keys(a).forEach((e=>ry(a[e])));const l=[];for(let e=0;e<i.length/5;e++){const t=M6(i[5*e+3]),r=M6(i[5*e+4]),a=Math.trunc(100*t*r*s)/100,u=[i[5*e+0]/N6.landmarks[0],i[5*e+1]/N6.landmarks[1],i[5*e+2]+0],d=[Math.trunc(n[0]*u[0]),Math.trunc(n[1]*u[1]),u[2]],h=[o[5*e+0],o[5*e+1],o[5*e+2]+0];l.push({part:b6[e],positionRaw:u,position:d,distance:h,score:a})}if(s<(t.body.minConfidence||0))return null;!async function(e){const t=e.find((e=>"leftPalm"===e.part)),n=e.find((e=>"leftWrist"===e.part)),r=e.find((e=>"leftIndex"===e.part));t.position[2]=((n.position[2]||0)+(r.position[2]||0))/2;const a=e.find((e=>"rightPalm"===e.part)),s=e.find((e=>"rightWrist"===e.part)),i=e.find((e=>"rightIndex"===e.part));a.position[2]=((s.position[2]||0)+(i.position[2]||0))/2}(l);const u=function(e,t){for(const n of e)n.position=[Math.trunc(n.position[0]*(t[0]+_6[2][0]+_6[2][1])/t[0]-_6[2][0]),Math.trunc(n.position[1]*(t[1]+_6[1][0]+_6[1][1])/t[1]-_6[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];return e}(l,n),d=w6(u.map((e=>e.position)),[n[0],n[1]]),h={};for(const[e,t]of Object.entries(x6)){const n=[];for(let e=0;e<t.length-1;e++){const r=u.find((n=>n.part===t[e])),a=u.find((n=>n.part===t[e+1]));r&&a&&n.push([r.position,a.position])}h[e]=n}return{id:0,score:Math.trunc(100*s)/100,box:d.box,boxRaw:d.boxRaw,keypoints:u,annotations:h}}(r.landmarks,t,n),Object.keys(r).forEach((e=>ry(r[e]))),R6=ol(),T6=0}return E6?[E6]:[]}var F6,O6=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],z6=0,D6=[],P6=0,L6=Number.MAX_SAFE_INTEGER;async function W6(e,t){const n=(t.object.skipTime||0)>ol()-P6,r=L6<(t.object.skipFrames||0);return t.skipAllowed&&n&&r&&D6.length>0?(L6++,D6):(L6=0,new Promise((async n=>{const r=[e.shape[2]||0,e.shape[1]||0],a=$w.resizeBilinear(e,[z6,z6]),s=t.object.enabled?null==F6?void 0:F6.execute(a,["tower_0/detections"]):null;P6=ol(),ry(a);const i=await async function(e,t,n){if(!e)return[];const r={},a=[],s=await e.array();r.squeeze=Xx(e);const i=jx(r.squeeze,6,1);r.stack=Zx([i[1],i[0],i[3],i[2]],1),r.boxes=Xx(r.stack),r.scores=Xx(i[4]),r.classes=Xx(i[5]),ry([e,...i]),r.nms=await $w.nonMaxSuppressionAsync(r.boxes,r.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);const o=await r.nms.data();let l=0;for(const e of Array.from(o)){const n=Math.trunc(100*s[0][e][4])/100,r=s[0][e][5],i=O6[r].label,[o,u]=[s[0][e][0]/z6,s[0][e][1]/z6],d=[o,u,s[0][e][2]/z6-o,s[0][e][3]/z6-u],h=[Math.trunc(d[0]*t[0]),Math.trunc(d[1]*t[1]),Math.trunc(d[2]*t[0]),Math.trunc(d[3]*t[1])];a.push({id:l++,score:n,class:r,label:i,box:h,boxRaw:d})}return Object.keys(r).forEach((e=>ry(r[e]))),a}(s,r,t);D6=i,n(i)})))}var B6={};el(B6,{connected:()=>G6,kpt:()=>V6});var U6,V6=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],G6={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},j6=0,H6={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},q6=Number.MAX_SAFE_INTEGER;async function K6(e,t){const[n,r]=e.shape,a=Ky(e,[r*n]),s=Ab(a,0),i=(await s.data())[0];if(ry([a,s]),i>t){const e=Sy(a,0),t=Hb(e,n),r=(await t.data())[0],s=yy(e,_x(n,"int32")),o=(await s.data())[0];return ry([t,s]),[r,o,i]}return[0,0,i]}async function X6(e,t){const n=(t.body.skipTime||0)>ol()-j6,r=q6<(t.body.skipFrames||0);return t.skipAllowed&&n&&r&&Object.keys(H6.keypoints).length>0?(q6++,[H6]):(q6=0,new Promise((async n=>{var r;const a=ny((()=>{if(!(null==U6?void 0:U6.inputs[0].shape))return null;const t=$w.resizeBilinear(e,[U6.inputs[0].shape[2],U6.inputs[0].shape[1]],!1),n=Ay(t,k4.tf2);return bb(n,k4.tf1)}));let s;if(t.body.enabled&&(s=null==U6?void 0:U6.execute(a)),j6=ol(),ry(a),s){H6.keypoints.length=0;const n=s.squeeze();ry(s);const a=n.unstack(2);ry(n);for(let n=0;n<a.length;n++){const[s,i,o]=await K6(a[n],t.body.minConfidence);o>((null==(r=t.body)?void 0:r.minConfidence)||0)&&H6.keypoints.push({score:Math.round(100*o)/100,part:V6[n],positionRaw:[s/U6.inputs[0].shape[2],i/U6.inputs[0].shape[1]],position:[Math.round(e.shape[2]*s/U6.inputs[0].shape[2]),Math.round(e.shape[1]*i/U6.inputs[0].shape[1])]})}a.forEach((e=>ry(e)))}H6.score=H6.keypoints.reduce(((e,t)=>t.score>e?t.score:e),0);const i=H6.keypoints.map((e=>e.position[0])),o=H6.keypoints.map((e=>e.position[1]));H6.box=[Math.min(...i),Math.min(...o),Math.max(...i)-Math.min(...i),Math.max(...o)-Math.min(...o)];const l=H6.keypoints.map((e=>e.positionRaw[0])),u=H6.keypoints.map((e=>e.positionRaw[1]));H6.boxRaw=[Math.min(...l),Math.min(...u),Math.max(...l)-Math.min(...l),Math.max(...u)-Math.min(...u)];for(const[e,n]of Object.entries(G6)){const r=[];for(let e=0;e<n.length-1;e++){const a=H6.keypoints.find((t=>t.part===n[e])),s=H6.keypoints.find((t=>t.part===n[e+1]));a&&s&&a.score>(t.body.minConfidence||0)&&s.score>(t.body.minConfidence||0)&&r.push([a.position,s.position])}H6.annotations[e]=r}n([H6])})))}var Z6,Y6,J6=["angry","disgust","fear","happy","sad","surprise","neutral"],Q6=[],e8=0,t8=0,n8=Number.MAX_SAFE_INTEGER;async function r8(e,t,n,r){var a,s;if(!Z6)return[];const i=n8<((null==(a=t.face.emotion)?void 0:a.skipFrames)||0),o=((null==(s=t.face.emotion)?void 0:s.skipTime)||0)>ol()-t8;return t.skipAllowed&&o&&i&&e8===r&&Q6[n]&&Q6[n].length>0?(n8++,Q6[n]):(n8=0,new Promise((async a=>{var s,i;const o=[];if(null==(s=t.face.emotion)?void 0:s.enabled){const n={},r=(null==Z6?void 0:Z6.inputs[0].shape)?Z6.inputs[0].shape[2]:0;n.resize=$w.resizeBilinear(e,[r,r],!1),n.channels=Ay(n.resize,k4.rgb),n.grayscale=xb(n.channels,3,!0),n.grayscaleSub=bb(n.grayscale,k4.tf05),n.grayscaleMul=Ay(n.grayscaleSub,k4.tf2),n.emotion=null==Z6?void 0:Z6.execute(n.grayscaleMul),t8=ol();const a=await n.emotion.data();for(let e=0;e<a.length;e++)a[e]>((null==(i=t.face.emotion)?void 0:i.minConfidence)||0)&&o.push({score:Math.min(.99,Math.trunc(100*a[e])/100),emotion:J6[e]});o.sort(((e,t)=>t.score-e.score)),Object.keys(n).forEach((e=>ry(n[e])))}Q6[n]=o,e8=r,a(o)})))}var a8,s8=[],i8=0,o8=0,l8=Number.MAX_SAFE_INTEGER;async function u8(e,t,n,r){var a,s;if(!Y6)return[];const i=l8<((null==(a=t.face.embedding)?void 0:a.skipFrames)||0),o=((null==(s=t.face.embedding)?void 0:s.skipTime)||0)>ol()-o8;return t.skipAllowed&&o&&i&&i8===r&&s8[n]?(l8++,s8[n]):new Promise((async a=>{var s;let i=[];if((null==(s=t.face.embedding)?void 0:s.enabled)&&(null==Y6?void 0:Y6.inputs[0].shape)){const t={};t.crop=$w.resizeBilinear(e,[Y6.inputs[0].shape[2],Y6.inputs[0].shape[1]],!1),t.data=null==Y6?void 0:Y6.execute(t.crop);const n=await t.data.data();i=Array.from(n)}s8[n]=i,i8=r,o8=ol(),a(i)}))}var d8=0,h8=V4.leftEyeLower0,p8=V4.rightEyeLower0,c8={leftBounds:[h8[0],h8[h8.length-1]],rightBounds:[p8[0],p8[p8.length-1]]};function f8(e,t,n,r){for(let a=0;a<H4.length;a++){const{key:s,indices:i}=H4[a],o=V4[`${n}${s}`];if(!r||r.includes(s))for(let n=0;n<i.length;n++){const r=i[n];e[o[n]]=[t[r][0],t[r][1],(t[r][2]+e[o[n]][2])/2]}}}var m8=function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=t6(e6(n6([e[n],e[r]]),2.3)),o=X4(i);let l=$w.cropAndResize(t,[[i.startPoint[1]/a,i.startPoint[0]/a,i.endPoint[1]/a,i.endPoint[0]/a]],[0],[d8,d8]);if(s&&d4.kernels.includes("flipleftright")){const e=$w.flipLeftRight(l);ry(l),l=e}return{box:i,boxSize:o,crop:l}},g8=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=[];for(let s=0;s<76;s++){const i=e[3*s],o=e[3*s+1],l=e[3*s+2];a.push([(r?1-i/d8:i/d8)*n[0]+t.startPoint[0],o/d8*n[1]+t.startPoint[1],l])}return{rawCoords:a,iris:a.slice(71)}},y8=(e,t,n)=>{const r=e[V4[`${n}EyeUpper0`][3]][2],a=e[V4[`${n}EyeLower0`][4]][2],s=(r+a)/2;return t.map(((e,t)=>{let n=s;return 2===t?n=r:4===t&&(n=a),[e[0],e[1],n]}))};async function A8(e,t,n,r){if(!a8)return n.debug&&il("face mesh iris detection requested, but model is not loaded"),e;const{box:a,boxSize:s,crop:i}=m8(e,t,c8.leftBounds[0],c8.leftBounds[1],r,!0),{box:o,boxSize:l,crop:u}=m8(e,t,c8.rightBounds[0],c8.rightBounds[1],r,!0),d=Yy([i,u]);ry(i),ry(u);const h=a8.execute(d);ry(d);const p=await h.data();ry(h);const c=p.slice(0,228),{rawCoords:f,iris:m}=g8(c,a,s,!0),g=p.slice(228),{rawCoords:y,iris:A}=g8(g,o,l),b=(e=>e[c8.leftBounds[0]][2]-e[c8.rightBounds[0]][2])(e);Math.abs(b)<30?(f8(e,f,"left",null),f8(e,y,"right",null)):b<1?f8(e,f,"left",["EyeUpper0","EyeLower0"]):f8(e,y,"right",["EyeUpper0","EyeLower0"]);const x=y8(e,m,"left"),v=y8(e,A,"right");return e.concat(x).concat(v)}var b8,x8={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},v8=null,w8=0,k8=K4,I8=q4,S8=[],N8=0,T8=0,C8=Number.MAX_SAFE_INTEGER;function E8(e){const t=e.image||e.tensor||e;if(!(null==b8?void 0:b8.inputs[0].shape))return t;const n=$w.resizeBilinear(t,[b8.inputs[0].shape[2],b8.inputs[0].shape[1]],!1),r=Ay(n,k4.tf255);return ry(n),r}async function _8(e,t,n,r){var a,s,i,o;if(!b8)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};const l=C8<((null==(a=t.face.description)?void 0:a.skipFrames)||0),u=((null==(s=t.face.description)?void 0:s.skipTime)||0)>ol()-N8;return t.skipAllowed&&l&&u&&T8===r&&(null==(i=S8[n])?void 0:i.age)&&(null==(o=S8[n])?void 0:o.age)>0?(C8++,S8[n]):(C8=0,new Promise((async a=>{var s,i;const o={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(null==(s=t.face.description)?void 0:s.enabled){const n=E8(e),r=null==b8?void 0:b8.execute(n);N8=ol(),ry(n);const a=await r.find((e=>1===e.shape[1])),s=await a.data(),l=Math.trunc(200*Math.abs(s[0]-.5))/100;l>((null==(i=t.face.description)?void 0:i.minConfidence)||0)&&(o.gender=s[0]<=.5?"female":"male",o.genderScore=Math.min(.99,l));const u=Sy(r.find((e=>100===e.shape[1])),1),d=(await u.data())[0];ry(u);const h=r.find((e=>100===e.shape[1])),p=await h.data();o.age=Math.round(p[d-1]>p[d+1]?10*d-100*p[d-1]:10*d+100*p[d+1])/10;const c=r.find((e=>1024===e.shape[1])),f=c?await c.data():[];o.descriptor=Array.from(f),r.forEach((e=>ry(e)))}S8[n]=o,T8=r,a(o)})))}function R8(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function M8(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function $8(e,t,n){const r=t.shape[1],a=t.shape[2],s=[[e.startPoint[1]/r,e.startPoint[0]/a,e.endPoint[1]/r,e.endPoint[0]/a]];return $w.cropAndResize(t,s,[0],n)}function F8(e,t){return{startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],palmLandmarks:e.palmLandmarks.map((e=>[e[0]*t[0],e[1]*t[1]])),confidence:e.confidence}}function O8(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1.5;const n=M8(e),r=R8(e),a=[t*r[0]/2,t*r[1]/2],s=[n[0]-a[0],n[1]-a[1]],i=[n[0]+a[0],n[1]+a[1]];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function z8(e){const t=M8(e),n=R8(e),r=Math.max(...n)/2;return{startPoint:[t[0]-r,t[1]-r],endPoint:[t[0]+r,t[1]+r],palmLandmarks:e.palmLandmarks}}function D8(e,t){return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n}var P8=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function L8(e,t){let n=0;for(let r=0;r<e.length;r++)n+=e[r]*t[r];return n}function W8(e,t){const n=[];for(let r=0;r<e.length;r++)n.push(e[r][t]);return n}function B8(e,t){const n=[],r=e.length;for(let a=0;a<r;a++){n.push([]);for(let s=0;s<r;s++)n[a].push(L8(e[a],W8(t,s)))}return n}function U8(e,t){const n=Math.cos(e),r=Math.sin(e),a=[[n,-r,0],[r,n,0],[0,0,1]],s=B8(P8(t[0],t[1]),a);return B8(s,P8(-t[0],-t[1]))}function V8(e,t){return[L8(e,t[0]),L8(e,t[1])]}var G8=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],j8=[0,5,9,13,17,1,2],H8=0,q8={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>q8.nameMapping[e],getPoints:e=>q8.pointsMapping[e]},K8={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>K8.nameMapping[e]},X8={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>X8.nameMapping[e]},Z8=class{constructor(e){tl(this,"name"),tl(this,"curls"),tl(this,"directions"),tl(this,"weights"),tl(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,n){void 0===this.curls[e]&&(this.curls[e]=[]),this.curls[e].push([t,n])}direction(e,t,n){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,n])}weight(e,t){this.weights[e]=t;const n=this.weights.reduce(((e,t)=>e+t),0);this.weightsRelative=this.weights.map((e=>5*e/n))}matchAgainst(e,t){let n=0;for(const t in e){const r=e[t],a=this.curls[t];if(void 0!==a){for(const[e,s]of a)if(r===e){n+=s*this.weightsRelative[t];break}}else n+=this.weightsRelative[t]}for(const e in t){const r=t[e],a=this.directions[e];if(void 0!==a){for(const[t,s]of a)if(r===t){n+=s*this.weightsRelative[e];break}}else n+=this.weightsRelative[e]}return n/10}},{thumb:Y8,index:J8,middle:Q8,ring:e9,pinky:t9}=q8,{none:n9,half:r9,full:a9}=K8,{verticalUp:s9,verticalDown:i9,horizontalLeft:o9,horizontalRight:l9,diagonalUpRight:u9,diagonalUpLeft:d9,diagonalDownRight:h9,diagonalDownLeft:p9}=X8,c9=new Z8("thumbs up");c9.curl(Y8,n9,1),c9.direction(Y8,s9,1),c9.direction(Y8,d9,.25),c9.direction(Y8,u9,.25);for(const e of[q8.index,q8.middle,q8.ring,q8.pinky])c9.curl(e,a9,1),c9.direction(e,o9,1),c9.direction(e,l9,1);var f9=new Z8("victory");f9.curl(Y8,r9,.5),f9.curl(Y8,n9,.5),f9.direction(Y8,s9,1),f9.direction(Y8,d9,1),f9.curl(J8,n9,1),f9.direction(J8,s9,.75),f9.direction(J8,d9,1),f9.curl(Q8,n9,1),f9.direction(Q8,s9,1),f9.direction(Q8,d9,.75),f9.curl(e9,a9,1),f9.direction(e9,s9,.2),f9.direction(e9,d9,1),f9.direction(e9,o9,.2),f9.curl(t9,a9,1),f9.direction(t9,s9,.2),f9.direction(t9,d9,1),f9.direction(t9,o9,.2),f9.weight(J8,2),f9.weight(Q8,2);var m9=new Z8("point");m9.curl(Y8,a9,1),m9.curl(J8,n9,.5),m9.curl(Q8,a9,.5),m9.curl(e9,a9,.5),m9.curl(t9,a9,.5),m9.weight(J8,2),m9.weight(Q8,2);var g9=new Z8("middle finger");g9.curl(Y8,n9,1),g9.curl(J8,a9,.5),g9.curl(Q8,a9,.5),g9.curl(e9,a9,.5),g9.curl(t9,a9,.5),g9.weight(J8,2),g9.weight(Q8,2);var y9=new Z8("open palm");y9.curl(Y8,n9,.75),y9.curl(J8,n9,.75),y9.curl(Q8,n9,.75),y9.curl(e9,n9,.75),y9.curl(t9,n9,.75);var A9=[c9,f9,m9,g9,y9];function b9(e,t,n,r){const a=(t-r)/(e-n);let s=180*Math.atan(a)/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}function x9(e,t){if(!e||!t)return[0,0];const n=b9(e[0],e[1],t[0],t[1]);return 2===e.length?n:[n,b9(e[1],e[2],t[1],t[2])]}function v9(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=0,r=0,a=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?r=1*t:a=1*t,[n,r,a]}function w9(e,t,n){const r=e[0]-t[0],a=e[0]-n[0],s=t[0]-n[0],i=e[1]-t[1],o=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],d=e[2]-n[2],h=t[2]-n[2],p=Math.sqrt(r*r+i*i+u*u),c=Math.sqrt(a*a+o*o+d*d),f=Math.sqrt(s*s+l*l+h*h);let m=(f*f+p*p-c*c)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g,y=Math.acos(m);return y=57.2958*y%180,g=y>130?K8.none:y>60?K8.half:K8.full,g}function k9(e,t,n,r){let a;return a=r===Math.abs(e)?e>0?X8.horizontalLeft:X8.horizontalRight:r===Math.abs(t)?t>0?X8.horizontalLeft:X8.horizontalRight:n>0?X8.horizontalLeft:X8.horizontalRight,a}function I9(e,t,n,r){let a;return a=r===Math.abs(e)?e<0?X8.verticalDown:X8.verticalUp:r===Math.abs(t)?t<0?X8.verticalDown:X8.verticalUp:n<0?X8.verticalDown:X8.verticalUp,a}function S9(e,t,n,r){const a=e[0]-t[0],s=e[0]-n[0],i=t[0]-n[0],o=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],d=Math.max(Math.abs(a),Math.abs(s),Math.abs(i)),h=Math.max(Math.abs(o),Math.abs(l),Math.abs(u));let p=0,c=0,f=0;const m=h/(d+1e-5);m>1.5?p+=1.1:m>.66?c+=1.1:f+=1.1;const g=Math.sqrt(a*a+o*o),y=Math.sqrt(s*s+l*l),A=Math.sqrt(i*i+u*u),b=Math.max(g,y,A);let x=e[0],v=e[1],w=n[0],k=n[1];b===g?(w=n[0],k=n[1]):b===A&&(x=t[0],v=t[1]);const I=v9(x9([x,v],[w,k]),1.6);p+=I[0],c+=I[1],f+=I[2];for(const e of r){const t=v9(e,.9);p+=t[0],c+=t[1],f+=t[2]}let S;return S=p===Math.max(p,c,f)?I9(l,o,u,h):f===Math.max(c,f)?k9(s,a,i,d):function(e,t,n,r,a,s,i,o){let l;const u=I9(e,t,n,r),d=k9(a,s,i,o);return l=u===X8.verticalUp?d===X8.horizontalLeft?X8.diagonalUpLeft:X8.diagonalUpRight:d===X8.horizontalLeft?X8.diagonalDownLeft:X8.diagonalDownRight,l}(l,o,u,h,s,a,i,d),S}function N9(e){const t=[],n=[],r=[],a=[];if(!e)return{curls:r,directions:a};for(const r of q8.all){const a=q8.getPoints(r),s=[],i=[];for(const t of a){const n=x9(e[t[0]],e[t[1]]),r=n[0],a=n[1];s.push(r),i.push(a)}t.push(s),n.push(i)}for(const n of q8.all){const s=n===q8.thumb?1:0,i=q8.getPoints(n),o=e[i[s][0]],l=e[i[s+1][1]],u=e[i[3][1]],d=w9(o,l,u),h=S9(o,l,u,t[n].slice(s));r[n]=d,a[n]=h}return{curls:r,directions:a}}function T9(e){if(!e||0===e.length)return null;const t=N9(e),n={};for(const e of q8.all)n[q8.getName(e)]={curl:K8.getName(t.curls[e]),direction:X8.getName(t.directions[e])};return n}function C9(e){const t=[];if(!e||0===e.length)return t;const n=N9(e);for(const e of A9){const r=e.matchAgainst(n.curls,n.directions);r>=.7&&t.push({name:e.name,confidence:r})}return t}var E9,_9,R9,M9={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function $9(e,t){const n=await R9.estimateHands(e,t);if(!n)return[];const r=[];for(let t=0;t<n.length;t++){const a={};if(n[t].landmarks)for(const e of Object.keys(M9))a[e]=M9[e].map((e=>n[t].landmarks[e]));const s=n[t].landmarks;let i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],o=[0,0,0,0];if(s&&s.length>0){for(const e of s)e[0]<i[0]&&(i[0]=e[0]),e[1]<i[1]&&(i[1]=e[1]),e[0]>i[2]&&(i[2]=e[0]),e[1]>i[3]&&(i[3]=e[1]);i[2]-=i[0],i[3]-=i[1],o=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[t].box?[Math.trunc(Math.max(0,n[t].box.topLeft[0])),Math.trunc(Math.max(0,n[t].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[t].box.bottomRight[0])-Math.max(0,n[t].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[t].box.bottomRight[1])-Math.max(0,n[t].box.topLeft[1]))]:[0,0,0,0],o=[n[t].box.topLeft[0]/(e.shape[2]||0),n[t].box.topLeft[1]/(e.shape[1]||0),(n[t].box.bottomRight[0]-n[t].box.topLeft[0])/(e.shape[2]||0),(n[t].box.bottomRight[1]-n[t].box.topLeft[1])/(e.shape[1]||0)];const l=T9(s);r.push({id:t,score:Math.round(100*n[t].confidence)/100,boxScore:Math.round(100*n[t].boxConfidence)/100,fingerScore:Math.round(100*n[t].fingerConfidence)/100,label:"hand",box:i,boxRaw:o,keypoints:s,annotations:a,landmarks:l})}return r}async function F9(e){var t,n;d4.initial&&(E9=null,_9=null),E9&&_9?(e.debug&&il("cached model:",E9.modelUrl),e.debug&&il("cached model:",_9.modelUrl)):[E9,_9]=await Promise.all([e.hand.enabled?p4(null==(t=e.hand.detector)?void 0:t.modelPath):null,e.hand.landmarks?p4(null==(n=e.hand.skeleton)?void 0:n.modelPath):null]);const r=new class{constructor(e){tl(this,"model"),tl(this,"anchors"),tl(this,"anchorsTensor"),tl(this,"inputSize"),tl(this,"inputSizeTensor"),tl(this,"doubleInputSizeTensor"),this.model=e,this.anchors=G8.map((e=>[e.x,e.y])),this.anchorsTensor=tv(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=ev([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=ev([2*this.inputSize,2*this.inputSize])}normalizeBoxes(e){const t={};t.boxOffsets=Qy(e,[0,0],[-1,2]),t.boxSizes=Qy(e,[0,2],[-1,2]),t.div=yy(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=my(t.div,this.anchorsTensor),t.halfBoxSizes=yy(t.boxSizes,this.doubleInputSizeTensor),t.sub=bb(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=Ay(t.sub,this.inputSizeTensor),t.add=my(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=Ay(t.add,this.inputSizeTensor);const n=fA([t.startPoints,t.endPoints],1);return Object.keys(t).forEach((e=>ry(t[e]))),n}normalizeLandmarks(e,t){const n={};n.reshape=Ky(e,[-1,7,2]),n.div=yy(n.reshape,this.inputSizeTensor),n.landmarks=my(n.div,this.anchors[t]);const r=Ay(n.landmarks,this.inputSizeTensor);return Object.keys(n).forEach((e=>ry(n[e]))),r}async predict(e,t){const n={};n.resize=$w.resizeBilinear(e,[this.inputSize,this.inputSize]),n.div=yy(n.resize,k4.tf127),n.image=bb(n.div,k4.tf1),n.batched=this.model.execute(n.image),n.predictions=Xx(n.batched),n.slice=Qy(n.predictions,[0,0],[-1,1]),n.sigmoid=Jy(n.slice),n.scores=Xx(n.sigmoid);const r=await n.scores.data();n.boxes=Qy(n.predictions,[0,1],[-1,4]),n.norm=this.normalizeBoxes(n.boxes),n.nms=await $w.nonMaxSuppressionAsync(n.norm,n.scores,3*t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);const a=await n.nms.array(),s=[];for(const t of a){const a={};a.box=Qy(n.norm,[t,0],[1,-1]),a.slice=Qy(n.predictions,[t,5],[1,14]),a.norm=this.normalizeLandmarks(a.slice,t),a.palmLandmarks=Ky(a.norm,[-1,2]);const i=await a.box.data(),o=F8({startPoint:i.slice(0,2),endPoint:i.slice(2,4),palmLandmarks:await a.palmLandmarks.array(),confidence:r[t]},[e.shape[2]/this.inputSize,e.shape[1]/this.inputSize]);s.push(o),Object.keys(a).forEach((e=>ry(a[e])))}return Object.keys(n).forEach((e=>ry(n[e]))),s}}(E9);return R9=new class{constructor(e,t){tl(this,"handDetector"),tl(this,"handPoseModel"),tl(this,"inputSize"),tl(this,"storedBoxes"),tl(this,"skipped"),tl(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)]}}getBoxForPalmLandmarks(e,t){const n=e.map((e=>V8([...e,1],t)));return O8(z8(this.calculateLandmarksBoundingBox(n)),5)}getBoxForHandLandmarks(e){const t=O8(z8(this.calculateLandmarksBoundingBox(e)),1.65);t.palmLandmarks=[];for(let n=0;n<j8.length;n++)t.palmLandmarks.push(e[j8[n]].slice(0,2));return t}transformRawCoords(e,t,n,r){const a=R8(t),s=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=e.map((e=>[s[0]*(e[0]-this.inputSize/2),s[1]*(e[1]-this.inputSize/2),s[2]*e[2]])),o=U8(n,[0,0]),l=i.map((e=>[...V8(e,o),e[2]])),u=function(e){const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],r=[-L8(t[0],n),-L8(t[1],n)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]}(r),d=[...M8(t),1],h=[L8(d,u[0]),L8(d,u[1])];return l.map((e=>[Math.trunc(e[0]+h[0]),Math.trunc(e[1]+h[1]),Math.trunc(e[2])]))}async estimateHands(e,t){let n,r=!1;const a=(t.hand.skipTime||0)>ol()-H8,s=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&a&&s&&(n=await this.handDetector.predict(e,t),this.skipped=0),t.skipAllowed&&this.skipped++,n&&n.length>0&&(n.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...n],this.storedBoxes.length>0&&(r=!0));const i=[];for(let n=0;n<this.storedBoxes.length;n++){const a=this.storedBoxes[n];if(a)if(t.hand.landmarks){const s=t.hand.rotation?D8(a.palmLandmarks[0],a.palmLandmarks[2]):0,o=M8(a),l=[o[0]/e.shape[2],o[1]/e.shape[1]],u=t.hand.rotation&&d4.kernels.includes("rotatewithoffset")?$w.rotateWithOffset(e,s,0,l):e.clone(),d=U8(-s,o),h=r?this.getBoxForPalmLandmarks(a.palmLandmarks,d):a,p=$8(h,u,[this.inputSize,this.inputSize]),c=yy(p,k4.tf255);ry(p),ry(u);const[f,m]=this.handPoseModel.execute(c);H8=ol(),ry(c);const g=(await f.data())[0];if(ry(f),g>=t.hand.minConfidence/4){const e=Ky(m,[-1,3]),t=await e.array();ry(m),ry(e);const r=this.transformRawCoords(t,h,s,d),o=this.getBoxForHandLandmarks(r);this.storedBoxes[n]={...o,confidence:g};const l={landmarks:r,confidence:g,boxConfidence:a.confidence,fingerConfidence:g,box:{topLeft:o.startPoint,bottomRight:o.endPoint}};i.push(l)}else this.storedBoxes[n]=null;ry(m)}else{const e=O8(z8(a),1.65),t={confidence:a.confidence,boxConfidence:a.confidence,fingerConfidence:0,box:{topLeft:e.startPoint,bottomRight:e.endPoint},landmarks:[]};i.push(t)}}return this.storedBoxes=this.storedBoxes.filter((e=>null!==e)),this.detectedHands=i.length,i.length>t.hand.maxDetected&&(i.length=t.hand.maxDetected),i}}(r,_9),[E9,_9]}var O9,z9=[null,null],D9=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],P9=[[0,0],[0,0]],L9=["hand","fist","pinch","point","face","tip","pinchtip"],W9=Number.MAX_SAFE_INTEGER,B9=0,U9=[0,0],V9={boxes:[],hands:[]},G9={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function j9(e,t,n){const r={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&z9[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){const a={},s=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];a.crop=$w.cropAndResize(e,[s],[0],[P9[1][0],P9[1][1]],"bilinear"),a.div=yy(a.crop,k4.tf255),[a.score,a.keypoints]=z9[1].execute(a.div,["Identity_1","Identity"]);const i=(await a.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(i))))/100;if(o>=(n.hand.minConfidence||0)){r.fingerScore=o,a.reshaped=Ky(a.keypoints,[-1,3]);const e=(await a.reshaped.array()).map((e=>[e[0]/P9[1][1],e[1]/P9[1][0],e[2]||0])).map((e=>[e[0]*t.boxRaw[2],e[1]*t.boxRaw[3],e[2]||0]));r.keypoints=e.map((e=>[U9[0]*(e[0]+t.boxRaw[0]),U9[1]*(e[1]+t.boxRaw[1]),e[2]||0])),r.landmarks=T9(r.keypoints);for(const e of Object.keys(G9))r.annotations[e]=G9[e].map((e=>r.landmarks&&r.keypoints[e]?r.keypoints[e]:null))}Object.keys(a).forEach((e=>ry(a[e])))}return r}async function H9(e,t){var n,r;if(!(z9[0]&&z9[1]&&(null==(n=z9[0])?void 0:n.inputs[0].shape)&&(null==(r=z9[1])?void 0:r.inputs[0].shape)))return[];U9=[e.shape[2]||0,e.shape[1]||0],W9++;const a=(t.hand.skipTime||0)>ol()-B9,s=W9<(t.hand.skipFrames||0);return t.skipAllowed&&a&&s?V9.hands:new Promise((async n=>{const r=3*(t.hand.skipTime||0)>ol()-B9,a=W9<3*(t.hand.skipFrames||0);t.skipAllowed&&V9.hands.length===t.hand.maxDetected||t.skipAllowed&&r&&a&&V9.hands.length>0?V9.hands=await Promise.all(V9.boxes.map((n=>j9(e,n,t)))):(V9.boxes=await async function(e,t){const n=[];if(!e||!z9[0])return n;const r={},a=(e.shape[2]||1)/(e.shape[1]||1),s=Math.min(8*Math.round((e.shape[1]||0)/8),512),i=8*Math.round(s*a/8);r.resize=$w.resizeBilinear(e,[s,i]),r.cast=Im(r.resize,"int32"),[r.rawScores,r.rawBoxes]=await z9[0].executeAsync(r.cast,D9),r.boxes=Xx(r.rawBoxes,[0,2]),r.scores=Xx(r.rawScores,[0]);const o=uv(r.scores,1);ry(o[4]),o.splice(4,1),r.filtered=Zx(o,1),ry(o),r.max=Ab(r.filtered,1),r.argmax=Sy(r.filtered,1);let l=0;r.nms=await $w.nonMaxSuppressionAsync(r.boxes,r.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);const u=await r.nms.data(),d=await r.max.data(),h=await r.argmax.data();for(const e of Array.from(u)){const t=Qy(r.boxes,e,1),a=await t.data();ry(t);const s=[a[1],a[0],a[3]-a[1],a[2]-a[0]],i=I6(s,1.4),o=[Math.trunc(s[0]*U9[0]),Math.trunc(s[1]*U9[1]),Math.trunc(s[2]*U9[0]),Math.trunc(s[3]*U9[1])],u={id:l++,score:d[e],box:o,boxRaw:i,label:L9[h[e]]};n.push(u)}return Object.keys(r).forEach((e=>ry(r[e]))),n.sort(((e,t)=>t.score-e.score)),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}(e,t),B9=ol(),V9.hands=await Promise.all(V9.boxes.map((n=>j9(e,n,t)))),W9=0);const s=[...V9.boxes];if(V9.boxes.length=0,t.cacheSensitivity>0)for(let n=0;n<V9.hands.length;n++){const r=k6(V9.hands[n].keypoints,U9);if(r.box[2]/(e.shape[2]||1)>.05&&r.box[3]/(e.shape[1]||1)>.05&&V9.hands[n].fingerScore&&V9.hands[n].fingerScore>(t.hand.minConfidence||0)){const e=I6(r.box,1.6),t=I6(r.boxRaw,1.6);V9.boxes.push({...s[n],box:e,boxRaw:t})}}for(let e=0;e<V9.hands.length;e++){const t=w6(V9.hands[e].keypoints,U9);V9.hands[e].box=t.box,V9.hands[e].boxRaw=t.boxRaw}n(V9.hands)}))}var q9=[],K9=Number.MAX_SAFE_INTEGER,X9=0,Z9=0;async function Y9(e,t,n,r){var a,s;if(!O9)return 0;const i=((null==(a=t.face.liveness)?void 0:a.skipTime)||0)>ol()-Z9,o=K9<((null==(s=t.face.liveness)?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&X9===r&&q9[n]?(K9++,q9[n]):(K9=0,new Promise((async t=>{const a=$w.resizeBilinear(e,[(null==O9?void 0:O9.inputs[0].shape)?O9.inputs[0].shape[2]:0,(null==O9?void 0:O9.inputs[0].shape)?O9.inputs[0].shape[1]:0],!1),s=null==O9?void 0:O9.execute(a),i=(await s.data())[0];q9[n]=Math.round(100*i)/100,X9=r,Z9=ol(),ry([a,s]),t(q9[n])})))}var J9={};el(J9,{connected:()=>aee,horizontal:()=>tee,kpt:()=>eee,relative:()=>ree,vertical:()=>nee});var Q9,eee=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],tee=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],nee=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],ree=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],aee={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},see={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function iee(e){for(const t of tee){const n=e.keypoints.findIndex((e=>e.part===t[0])),r=e.keypoints.findIndex((e=>e.part===t[1]));if(e.keypoints[n]&&e.keypoints[r]&&e.keypoints[n].position[0]<e.keypoints[r].position[0]){const t=e.keypoints[n];e.keypoints[n]=e.keypoints[r],e.keypoints[r]=t}}for(const t of nee){const n=e.keypoints.findIndex((e=>e&&e.part===t[0])),r=e.keypoints.findIndex((e=>e&&e.part===t[1]));e.keypoints[n]&&e.keypoints[r]&&e.keypoints[n].position[1]<e.keypoints[r].position[1]&&e.keypoints.splice(n,1)}for(const[t,n]of ree){const r=e.keypoints.findIndex((e=>e&&e.part===t[0])),a=e.keypoints.findIndex((e=>e&&e.part===t[1])),s=e.keypoints.findIndex((e=>e&&e.part===n[0])),i=e.keypoints.findIndex((e=>e&&e.part===n[1]));if(!e.keypoints[s]||!e.keypoints[i])continue;const o=e.keypoints[r]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0])]:[0,0],l=e.keypoints[a]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[a].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[a].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){const t=e.keypoints[r];e.keypoints[r]=e.keypoints[a],e.keypoints[a]=t}}}function oee(e){for(let t=0;t<e.length;t++)if(e[t]&&see.keypoints[t]){const n=[Math.abs(e[t].positionRaw[0]-see.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-see.keypoints[t].positionRaw[1])];n[0]<.005&&n[1]<.005?e[t]=see.keypoints[t]:see.keypoints[t]=e[t]}else see.keypoints[t]=e[t];return e}function lee(e,t){e.keypoints=e.keypoints.filter((e=>e&&e.position));for(const n of e.keypoints)n.position=[n.position[0]*(t[0]+see.padding[2][0]+see.padding[2][1])/t[0]-see.padding[2][0],n.position[1]*(t[1]+see.padding[1][0]+see.padding[1][1])/t[1]-see.padding[1][0]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1]];const n=w6(e.keypoints.map((e=>e.position)),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var uee,dee=0,hee=Number.MAX_SAFE_INTEGER,pee={boxes:[],bodies:[],last:0};async function cee(e,t){if(!Q9||!(null==Q9?void 0:Q9.inputs[0].shape))return[];t.skipAllowed||(pee.boxes.length=0),hee++;const n=(t.body.skipTime||0)>ol()-pee.last,r=hee<(t.body.skipFrames||0);return t.skipAllowed&&n&&r?pee.bodies:new Promise((async n=>{const r={};hee=0,r.input=function(e,t){const n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;see.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=ex(e,see.padding),n.resize=$w.resizeBilinear(n.pad,[t,t]);const r=Im(n.resize,"int32");return Object.keys(n).forEach((e=>ry(n[e]))),r}(e,dee),r.res=null==Q9?void 0:Q9.execute(r.input),pee.last=ol();const a=await r.res.array();pee.bodies=17===r.res.shape[2]?await async function(e,t,n){const r=e[0][0],a=[];let s=0;for(let e=0;e<r.length;e++)if(s=r[e][2],s>t.body.minConfidence){const t=[r[e][1],r[e][0]];a.push({score:Math.round(100*s)/100,part:eee[e],positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}s=a.reduce(((e,t)=>t.score>e?t.score:e),0);const i=[],o=w6(a.map((e=>e.position)),[n.shape[2],n.shape[1]]),l={};for(const[e,n]of Object.entries(aee)){const r=[];for(let e=0;e<n.length-1;e++){const s=a.find((t=>t.part===n[e])),i=a.find((t=>t.part===n[e+1]));s&&i&&s.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&r.push([s.position,i.position])}l[e]=r}const u={id:0,score:s,box:o.box,boxRaw:o.boxRaw,keypoints:a,annotations:l};return iee(u),i.push(u),i}(a,t,e):await async function(e,t,n){const r=[];for(let a=0;a<e[0].length;a++){const s=e[0][a],i=Math.round(100*s[55])/100;if(i>t.body.minConfidence){const e=[];for(let r=0;r<17;r++){const a=s[3*r+2];if(a>t.body.minConfidence){const t=[s[3*r+1],s[3*r+0]];e.push({part:eee[r],score:Math.round(100*a)/100,positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}}const o=w6(e.map((e=>e.position)),[n.shape[2],n.shape[1]]),l={};for(const[n,r]of Object.entries(aee)){const a=[];for(let n=0;n<r.length-1;n++){const s=e.find((e=>e.part===r[n])),i=e.find((e=>e.part===r[n+1]));s&&i&&s.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&a.push([s.position,i.position])}l[n]=a}const u={id:a,score:i,box:o.box,boxRaw:o.boxRaw,keypoints:[...e],annotations:l};iee(u),r.push(u)}}return r.sort(((e,t)=>t.score-e.score)),r.length>t.body.maxDetected&&(r.length=t.body.maxDetected),r}(a,t,e);for(const t of pee.bodies)lee(t,[e.shape[2]||1,e.shape[1]||1]),oee(t.keypoints);Object.keys(r).forEach((e=>ry(r[e]))),n(pee.bodies)}))}var fee=[],mee=0,gee=Number.MAX_SAFE_INTEGER,yee=0,Aee=2.5;async function bee(e,t){const n=(t.object.skipTime||0)>ol()-mee,r=gee<(t.object.skipFrames||0);return t.skipAllowed&&n&&r&&fee.length>0?(gee++,fee):(gee=0,d4.kernels.includes("mod")&&d4.kernels.includes("sparsetodense")?new Promise((async n=>{const r=[e.shape[2]||0,e.shape[1]||0],a=$w.resizeBilinear(e,[yee,yee],!1),s=yy(a,k4.tf255),i=s.transpose([0,3,1,2]);let o;ry(s),ry(a),t.object.enabled&&(o=uee.execute(i)),mee=ol(),ry(i);const l=await async function(e,t,n){let r=0,a=[];for(const s of[1,2,4])ny((async()=>{const i=13*s,o=Xx(e.find((e=>e.shape[1]===i**2&&(e.shape[2]||0)===O6.length))),l=Xx(e.find((e=>e.shape[1]===i**2&&(e.shape[2]||0)<O6.length))),u=l.reshape([-1,4,l.shape[1]/4]),d=await u.argMax(2).array(),h=await o.array();for(let e=0;e<o.shape[0];e++)for(let l=0;l<o.shape[1];l++){const o=h[e][l];if(o>(n.object.minConfidence||0)&&61!==l){const n=(.5+Math.trunc(e%i))/i,u=(.5+Math.trunc(e/i))/i,h=d[e].map((e=>e*(i/s/yee))),[p,c]=[n-Aee/s*h[0],u-Aee/s*h[1]],[f,m]=[n+Aee/s*h[2]-p,u+Aee/s*h[3]-c];let g=[p,c,f,m];g=g.map((e=>Math.max(0,Math.min(e,1))));const y=[g[0]*t[0],g[1]*t[1],g[2]*t[0],g[3]*t[1]],A={id:r++,score:Math.round(100*o)/100,class:l+1,label:O6[l].label,box:y.map((e=>Math.trunc(e))),boxRaw:g};a.push(A)}}}));e.forEach((e=>ry(e)));const s=a.map((e=>[e.boxRaw[1],e.boxRaw[0],e.boxRaw[3],e.boxRaw[2]])),i=a.map((e=>e.score));let o=[];if(s&&s.length>0){const e=await $w.nonMaxSuppressionAsync(s,i,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);o=await e.data(),ry(e)}return a=a.filter(((e,t)=>o.includes(t))).sort(((e,t)=>t.score-e.score)),a}(o,r,t);fee=l,n(l)})):fee)}var xee,vee=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],wee=vee.length,kee=vee.reduce(((e,t,n)=>(e[t]=n,e)),{}),Iee=([["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((e=>{let[t,n]=e;return[kee[t],kee[n]]})),[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]]);function See(e){const t=e.reduce(((e,t)=>{let{maxX:n,maxY:r,minX:a,minY:s}=e,{position:{x:i,y:o}}=t;return{maxX:Math.max(n,i),maxY:Math.max(r,o),minX:Math.min(a,i),minY:Math.min(s,o)}}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function Nee(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+wee)}}function Tee(e,t,n){const{heatmapY:r,heatmapX:a,id:s}=e,{y:i,x:o}=Nee(r,a,s,n);return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function Cee(e,t,n){return e<t?t:e>n?n:e}function Eee(e,t){return{x:e.x+t.x,y:e.y+t.y}}var _ee,Ree=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],Mee=16;function $ee(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2;const o=t=>({y:s.get(t.y,t.x,e),x:s.get(t.y,t.x,s.shape[2]/2+e)}),l=(e,t,n)=>({y:Cee(Math.round(e.y/Mee),0,t-1),x:Cee(Math.round(e.x/Mee),0,n-1)}),[u,d]=r.shape,h=l(t.position,u,d),p=o(h),c=Eee(t.position,p);let f=c;for(let e=0;e<i;e++){const e=l(f,u,d),t=Nee(e.y,e.x,n,a);f=Eee({x:e.x*Mee,y:e.y*Mee},{x:t.x,y:t.y})}const m=l(f,u,d),g=r.get(m.y,m.x,n);return{position:f,part:vee[n],score:g}}function Fee(e,t,n,r,a){const s=Iee.map((e=>{let[t,n]=e;return[kee[t],kee[n]]})),i=s.map((e=>{let[,t]=e;return t})),o=s.map((e=>{let[t]=e;return t})),l=t.shape[2],u=i.length,d=new Array(l),h=Tee(e.part,Mee,n);d[e.part.id]={score:e.score,part:vee[e.part.id],position:h};for(let e=u-1;e>=0;--e){const r=i[e],s=o[e];d[r]&&!d[s]&&(d[s]=$ee(e,d[r],s,t,n,a))}for(let e=0;e<u;++e){const a=o[e],s=i[e];d[a]&&!d[s]&&(d[s]=$ee(e,d[a],s,t,n,r))}return d}function Oee(e,t,n,r,a){const[s,i]=a.shape;let o=!0;const l=Math.max(n-1,0),u=Math.min(n+1+1,s);for(let n=l;n<u;++n){const s=Math.max(r-1,0),l=Math.min(r+1+1,i);for(let r=s;r<l;++r)if(a.get(n,r,e)>t){o=!1;break}if(!o)break}return o}function zee(e,t,n){let{x:r,y:a}=t;return e.some((e=>{let{keypoints:t}=e;var s;const i=null==(s=t[n])?void 0:s.position;return!!i&&function(e,t,n,r){const a=n-e,s=r-t;return a*a+s*s}(a,r,i.y,i.x)<=2500}))}function Dee(e,t){return t.reduce(((t,n,r)=>{let{position:a,score:s}=n;return zee(e,a,r)||(t+=s),t}),0)/t.length}async function Pee(e,t){const n=ny((()=>{if(!xee.inputs[0].shape)return[];const t=$w.resizeBilinear(e,[xee.inputs[0].shape[2],xee.inputs[0].shape[1]]),n=bb(yy(Im(t,"float32"),127.5),1),r=xee.execute(n,Ree).map((e=>Xx(e,[0])));return r[1]=Jy(r[1]),r})),r=await Promise.all(n.map((e=>e.buffer())));for(const e of n)ry(e);const a=await function(e,t,n,r,a,s){const i=[],o=function(e,t){const[n,r,a]=t.shape,s=new class{constructor(e,t){tl(this,"priorityQueue"),tl(this,"numberOfElements"),tl(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){const e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return-1===this.numberOfElements}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){const n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n}}(n*r*a,(e=>{let{score:t}=e;return t}));for(let i=0;i<n;++i)for(let n=0;n<r;++n)for(let r=0;r<a;++r){const a=t.get(i,n,r);a<e||Oee(r,a,i,n,t)&&s.enqueue({score:a,part:{heatmapY:i,heatmapX:n,id:r}})}return s}(s,t);for(;i.length<a&&!o.empty();){const a=o.dequeue();if(zee(i,Tee(a.part,Mee,e),a.part.id))continue;let l=Fee(a,t,e,n,r);l=l.filter((e=>e.score>s));const u=Dee(i,l),d=See(l);u>s&&i.push({keypoints:l,box:d,score:Math.round(100*u)/100})}return i}(r[0],r[1],r[2],r[3],t.body.maxDetected,t.body.minConfidence);return xee.inputs[0].shape?function(e,t,n){let[r,a]=t,[s,i]=n;const o=r/s,l=a/i;return e.map(((e,t)=>((e,t)=>({id:t,score:e.score,boxRaw:[e.box[0]/i,e.box[1]/s,e.box[2]/i,e.box[3]/s],box:[Math.trunc(e.box[0]*l),Math.trunc(e.box[1]*o),Math.trunc(e.box[2]*l),Math.trunc(e.box[3]*o)],keypoints:e.keypoints.map((e=>{let{score:t,part:n,position:r}=e;return{score:t,part:n,position:[Math.trunc(r.x*l),Math.trunc(r.y*o)],positionRaw:[r.x/s,r.y/s]}})),annotations:{}}))(e,t)))}(a,[e.shape[1],e.shape[2]],[xee.inputs[0].shape[2],xee.inputs[0].shape[1]]):[]}var Lee=!1;async function Wee(e){return!_ee||d4.initial?_ee=await p4(e.segmentation.modelPath):e.debug&&il("cached model:",_ee.modelUrl),_ee}var Bee=class{constructor(){tl(this,"ssrnetage",null),tl(this,"gear",null),tl(this,"blazeposedetect",null),tl(this,"blazepose",null),tl(this,"centernet",null),tl(this,"efficientpose",null),tl(this,"mobilefacenet",null),tl(this,"emotion",null),tl(this,"facedetect",null),tl(this,"faceiris",null),tl(this,"facemesh",null),tl(this,"faceres",null),tl(this,"ssrnetgender",null),tl(this,"handpose",null),tl(this,"handskeleton",null),tl(this,"handtrack",null),tl(this,"liveness",null),tl(this,"movenet",null),tl(this,"nanodet",null),tl(this,"posenet",null),tl(this,"segmentation",null),tl(this,"antispoof",null)}};function Uee(e){for(const t of Object.keys(e.models))e.models[t]=null}async function Vee(e){var t,n,r,a,s,i,o,l,u,d,h,p,c,f,m,g,y,A,b,x,v,w,k,I,S,N,T,C,E,_;d4.initial&&Uee(e),e.config.hand.enabled&&(!e.models.handpose&&(null==(n=null==(t=e.config.hand.detector)?void 0:t.modelPath)?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await F9(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&(null==(a=null==(r=e.config.hand.detector)?void 0:r.modelPath)?void 0:a.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await F9(e.config))),e.config.body.enabled&&!e.models.blazepose&&(null==(i=null==(s=e.config.body)?void 0:s.modelPath)?void 0:i.includes("blazepose"))&&(e.models.blazepose=async function(e){if(S6.landmarks=null,S6.landmarks)e.debug&&il("cached model:",S6.landmarks.modelUrl);else{S6.landmarks=await p4(e.body.modelPath);const t=Object.values(S6.landmarks.modelSignature.inputs);N6.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,N6.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return S6.landmarks}(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=async function(e){if(S6.detector=null,!S6.detector&&e.body.detector&&e.body.detector.modelPath){S6.detector=await p4(e.body.detector.modelPath);const t=Object.values(S6.detector.modelSignature.inputs);N6.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,N6.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&S6.detector&&il("cached model:",S6.detector.modelUrl);return await async function(){const e=[];let t=0;for(;t<5;){let n=0,r=t;for(;r<v6.length&&v6[r]===v6[t];)n+=2,r++;const a=v6[t],s=Math.ceil(224/a),i=Math.ceil(224/a);for(let t=0;t<s;++t)for(let r=0;r<i;++r)for(let a=0;a<n;++a)e.push({x:(r+.5)/i,y:(t+.5)/s});t=r}ev(e.map((e=>e.x))),ev(e.map((e=>e.y)))}(),S6.detector}(e.config)),e.config.body.enabled&&!e.models.efficientpose&&(null==(l=null==(o=e.config.body)?void 0:o.modelPath)?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=async function(e){return d4.initial&&(U6=null),U6?e.debug&&il("cached model:",U6.modelUrl):U6=await p4(e.body.modelPath),U6}(e.config)),e.config.body.enabled&&!e.models.movenet&&(null==(d=null==(u=e.config.body)?void 0:u.modelPath)?void 0:d.includes("movenet"))&&(e.models.movenet=async function(e){return d4.initial&&(Q9=null),Q9?e.debug&&il("cached model:",Q9.modelUrl):(Xee(["size"],e),Q9=await p4(e.body.modelPath)),(dee=Q9.inputs[0].shape?Q9.inputs[0].shape[2]:0)<64&&(dee=256),Q9}(e.config)),e.config.body.enabled&&!e.models.posenet&&(null==(p=null==(h=e.config.body)?void 0:h.modelPath)?void 0:p.includes("posenet"))&&(e.models.posenet=async function(e){return!xee||d4.initial?xee=await p4(e.body.modelPath):e.debug&&il("cached model:",xee.modelUrl),xee}(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=async function(e){var t;return d4.initial&&(p6=null),p6?e.debug&&il("cached model:",p6.modelUrl):p6=await p4(null==(t=e.face.detector)?void 0:t.modelPath),m6=p6.inputs[0].shape?p6.inputs[0].shape[2]:0,g6=_x(m6,"int32"),f6=tv(function(e){const t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let r=0;r<t.strides.length;r++){const a=t.strides[r],s=Math.floor((e+a-1)/a),i=Math.floor((e+a-1)/a),o=t.anchors[r];for(let e=0;e<s;e++){const t=a*(e+.5);for(let e=0;e<i;e++){const r=a*(e+.5);for(let e=0;e<o;e++)n.push([r,t])}}}return n}(m6)),p6}(e.config)),e.config.face.enabled&&(null==(c=e.config.face.antispoof)?void 0:c.enabled)&&!e.models.antispoof&&(e.models.antispoof=async function(e){var t;return d4.initial&&(R4=null),R4?e.debug&&il("cached model:",R4.modelUrl):R4=await p4(null==(t=e.face.antispoof)?void 0:t.modelPath),R4}(e.config)),e.config.face.enabled&&(null==(f=e.config.face.liveness)?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=async function(e){var t;return d4.initial&&(O9=null),O9?e.debug&&il("cached model:",O9.modelUrl):O9=await p4(null==(t=e.face.liveness)?void 0:t.modelPath),O9}(e.config)),e.config.face.enabled&&(null==(m=e.config.face.description)?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=async function(e){var t;return d4.initial&&(b8=null),b8?e.debug&&il("cached model:",b8.modelUrl):b8=await p4(null==(t=e.face.description)?void 0:t.modelPath),b8}(e.config)),e.config.face.enabled&&(null==(g=e.config.face.emotion)?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=async function(e){var t;return d4.initial&&(Z6=null),Z6?e.debug&&il("cached model:",Z6.modelUrl):Z6=await p4(null==(t=e.face.emotion)?void 0:t.modelPath),Z6}(e.config)),e.config.face.enabled&&(null==(y=e.config.face.iris)?void 0:y.enabled)&&!e.models.faceiris&&(e.models.faceiris=async function(e){var t;return d4.initial&&(a8=null),a8?e.debug&&il("cached model:",a8.modelUrl):a8=await p4(null==(t=e.face.iris)?void 0:t.modelPath),-1===(d8=a8.inputs[0].shape?a8.inputs[0].shape[2]:0)&&(d8=64),a8}(e.config)),e.config.face.enabled&&(null==(A=e.config.face.mesh)?void 0:A.enabled)&&!e.models.facemesh&&(e.models.facemesh=async function(e){var t;return d4.initial&&(v8=null),v8?e.debug&&il("cached model:",v8.modelUrl):v8=await p4(null==(t=e.face.mesh)?void 0:t.modelPath),w8=v8.inputs[0].shape?v8.inputs[0].shape[2]:0,v8}(e.config)),e.config.face.enabled&&(null==(b=e.config.face.gear)?void 0:b.enabled)&&!e.models.gear&&(e.models.gear=async function(e){return d4.initial&&(c4=null),c4?e.debug&&il("cached model:",c4.modelUrl):c4=await p4(e.face.gear),c4}(e.config)),e.config.face.enabled&&(null==(x=e.config.face.ssrnet)?void 0:x.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=async function(e){return d4.initial&&(w4=null),w4?e.debug&&il("cached model:",w4.modelUrl):w4=await p4(e.face.ssrnet.modelPathAge),w4}(e.config)),e.config.face.enabled&&(null==(v=e.config.face.ssrnet)?void 0:v.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=async function(e){return d4.initial&&(S4=null),S4?e.debug&&il("cached model:",S4.modelUrl):S4=await p4(e.face.ssrnet.modelPathGender),S4}(e.config)),e.config.face.enabled&&(null==(w=e.config.face.mobilefacenet)?void 0:w.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=async function(e){return d4.initial&&(Y6=null),Y6?e.debug&&il("cached model:",Y6.modelUrl):Y6=await p4(e.face.mobilefacenet.modelPath),Y6}(e.config)),e.config.hand.enabled&&!e.models.handtrack&&(null==(I=null==(k=e.config.hand.detector)?void 0:k.modelPath)?void 0:I.includes("handtrack"))&&(e.models.handtrack=async function(e){var t;if(d4.initial&&(z9[0]=null),z9[0])e.debug&&il("cached model:",z9[0].modelUrl);else{Xee(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),z9[0]=await p4(null==(t=e.hand.detector)?void 0:t.modelPath);const n=Object.values(z9[0].modelSignature.inputs);P9[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,P9[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return z9[0]}(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&(null==(N=null==(S=e.config.hand.detector)?void 0:S.modelPath)?void 0:N.includes("handtrack"))&&(e.models.handskeleton=async function(e){var t;if(d4.initial&&(z9[1]=null),z9[1])e.debug&&il("cached model:",z9[1].modelUrl);else{z9[1]=await p4(null==(t=e.hand.skeleton)?void 0:t.modelPath);const n=Object.values(z9[1].modelSignature.inputs);P9[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,P9[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return z9[1]}(e.config)),e.config.object.enabled&&!e.models.centernet&&(null==(C=null==(T=e.config.object)?void 0:T.modelPath)?void 0:C.includes("centernet"))&&(e.models.centernet=async function(e){if(d4.initial&&(F6=null),F6)e.debug&&il("cached model:",F6.modelUrl);else{F6=await p4(e.object.modelPath);const t=Object.values(F6.modelSignature.inputs);z6=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return F6}(e.config)),e.config.object.enabled&&!e.models.nanodet&&(null==(_=null==(E=e.config.object)?void 0:E.modelPath)?void 0:_.includes("nanodet"))&&(e.models.nanodet=async function(e){if(!uee||d4.initial){uee=await p4(e.object.modelPath);const t=Object.values(uee.modelSignature.inputs);yee=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&il("cached model:",uee.modelUrl);return uee}(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=Wee(e.config));for await(const t of Object.keys(e.models))e.models[t]&&void 0!==e.models[t]&&(e.models[t]=await e.models[t])}async function Gee(e){const t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(const n of Object.keys(e.models)){const r=e.models[n];if(!r)continue;const a=[],s=null==r?void 0:r.executor;if(s&&s.graph.nodes)for(const e of Object.values(s.graph.nodes)){const t=e.op.toLowerCase();a.includes(t)||a.push(t)}else!s&&e.config.debug&&il("model signature not determined:",n);const i=[];for(const n of a)t.includes(n)||e.env.kernels.includes(n)||e.env.kernels.includes(n.replace("_",""))||e.env.kernels.includes(n.replace("native",""))||e.env.kernels.includes(n.replace("v2",""))||i.push(n);e.config.debug&&i.length>0&&il("model validation failed:",n,i)}}var jee={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};async function Hee(e){var t;if("humangl"===e.config.backend&&(!(jee.name in Qg().registry)||jee.gl&&jee.gl.getParameter(jee.gl.VERSION)||(il("error: humangl backend invalid context"),Uee(e)),!dy(jee.name))){try{jee.canvas=await o4(100,100)}catch(e){return void il("error: cannot create canvas:",e)}try{if(jee.gl=null==(t=jee.canvas)?void 0:t.getContext("webgl2",jee.webGLattr),!jee.gl.getParameter(jee.gl.VERSION).includes("2.0"))return il("override: using fallback webgl backend as webgl 2.0 is not detected"),void(e.config.backend="webgl");jee.canvas&&(jee.canvas.addEventListener("webglcontextlost",(async t=>{throw il("error: humangl:",t.type),il("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")})),jee.canvas.addEventListener("webglcontextrestored",(e=>{il("error: humangl context restored:",e)})),jee.canvas.addEventListener("webglcontextcreationerror",(e=>{il("error: humangl context create:",e)})))}catch(e){return void il("error: cannot get WebGL context:",e)}try{iV(2,jee.gl)}catch(e){return void il("error: cannot set WebGL context:",e)}try{const e=new uj(jee.gl);py(jee.name,(()=>new kH(e)),jee.priority)}catch(e){return void il("error: cannot register WebGL backend:",e)}try{sc("webgl").forEach((e=>{ic({...e,backendName:jee.name})}))}catch(e){return void il("error: cannot update WebGL backend registration:",e)}const n=cy().getGPGPUContext?cy().getGPGPUContext().gl:null;if(!n)return void il("error: no current gl context:",n,jee.gl);il(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);try{Gu.set("WEBGL_VERSION",2)}catch(e){return void il("error: cannot set WebGL backend flags:",e)}!function(){const e=jee.gl;e&&(jee.extensions=e.getSupportedExtensions())}(),il("backend registered:",jee.name)}}function qee(){d4.kernels.includes("mod")||(ic({kernelName:"Mod",backendName:ly(),kernelFunc:e=>ny((()=>bb(e.inputs.a,Ay(yy(e.inputs.a,e.inputs.b),e.inputs.b))))}),d4.kernels.push("mod")),d4.kernels.includes("floormod")||(ic({kernelName:"FloorMod",backendName:ly(),kernelFunc:e=>ny((()=>gy(e.inputs.a/e.inputs.b)*e.inputs.b+Hb(e.inputs.a,e.inputs.b)))}),d4.kernels.push("floormod"))}async function Kee(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(e.state="backend",t||d4.initial||e.config.backend&&e.config.backend.length>0&&ly()!==e.config.backend){const t=ol();if(e.config.backend&&e.config.backend.length>0){if("undefined"==typeof window&&"undefined"!=typeof WorkerGlobalScope&&e.config.debug&&e.config.debug&&il("running inside web worker"),d4.browser&&"tensorflow"===e.config.backend&&(e.config.debug&&il("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),!d4.node||"webgl"!==e.config.backend&&"humangl"!==e.config.backend||(e.config.debug&&il(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),d4.browser&&"webgpu"===e.config.backend)if("undefined"==typeof navigator||void 0===navigator.gpu)il("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{const t=await navigator.gpu.requestAdapter();e.config.debug&&il("enumerated webgpu adapter:",t)}"humangl"===e.config.backend&&await Hee(e);const t=Object.keys(Qg().registryFactory);if(e.config.debug&&il("available backends:",t),t.includes(e.config.backend)||(il(`error: backend ${e.config.backend} not found in registry`),e.config.backend=d4.node?"tensorflow":"webgl",e.config.debug&&il(`override: setting backend ${e.config.backend}`)),e.config.debug&&il("setting backend:",e.config.backend),"wasm"===e.config.backend){if(e.config.debug&&il("wasm path:",e.config.wasmPath),void 0===(null==hl?void 0:hl.setWasmPaths))throw new Error("backend error: attempting to use wasm backend but wasm path is not set");await G7(e.config.wasmPath,e.config.wasmPlatformFetch);const t=await Uu().getAsync("WASM_HAS_SIMD_SUPPORT"),n=await Uu().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&il(`wasm execution: ${t?"SIMD":"no SIMD"} ${n?"multithreaded":"singlethreaded"}`),e.config.debug&&!t&&il("warning: wasm simd support is not enabled")}try{await iy(e.config.backend),await oy(),I4()}catch(t){return il("error: cannot set backend:",e.config.backend,t),!1}}if("humangl"===ly()&&(Gu.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Gu.set("WEBGL_CPU_FORWARD",!0),Gu.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Gu.set("CPU_HANDOFF_SIZE_THRESHOLD",256),void 0!==e.config.deallocate&&e.config.deallocate&&(il("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Gu.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),cy().getGPGPUContext)){const t=await cy().getGPGPUContext().gl;e.config.debug&&il(`gl version:${t.getParameter(t.VERSION)} renderer:${t.getParameter(t.RENDERER)}`)}ly(),Kg(),await oy(),e.performance.initBackend=Math.trunc(ol()-t),e.config.backend=ly(),await d4.updateBackend(),qee()}return!0}function Xee(e,t){for(const n of e)ic({kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&il("kernelFunc",n,t.backend)}});d4.kernels=sc(ly()).map((e=>e.kernelName.toLowerCase()))}el({},{all:()=>pte,body:()=>ote,canvas:()=>hte,face:()=>ite,gesture:()=>ste,hand:()=>lte,object:()=>ute,options:()=>Zee,person:()=>dte});var Zee={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},Yee=0,Jee=e=>{if(e)if(e.getContext){const t=e.getContext("2d");if(t)return t;il("draw error: cannot get canvas context")}else il("draw error: canvas context not defined");else il("draw error: invalid canvas");return null},Qee=e=>Math.round(180*e/Math.PI);function ete(e,t,n,r,a){r=r||0,e.fillStyle=a.useDepth&&r?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:a.color,e.beginPath(),e.arc(t,n,a.pointSize,0,2*Math.PI),e.fill()}function tte(e,t,n,r,a,s){if(e.beginPath(),e.lineWidth=s.lineWidth,s.useCurves){const s=(t+t+r)/2,i=(n+n+a)/2;e.ellipse(s,i,r/2,a/2,0,0,2*Math.PI)}else e.moveTo(t+s.roundRect,n),e.lineTo(t+r-s.roundRect,n),e.quadraticCurveTo(t+r,n,t+r,n+s.roundRect),e.lineTo(t+r,n+a-s.roundRect),e.quadraticCurveTo(t+r,n+a,t+r-s.roundRect,n+a),e.lineTo(t+s.roundRect,n+a),e.quadraticCurveTo(t,n+a,t,n+a-s.roundRect),e.lineTo(t,n+s.roundRect),e.quadraticCurveTo(t,n,t+s.roundRect,n),e.closePath();e.stroke()}function nte(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(const r of t){const t=r[2]||0;e.strokeStyle=n.useDepth&&0!==t?`rgba(${127.5+2*t}, ${127.5-2*t}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&0!==t?`rgba(${127.5+2*t}, ${127.5-2*t}, 255, 0.3)`:n.color,e.lineTo(r[0],Math.round(r[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function rte(e,t,n){if(!(t.length<2))if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2)nte(e,t,n);else{e.moveTo(t[0][0],t[0][1]);for(let n=0;n<t.length-2;n++){const r=(t[n][0]+t[n+1][0])/2,a=(t[n][1]+t[n+1][1])/2;e.quadraticCurveTo(t[n][0],t[n][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function ate(e,t,n){let r,a,s,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=i*Math.cos(r)+n[0],s=i*Math.sin(r)+n[1],e.moveTo(a,s),r+=1/3*(2*Math.PI),a=i*Math.cos(r)+n[0],s=i*Math.sin(r)+n[1],e.lineTo(a,s),r+=1/3*(2*Math.PI),a=i*Math.cos(r)+n[0],s=i*Math.sin(r)+n[1],e.lineTo(a,s),e.closePath(),e.stroke(),e.fill()}async function ste(e,t,n){const r=ul(Zee,n);if(t&&e&&r.drawGestures){const n=Jee(e);if(!n)return;n.font=r.font,n.fillStyle=r.color;let a=1;for(let e=0;e<t.length;e++){let s=[],i=[];if([s,i]=Object.entries(t[e]),i.length>1&&i[1].length>0){const e=s[1]>0?`#${s[1]}`:"",t=`${s[0]} ${e}: ${i[1]}`;r.shadowColor&&""!==r.shadowColor&&(n.fillStyle=r.shadowColor,n.fillText(t,8,2+a*r.lineHeight)),n.fillStyle=r.labelColor,n.fillText(t,6,0+a*r.lineHeight),a+=1}}}}async function ite(e,t,n){var r,a,s,i,o;const l=ul(Zee,n);if(!t||!e)return;const u=Jee(e);if(u)for(const e of t){if(u.font=l.font,u.strokeStyle=l.color,u.fillStyle=l.color,l.drawBoxes&&tte(u,e.box[0],e.box[1],e.box[2],e.box[3],l),l.drawLabels){const t=[];if(t.push(`face: ${Math.trunc(100*e.score)}%`),e.genderScore&&t.push(`${e.gender||""} ${Math.trunc(100*e.genderScore)}%`),e.age&&t.push(`age: ${e.age||""}`),e.iris&&t.push(`distance: ${e.iris}`),e.real&&t.push(`real: ${Math.trunc(100*e.real)}%`),e.live&&t.push(`live: ${Math.trunc(100*e.live)}%`),e.emotion&&e.emotion.length>0){const n=e.emotion.map((e=>`${Math.trunc(100*e.score)}% ${e.emotion}`));n.length>3&&(n.length=3),t.push(n.join(" "))}e.rotation&&e.rotation.angle&&e.rotation.gaze&&(e.rotation.angle.roll&&t.push(`roll: ${Qee(e.rotation.angle.roll)}° yaw:${Qee(e.rotation.angle.yaw)}° pitch:${Qee(e.rotation.angle.pitch)}°`),e.rotation.gaze.bearing&&t.push(`gaze: ${Qee(e.rotation.gaze.bearing)}°`)),0===t.length&&t.push("face"),u.fillStyle=l.color;for(let n=t.length-1;n>=0;n--){const r=Math.max(e.box[0],0),a=n*l.lineHeight+e.box[1];l.shadowColor&&""!==l.shadowColor&&(u.fillStyle=l.shadowColor,u.fillText(t[n],r+5,a+16)),u.fillStyle=l.labelColor,u.fillText(t[n],r+4,a+15)}}if(u.lineWidth=2,e.mesh&&e.mesh.length>0){if(l.drawPoints)for(const t of e.mesh)ete(u,t[0],t[1],t[2],l);if(l.drawPolygons){if(e.mesh.length>450)for(let t=0;t<K4.length/3;t++)nte(u,[K4[3*t+0],K4[3*t+1],K4[3*t+2]].map((t=>e.mesh[t])),l);if(e.annotations&&e.annotations.leftEyeIris&&e.annotations.leftEyeIris[0]){u.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,u.beginPath();const t=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,n=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;u.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],t,n,0,0,2*Math.PI),u.stroke(),l.fillPolygons&&(u.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,u.fill())}if(e.annotations&&e.annotations.rightEyeIris&&e.annotations.rightEyeIris[0]){u.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,u.beginPath();const t=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,n=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;u.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],t,n,0,0,2*Math.PI),u.stroke(),l.fillPolygons&&(u.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,u.fill())}if(l.drawGaze&&(null==(r=e.rotation)?void 0:r.angle)&&"undefined"!=typeof Path2D){u.strokeStyle="pink";const t=e.box[0]+e.box[2]/2-e.box[3]*Qee(e.rotation.angle.yaw)/90,n=e.box[1]+e.box[3]/2+e.box[2]*Qee(e.rotation.angle.pitch)/90,r=new Path2D(`\n            M ${e.box[0]+e.box[2]/2} ${e.box[1]}\n            C\n              ${t} ${e.box[1]},\n              ${t} ${e.box[1]+e.box[3]},\n              ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}\n          `),a=new Path2D(`\n            M ${e.box[0]} ${e.box[1]+e.box[3]/2}\n            C \n              ${e.box[0]} ${n},\n              ${e.box[0]+e.box[2]} ${n},\n              ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}\n          `);u.stroke(a),u.stroke(r)}if(l.drawGaze&&(null==(s=null==(a=e.rotation)?void 0:a.gaze)?void 0:s.strength)&&(null==(o=null==(i=e.rotation)?void 0:i.gaze)?void 0:o.bearing)&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){u.strokeStyle="pink",u.fillStyle="pink";const t=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];ate(u,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[t[0],t[1]],4);const n=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];ate(u,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[n[0],n[1]],4)}}}}}async function ote(e,t,n){var r;const a=ul(Zee,n);if(!t||!e)return;const s=Jee(e);if(s){s.lineJoin="round";for(let e=0;e<t.length;e++){if(s.strokeStyle=a.color,s.fillStyle=a.color,s.lineWidth=a.lineWidth,s.font=a.font,a.drawBoxes&&t[e].box&&4===(null==(r=t[e].box)?void 0:r.length)&&(tte(s,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],a),a.drawLabels&&(a.shadowColor&&""!==a.shadowColor&&(s.fillStyle=a.shadowColor,s.fillText(`body ${100*t[e].score}%`,t[e].box[0]+3,1+t[e].box[1]+a.lineHeight,t[e].box[2])),s.fillStyle=a.labelColor,s.fillText(`body ${100*t[e].score}%`,t[e].box[0]+2,0+t[e].box[1]+a.lineHeight,t[e].box[2]))),a.drawPoints&&t[e].keypoints)for(let n=0;n<t[e].keypoints.length;n++)t[e].keypoints[n].score&&0!==t[e].keypoints[n].score&&(s.fillStyle=a.useDepth&&t[e].keypoints[n].position[2]?`rgba(${127.5+2*(t[e].keypoints[n].position[2]||0)}, ${127.5-2*(t[e].keypoints[n].position[2]||0)}, 255, 0.5)`:a.color,ete(s,t[e].keypoints[n].position[0],t[e].keypoints[n].position[1],0,a));if(a.drawLabels&&t[e].keypoints){s.font=a.font;for(const n of t[e].keypoints)n.score&&0!==n.score&&(s.fillStyle=a.useDepth&&n.position[2]?`rgba(${127.5+2*n.position[2]}, ${127.5-2*n.position[2]}, 255, 0.5)`:a.color,s.fillText(`${n.part} ${Math.trunc(100*n.score)}%`,n.position[0]+4,n.position[1]+4))}if(a.drawPolygons&&t[e].keypoints&&t[e].annotations)for(const n of Object.values(t[e].annotations))for(const e of n)rte(s,e,a)}}}async function lte(e,t,n){const r=ul(Zee,n);if(!t||!e)return;const a=Jee(e);if(a){a.lineJoin="round",a.font=r.font;for(const e of t){if(r.drawBoxes&&(a.strokeStyle=r.color,a.fillStyle=r.color,tte(a,e.box[0],e.box[1],e.box[2],e.box[3],r),r.drawLabels&&(r.shadowColor&&""!==r.shadowColor&&(a.fillStyle=r.shadowColor,a.fillText(`hand:${Math.trunc(100*e.score)}%`,e.box[0]+3,1+e.box[1]+r.lineHeight,e.box[2])),a.fillStyle=r.labelColor,a.fillText(`hand:${Math.trunc(100*e.score)}%`,e.box[0]+2,0+e.box[1]+r.lineHeight,e.box[2])),a.stroke()),r.drawPoints&&e.keypoints&&e.keypoints.length>0)for(const t of e.keypoints)a.fillStyle=r.useDepth?`rgba(${127.5+2*(t[2]||0)}, ${127.5-2*(t[2]||0)}, 255, 0.5)`:r.color,ete(a,t[0],t[1],0,r);if(r.drawLabels&&e.annotations){const t=(e,t)=>{if(!e||0===e.length||!e[0])return;const n=e[e.length-1][2]||0;a.fillStyle=r.useDepth?`rgba(${127.5+2*n}, ${127.5-2*n}, 255, 0.5)`:r.color,a.fillText(t,e[e.length-1][0]+4,e[e.length-1][1]+4)};a.font=r.font,t(e.annotations.index,"index"),t(e.annotations.middle,"middle"),t(e.annotations.ring,"ring"),t(e.annotations.pinky,"pinky"),t(e.annotations.thumb,"thumb"),t(e.annotations.palm,"palm")}if(r.drawPolygons&&e.annotations){const t=e=>{if(e&&0!==e.length&&e[0])for(let t=0;t<e.length;t++){a.beginPath();const n=e[t][2]||0;a.strokeStyle=r.useDepth?`rgba(${127.5+t*n}, ${127.5-t*n}, 255, 0.5)`:r.color,a.moveTo(e[t>0?t-1:0][0],e[t>0?t-1:0][1]),a.lineTo(e[t][0],e[t][1]),a.stroke()}};a.lineWidth=r.lineWidth,t(e.annotations.index),t(e.annotations.middle),t(e.annotations.ring),t(e.annotations.pinky),t(e.annotations.thumb)}}}}async function ute(e,t,n){const r=ul(Zee,n);if(!t||!e)return;const a=Jee(e);if(a){a.lineJoin="round",a.font=r.font;for(const e of t)if(r.drawBoxes){if(a.strokeStyle=r.color,a.fillStyle=r.color,tte(a,e.box[0],e.box[1],e.box[2],e.box[3],r),r.drawLabels){const t=`${e.label} ${Math.round(100*e.score)}%`;r.shadowColor&&""!==r.shadowColor&&(a.fillStyle=r.shadowColor,a.fillText(t,e.box[0]+3,1+e.box[1]+r.lineHeight,e.box[2])),a.fillStyle=r.labelColor,a.fillText(t,e.box[0]+2,0+e.box[1]+r.lineHeight,e.box[2])}a.stroke()}}}async function dte(e,t,n){const r=ul(Zee,n);if(!t||!e)return;const a=Jee(e);if(a){a.lineJoin="round",a.font=r.font;for(let e=0;e<t.length;e++)if(r.drawBoxes){if(a.strokeStyle=r.color,a.fillStyle=r.color,tte(a,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],r),r.drawLabels){const n=`person #${e}`;r.shadowColor&&""!==r.shadowColor&&(a.fillStyle=r.shadowColor,a.fillText(n,t[e].box[0]+3,1+t[e].box[1]+r.lineHeight,t[e].box[2])),a.fillStyle=r.labelColor,a.fillText(n,t[e].box[0]+2,0+t[e].box[1]+r.lineHeight,t[e].box[2])}a.stroke()}}}async function hte(e,t){if(!e||!t)return;const n=Jee(t);n&&n.drawImage(e,0,0)}async function pte(e,t,n){if(!(t&&t.performance&&t&&e))return null;const r=ol(),a=ul(Zee,n),s=Promise.all([ite(e,t.face,a),ote(e,t.body,a),lte(e,t.hand,a),ute(e,t.object,a),ste(e,t.gesture,a)]);return Yee=d4.perfadd?Yee+Math.round(ol()-r):Math.round(ol()-r),t.performance.draw=Yee,s}var cte=.1;function fte(e,t,n){let r=!1,a=n.length-1;for(let s=0;s<n.length;a=s++)n[s].y>t!=n[a].y>t&&e<(n[a].x-n[s].x)*(t-n[s].y)/(n[a].y-n[s].y)+n[s].x&&(r=!r);return r}async function mte(e){if(!e.tensor)return e.tensor;if(!e.mesh||e.mesh.length<100)return e.tensor;const t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,r=await e.tensor.buffer();let a=[];for(const t of V4.silhouette)a.push({x:(e.mesh[t][0]-e.box[0])/e.box[2],y:(e.mesh[t][1]-e.box[1])/e.box[3]});a=a.map((e=>({x:e.x>.5?e.x+cte:e.x-cte,y:e.y>.5?e.y+cte:e.y-cte})));for(let e=0;e<t;e++)for(let s=0;s<n;s++)fte(e/t,s/t,a)||(r.set(.5*r.get(0,s,e,0),0,s,e,0),r.set(.5*r.get(0,s,e,1),0,s,e,1),r.set(.5*r.get(0,s,e,2),0,s,e,2));const s=r.toTensor();return ry(r),s}var gte=(e,t)=>{const n=e=>{const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return e[0]/=t,e[1]/=t,e[2]/=t,e},r=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]],a=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],s=e.meshRaw;if(!s||s.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};const i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,o=[s[10],s[152],s[234],s[454]].map((e=>[e[0]*t[0]/i,e[1]*t[1]/i,e[2]])),l=n(r(o[1],o[0]));let u=n(r(o[3],o[2]));const d=n(a(u,l));u=a(l,d);const h=[u[0],u[1],u[2],l[0],l[1],l[2],d[0],d[1],d[2]],p=(e=>{const[t,n,r,a,s,i,o,l,u]=e;let d,h,p;return a<1?a>-1?(p=Math.asin(a),h=Math.atan2(-o,t),d=Math.atan2(-i,s)):(p=-Math.PI/2,h=-Math.atan2(l,u),d=0):(p=Math.PI/2,h=Math.atan2(l,u),d=0),isNaN(d)&&(d=0),isNaN(h)&&(h=0),isNaN(p)&&(p=0),{pitch:2*-d,yaw:2*-h,roll:2*-p}})(h),c=478===s.length?(e=>{if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};const t=[0,-.1],n=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),r=n?e.mesh[473]:e.mesh[468],a=n?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],s=n?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],i=[(a[0]-r[0])/s[0]-t[0],1*(r[1]-a[1])/s[1]-t[1]];let o=Math.sqrt(i[0]*i[0]+i[1]*i[1]);var l,u;return o=Math.min(o,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(l=[0,0],u=i,(Math.atan2(l[1]-u[1],l[0]-u[0])+Math.PI/2)%Math.PI),strength:o}})(e):{bearing:0,strength:0};return{angle:p,matrix:h,gaze:c}},yte=async(e,t)=>{var n,r,a,s,i,o,l,u,d,h,p,c,f,m,g,y,A,b,x,v,w,k;let I,S,N,T,C,E,_,R,M=ol();const $=[];e.state="run:face";const F=await async function(e,t){var n,r,a,s,i,o,l,u,d;const h=((null==(n=t.face.detector)?void 0:n.skipTime)||0)>ol()-x8.timestamp,p=x8.skipped<((null==(r=t.face.detector)?void 0:r.skipFrames)||0);t.skipAllowed&&h&&p&&0!==x8.boxes.length?x8.skipped++:(x8.boxes=await async function(e,t){var n,r,a,s;if(!e||e.isDisposedInternal||4!==e.shape.length||e.shape[1]<1||e.shape[2]<1)return[];const i={};i.resized=$w.resizeBilinear(e,[m6,m6]),i.div=yy(i.resized,k4.tf127),i.normalized=bb(i.div,k4.tf05);const o=null==p6?void 0:p6.execute(i.normalized);if(Array.isArray(o)){const e=o.sort(((e,t)=>e.size-t.size));i.concat384=Yy([e[0],e[2]],2),i.concat512=Yy([e[1],e[3]],2),i.concat=Yy([i.concat512,i.concat384],1),i.batch=Xx(i.concat,0)}else i.batch=Xx(o);ry(o),i.boxes=function(e){const t={};t.boxStarts=Qy(e,[0,1],[-1,2]),t.centers=my(t.boxStarts,f6),t.boxSizes=Qy(e,[0,3],[-1,2]),t.boxSizesNormalized=yy(t.boxSizes,g6),t.centersNormalized=yy(t.centers,g6),t.halfBoxSize=yy(t.boxSizesNormalized,k4.tf2),t.starts=bb(t.centersNormalized,t.halfBoxSize),t.ends=my(t.centersNormalized,t.halfBoxSize),t.startNormalized=Ay(t.starts,g6),t.endNormalized=Ay(t.ends,g6);const n=fA([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach((e=>ry(t[e]))),n}(i.batch),i.logits=Qy(i.batch,[0,0],[-1,1]),i.sigmoid=Jy(i.logits),i.scores=Xx(i.sigmoid),i.nms=await $w.nonMaxSuppressionAsync(i.boxes,i.scores,(null==(n=t.face.detector)?void 0:n.maxDetected)||0,(null==(r=t.face.detector)?void 0:r.iouThreshold)||0,(null==(a=t.face.detector)?void 0:a.minConfidence)||0);const l=await i.nms.array(),u=[],d=await i.scores.data();for(let n=0;n<l.length;n++){const r=d[l[n]];if(r>((null==(s=t.face.detector)?void 0:s.minConfidence)||0)){const a={};a.bbox=Qy(i.boxes,[l[n],0],[1,-1]),a.slice=Qy(i.batch,[l[n],5],[1,-1]),a.squeeze=Xx(a.slice),a.landmarks=Ky(a.squeeze,[6,-1]);const s=await a.bbox.data(),o=(h={startPoint:[s[0],s[1]],endPoint:[s[2],s[3]],landmarks:await a.landmarks.array(),confidence:r},p=[(e.shape[2]||0)/m6,(e.shape[1]||0)/m6],{startPoint:[h.startPoint[0]*p[0],h.startPoint[1]*p[1]],endPoint:[h.endPoint[0]*p[0],h.endPoint[1]*p[1]],landmarks:h.landmarks,confidence:h.confidence}),d=e6(o,t.face.scale||1.2),c=t6(d);u.push(c),Object.keys(a).forEach((e=>ry(a[e])))}}var h,p;return Object.keys(i).forEach((e=>ry(i[e]))),u}(e,t),x8.timestamp=ol(),x8.skipped=0);const c=[],f=[];let m=0;for(let n=0;n<x8.boxes.length;n++){const r=x8.boxes[n];let h,p=0;const g={id:m++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([p,h,g.tensor]=h6(null==(a=t.face.detector)?void 0:a.rotation,r,e,(null==(s=t.face.mesh)?void 0:s.enabled)?w8:y6()),null==(i=null==t?void 0:t.filter)?void 0:i.equalization){const e=await e4(g.tensor);ry(g.tensor),g.tensor=e}if(g.boxScore=Math.round(100*r.confidence)/100,null==(o=t.face.mesh)?void 0:o.enabled)if(v8){const[n,a,s]=v8.execute(g.tensor),i=await a.data();g.faceScore=Math.round(100*i[0])/100;const o=Ky(s,[-1,3]);let d=await o.array();if(ry([s,o,a,n]),g.faceScore<((null==(l=t.face.detector)?void 0:l.minConfidence)||1))r.confidence=g.faceScore;else{(null==(u=t.face.iris)?void 0:u.enabled)&&(d=await A8(d,g.tensor,t,w8)),g.mesh=d6(d,r,p,h,w8),g.meshRaw=g.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/w8]));for(const e of Object.keys(V4))g.annotations[e]=V4[e].map((e=>g.mesh[e]));g.score=g.faceScore;const n={...c6(g.mesh,r),confidence:r.confidence,landmarks:r.landmarks};g.box=Y4(n,e),g.boxRaw=J4(n,e),f.push(n)}}else t.debug&&il("face mesh detection requested, but model is not loaded");else{g.box=Y4(r,e),g.boxRaw=J4(r,e),g.score=g.boxScore,g.mesh=r.landmarks.map((e=>[(r.startPoint[0]+r.endPoint[0])/2+(r.endPoint[0]+r.startPoint[0])*e[0]/y6(),(r.startPoint[1]+r.endPoint[1])/2+(r.endPoint[1]+r.startPoint[1])*e[1]/y6()])),g.meshRaw=g.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/w8]));for(const e of Object.keys(j4))g.annotations[e]=[g.mesh[j4[e]]]}g.score>((null==(d=t.face.detector)?void 0:d.minConfidence)||1)?c.push(g):ry(g.tensor)}return x8.boxes=f,c}(t,e.config);if(e.performance.face=d4.perfadd?(e.performance.face||0)+Math.trunc(ol()-M):Math.trunc(ol()-M),!t.shape||4!==t.shape.length)return[];if(!F)return[];for(let O=0;O<F.length;O++){if(e.analyze("Get Face"),!F[O].tensor||F[O].tensor.isDisposedInternal){il("Face object is disposed:",F[O].tensor);continue}if(null==(n=e.config.face.detector)?void 0:n.mask){const e=await mte(F[O]);ry(F[O].tensor),F[O].tensor=e}const z=F[O].mesh&&F[O].mesh.length>200?gte(F[O],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?T=(null==(r=e.config.face.emotion)?void 0:r.enabled)?r8(F[O].tensor||Rf([]),e.config,O,F.length):[]:(e.state="run:emotion",M=ol(),T=(null==(a=e.config.face.emotion)?void 0:a.enabled)?await r8(F[O].tensor||Rf([]),e.config,O,F.length):[],e.performance.emotion=d4.perfadd?(e.performance.emotion||0)+Math.trunc(ol()-M):Math.trunc(ol()-M)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?E=(null==(s=e.config.face.antispoof)?void 0:s.enabled)?U4(F[O].tensor||Rf([]),e.config,O,F.length):0:(e.state="run:antispoof",M=ol(),E=(null==(i=e.config.face.antispoof)?void 0:i.enabled)?await U4(F[O].tensor||Rf([]),e.config,O,F.length):0,e.performance.antispoof=d4.perfadd?(e.performance.antispoof||0)+Math.trunc(ol()-M):Math.trunc(ol()-M)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?_=(null==(o=e.config.face.liveness)?void 0:o.enabled)?Y9(F[O].tensor||Rf([]),e.config,O,F.length):0:(e.state="run:liveness",M=ol(),_=(null==(l=e.config.face.liveness)?void 0:l.enabled)?await Y9(F[O].tensor||Rf([]),e.config,O,F.length):0,e.performance.liveness=d4.perfadd?(e.performance.antispoof||0)+Math.trunc(ol()-M):Math.trunc(ol()-M)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?S=(null==(u=e.config.face.gear)?void 0:u.enabled)?v4(F[O].tensor||Rf([]),e.config,O,F.length):null:(e.state="run:gear",M=ol(),S=(null==(d=e.config.face.gear)?void 0:d.enabled)?await v4(F[O].tensor||Rf([]),e.config,O,F.length):null,e.performance.gear=Math.trunc(ol()-M)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(I=(null==(h=e.config.face.ssrnet)?void 0:h.enabled)?_4(F[O].tensor||Rf([]),e.config,O,F.length):null,N=(null==(p=e.config.face.ssrnet)?void 0:p.enabled)?D4(F[O].tensor||Rf([]),e.config,O,F.length):null):(e.state="run:ssrnet",M=ol(),I=(null==(c=e.config.face.ssrnet)?void 0:c.enabled)?await _4(F[O].tensor||Rf([]),e.config,O,F.length):null,N=(null==(f=e.config.face.ssrnet)?void 0:f.enabled)?await D4(F[O].tensor||Rf([]),e.config,O,F.length):null,e.performance.ssrnet=Math.trunc(ol()-M)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?C=(null==(m=e.config.face.mobilefacenet)?void 0:m.enabled)?u8(F[O].tensor||Rf([]),e.config,O,F.length):null:(e.state="run:mobilefacenet",M=ol(),C=(null==(g=e.config.face.mobilefacenet)?void 0:g.enabled)?await u8(F[O].tensor||Rf([]),e.config,O,F.length):null,e.performance.mobilefacenet=Math.trunc(ol()-M)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?R=(null==(y=e.config.face.description)?void 0:y.enabled)?_8(F[O].tensor||Rf([]),e.config,O,F.length):null:(e.state="run:description",M=ol(),R=(null==(A=e.config.face.description)?void 0:A.enabled)?await _8(F[O].tensor||Rf([]),e.config,O,F.length):null,e.performance.description=d4.perfadd?(e.performance.description||0)+Math.trunc(ol()-M):Math.trunc(ol()-M)),e.analyze("End Description:"),e.config.async&&([I,N,T,C,R,S,E,_]=await Promise.all([I,N,T,C,R,S,E,_])),e.analyze("Finish Face:"),(null==(b=e.config.face.ssrnet)?void 0:b.enabled)&&I&&N&&(R={...R,age:I.age,gender:N.gender,genderScore:N.genderScore}),(null==(x=e.config.face.gear)?void 0:x.enabled)&&S&&(R={...R,age:S.age,gender:S.gender,genderScore:S.genderScore,race:S.race}),(null==(v=e.config.face.mobilefacenet)?void 0:v.enabled)&&C&&(R.descriptor=C),null==(w=e.config.face.iris)||w.enabled;const D=F[O].annotations&&F[O].annotations.leftEyeIris&&F[O].annotations.leftEyeIris[0]&&F[O].annotations.rightEyeIris&&F[O].annotations.rightEyeIris[0]&&F[O].annotations.leftEyeIris.length>0&&F[O].annotations.rightEyeIris.length>0&&null!==F[O].annotations.leftEyeIris[0]&&null!==F[O].annotations.rightEyeIris[0]?Math.max(Math.abs(F[O].annotations.leftEyeIris[3][0]-F[O].annotations.leftEyeIris[1][0]),Math.abs(F[O].annotations.rightEyeIris[4][1]-F[O].annotations.rightEyeIris[2][1]))/t.shape[2]:0,P=(null==(k=e.config.face.detector)?void 0:k.return)?Xx(F[O].tensor):null;ry(F[O].tensor),F[O].tensor&&delete F[O].tensor;const L={...F[O],id:O};(null==R?void 0:R.age)&&(L.age=R.age),(null==R?void 0:R.gender)&&(L.gender=R.gender),(null==R?void 0:R.genderScore)&&(L.genderScore=null==R?void 0:R.genderScore),(null==R?void 0:R.descriptor)&&(L.embedding=null==R?void 0:R.descriptor),(null==R?void 0:R.race)&&(L.race=null==R?void 0:R.race),T&&(L.emotion=T),E&&(L.real=E),_&&(L.live=_),D&&0!==D&&(L.iris=Math.trunc(500/D/11.7)/100),z&&(L.rotation=z),P&&(L.tensor=P),$.push(L),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),$},Ate=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const r=e[n].keypoints.find((e=>"leftWrist"===e.part)),a=e[n].keypoints.find((e=>"rightWrist"===e.part)),s=e[n].keypoints.find((e=>"nose"===e.part));s&&r&&a&&r.position[1]<s.position[1]&&a.position[1]<s.position[1]?t.push({body:n,gesture:"i give up"}):s&&r&&r.position[1]<s.position[1]?t.push({body:n,gesture:"raise left hand"}):s&&a&&a.position[1]<s.position[1]&&t.push({body:n,gesture:"raise right hand"});const i=e[n].keypoints.find((e=>"leftShoulder"===e.part)),o=e[n].keypoints.find((e=>"rightShoulder"===e.part));i&&o&&Math.abs(i.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:n,gesture:"leaning "+(i.position[1]>o.position[1]?"left":"right")})}return t},bte=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){const r=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),a=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(r/a)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:"facing "+(r<0?"left":"right")}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});const s=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));s>10&&t.push({face:n,gesture:`mouth ${Math.trunc(s)}% open`});const i=e[n].mesh[152][2]||0;Math.abs(i)>10&&t.push({face:n,gesture:"head "+(i<0?"up":"down")})}return t},xte=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){if(!(e[n].annotations&&e[n].annotations.leftEyeIris&&e[n].annotations.leftEyeIris[0]&&e[n].annotations.rightEyeIris&&e[n].annotations.rightEyeIris[0]))continue;const r=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],a=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],s=Math.abs(r*a),i=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],o=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(i*o);let u=!1;Math.abs(s-l)/Math.max(s,l)<.25&&(u=!0,t.push({iris:n,gesture:"facing center"}));const d=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],h=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(d>.06||h>.06)&&(u=!1),d>h?d>.05&&t.push({iris:n,gesture:"looking right"}):h>.05&&t.push({iris:n,gesture:"looking left"});const p=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],c=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(c<.01||p<.01||c>.022||p>.022)&&(u=!1),(c<.01||p<.01)&&t.push({iris:n,gesture:"looking down"}),(c>.022||p>.022)&&t.push({iris:n,gesture:"looking up"}),u&&t.push({iris:n,gesture:"looking center"})}return t},vte=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const r=[];if(e[n].annotations)for(const[t,a]of Object.entries(e[n].annotations))"palmBase"!==t&&Array.isArray(a)&&a[0]&&r.push({name:t.toLowerCase(),position:a[0]});if(r&&r.length>0){const e=r.reduce(((e,t)=>(e.position[2]||0)<(t.position[2]||0)?e:t));t.push({hand:n,gesture:`${e.name} forward`});const a=r.reduce(((e,t)=>e.position[1]<t.position[1]?e:t));t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){const r=C9(e[n].keypoints);for(const e of r)t.push({hand:n,gesture:e.name})}}return t},wte={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},kte=0;function Ite(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{order:2,multiplier:25},r=0;for(let a=0;a<e.length;a++){const s=n.order&&2!==n.order?Math.abs(e[a]-t[a]):e[a]-t[a];r+=n.order&&2!==n.order?s**n.order:s*s}return(n.multiplier||20)*r}el({},{distance:()=>Ite,match:()=>Tte,similarity:()=>Nte});var Ste=(e,t,n,r)=>{if(0===e)return 1;const a=(1-(2===t?Math.sqrt(e):e**(1/t))/100-n)/(r-n);return Math.max(Math.min(a,1),0)};function Nte(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{order:2,multiplier:25,min:.2,max:.8};const r=Ite(e,t,n);return Ste(r,n.order||2,n.min||0,n.max||1)}function Tte(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{order:2,multiplier:25,threshold:0,min:.2,max:.8};if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||0===t.length||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let r=Number.MAX_SAFE_INTEGER,a=-1;for(let s=0;s<t.length;s++){const i=Ite(e,t[s],n);if(i<r&&(r=i,a=s),r<(n.threshold||0))break}const s=Ste(r,n.order||2,n.min||0,n.max||1);return{index:a,distance:r,similarity:s}}var Cte,Ete,_te,Rte,Mte="\n/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA\nAAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu\nbmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob\nIxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo\nKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E\nAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE\nEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH\nSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1\ntre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB\nAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET\nIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla\nY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG\nx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML\nXp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF\nPUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/\nAJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z\n5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9\nzZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO\ntHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6\n8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W\nwA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk\nEtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6\nGhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT\nA7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep\nrBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb\nLCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ\nih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K\nKAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l\npBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x\nUqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4\nHaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr\nxL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS\nNO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD\n1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX\n+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3\nGBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K\nq4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0\nnhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm\nuic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH\nArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV\nwF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8\n87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P\nFQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD\nYNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv\nJmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ\nQmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el\nUJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681\nly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly\nCK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc\nUDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF\n63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x\nXY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2\nZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk\nXb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK\ncBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef\neNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4\n/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5\nrl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru\n/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A\nzviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO\nI4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1\njfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ\nGRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG\ncZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb\nWmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis\nZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH\nckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi\nlbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO\nxuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK\nJtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX\nPaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c\nW0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t\nC6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk\n4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn\nxHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW\nvHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi\nqr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV\nhamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F\nj4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6\nwqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm\noy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ\nk7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg\nnQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP\n1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1\nH1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ\n1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx\nzSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt\nfFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp\nOxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj\nVtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy\nrFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe\n5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D\nd/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69\nMlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ\nFbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ\nMA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP\nByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn\n0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU\nyOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is\npNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz\nTSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu\nuCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem\ngGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk\nHvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy\ns9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu\nm6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb\n0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz\n9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN\nDNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n\nR6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk\nnmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu\n6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd\n9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb\nSms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S\nMSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz\nFEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8\nVSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx\nY0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ\nmupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+\n5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh\n05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd\nua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ\n5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR\nMqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8\n1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4\nB9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag\nBc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA\n3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn\n3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx\n1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU\ntzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6\nf3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA\nbvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ\nzyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup\n6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM\n350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0\n/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a\nYfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ\nagBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO\nmAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl\nmOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR\nnqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo\nEPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt\n4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ\nScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p\niMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj\nPQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l\nc6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1\n8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3\nylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY\neuPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==",$te="\n/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk\nJyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF\nRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA\nAhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA\nAQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA\nAAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA\nAhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj\n+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt\nFh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR\nPLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl\nmZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp\n+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa\nzhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D\nh1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2\nex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67\nd4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y\nRv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP\nLd3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC\nvy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi\neSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/\nMx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+\nr3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO\nO0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s\ntfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN\nTmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc\n0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj\nq83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w\n+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s\nd8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t\ncI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4\nYibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe\nbzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi\nKxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6\nrNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ\n9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf\nJvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V\nbxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q\nVbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM\nlorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/\n/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme\nE4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv\nfauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6\njkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN\n+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk\nRvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK\ncGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop\nyW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn\nE8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX\n12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW\niI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS\nRWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf\n0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx\nDS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL\nG8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK\nxC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ\na9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4\nZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6\ntvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+\nfJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE\nerk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR\nMd5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9\nlcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD\nj8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV\n5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt\nCu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/\n+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c\nvUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p\njrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0\n77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP\nSel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8\n5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe\nY0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R\nHwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV\nrWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU\nz7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8\nto6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X\ny8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt\nstcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/\nw9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT\nDpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l\nXV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t\nydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS\n34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX\ne09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn\n26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf\n3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q\n6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P\nNbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO\nyZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN\n3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8\n2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h\ndqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx\nkr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t\nDHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb\neFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc\n1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka\nc258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE\nxEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu\ns5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK\n0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9\ndM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt\nPXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T\nMd/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T\nadq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b\nSVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt\npdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm\nvfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr\nEejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N\nvwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh\nZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I\ntkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW\nd43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe\nN4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218\n8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG\nPNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY\nV1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw\nw18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT\nEx5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1\naxqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/\ntDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I\nmbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe\nXRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1\nizjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2\ncrFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4\nOadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2\nr8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx\nzc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz\n+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v\nMevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu\nryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095\nYZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE\n9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8\nmNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O\nuSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O\nfft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6\nOlty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT\nuTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3\n6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1\nMb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF\nfeH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq\nxVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v\ned7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ\nmtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz\nmWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP\nB39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0\n5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1\nmkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt\nmxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO\n1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq\nZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q\nky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7\nROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK\nGEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i\ntMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T\n+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+\nO8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO\nesd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es\nvPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz\nXV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1\n+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY\n36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL\nq555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY\n3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz\np7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr\n1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV\nxUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt\npCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS\nfP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH\nmMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z\n1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+\nn3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d\nMRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df\nzXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl\nJ2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs\nzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH\nDpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ\ndHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR\ntER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j\nadmFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC\nb2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X\nqdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh\nydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O\n8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L\nT7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0\nZa1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr\nvNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer\nrWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL\noNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq\nj/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh\nodZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8\n8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1\nlNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+\noza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL\nknU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK\nEtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N\nmtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm\n9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N\nIpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W\nMYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2\n+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql\no+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37\nO99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE\nTE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1\nL7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4\nizsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt\n1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb\nV5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum\nL37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12\nCvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE\nebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo\nGvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu\nL8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh\n5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3\n6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9\nXO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM\nfeKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj\nSZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF\nXaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr\n79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h\nyeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT\nOC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223\n2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt\nadohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y\ncnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX\nDpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p\n7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso\nS24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l\nbPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe\nvVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG\nH6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7\nx3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz\n5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY\nq+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn\nvLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2\nIjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK\nz0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ\nYYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON\nZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW\nekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf\ncjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c\nbiuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO\nCkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw\ny1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi\nQXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E\nbL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r\ntv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t\nLRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP\nRqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm\ns7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el\nXX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1\nvK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq\nqrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v\nVYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0\nZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q\nmT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm\n6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG\nf63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo\ndPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22\ngtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M\nMoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb\nc2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX\n6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn\n1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK\nfOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ\nEqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u\n7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT\nqPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa\nS2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf\nLp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU\nIiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O\n8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c\nvU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx\n5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V\nKTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm\n2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu\nj8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB\nTTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9\nRUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL\nCWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA\nAAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8\ncTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj\nqKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF\n0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK\nZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK\n66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu\nXT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9\nXOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN\nM2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv\nVrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK\n7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI\n3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m\nXY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m\n1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A\nJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC\nEgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9\n8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL\nOrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H\nM+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA\nTsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8\nelpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp\nBjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS\nCRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r\nrcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY\njbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW\nUsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB\nKUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb\nSz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL\n+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v\nT471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM\nsfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj\nFontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl\n5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q\n7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv\n6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa\n0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/\nAOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM\nd8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5\n6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP\nbFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu\nLJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy\nwt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX\n0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK\n3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn\nKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0\nvobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t\nzya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps\nuOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi\nFdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2\nO3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z\naK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz\n0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb\nT/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l\nqMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t\ntrJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn\nmvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa\neq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe\nPwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of\nTdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O\n1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG\nf/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi\n0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY\n5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc\nV2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L\n/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM\nt/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd\nVknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD\nKLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R\nfwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3\nVxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ\nDJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ\n3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv\nx7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD\nweqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI\n6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew\nPnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk\nj3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm\nOqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/\nAKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez\nN9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ\n92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp\n+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue\nV9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv\navHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0\nvQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP\n8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt\nn1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw\nnUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3\n7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P\n0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U\nx8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG\n0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L\nfaQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ\nQKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA\nBAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A\ntLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv\n9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr\njn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm\nb7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB\nACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk\ndEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1\nrMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+\nx+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA\nAAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr\nYvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4\n5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V\nkK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg\nBIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA\nAAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g\nWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx\nOEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2\nH/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF\n+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V\nh6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA\nEgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu\nZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml\nHMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl\nn0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN\n3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi\n/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00\n+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC\nUACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2\nM2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp\n5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn\nN1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS\nOjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL\n/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo\nstLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3\nGyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA\nAAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4\nqmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy\nWEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a\nfJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI\nrTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2\nrz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc\n3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3\nTur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA\nAAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx\nskA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F\no7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx\nNO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h\n2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te\npSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7\ncvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7\nmZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA\nAAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA\nhGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J\nqx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI\nXRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy\nRHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX\nqNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX\nkaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P\nya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC\nExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA\nlAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA\nAAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o\nb9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP\ny6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae\nkzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu\n9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ\nk7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1\n8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp\nDXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh\nnyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ\nAAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA\nAAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO\nyvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5\nPM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii\nIpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r\nO3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE\nyTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX\n6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2\nJgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS\nAAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA\nAAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx\nWa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI\n6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5\nK2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7\nVv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id\nPW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ\n2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4\neF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7\npiVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR\nACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ\nJQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i\nUiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61\nrZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq\nZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2\nf0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO\nIjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts\nbAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA\nAAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA\nBAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2\nSbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T\nlBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/\n2Q==";Cte=new WeakMap,Ete=new WeakMap,_te=new WeakMap,Rte=new WeakMap;var Fte=function(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{l(r.next(e))}catch(e){s(e)}}function o(e){try{l(r.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((r=r.apply(e,t||[])).next())}))};class Ote{constructor({baseUrl:e,detectionTypes:t}){this.detectionInProgress=!1,this.config={backend:"humangl",async:!0,warmup:"none",cacheModels:!0,cacheSensitivity:0,debug:!1,deallocate:!0,filter:{enabled:!1},face:{enabled:!1,detector:{enabled:!1,rotation:!1,modelPath:"blazeface-front.json",maxDetected:20},mesh:{enabled:!1},iris:{enabled:!1},emotion:{enabled:!1,modelPath:"emotion.json"},description:{enabled:!1}},hand:{enabled:!1},gesture:{enabled:!1},body:{enabled:!1},segmentation:{enabled:!1}},this.faceDetectionTypes=t,this.baseUrl=e,this.init()}init(){var e,n;return Fte(this,void 0,void 0,(function*(){if(!this.human){this.config.modelBasePath=this.baseUrl,self.OffscreenCanvas||(this.config.backend="wasm",this.config.wasmPath=this.baseUrl,function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Ko)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)Ho=e;else{qo=e;const t=Go.filter((e=>null==qo[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Xo=t}(this.baseUrl)),this.faceDetectionTypes.length>0&&this.config.face&&(this.config.face.enabled=!0),this.faceDetectionTypes.includes(t)&&(null===(e=this.config.face)||void 0===e?void 0:e.detector)&&(this.config.face.detector.enabled=!0),this.faceDetectionTypes.includes(r)&&(null===(n=this.config.face)||void 0===n?void 0:n.emotion)&&(this.config.face.emotion.enabled=!0);const a=new class{constructor(e){var t,n=this;tl(this,"version"),tl(this,"config"),tl(this,"result"),tl(this,"state"),tl(this,"process"),tl(this,"tf"),tl(this,"env"),tl(this,"draw"),tl(this,"models"),tl(this,"events"),tl(this,"faceTriangulation"),tl(this,"faceUVMap"),tl(this,"performance"),al(this,Cte,void 0),al(this,Ete,void 0),al(this,_te,void 0),tl(this,"gl"),tl(this,"analyze",(function(){if(!rl(n,Ete))return;const e=n.tf.engine().state.numTensors,t=rl(n,Cte);sl(n,Cte,e);const r=e-t;for(var a=arguments.length,s=new Array(a),i=0;i<a;i++)s[i]=arguments[i];0!==r&&il(...s,r)})),al(this,Rte,(e=>{if(!rl(this,_te))return null;if(!e)return"input is not defined";if(this.env.node&&!(e instanceof jc))return"input must be a tensor";try{this.tf.getBackend()}catch(e){return"backend not loaded"}return null})),tl(this,"similarity",Nte),tl(this,"distance",Ite),tl(this,"match",Tte),tl(this,"emit",(e=>{var t;this.events&&this.events.dispatchEvent&&(null==(t=this.events)||t.dispatchEvent(new Event(e)))})),this.env=d4,dl.wasmPath=Y7["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${qg}/dist/`,dl.modelBasePath=d4.browser?"../models/":"file://models/",dl.backend=d4.browser?"humangl":"tensorflow",this.version=f4,Object.defineProperty(this,"version",{value:f4}),this.config=JSON.parse(JSON.stringify(dl)),Object.seal(this.config),this.config.cacheModels="undefined"!=typeof indexedDB,e&&(this.config=ul(this.config,e)),t=this.config,h4.cacheModels=t.cacheModels,h4.verbose=t.debug,h4.modelBasePath=t.modelBasePath,this.tf=hl,this.state="idle",sl(this,Cte,0),sl(this,Ete,!1),sl(this,_te,!1),this.performance={},this.events="undefined"!=typeof EventTarget?new EventTarget:void 0,this.models=new Bee,this.draw={options:Zee,canvas:(e,t)=>hte(e,t),face:(e,t,n)=>ite(e,t,n),body:(e,t,n)=>ote(e,t,n),hand:(e,t,n)=>lte(e,t,n),gesture:(e,t,n)=>ste(e,t,n),object:(e,t,n)=>ute(e,t,n),person:(e,t,n)=>dte(e,t,n),all:(e,t,n)=>pte(e,t,n)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=k8,this.faceUVMap=I8,this.gl=jee,this.emit("create")}reset(){const e=this.config.backend;this.config=JSON.parse(JSON.stringify(dl)),this.config.backend=e}validate(e){return ll(dl,e||this.config)}now(){return ol()}image(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return u4(e,this.config,t)}async segmentation(e,t){return async function(e,t,n){var r,a;if(Lee)return{data:[],canvas:null,alpha:null};Lee=!0,_ee||await Wee(n);const s=await u4(e,n),i=(null==(r=s.tensor)?void 0:r.shape[2])||0,o=(null==(a=s.tensor)?void 0:a.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};const l={};l.resize=$w.resizeBilinear(s.tensor,[_ee.inputs[0].shape?_ee.inputs[0].shape[1]:0,_ee.inputs[0].shape?_ee.inputs[0].shape[2]:0],!1),ry(s.tensor),l.norm=yy(l.resize,k4.tf255),l.res=_ee.execute(l.norm),l.squeeze=Xx(l.res,0),2===l.squeeze.shape[2]?(l.softmax=Bx(l.squeeze),[l.bg,l.fg]=uv(l.softmax,2),l.expand=UA(l.fg,2),l.pad=UA(l.expand,0),l.crop=$w.cropAndResize(l.pad,[[0,0,.5,.5]],[0],[i,o]),l.data=Xx(l.crop,0)):l.data=$w.resizeBilinear(l.squeeze,[o,i]);const u=Array.from(await l.data.data());if(d4.node&&!d4.Canvas&&"undefined"==typeof ImageData)return n.debug&&il("canvas support missing"),Object.keys(l).forEach((e=>ry(l[e]))),{data:u,canvas:null,alpha:null};const d=o4(i,o);eg&&await eg.toPixels(l.data,d);const h=d.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(h.filter=`blur(${n.segmentation.blur}px)`);const p=h.getImageData(0,0,i,o),c=o4(i,o),f=c.getContext("2d");s.canvas&&f.drawImage(s.canvas,0,0),f.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(f.filter=`blur(${n.segmentation.blur}px)`),f.drawImage(d,0,0),f.globalCompositeOperation="source-over",f.filter="none";const m=f.getImageData(0,0,i,o);for(let e=0;e<i*o;e++)m.data[4*e+3]=p.data[4*e+0];f.putImageData(m,0,0);let g=null;if(t&&c){g=o4(i,o);const e=await u4(t,n);ry(e.tensor);const r=g.getContext("2d");r.drawImage(e.canvas,0,0,g.width,g.height),r.drawImage(c,0,0)}return Object.keys(l).forEach((e=>ry(l[e]))),Lee=!1,{data:u,canvas:c,alpha:d}}(e,t,this.config)}enhance(e){return E8(e)}compare(e,t){return async function(e,t,n){const r={};if(!t||!n||4!==t.shape.length||t.shape.length!==n.shape.length)return e.debug||il("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(1!==t.shape[0]||1!==n.shape[0]||3!==t.shape[3]||3!==n.shape[3])return e.debug||il("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;r.input1=Sm(t),r.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?$w.resizeBilinear(n,[t.shape[1],t.shape[2]]):Sm(n),r.diff=bb(r.input1,r.input2),r.squared=Ay(r.diff,r.diff),r.sum=xb(r.squared);const a=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return ry([r.input1,r.input2,r.diff,r.squared,r.sum]),a}(this.config,e,t)}async init(){await Kee(this,!0),await this.tf.ready()}async load(e){this.state="load";const t=ol(),n=Object.values(this.models).filter((e=>e)).length;e&&(this.config=ul(this.config,e)),this.env.initial&&(this.config.debug&&il(`version: ${this.version}`),this.config.debug&&il(`tfjs version: ${this.tf.version["tfjs-core"]}`),await Kee(this)||il("error: backend check failed"),await oy(),this.env.browser&&(this.config.debug&&il("configuration:",this.config),this.config.debug&&il("environment:",this.env),this.config.debug&&il("tf flags:",this.tf.ENV.flags))),await Vee(this),this.env.initial&&this.config.debug&&il("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter((e=>e)).length!==n&&(await Gee(this),this.emit("load"));const r=Math.trunc(ol()-t);r>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+r:r)}next(){return function(e,t){var n,r,a,s,i,o,l,u,d,h,p,c,f,m,g,y,A,b,x,v,w,k,I,S,N,T,C;const E=ol();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};const _=Date.now()-e.timestamp,R=_<1e3?8-Math.log(_+1):1;if(e.canvas&&(wte.canvas=e.canvas),e.error&&(wte.error=e.error),wte.body&&e.body.length===wte.body.length)for(let l=0;l<e.body.length;l++){const u=e.body[l].box.map(((e,t)=>((R-1)*wte.body[l].box[t]+e)/R)),d=e.body[l].boxRaw.map(((e,t)=>((R-1)*wte.body[l].boxRaw[t]+e)/R)),h=e.body[l].keypoints.map(((e,t)=>{var n,r,a,s,i,o,u,d,h;return{score:e.score,part:e.part,position:[wte.body[l].keypoints[t]?((R-1)*(wte.body[l].keypoints[t].position[0]||0)+(e.position[0]||0))/R:e.position[0],wte.body[l].keypoints[t]?((R-1)*(wte.body[l].keypoints[t].position[1]||0)+(e.position[1]||0))/R:e.position[1],wte.body[l].keypoints[t]?((R-1)*(wte.body[l].keypoints[t].position[2]||0)+(e.position[2]||0))/R:e.position[2]],positionRaw:[wte.body[l].keypoints[t]?((R-1)*(wte.body[l].keypoints[t].positionRaw[0]||0)+(e.positionRaw[0]||0))/R:e.positionRaw[0],wte.body[l].keypoints[t]?((R-1)*(wte.body[l].keypoints[t].positionRaw[1]||0)+(e.positionRaw[1]||0))/R:e.positionRaw[1],wte.body[l].keypoints[t]?((R-1)*(wte.body[l].keypoints[t].positionRaw[2]||0)+(e.positionRaw[2]||0))/R:e.positionRaw[2]],distance:[wte.body[l].keypoints[t]?((R-1)*((null==(n=wte.body[l].keypoints[t].distance)?void 0:n[0])||0)+((null==(r=e.distance)?void 0:r[0])||0))/R:null==(a=e.distance)?void 0:a[0],wte.body[l].keypoints[t]?((R-1)*((null==(s=wte.body[l].keypoints[t].distance)?void 0:s[1])||0)+((null==(i=e.distance)?void 0:i[1])||0))/R:null==(o=e.distance)?void 0:o[1],wte.body[l].keypoints[t]?((R-1)*((null==(u=wte.body[l].keypoints[t].distance)?void 0:u[2])||0)+((null==(d=e.distance)?void 0:d[2])||0))/R:null==(h=e.distance)?void 0:h[2]]}})),p={};let c={connected:{}};(null==(r=null==(n=t.body)?void 0:n.modelPath)?void 0:r.includes("efficientpose"))?c=B6:(null==(s=null==(a=t.body)?void 0:a.modelPath)?void 0:s.includes("blazepose"))?c=A6:(null==(o=null==(i=t.body)?void 0:i.modelPath)?void 0:o.includes("movenet"))&&(c=J9);for(const[e,t]of Object.entries(c.connected)){const n=[];for(let e=0;e<t.length-1;e++){const r=h.find((n=>n.part===t[e])),a=h.find((n=>n.part===t[e+1]));r&&a&&n.push([r.position,a.position])}p[e]=n}wte.body[l]={...e.body[l],box:u,boxRaw:d,keypoints:h,annotations:p}}else wte.body=JSON.parse(JSON.stringify(e.body));if(wte.hand&&e.hand.length===wte.hand.length)for(let t=0;t<e.hand.length;t++){const n=e.hand[t].box.map(((e,n)=>((R-1)*wte.hand[t].box[n]+e)/R)),r=e.hand[t].boxRaw.map(((e,n)=>((R-1)*wte.hand[t].boxRaw[n]+e)/R));wte.hand[t].keypoints.length!==e.hand[t].keypoints.length&&(wte.hand[t].keypoints=e.hand[t].keypoints);const a=e.hand[t].keypoints&&e.hand[t].keypoints.length>0?e.hand[t].keypoints.map(((e,n)=>e.map(((e,r)=>((R-1)*(wte.hand[t].keypoints[n][r]||1)+(e||0))/R)))):[];let s={};if(Object.keys(wte.hand[t].annotations).length!==Object.keys(e.hand[t].annotations).length)wte.hand[t].annotations=e.hand[t].annotations,s=wte.hand[t].annotations;else if(e.hand[t].annotations)for(const n of Object.keys(e.hand[t].annotations))s[n]=e.hand[t].annotations[n]&&e.hand[t].annotations[n][0]?e.hand[t].annotations[n].map(((e,r)=>e.map(((e,a)=>((R-1)*wte.hand[t].annotations[n][r][a]+e)/R)))):null;wte.hand[t]={...e.hand[t],box:n,boxRaw:r,keypoints:a,annotations:s}}else wte.hand=JSON.parse(JSON.stringify(e.hand));if(wte.face&&e.face.length===wte.face.length)for(let t=0;t<e.face.length;t++){const n=e.face[t].box.map(((e,n)=>((R-1)*wte.face[t].box[n]+e)/R)),r=e.face[t].boxRaw.map(((e,n)=>((R-1)*wte.face[t].boxRaw[n]+e)/R));if(e.face[t].rotation){const a={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};a.matrix=null==(l=e.face[t].rotation)?void 0:l.matrix,a.angle={roll:((R-1)*((null==(d=null==(u=wte.face[t].rotation)?void 0:u.angle)?void 0:d.roll)||0)+((null==(p=null==(h=e.face[t].rotation)?void 0:h.angle)?void 0:p.roll)||0))/R,yaw:((R-1)*((null==(f=null==(c=wte.face[t].rotation)?void 0:c.angle)?void 0:f.yaw)||0)+((null==(g=null==(m=e.face[t].rotation)?void 0:m.angle)?void 0:g.yaw)||0))/R,pitch:((R-1)*((null==(A=null==(y=wte.face[t].rotation)?void 0:y.angle)?void 0:A.pitch)||0)+((null==(x=null==(b=e.face[t].rotation)?void 0:b.angle)?void 0:x.pitch)||0))/R},a.gaze={bearing:((R-1)*((null==(w=null==(v=wte.face[t].rotation)?void 0:v.gaze)?void 0:w.bearing)||0)+((null==(I=null==(k=e.face[t].rotation)?void 0:k.gaze)?void 0:I.bearing)||0))/R,strength:((R-1)*((null==(N=null==(S=wte.face[t].rotation)?void 0:S.gaze)?void 0:N.strength)||0)+((null==(C=null==(T=e.face[t].rotation)?void 0:T.gaze)?void 0:C.strength)||0))/R},wte.face[t]={...e.face[t],rotation:a,box:n,boxRaw:r}}wte.face[t]={...e.face[t],box:n,boxRaw:r}}else wte.face=JSON.parse(JSON.stringify(e.face));if(wte.object&&e.object.length===wte.object.length)for(let t=0;t<e.object.length;t++){const n=e.object[t].box.map(((e,n)=>((R-1)*wte.object[t].box[n]+e)/R)),r=e.object[t].boxRaw.map(((e,n)=>((R-1)*wte.object[t].boxRaw[n]+e)/R));wte.object[t]={...e.object[t],box:n,boxRaw:r}}else wte.object=JSON.parse(JSON.stringify(e.object));if(e.persons){const t=e.persons;if(wte.persons&&t.length===wte.persons.length)for(let e=0;e<t.length;e++)wte.persons[e].box=t[e].box.map(((t,n)=>((R-1)*wte.persons[e].box[n]+t)/R));else wte.persons=JSON.parse(JSON.stringify(t))}e.gesture&&(wte.gesture=e.gesture);const M=ol();return kte=d4.perfadd?kte+Math.round(M-E):Math.round(M-E),e.performance&&(wte.performance={...e.performance,interpolate:kte}),wte}(arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.result,this.config)}async warmup(e){const t=ol(),n=await async function(e,t){const n=ol();return e.state="warmup",t&&(e.config=ul(e.config,t)),e.config.warmup&&0!==e.config.warmup.length&&"none"!==e.config.warmup?new Promise((async t=>{const r=await async function(e){let t;return t="function"==typeof createImageBitmap?await async function(e){const t=function(e){return fetch(`data:${arguments.length>1&&void 0!==arguments[1]?arguments[1]:"application/octet-stream"};base64,${e}`).then((e=>e.blob()))};let n,r;switch(e.config.warmup){case"face":n=await t(Mte);break;case"body":case"full":n=await t($te);break;default:n=null}if(n){const t=await createImageBitmap(n);r=await e.detect(t,e.config),t.close()}return r}(e):"undefined"!=typeof Image||void 0!==d4.Canvas?await async function(e){return new Promise((t=>{let n,r;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+Mte;break;case"full":case"body":n="data:image/jpeg;base64,"+$te;break;default:n=null}if("undefined"!=typeof Image)r=new Image;else{if(!d4.Image)return;r=new d4.Image}r.onload=async()=>{const n=o4(r.naturalWidth,r.naturalHeight);if(n){const a=n.getContext("2d");a&&a.drawImage(r,0,0);const s=await e.image(n),i=await e.detect(s.tensor,e.config);t(i)}else il("Warmup: Canvas not found"),t(void 0)},n?r.src=n:t(void 0)}))}(e):await async function(e){const t=e=>Buffer.from(e,"base64");let n,r;if(n="face"===e.config.warmup?t(Mte):t($te),"node"in hl){const t=(void 0).decodeJpeg(n),a=t.expandDims(0);e.tf.dispose(t),r=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&il("Warmup tfjs-node not loaded");return r}(e),t}(e),a=ol();e.config.debug&&il("warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),t(r)})):{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:ol(),persons:[],error:null}}(this,e),r=ol();return this.performance.warmup=Math.trunc(r-t),n}async profile(e,t){const n=await this.tf.profile((()=>this.detect(e,t))),r={};for(const e of n.kernels)r[e.name]?r[e.name]+=e.kernelTimeMs:r[e.name]=e.kernelTimeMs;const a=[];Object.entries(r).forEach((e=>a.push({name:e[0],ms:e[1]}))),a.sort(((e,t)=>t.ms-e.ms)),a.length=20;const s={};for(const e of a)s[e.name]=e.ms;return s}async detect(e,t){return this.state="detect",new Promise((async n=>{var r,a,s,i,o,l,u,d,h,p,c,f,m,g,y,A,b,x,v,w,k,I;let S;this.state="config",this.config=ul(this.config,t),this.state="check";const N=rl(this,Rte).call(this,e);N&&(il(N,e),this.emit("error"),n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ol(),persons:[],error:N}));const T=ol();await Kee(this),await this.load(),S=ol(),this.state="image";const C=await u4(e,this.config);if(this.process=C,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ol()-S):Math.trunc(ol()-S),this.analyze("Get Image:"),!C.tensor)return this.config.debug&&il("could not convert input to tensor"),this.emit("error"),void n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:ol(),persons:[],error:"could not convert input to tensor"});this.emit("image"),S=ol(),this.config.skipAllowed=await async function(e,t){let n=!1;if(0===e.cacheSensitivity||!t.shape||4!==t.shape.length||t.shape[1]>2048||t.shape[2]>2048)return n;if(i4.inputTensor)if(i4.inputTensor.shape[1]!==t.shape[1]||i4.inputTensor.shape[2]!==t.shape[2])ry(i4.inputTensor),i4.inputTensor=Sm(t);else{const r={};r.diff=bb(t,i4.inputTensor),r.squared=Ay(r.diff,r.diff),r.sum=xb(r.squared);const a=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;ry([i4.inputTensor,r.diff,r.squared,r.sum]),i4.inputTensor=Sm(t),n=a<=(e.cacheSensitivity||0)}else i4.inputTensor=Sm(t);return n}(this.config,C.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(ol()-S):Math.trunc(ol()-S),this.analyze("Check Changed:");let E=[],_=[],R=[],M=[];this.state="detect:face",this.config.async?(E=this.config.face.enabled?yte(this,C.tensor):[],this.performance.face&&delete this.performance.face):(S=ol(),E=this.config.face.enabled?await yte(this,C.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ol()-S):Math.trunc(ol()-S)),!this.config.async||-1!==this.config.body.maxDetected&&-1!==this.config.hand.maxDetected||(E=await E),this.analyze("Start Body:"),this.state="detect:body";const $=-1===this.config.body.maxDetected?ul(this.config,{body:{maxDetected:this.config.face.enabled?1*E.length:1}}):this.config;this.config.async?((null==(r=this.config.body.modelPath)?void 0:r.includes("posenet"))?_=this.config.body.enabled?Pee(C.tensor,$):[]:(null==(a=this.config.body.modelPath)?void 0:a.includes("blazepose"))?_=this.config.body.enabled?$6(C.tensor,$):[]:(null==(s=this.config.body.modelPath)?void 0:s.includes("efficientpose"))?_=this.config.body.enabled?X6(C.tensor,$):[]:(null==(i=this.config.body.modelPath)?void 0:i.includes("movenet"))&&(_=this.config.body.enabled?cee(C.tensor,$):[]),this.performance.body&&delete this.performance.body):(S=ol(),(null==(o=this.config.body.modelPath)?void 0:o.includes("posenet"))?_=this.config.body.enabled?await Pee(C.tensor,$):[]:(null==(l=this.config.body.modelPath)?void 0:l.includes("blazepose"))?_=this.config.body.enabled?await $6(C.tensor,$):[]:(null==(u=this.config.body.modelPath)?void 0:u.includes("efficientpose"))?_=this.config.body.enabled?await X6(C.tensor,$):[]:(null==(d=this.config.body.modelPath)?void 0:d.includes("movenet"))&&(_=this.config.body.enabled?await cee(C.tensor,$):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ol()-S):Math.trunc(ol()-S)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";const F=-1===this.config.hand.maxDetected?ul(this.config,{hand:{maxDetected:this.config.face.enabled?2*E.length:1}}):this.config;this.config.async?((null==(p=null==(h=this.config.hand.detector)?void 0:h.modelPath)?void 0:p.includes("handdetect"))?R=this.config.hand.enabled?$9(C.tensor,F):[]:(null==(f=null==(c=this.config.hand.detector)?void 0:c.modelPath)?void 0:f.includes("handtrack"))&&(R=this.config.hand.enabled?H9(C.tensor,F):[]),this.performance.hand&&delete this.performance.hand):(S=ol(),(null==(g=null==(m=this.config.hand.detector)?void 0:m.modelPath)?void 0:g.includes("handdetect"))?R=this.config.hand.enabled?await $9(C.tensor,F):[]:(null==(A=null==(y=this.config.hand.detector)?void 0:y.modelPath)?void 0:A.includes("handtrack"))&&(R=this.config.hand.enabled?await H9(C.tensor,F):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ol()-S):Math.trunc(ol()-S)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((null==(b=this.config.object.modelPath)?void 0:b.includes("nanodet"))?M=this.config.object.enabled?bee(C.tensor,this.config):[]:(null==(x=this.config.object.modelPath)?void 0:x.includes("centernet"))&&(M=this.config.object.enabled?W6(C.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(S=ol(),(null==(v=this.config.object.modelPath)?void 0:v.includes("nanodet"))?M=this.config.object.enabled?await bee(C.tensor,this.config):[]:(null==(w=this.config.object.modelPath)?void 0:w.includes("centernet"))&&(M=this.config.object.enabled?await W6(C.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ol()-S):Math.trunc(ol()-S)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([E,_,R,M]=await Promise.all([E,_,R,M])),this.state="detect:gesture";let O=[];this.config.gesture.enabled&&(S=ol(),O=[...bte(E),...Ate(_),...vte(R),...xte(E)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ol()-S):Math.trunc(ol()-S)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ol()-T):Math.trunc(ol()-T);const z=(null==(I=null==(k=this.process)?void 0:k.tensor)?void 0:I.shape)||[];this.result={face:E,body:_,hand:R,gesture:O,object:M,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return function(e,t,n,r,a){var s,i,o,l,u,d,h,p,c,f,m,g,y,A,b,x;let v=0;const w=[];for(const k of e){const e={id:v++,face:k,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(const n of t)k.box[0]>n.box[0]&&k.box[0]<n.box[0]+n.box[2]&&k.box[1]+k.box[3]>n.box[1]&&k.box[1]+k.box[3]<n.box[1]+n.box[3]&&(e.body=n);if(e.body)for(const t of n)t.box[0]+t.box[2]>e.body.box[0]&&t.box[0]+t.box[2]<e.body.box[0]+e.body.box[2]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.left=t),t.box[0]<e.body.box[0]+e.body.box[2]&&t.box[0]>e.body.box[0]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.right=t);for(const t of r)void 0!==t.face&&t.face===k.id?null==(s=e.gestures)||s.push(t):void 0!==t.iris&&t.iris===k.id?null==(i=e.gestures)||i.push(t):void 0!==t.body&&t.body===(null==(o=e.body)?void 0:o.id)?null==(l=e.gestures)||l.push(t):void 0!==t.hand&&t.hand===(null==(d=null==(u=e.hands)?void 0:u.left)?void 0:d.id)?null==(h=e.gestures)||h.push(t):void 0!==t.hand&&t.hand===(null==(c=null==(p=e.hands)?void 0:p.right)?void 0:c.id)&&(null==(f=e.gestures)||f.push(t));const I=[],S=[],N=e=>{e&&4===e.length&&(I.push(e[0],e[0]+e[2]),S.push(e[1],e[1]+e[3]))};N(null==(m=e.face)?void 0:m.box),N(null==(g=e.body)?void 0:g.box),N(null==(A=null==(y=e.hands)?void 0:y.left)?void 0:A.box),N(null==(x=null==(b=e.hands)?void 0:b.right)?void 0:x.box);const T=Math.min(...I),C=Math.min(...S);e.box=[T,C,Math.max(...I)-T,Math.max(...S)-C],a&&a[1]&&a[2]&&(e.boxRaw=[e.box[0]/a[2],e.box[1]/a[1],e.box[2]/a[2],e.box[3]/a[1]]),w.push(e)}return w}(E,_,R,O,z)}},ry(C.tensor),this.emit("detect"),this.state="idle",n(this.result)}))}}(this.config);try{yield a.load()}catch(e){console.error(e)}this.human=a}}))}getFaceBox(e,t){if(1!==this.getFaceCount(e))return;const n={left:Math.round(100*e[0].boxRaw[0]),right:Math.round(100*(e[0].boxRaw[0]+e[0].boxRaw[2]))};return n.width=Math.round(n.right-n.left),this.lastValidFaceBox&&t&&Math.abs(this.lastValidFaceBox.left-n.left)<t?void 0:(this.lastValidFaceBox=n,n)}getFaceExpression(t){if(1===this.getFaceCount(t))return t[0].emotion?e[t[0].emotion[0].emotion]:void 0}getFaceCount(e){return e?e.length:0}getDetections(e){return Fte(this,void 0,void 0,(function*(){if(!this.human||!this.faceDetectionTypes.length)return[];this.human.tf.engine().startScope();const t=this.human.tf.browser.fromPixels(e),{face:n}=yield this.human.detect(t,this.config);return this.human.tf.engine().endScope(),n.filter((e=>e.score>.6))}))}detect({image:e,threshold:n}){return Fte(this,void 0,void 0,(function*(){let a,s,i;return this.detectionInProgress=!0,a=yield this.getDetections(e),this.faceDetectionTypes.includes(r)&&(s=this.getFaceExpression(a)),this.faceDetectionTypes.includes(t)&&(this.getFaceCount(a)>1?(this.faceDetectionTypes.splice(this.faceDetectionTypes.indexOf(t),1),i={left:0,right:100,width:100}):i=this.getFaceBox(a,n)),this.detectionInProgress=!1,{faceExpression:s,faceBox:i,faceCount:this.getFaceCount(a)}}))}getDetectionInProgress(){return this.detectionInProgress}}let zte;onmessage=function(e){return t=this,n=void 0,a=function*(){switch(e.data.type){case"DETECT_FACE":{if(!zte||zte.getDetectionInProgress())return;const t=yield zte.detect(e.data);t&&(t.faceBox||t.faceExpression||t.faceCount)&&self.postMessage(t);break}case"INIT_WORKER":zte=new Ote(e.data)}},new((r=void 0)||(r=Promise))((function(e,s){function i(e){try{l(a.next(e))}catch(e){s(e)}}function o(e){try{l(a.throw(e))}catch(e){s(e)}}function l(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,o)}l((a=a.apply(t,n||[])).next())}));var t,n,r,a}})()})();
//# sourceMappingURL=face-landmarks-worker.min.js.map