/*! For license information please see face-landmarks-worker.min.js.LICENSE.txt */
(()=>{var e={950:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js",function(e){function t(){return $.buffer!=z&&ee($.buffer),D}function a(){return $.buffer!=z&&ee($.buffer),P}function s(){return $.buffer!=z&&ee($.buffer),L}function i(){return $.buffer!=z&&ee($.buffer),W}function o(){return $.buffer!=z&&ee($.buffer),B}var l,u,d,h=void 0!==(e=e||{})?e:{};h.ready=new Promise((function(e,t){l=e,u=t})),"undefined"!=typeof process&&process.listeners&&(d={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,c={};for(p in h)h.hasOwnProperty(p)&&(c[p]=h[p]);var f=[],m=function(e,t){throw t},g=!1,y=!1,A=!1,b=!1;g="object"==typeof window,y="function"==typeof importScripts,A="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=!g&&!A&&!y;var x=h.ENVIRONMENT_IS_PTHREAD||!1;x&&(z=h.buffer);var v,w,k,I,S,N="";function T(e){return h.locateFile?h.locateFile(e,N):N+e}if(A){var C;N=y?n(980).dirname(N)+"/":"//",v=function(e,t){return I||(I=n(256)),S||(S=n(980)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),f=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof gn))throw e})),process.on("unhandledRejection",be),m=function(e){process.exit(e)},h.inspect=function(){return"[Emscripten Module object]"};try{C=n(958)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=C.Worker}else b?("undefined"!=typeof read&&(v=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(V("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?f=scriptArgs:void 0!==arguments&&(f=arguments),"function"==typeof quit&&(m=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(g||y)&&(y?N=self.location.href:"undefined"!=typeof document&&document.currentScript&&(N=document.currentScript.src),void 0!==r&&r&&(N=r),N=0!==N.indexOf("blob:")?N.substr(0,N.lastIndexOf("/")+1):"",A?(v=function(e,t){return I||(I=n(256)),S||(S=n(980)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t}):(v=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),w=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));A&&"undefined"==typeof performance&&(n.g.performance=n(862).performance);var E,_=h.print||console.log.bind(console),R=h.printErr||console.warn.bind(console);for(p in c)c.hasOwnProperty(p)&&(h[p]=c[p]);function M(e){M.shown||(M.shown={}),M.shown[e]||(M.shown[e]=1,R(e))}c=null,h.arguments&&(f=h.arguments),h.thisProgram&&h.thisProgram,h.quit&&(m=h.quit),Atomics.load,Atomics.store,Atomics.compareExchange,h.wasmBinary&&(E=h.wasmBinary);var $,F,O=h.noExitRuntime||!0;"object"!=typeof WebAssembly&&be("no native wasm support detected");var z,D,P,L,W,B,U=!1;function V(e,t){e||be("Assertion failed: "+t)}function G(e){var t=h["_"+e];return V(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function j(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);Z(e,t=hn(n),n)}return t},array:function(e){var t=hn(e.length);return J(e,t),t}},i=G(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var d=s[n[u]];d?(0===l&&(l=un()),o[u]=d(r[u])):o[u]=r[u]}var h=i.apply(null,o);return h=function(e){return"string"===t?K(e):"boolean"===t?Boolean(e):e}(h),0!==l&&dn(l),h}function H(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?G(e):function(){return j(e,t,n,arguments)}}function q(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var l=s-65536;a+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function K(e,t){return e?q(a(),e,t):""}function X(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function Z(e,t,n){return X(e,a(),t,n)}function Y(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function J(e,n){t().set(e,n)}function Q(e,t){return e%t>0&&(e+=t-e%t),e}function ee(e){z=e,h.HEAP8=D=new Int8Array(e),h.HEAP16=new Int16Array(e),h.HEAP32=L=new Int32Array(e),h.HEAPU8=P=new Uint8Array(e),h.HEAPU16=new Uint16Array(e),h.HEAPU32=W=new Uint32Array(e),h.HEAPF32=new Float32Array(e),h.HEAPF64=B=new Float64Array(e)}var te,ne=h.INITIAL_MEMORY||16777216;if(x)$=h.wasmMemory,z=h.buffer;else if(h.wasmMemory)$=h.wasmMemory;else if(!(($=new WebAssembly.Memory({initial:ne/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw R("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),A&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");$&&(z=$.buffer),ne=z.byteLength,ee(z);var re=[],ae=[],se=[],ie=[],oe=[];function le(){if(!x){if(h.preRun)for("function"==typeof h.preRun&&(h.preRun=[h.preRun]);h.preRun.length;)pe(h.preRun.shift());Re(re)}}function ue(){x||Re(ae)}function de(){x||Re(se)}function he(){if(!x){if(h.postRun)for("function"==typeof h.postRun&&(h.postRun=[h.postRun]);h.postRun.length;)ce(h.postRun.shift());Re(oe)}}function pe(e){re.unshift(e)}function ce(e){oe.unshift(e)}x||ae.push({func:function(){qt()}});var fe=0,me=null,ge=null;function ye(e){V(!x,"addRunDependency cannot be used in a pthread worker"),fe++,h.monitorRunDependencies&&h.monitorRunDependencies(fe)}function Ae(e){if(fe--,h.monitorRunDependencies&&h.monitorRunDependencies(fe),0==fe&&(null!==me&&(clearInterval(me),me=null),ge)){var t=ge;ge=null,t()}}function be(e){h.onAbort&&h.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),R(e+=""),U=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw u(t),t}function xe(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}h.preloadedImages={},h.preloadedAudios={};var ve="data:application/octet-stream;base64,";function we(e){return xe(e,ve)}var ke="file://";function Ie(e){return xe(e,ke)}var Se="tfjs-backend-wasm-threaded-simd.wasm";function Ne(e){try{if(e==Se&&E)return new Uint8Array(E);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(e){be(e)}}function Te(){if(!E&&(g||y)){if("function"==typeof fetch&&!Ie(Se))return fetch(Se,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Se+"'";return e.arrayBuffer()})).catch((function(){return Ne(Se)}));if(w)return new Promise((function(e,t){w(Se,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Ne(Se)}))}function Ce(){var e={a:Ht};function t(e,t){var n=e.exports;if(h.asm=n,te=h.asm.I,F=t,!x){var r=Pe.unusedWorkers.length;Pe.unusedWorkers.forEach((function(e){Pe.loadWasmModuleToWorker(e,(function(){--r||Ae()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Te().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){R("failed to asynchronously prepare wasm: "+e),be(e)}))}if(x||ye(),h.instantiateWasm)try{return h.instantiateWasm(e,t)}catch(e){return R("Module.instantiateWasm callback failed with error: "+e),!1}return(E||"function"!=typeof WebAssembly.instantiateStreaming||we(Se)||Ie(Se)||"function"!=typeof fetch?r(n):fetch(Se,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return R("wasm streaming compile failed: "+e),R("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(u),{}}we(Se)||(Se=T(Se));var Ee={10664:function(){throw"Canceled!"},10682:function(e,t){setTimeout((function(){rn(e,t)}),0)}};function _e(){Pe.initRuntime()}function Re(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?te.get(n)():te.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(h)}}var Me={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function $e(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),mn>>2),a=0;if(r==e&&Atomics.compareExchange(s(),mn>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function Fe(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Pe.pthreads[e];t.worker.terminate(),Pe.freeThreadData(t),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Oe(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Pe.pthreads[e].worker.postMessage({cmd:"cancel"})}function ze(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Pe.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Pe.returnWorkerToPool(n)}}h._emscripten_futex_wake=$e;var De,Pe={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)Pe.allocateUnusedWorker()},initRuntime:function(){for(var e=Kt(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Kt(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),ln(e,!y,1),tn(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Pe.threadExitHandlers.length>0;)Pe.threadExitHandlers.pop()();x&&Jt()&&Qt()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Pe.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),$e(e+0,2147483647),ln(0,0,0)},threadExit:function(e){var t=Jt();t&&(Pe.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Pe.runExitHandlersAndDeinitThread(Jt(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Pe.pthreads)(r=Pe.pthreads[e])&&r.worker&&Pe.returnWorkerToPool(r.worker);Pe.pthreads={};for(var t=0;t<Pe.unusedWorkers.length;++t)(n=Pe.unusedWorkers[t]).terminate();for(Pe.unusedWorkers=[],t=0;t<Pe.runningWorkers.length;++t){var n,r=(n=Pe.runningWorkers[t]).pthread;Pe.freeThreadData(r),n.terminate()}Pe.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,Xt(t),Xt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Xt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Pe.runWithoutMainThreadQueuedCalls((function(){delete Pe.pthreads[e.pthread.threadInfoStruct],Pe.unusedWorkers.push(e),Pe.runningWorkers.splice(Pe.runningWorkers.indexOf(e),1),Pe.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[fn>>2]=0;try{e()}finally{s()[fn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Pe.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Jt()){var s=Pe.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Pe.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)en();else if("spawnThread"===a)Ot(n.data);else if("cleanupThread"===a)ze(r.thread);else if("killThread"===a)Fe(r.thread);else if("cancelThread"===a)Oe(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)_("Thread "+r.threadId+": "+r.text);else if("printErr"===a)R("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Pe.returnWorkerToPool(e);else if("exitProcess"===a)try{An(r.returnCode)}catch(n){if(n instanceof gn)return;throw n}else"cancelDone"===a?Pe.returnWorkerToPool(e):"objectTransfer"===a?Pe.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):R("worker sent an unknown command "+a);Pe.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){R("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},A&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:h.mainScriptUrlOrBlob||r,wasmMemory:$,wasmModule:F})},allocateUnusedWorker:function(){var e=T("tfjs-backend-wasm-threaded-simd.worker.js");Pe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Pe.unusedWorkers.length&&(Pe.allocateUnusedWorker(),Pe.loadWasmModuleToWorker(Pe.unusedWorkers[0])),Pe.unusedWorkers.length>0?Pe.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Le(e,t){pn(e,t),dn(e)}function We(){return O}function Be(e,t){return te.get(e)(t)}function Ue(e,t,n,r){be("Assertion failed: "+K(e)+", at: "+[t?K(t):"unknown filename",n,r?K(r):"unknown function"])}function Ve(e,t){_main(e,t)}function Ge(e){return s()[Zt()>>2]=e,e}function je(e,t){if(x)return Qe(1,1,e,t)}function He(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Pe.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function qe(){be()}function Ke(e,t,n){var r=nt(t,n);return Ee[e].apply(null,r)}function Xe(e,t){}function Ze(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(g){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),mn>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),mn>>2,0),-73;if(0==Atomics.exchange(s(),mn>>2,0))break;if(en(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),mn>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Ye(e,t,n){a().copyWithin(e,t,t+n)}function Je(){return A?n(578).cpus().length:navigator.hardwareConcurrency}function Qe(e,t){for(var n=arguments.length-2,r=un(),a=n,s=hn(8*a),i=s>>3,l=0;l<n;l++){var u=arguments[2+l];o()[i+l]=u}var d=sn(e,a,s,t);return dn(r),d}h.establishStackSpace=Le,h.getNoExitRuntime=We,h.invokeEntryPoint=Be,De=A?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-h.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var et=[],tt=[];function nt(e,t){var n;for(tt.length=0,t>>=2;n=a()[e++];){var r=n<105;r&&1&t&&t++,tt.push(r?o()[t++>>1]:s()[t]),++t}return tt}function rt(e,t,n){et.length=t;for(var r=n>>3,a=0;a<t;a++)et[a]=o()[r+a];return(e<0?Ee[-e-1]:jt[e]).apply(null,et)}function at(){return a().length}function st(e){try{return $.grow(e-z.byteLength+65535>>>16),ee($.buffer),1}catch(e){}}function it(e){var t=at();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),st(Math.min(n,Q(Math.max(e,a),65536))))return!0}return!1}var ot={inEventHandler:0,removeAllEventListeners:function(){for(var e=ot.eventHandlers.length-1;e>=0;--e)ot._removeHandler(e);ot.eventHandlers=[],ot.deferredCalls=[]},registerRemoveEventListeners:function(){ot.removeEventListenersRegistered||(ie.push(ot.removeAllEventListeners),ot.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ot.deferredCalls){var s=ot.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ot.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ot.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ot.deferredCalls.length;++t)ot.deferredCalls[t].targetFunction==e&&(ot.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ot.inEventHandler&&ot.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ot.canPerformEventHandlerRequests())for(var e=0;e<ot.deferredCalls.length;++e){var t=ot.deferredCalls[e];ot.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ot.eventHandlers.length;++n)ot.eventHandlers[n].target!=e||t&&t!=ot.eventHandlers[n].eventTypeString||ot._removeHandler(n--)},_removeHandler:function(e){var t=ot.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ot.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ot.inEventHandler,ot.currentEventHandler=e,ot.runDeferredCalls(),e.handlerFunc(t),ot.runDeferredCalls(),--ot.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ot.eventHandlers.push(e),ot.registerRemoveEventListeners();else for(var n=0;n<ot.eventHandlers.length;++n)ot.eventHandlers[n].target==e.target&&ot.eventHandlers[n].eventTypeString==e.eventTypeString&&ot._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=un(),o=hn(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,on(0,e,637534208,t,r,o),dn(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Pe.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function lt(e){var t=Y(e)+1,n=Kt(t);return Z(e,n,t),n}function ut(e,t,n,r){var a=un(),i=hn(12),o=0;t&&(o=lt(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,on(0,e,657457152,0,o,i),dn(a)}function dt(e,t,n,r){ut(e,t=t?K(t):"",n,r)}function ht(e){return e>2?K(e):e}var pt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function ct(e){return e=ht(e),pt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function ft(e){return ct(e)}function mt(e,t,n){var r=ft(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(dt(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function gt(e,t,n){return x?Qe(2,1,e,t,n):mt(e,t,n)}function yt(e,t,n){return ft(e)?mt(e,t,n):gt(e,t,n)}function At(e){}function bt(e,t){}function xt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function vt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function wt(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function kt(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var It={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){It.lastError||(It.lastError=e)},getNewId:function(e){for(var t=It.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=K(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?It.registerContext(n,t):0},registerContext:function(e,t){var n=Kt(8);s()[n+4>>2]=Jt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),It.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&It.initExtensions(r),n},makeContextCurrent:function(e){return It.currentContext=It.contexts[e],h.ctx=Ct=It.currentContext&&It.currentContext.GLctx,!(e&&!Ct)},getContext:function(e){return It.contexts[e]},deleteContext:function(e){It.currentContext===It.contexts[e]&&(It.currentContext=null),"object"==typeof ot&&ot.removeAllHandlersOnTarget(It.contexts[e].GLctx.canvas),It.contexts[e]&&It.contexts[e].GLctx.canvas&&(It.contexts[e].GLctx.canvas.GLctxObject=void 0),Xt(It.contexts[e].handle),It.contexts[e]=null},initExtensions:function(e){if(e||(e=It.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;xt(t),vt(t),wt(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),kt(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=It.programs[e],n=It.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Ct.getProgramParameter(t,35718),s=0;s<a;++s){var i=Ct.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var l=Ct.getUniformLocation(t,o);if(l){var u=It.getNewId(It.uniforms);r[o]=[i.size,u],It.uniforms[u]=l;for(var d=1;d<i.size;++d){var h=o+"["+d+"]";l=Ct.getUniformLocation(t,h),u=It.getNewId(It.uniforms),It.uniforms[u]=l}}}}},St=["default","low-power","high-performance"];function Nt(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:St[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=ft(e);return i?a.explicitSwapControl?0:It.createContext(i,a):0}function Tt(e,t){return Nt(e,t)}var Ct,Et={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Et.buffers[e];0===t||10===t?((1===e?_:R)(q(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Et.varargs+=4,s()[Et.varargs-4>>2]},getStr:function(e){return K(e)},get64:function(e,t){return e}};function _t(e){return x?Qe(3,1,e):0}function Rt(e,t,n,r,a){if(x)return Qe(4,1,e,t,n,r,a)}function Mt(e,t,n,r){if(x)return Qe(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var l=s()[t+8*o>>2],u=s()[t+(8*o+4)>>2],d=0;d<u;d++)Et.printChar(e,a()[l+d]);i+=u}return s()[r>>2]=i,0}function $t(e){var t=Pe.threadExitHandlers.pop();e&&t()}function Ft(e,t){Pe.threadExitHandlers.push((function(){te.get(e)(t)}))}function Ot(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Pe.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Pe.runningWorkers.push(t);for(var n=Kt(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Pe.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},l=o.threadInfoStruct>>2;Atomics.store(i(),l+16,e.detached),Atomics.store(i(),l+25,n),Atomics.store(i(),l+10,o.threadInfoStruct),Atomics.store(i(),l+20,e.stackSize),Atomics.store(i(),l+19,a),Atomics.store(i(),l+26,e.stackSize),Atomics.store(i(),l+28,a),Atomics.store(i(),l+29,e.detached);var u=Yt()+40;Atomics.store(i(),l+43,u),t.pthread=o;var d={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){d.time=performance.now(),t.postMessage(d,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function zt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return R("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return R("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return an(687865856,e,t,n,r);var o=0,l=0,u=0;t&&-1!=t?(o=s()[t>>2],o+=81920,l=s()[t+8>>2],u=0!==s()[t+12>>2]):o=2097152;var d=0==l;d?l=cn(16,o):V((l-=o)>0);for(var h=Kt(228),p=0;p<57;++p)i()[(h>>2)+p]=0;s()[e>>2]=h,s()[h+12>>2]=h;var c=h+152;s()[c>>2]=c;var f={stackBase:l,stackSize:o,allocatedOwnStack:d,detached:u,startRoutine:n,pthread_ptr:h,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):Ot(f),0}function Dt(){if(x){var e=Jt();if(e&&!Atomics.load(i(),e+56>>2)&&2==Atomics.load(i(),e+0>>2))throw"Canceled!"}}function Pt(){A||y||M("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Lt(e,t,n){if(!e)return R("pthread_join attempted on a null thread pointer!"),Me.ESRCH;if(x&&Jt()==e)return R("PThread "+e+" is attempting to join to itself!"),Me.EDEADLK;if(!x&&nn()==e)return R("Main thread "+e+" is attempting to join to itself!"),Me.EDEADLK;if(s()[e+12>>2]!==e)return R("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),Me.ESRCH;if(Atomics.load(i(),e+64>>2))return R("Attempted to join thread "+e+", which was already detached!"),Me.EINVAL;for(n&&Pt();;){var r=Atomics.load(i(),e+0>>2);if(1==r){var a=Atomics.load(i(),e+4>>2);return t&&(s()[t>>2]=a),Atomics.store(i(),e+64>>2,1),x?postMessage({cmd:"cleanupThread",thread:e}):ze(e),0}if(!n)return Me.EBUSY;Dt(),x||en(),Ze(e+0,r,x?100:1)}}function Wt(e,t){return Lt(e,t,!0)}function Bt(e){if(x)return Qe(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ge(28),-1}x||Pe.initMainThreadBlock();var Ut,Vt,Gt,jt=[null,je,gt,_t,Rt,Mt,Bt],Ht={e:Ue,r:Ve,x:He,b:qe,y:Ke,j:Xe,d:Ze,c:$e,f:De,p:Ye,A:Je,u:rt,q:it,v:yt,i:At,s:bt,w:Tt,l:_t,n:Rt,g:Mt,o:_e,a:$||h.wasmMemory,z:$t,k:Ft,h:zt,m:Wt,t:Bt},qt=(Ce(),h.___wasm_call_ctors=function(){return(qt=h.___wasm_call_ctors=h.asm.B).apply(null,arguments)}),Kt=(h._init=function(){return(h._init=h.asm.C).apply(null,arguments)},h._init_with_threads_count=function(){return(h._init_with_threads_count=h.asm.D).apply(null,arguments)},h._get_threads_count=function(){return(h._get_threads_count=h.asm.E).apply(null,arguments)},h._register_tensor=function(){return(h._register_tensor=h.asm.F).apply(null,arguments)},h._dispose_data=function(){return(h._dispose_data=h.asm.G).apply(null,arguments)},h._dispose=function(){return(h._dispose=h.asm.H).apply(null,arguments)},h._Abs=function(){return(h._Abs=h.asm.J).apply(null,arguments)},h._Add=function(){return(h._Add=h.asm.K).apply(null,arguments)},h._AddN=function(){return(h._AddN=h.asm.L).apply(null,arguments)},h._All=function(){return(h._All=h.asm.M).apply(null,arguments)},h._Any=function(){return(h._Any=h.asm.N).apply(null,arguments)},h._ArgMax=function(){return(h._ArgMax=h.asm.O).apply(null,arguments)},h._AvgPool=function(){return(h._AvgPool=h.asm.P).apply(null,arguments)},h._BatchMatMul=function(){return(h._BatchMatMul=h.asm.Q).apply(null,arguments)},h._Ceil=function(){return(h._Ceil=h.asm.R).apply(null,arguments)},h._ClipByValue=function(){return(h._ClipByValue=h.asm.S).apply(null,arguments)},h._Conv2D=function(){return(h._Conv2D=h.asm.T).apply(null,arguments)},h._Conv2DBackpropInput=function(){return(h._Conv2DBackpropInput=h.asm.U).apply(null,arguments)},h._Cos=function(){return(h._Cos=h.asm.V).apply(null,arguments)},h._Cosh=function(){return(h._Cosh=h.asm.W).apply(null,arguments)},h._CropAndResize=function(){return(h._CropAndResize=h.asm.X).apply(null,arguments)},h._Cumsum=function(){return(h._Cumsum=h.asm.Y).apply(null,arguments)},h._DepthToSpace=function(){return(h._DepthToSpace=h.asm.Z).apply(null,arguments)},h._DepthwiseConv2dNative=function(){return(h._DepthwiseConv2dNative=h.asm._).apply(null,arguments)},h._Elu=function(){return(h._Elu=h.asm.$).apply(null,arguments)},h._Equal=function(){return(h._Equal=h.asm.aa).apply(null,arguments)},h._Exp=function(){return(h._Exp=h.asm.ba).apply(null,arguments)},h._FlipLeftRight=function(){return(h._FlipLeftRight=h.asm.ca).apply(null,arguments)},h._Floor=function(){return(h._Floor=h.asm.da).apply(null,arguments)},h._FloorDiv=function(){return(h._FloorDiv=h.asm.ea).apply(null,arguments)},h._FusedBatchNorm=function(){return(h._FusedBatchNorm=h.asm.fa).apply(null,arguments)},h._FusedConv2D=function(){return(h._FusedConv2D=h.asm.ga).apply(null,arguments)},h._FusedDepthwiseConv2D=function(){return(h._FusedDepthwiseConv2D=h.asm.ha).apply(null,arguments)},h._Gather=function(){return(h._Gather=h.asm.ia).apply(null,arguments)},h._GatherNd=function(){return(h._GatherNd=h.asm.ja).apply(null,arguments)},h._Greater=function(){return(h._Greater=h.asm.ka).apply(null,arguments)},h._GreaterEqual=function(){return(h._GreaterEqual=h.asm.la).apply(null,arguments)},h._LeakyRelu=function(){return(h._LeakyRelu=h.asm.ma).apply(null,arguments)},h._Less=function(){return(h._Less=h.asm.na).apply(null,arguments)},h._LessEqual=function(){return(h._LessEqual=h.asm.oa).apply(null,arguments)},h._Log=function(){return(h._Log=h.asm.pa).apply(null,arguments)},h._LogicalAnd=function(){return(h._LogicalAnd=h.asm.qa).apply(null,arguments)},h._Max=function(){return(h._Max=h.asm.ra).apply(null,arguments)},h._MaxPool=function(){return(h._MaxPool=h.asm.sa).apply(null,arguments)},h._Maximum=function(){return(h._Maximum=h.asm.ta).apply(null,arguments)},h._Mean=function(){return(h._Mean=h.asm.ua).apply(null,arguments)},h._Min=function(){return(h._Min=h.asm.va).apply(null,arguments)},h._Minimum=function(){return(h._Minimum=h.asm.wa).apply(null,arguments)},h._MirrorPad=function(){return(h._MirrorPad=h.asm.xa).apply(null,arguments)},h._Multiply=function(){return(h._Multiply=h.asm.ya).apply(null,arguments)},h._Neg=function(){return(h._Neg=h.asm.za).apply(null,arguments)},h._NonMaxSuppressionV3=function(){return(h._NonMaxSuppressionV3=h.asm.Aa).apply(null,arguments)},h._NonMaxSuppressionV4=function(){return(h._NonMaxSuppressionV4=h.asm.Ba).apply(null,arguments)},h._NonMaxSuppressionV5=function(){return(h._NonMaxSuppressionV5=h.asm.Ca).apply(null,arguments)},h._NotEqual=function(){return(h._NotEqual=h.asm.Da).apply(null,arguments)},h._OneHot=function(){return(h._OneHot=h.asm.Ea).apply(null,arguments)},h._PadV2=function(){return(h._PadV2=h.asm.Fa).apply(null,arguments)},h._Pow=function(){return(h._Pow=h.asm.Ga).apply(null,arguments)},h._Prelu=function(){return(h._Prelu=h.asm.Ha).apply(null,arguments)},h._Prod=function(){return(h._Prod=h.asm.Ia).apply(null,arguments)},h._RealDiv=function(){return(h._RealDiv=h.asm.Ja).apply(null,arguments)},h._Relu=function(){return(h._Relu=h.asm.Ka).apply(null,arguments)},h._Relu6=function(){return(h._Relu6=h.asm.La).apply(null,arguments)},h._ResizeBilinear=function(){return(h._ResizeBilinear=h.asm.Ma).apply(null,arguments)},h._Reverse=function(){return(h._Reverse=h.asm.Na).apply(null,arguments)},h._RotateWithOffset=function(){return(h._RotateWithOffset=h.asm.Oa).apply(null,arguments)},h._Round=function(){return(h._Round=h.asm.Pa).apply(null,arguments)},h._Rsqrt=function(){return(h._Rsqrt=h.asm.Qa).apply(null,arguments)},h._ScatterNd=function(){return(h._ScatterNd=h.asm.Ra).apply(null,arguments)},h._SelectV2=function(){return(h._SelectV2=h.asm.Sa).apply(null,arguments)},h._Sigmoid=function(){return(h._Sigmoid=h.asm.Ta).apply(null,arguments)},h._Sin=function(){return(h._Sin=h.asm.Ua).apply(null,arguments)},h._Softmax=function(){return(h._Softmax=h.asm.Va).apply(null,arguments)},h._SparseFillEmptyRows=function(){return(h._SparseFillEmptyRows=h.asm.Wa).apply(null,arguments)},h._SparseReshape=function(){return(h._SparseReshape=h.asm.Xa).apply(null,arguments)},h._SparseSegmentReduction=function(){return(h._SparseSegmentReduction=h.asm.Ya).apply(null,arguments)},h._Sqrt=function(){return(h._Sqrt=h.asm.Za).apply(null,arguments)},h._Square=function(){return(h._Square=h.asm._a).apply(null,arguments)},h._SquaredDifference=function(){return(h._SquaredDifference=h.asm.$a).apply(null,arguments)},h._Step=function(){return(h._Step=h.asm.ab).apply(null,arguments)},h._StridedSlice=function(){return(h._StridedSlice=h.asm.bb).apply(null,arguments)},h._Sub=function(){return(h._Sub=h.asm.cb).apply(null,arguments)},h._Sum=function(){return(h._Sum=h.asm.db).apply(null,arguments)},h._Tan=function(){return(h._Tan=h.asm.eb).apply(null,arguments)},h._Tanh=function(){return(h._Tanh=h.asm.fb).apply(null,arguments)},h._Tile=function(){return(h._Tile=h.asm.gb).apply(null,arguments)},h._TopK=function(){return(h._TopK=h.asm.hb).apply(null,arguments)},h._Transform=function(){return(h._Transform=h.asm.ib).apply(null,arguments)},h._Transpose=function(){return(h._Transpose=h.asm.jb).apply(null,arguments)},h.__FusedMatMul=function(){return(h.__FusedMatMul=h.asm.kb).apply(null,arguments)},h._malloc=function(){return(Kt=h._malloc=h.asm.lb).apply(null,arguments)}),Xt=h._free=function(){return(Xt=h._free=h.asm.mb).apply(null,arguments)},Zt=h.___errno_location=function(){return(Zt=h.___errno_location=h.asm.nb).apply(null,arguments)},Yt=h._emscripten_get_global_libc=function(){return(Yt=h._emscripten_get_global_libc=h.asm.ob).apply(null,arguments)},Jt=h._pthread_self=function(){return(Jt=h._pthread_self=h.asm.pb).apply(null,arguments)},Qt=h.___pthread_tsd_run_dtors=function(){return(Qt=h.___pthread_tsd_run_dtors=h.asm.qb).apply(null,arguments)},en=h._emscripten_main_thread_process_queued_calls=function(){return(en=h._emscripten_main_thread_process_queued_calls=h.asm.rb).apply(null,arguments)},tn=(h._emscripten_current_thread_process_queued_calls=function(){return(h._emscripten_current_thread_process_queued_calls=h.asm.sb).apply(null,arguments)},h._emscripten_register_main_browser_thread_id=function(){return(tn=h._emscripten_register_main_browser_thread_id=h.asm.tb).apply(null,arguments)}),nn=h._emscripten_main_browser_thread_id=function(){return(nn=h._emscripten_main_browser_thread_id=h.asm.ub).apply(null,arguments)},rn=h.__emscripten_do_dispatch_to_thread=function(){return(rn=h.__emscripten_do_dispatch_to_thread=h.asm.vb).apply(null,arguments)},an=h._emscripten_sync_run_in_main_thread_4=function(){return(an=h._emscripten_sync_run_in_main_thread_4=h.asm.wb).apply(null,arguments)},sn=h._emscripten_run_in_main_runtime_thread_js=function(){return(sn=h._emscripten_run_in_main_runtime_thread_js=h.asm.xb).apply(null,arguments)},on=h.__emscripten_call_on_thread=function(){return(on=h.__emscripten_call_on_thread=h.asm.yb).apply(null,arguments)},ln=(h._emscripten_tls_init=function(){return(h._emscripten_tls_init=h.asm.zb).apply(null,arguments)},h.__emscripten_thread_init=function(){return(ln=h.__emscripten_thread_init=h.asm.Ab).apply(null,arguments)}),un=h.stackSave=function(){return(un=h.stackSave=h.asm.Bb).apply(null,arguments)},dn=h.stackRestore=function(){return(dn=h.stackRestore=h.asm.Cb).apply(null,arguments)},hn=h.stackAlloc=function(){return(hn=h.stackAlloc=h.asm.Db).apply(null,arguments)},pn=h._emscripten_stack_set_limits=function(){return(pn=h._emscripten_stack_set_limits=h.asm.Eb).apply(null,arguments)},cn=h._memalign=function(){return(cn=h._memalign=h.asm.Fb).apply(null,arguments)},fn=h.__emscripten_allow_main_runtime_queued_calls=10656,mn=h.__emscripten_main_thread_futex=12292;function gn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function yn(e){if(e=e||f,!(fe>0)){if(x)return l(h),ue(),void postMessage({cmd:"loaded"});le(),fe>0||(h.setStatus?(h.setStatus("Running..."),setTimeout((function(){setTimeout((function(){h.setStatus("")}),1),t()}),1)):t())}function t(){Ut||(Ut=!0,h.calledRun=!0,U||(ue(),de(),l(h),h.onRuntimeInitialized&&h.onRuntimeInitialized(),he()))}}function An(e,t){if(!t||!O||0!==e){if(!t&&x)throw postMessage({cmd:"exitProcess",returnCode:e}),new gn(e);O||(Pe.terminateAllThreads(),h.onExit&&h.onExit(e),U=!0),m(e,new gn(e))}}if(h.cwrap=H,h.PThread=Pe,h.PThread=Pe,h.wasmMemory=$,h.ExitStatus=gn,ge=function e(){Ut||yn(),Ut||(ge=e)},h.run=yn,h.preInit)for("function"==typeof h.preInit&&(h.preInit=[h.preInit]);h.preInit.length>0;)h.preInit.pop()();if(x&&(O=!1,Pe.initWorker()),yn(),d&&(Vt={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!d.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!d.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Gt=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Gt=e}if(Vt){var bn=Gt._dispose;Gt._dispose=function(){bn(),Vt.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Vt.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=a},235:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js",function(e){var t,a,s,i=void 0!==(e=e||{})?e:{};i.ready=new Promise((function(e,n){t=e,a=n})),"undefined"!=typeof process&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var o,l={};for(o in i)i.hasOwnProperty(o)&&(l[o]=i[o]);var u=[],d=!1,h=!1,p=!1,c=!1;d="object"==typeof window,h="function"==typeof importScripts,p="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,c=!d&&!p&&!h;var f,m,g,y,A,b="";function x(e){return i.locateFile?i.locateFile(e,b):b+e}p?(b=h?n(980).dirname(b)+"/":"//",f=function(e,t){return y||(y=n(256)),A||(A=n(980)),e=A.normalize(e),y.readFileSync(e,t?null:"utf8")},g=function(e){var t=f(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof De))throw e})),process.on("unhandledRejection",ae),i.inspect=function(){return"[Emscripten Module object]"}):c?("undefined"!=typeof read&&(f=function(e){return read(e)}),g=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(d||h)&&(h?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",f=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},h&&(g=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v,w,k=i.print||console.log.bind(console),I=i.printErr||console.warn.bind(console);for(o in l)l.hasOwnProperty(o)&&(i[o]=l[o]);l=null,i.arguments&&(u=i.arguments),i.thisProgram&&i.thisProgram,i.quit&&i.quit,i.wasmBinary&&(v=i.wasmBinary),i.noExitRuntime,"object"!=typeof WebAssembly&&ae("no native wasm support detected");var S=!1;function N(e,t){e||ae("Assertion failed: "+t)}function T(e){var t=i["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function C(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);P(e,t=ze(n),n)}return t},array:function(e){var t=ze(e.length);return L(e,t),t}},i=T(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var d=s[n[u]];d?(0===l&&(l=Fe()),o[u]=d(r[u])):o[u]=r[u]}var h=i.apply(null,o);return h=function(e){return"string"===t?z(e):"boolean"===t?Boolean(e):e}(h),0!==l&&Oe(l),h}function E(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?T(e):function(){return C(e,t,n,arguments)}}var _,R,M,$,F="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function O(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&F)return F.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function z(e,t){return e?O(M,e,t):""}function D(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function P(e,t,n){return D(e,M,t,n)}function L(e,t){R.set(e,t)}function W(e,t){return e%t>0&&(e+=t-e%t),e}function B(e){_=e,i.HEAP8=R=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=$=new Int32Array(e),i.HEAPU8=M=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var U,V=[],G=[],j=[],H=[];function q(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)Y(i.preRun.shift());fe(V)}function K(){fe(G)}function X(){fe(j)}function Z(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)J(i.postRun.shift());fe(H)}function Y(e){V.unshift(e)}function J(e){H.unshift(e)}G.push({func:function(){Me()}});var Q=0,ee=null,te=null;function ne(e){Q++,i.monitorRunDependencies&&i.monitorRunDependencies(Q)}function re(e){if(Q--,i.monitorRunDependencies&&i.monitorRunDependencies(Q),0==Q&&(null!==ee&&(clearInterval(ee),ee=null),te)){var t=te;te=null,t()}}function ae(e){i.onAbort&&i.onAbort(e),I(e+=""),S=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function se(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}i.preloadedImages={},i.preloadedAudios={};var ie="data:application/octet-stream;base64,";function oe(e){return se(e,ie)}var le="file://";function ue(e){return se(e,le)}var de="tfjs-backend-wasm.wasm";function he(e){try{if(e==de&&v)return new Uint8Array(v);if(g)return g(e);throw"both async and sync fetching of the wasm failed"}catch(e){ae(e)}}function pe(){if(!v&&(d||h)){if("function"==typeof fetch&&!ue(de))return fetch(de,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+de+"'";return e.arrayBuffer()})).catch((function(){return he(de)}));if(m)return new Promise((function(e,t){m(de,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he(de)}))}function ce(){var e={a:Re};function t(e,t){var n=e.exports;i.asm=n,B((w=i.asm.j).buffer),U=i.asm.r,re()}function n(e){t(e.instance)}function r(t){return pe().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),ae(e)}))}if(ne(),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}return(v||"function"!=typeof WebAssembly.instantiateStreaming||oe(de)||ue(de)||"function"!=typeof fetch?r(n):fetch(de,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a),{}}function fe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?U.get(n)():U.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(i)}}function me(){ae()}function ge(e,t,n){M.copyWithin(e,t,t+n)}function ye(){return M.length}function Ae(e){try{return w.grow(e-_.byteLength+65535>>>16),B(w.buffer),1}catch(e){}}function be(e){var t=ye(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),Ae(Math.min(n,W(Math.max(e,a),65536))))return!0}return!1}oe(de)||(de=x(de));var xe={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=xe.buffers[e];0===t||10===t?((1===e?k:I)(O(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return xe.varargs+=4,$[xe.varargs-4>>2]},getStr:function(e){return z(e)},get64:function(e,t){return e}};function ve(e){return 0}function we(e,t,n,r,a){}function ke(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=$[t+8*s>>2],o=$[t+(8*s+4)>>2],l=0;l<o;l++)xe.printChar(e,M[i+l]);a+=o}return $[r>>2]=a,0}function Ie(){return 6}function Se(){return 28}function Ne(e){return $[$e()>>2]=e,e}function Te(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ne(28),-1}var Ce,Ee,_e,Re={a:me,d:ge,e:be,f:ve,c:we,b:ke,h:Ie,g:Se,i:Te},Me=(ce(),i.___wasm_call_ctors=function(){return(Me=i.___wasm_call_ctors=i.asm.k).apply(null,arguments)}),$e=(i._init=function(){return(i._init=i.asm.l).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.m).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.n).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.o).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.p).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.q).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.s).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.t).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.u).apply(null,arguments)},i._All=function(){return(i._All=i.asm.v).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.w).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.x).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.y).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.z).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.A).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.B).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.C).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.D).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.E).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.F).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.G).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.H).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.I).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.J).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.K).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.L).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.M).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.N).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.O).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.P).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.Q).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.R).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.S).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.T).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.U).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.V).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.W).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.X).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.Y).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.Z).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm._).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.$).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.aa).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm.ba).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.ca).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.da).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.ea).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.fa).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.ga).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.ha).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.ia).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.ja).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.ka).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.la).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.ma).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.na).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.oa).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.pa).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.qa).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.ra).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.sa).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.ta).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.ua).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.va).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.wa).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.xa).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.ya).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.za).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.Aa).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.Ba).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.Ca).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Da).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Ea).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.Fa).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.Ga).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.Ha).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Ia).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Ja).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.Ka).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.La).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.Ma).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Na).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Oa).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Pa).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Qa).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Ra).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.Sa).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Ta).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Ua).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm.Va).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.Wa).apply(null,arguments)},i._free=function(){return(i._free=i.asm.Xa).apply(null,arguments)},i.___errno_location=function(){return($e=i.___errno_location=i.asm.Ya).apply(null,arguments)}),Fe=i.stackSave=function(){return(Fe=i.stackSave=i.asm.Za).apply(null,arguments)},Oe=i.stackRestore=function(){return(Oe=i.stackRestore=i.asm._a).apply(null,arguments)},ze=i.stackAlloc=function(){return(ze=i.stackAlloc=i.asm.$a).apply(null,arguments)};function De(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Pe(e){function n(){Ce||(Ce=!0,i.calledRun=!0,S||(K(),X(),t(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),Z()))}e=e||u,Q>0||(q(),Q>0||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1),n()}),1)):n()))}if(i.cwrap=E,te=function e(){Ce||Pe(),Ce||(te=e)},i.run=Pe,i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();if(Pe(),s&&(Ee={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!s.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!s.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)_e=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");_e=WasmBackendModuleThreadedSimd}if(Ee){var Le=_e._dispose;_e._dispose=function(){Le(),Ee.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Ee.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=a},126:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=l(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=c)return w}else{if(e<=-f)return k;if(e+1>=f)return v}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=o(u(n,8)),s=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));s=s.mul(p).add(o(h))}else s=(s=s.mul(a)).add(o(h))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?d(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=d,n.fromValue=h;var p=4294967296,c=p*p,f=c/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var A=i(1);n.ONE=A;var b=i(1,!0);n.UONE=b;var x=i(-1);n.NEG_ONE=x;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var w=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=w;var k=l(0,-2147483648,!1);n.MIN_VALUE=k;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(k)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(u(e,6),this.unsigned),s=this,i="";;){var l=s.div(a),d=(s.sub(l.mul(a)).toInt()>>>0).toString(e);if((s=l).isZero())return d+i;for(;d.length<6;)d="0"+d;i=""+d+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(k)?k:this.not().add(A)},I.neg=I.negate,I.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,d=0,p=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,p+=(c+=a+u)>>>16,d+=(p+=n+o)>>>16,d+=t+i,l((c&=65535)<<16|(f&=65535),(d&=65535)<<16|(p&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(k))return e.isOdd()?k:g;if(e.eq(k))return this.isOdd()?k:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,u=e.high>>>16,d=65535&e.high,p=e.low>>>16,c=65535&e.low,f=0,y=0,A=0,b=0;return A+=(b+=i*c)>>>16,y+=(A+=s*c)>>>16,A&=65535,y+=(A+=i*p)>>>16,f+=(y+=a*c)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*d)>>>16,f+=n*c+a*p+s*d+i*u,l((A&=65535)<<16|(b&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return b;s=y}else{if(this.eq(k))return e.eq(A)||e.eq(x)?k:e.eq(k)?A:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?A:x:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(k))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),d=i<=48?1:u(2,i-48),p=o(n),c=p.mul(e);c.isNegative()||c.gt(a);)c=(p=o(n-=d,this.unsigned)).mul(e);p.isZero()&&(p=A),s=s.add(p),a=a.sub(c)}return s},I.div=I.divide,I.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return l(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},256:()=>{},578:()=>{},980:()=>{},862:()=>{},958:()=>{},410:()=>{},628:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";class e{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class t{refCount(e){return r("refCount")}incRef(e){return r("incRef")}timerAvailable(){return!0}time(e){return r("time")}read(e){return r("read")}readSync(e){return r("readSync")}readToGPU(e,t){return r("readToGPU")}numDataIds(){return r("numDataIds")}disposeData(e,t){return r("disposeData")}write(e,t,n){return r("write")}move(e,t,n,a,s){return r("move")}memory(){return r("memory")}floatPrecision(){return r("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return r("dispose")}}function r(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function a(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function s(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";a(u(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function i(e){a(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),Array.isArray(e)||c(e)&&!n)for(let r=0;r<e.length;++r)o(e[r],t,n);else t.push(e);return t}function l(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function u(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function d(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function h(e,t){const n=t.length;return a((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),a(e.every((e=>e%1==0)),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function p(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function c(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function f(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function m(e){return"string"==typeof e||e instanceof String}function g(e){return Array.isArray(e)?g(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":"number"==typeof e?"float32":m(e)?"string":"boolean"==typeof e?"bool":"float32"}function y(e){return!!(e&&e.constructor&&e.call&&e.apply)}function A(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function b(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=b(e+t*o,i,n,r)}return a}function x(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return b(0,e,t,n)}function v(e,t){const n=w(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function w(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function k(e){e.forEach((t=>{a(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function I(e){return e&&e.then&&"function"==typeof e.then}class S{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=N,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(C().getBool("IS_TEST")||C().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];C().getBool("IS_TEST")||C().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(I(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function N(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return T(t,r[0],r[1]),r.join("=")})),t}function T(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function C(){return _}let E,_=null;function R(){if(null==E){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}E=e}return E}function M(e,t){const n=function(){const e=R();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const $="Add",F="AddN",O="ArgMax",z="AvgPool",D="BatchMatMul",P="Cast",L="ClipByValue",W="Concat",B="Conv2D",U="Conv2DBackpropInput",V="Cumsum",G="CropAndResize",j="DepthToSpace",H="DepthwiseConv2dNative",q="RealDiv",K="ExpandDims",X="Fill",Z="FlipLeftRight",Y="FloorDiv",J="FusedBatchNorm",Q="GatherNd",ee="Greater",te="GreaterEqual",ne="Identity",re="LeakyRelu",ae="LessEqual",se="LogicalAnd",ie="Max",oe="MaxPool",le="Mean",ue="Min",de="Minimum",he="MirrorPad",pe="Multiply",ce="NotEqual",fe="NonMaxSuppressionV3",me="NonMaxSuppressionV4",ge="NonMaxSuppressionV5",ye="OneHot",Ae="Pack",be="PadV2",xe="Prelu",ve="Prod",we="Range",ke="Relu",Ie="Reshape",Se="ResizeNearestNeighbor",Ne="ResizeBilinear",Te="Relu6",Ce="Reverse",Ee="Round",_e="ScatterNd",Re="Select",Me="Slice",$e="Sigmoid",Fe="Sqrt",Oe="Sum",ze="SplitV",De="Softmax",Pe="SparseFillEmptyRows",Le="SparseReshape",We="SparseSegmentMean",Be="SparseSegmentSum",Ue="SquaredDifference",Ve="StridedSlice",Ge="StringSplit",je="Tile",He="TopK",qe="Transform",Ke="Transpose",Xe="Unpack",Ze="ZerosLike",Ye="Step",Je="RotateWithOffset",Qe="_FusedMatMul",et="FusedConv2D",tt="FusedDepthwiseConv2D";function nt(){C().getBool("IS_TEST")||C().getBool("PROD")||console.warn(...arguments)}const rt=M("kernelRegistry",(()=>new Map)),at=M("gradRegistry",(()=>new Map));function st(e,t){const n=ut(e,t);return rt.get(n)}function it(e){return at.get(e)}function ot(e){const t=rt.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function lt(e){const{kernelName:t,backendName:n}=e,r=ut(t,n);rt.has(r)&&nt(`The kernel '${t}' for backend '${n}' is already registered`),rt.set(r,e)}function ut(e,t){return`${t}_${e}`}var dt=n(126);const ht=n.n(dt)()||dt;function pt(e){return ht.fromString(e,!0,16)}function ct(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=o(e)),C().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ft(){return C().platform.now()}function mt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",C().platform.encode(e,t)}function gt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",C().platform.decode(e,t)}pt("c3a5c85c97cb3127"),pt("b492b66fbe98f273"),pt("9ae16a3b2f90404f");class yt{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new bt)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=ft();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:ft()-i})}if(C().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{At(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function At(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class bt{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?d(`${r}ms`,9):r.error,o=d(e,25),l=t.rank,u=t.size,h=d(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${h}\t%c${u}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function xt(e,t,n,r){const a=A(t),s=function(e,t,n,r){const a=l(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?It(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],vt(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=kt(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function vt(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:m(e)?`'${e}'`:"bool"===n?wt(e):parseFloat(e.toFixed(7)).toString(),d(r,t)}function wt(e){return 0===e?"false":"true"}function kt(e,t,n,r,a){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[vt(It(e)[0],0,n)]:"bool"===n?[wt(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=It(r),s=It(s)),["["+r.map(((e,t)=>vt(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>vt(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?It(e):Array.from(e)).map(((e,t)=>vt(e,a[t],n))).join(", ")+"]"]}const u=t.slice(1),d=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;p.push(...kt(e.slice(r,s),u,n,d,a,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;p.push(...kt(e.slice(r,s),u,n,d,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;p.push(...kt(e.slice(r,s),u,n,d,a,t===o-1))}const c=2===l?",":"";p[0]="["+p[0]+c;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function It(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class St{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=l(e),null!=n){const e=n.length;a(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||p(t,this.size),this.strides=A(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),a(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const e of t){if(e<0||e>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let a=t[t.length-1];for(let e=0;e<t.length-1;++e)a+=this.strides[e]*t[e];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Nt().makeTensor(this.values,this.shape,this.dtype)}}let Nt=null,Tt=null,Ct=null;class Et{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=l(e),this.strides=A(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Tt.buffer(this.shape,this.dtype,e)}bufferSync(){return Tt.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return x(this.shape,e,"complex64"===this.dtype)}arraySync(){return x(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Nt().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>gt(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Nt().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Nt().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>gt(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Nt().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Nt().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Tt.print(this,e)}clone(){return this.throwIfDisposed(),Tt.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return xt(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Tt.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Nt().makeVariable(this,e,t,n)}}Object.defineProperty(Et,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),M("Tensor",(()=>Et));class _t extends Et{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!u(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Nt().disposeTensor(this),this.dataId=e.dataId,Nt().incRef(this,null)}dispose(){Nt().disposeVariable(this),this.isDisposedInternal=!0}}var Rt,Mt,$t,Ft,Ot;Object.defineProperty(_t,Symbol.hasInstance,{value:e=>e instanceof Et&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Rt||(Rt={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Mt||(Mt={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}($t||($t={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Ft||(Ft={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ot||(Ot={}));const zt={float32:Ft,int32:Mt,bool:$t,complex64:Ot};function Dt(e,t){if(e.dtype===t.dtype)return[e,t];const n=function(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return zt[e][t]}(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Pt(e){const t=[];return Lt(e,t,new Set),t}function Lt(e,t,n){if(null==e)return;if(e instanceof Et)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),Lt(r,t,n))}}function Wt(e){return null!=e.kernelName}class Bt{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ut{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Bt}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(nt(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new yt(this.backendInstance),!0}setupRegisteredKernels(){ot(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ot(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const n=this.registryFactory[e];if(null==n)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=n.factory();if(!r||r instanceof t||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,n=r.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,nt(`Initialization of backend ${e} failed`),nt(n.stack||n.message)),!1)));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}}catch(t){return nt(`Initialization of backend ${e} failed`),nt(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ut.nextTensorId++}nextVariableId(){return Ut.nextVariableId++}clone(e){const t=Gt.runKernel(ne,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Gt.runKernel(P,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==st(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let o,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Wt(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Wt(e)){const{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;const u=st(t,this.backendName);a(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const o=a.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:d,attrs:h}=e,p=Wt(e)?null:e.backwardsFunc;let c;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(c=this.profiler.profileKernel(u,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(c),t=c.outputs):t=o()})),r&&this.addTapeNode(u,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:c.timeMs,extraInfo:c.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=it(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(a(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return i.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&m(e[0])&&(a=e.map((e=>mt(e))));const s=r.write(a,t,n),i=new Et(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Et(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new _t(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*f(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof _t||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*f(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=it(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=w(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Pt(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(a(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));a(s instanceof Et,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=v(l(e),"float32");return Gt.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!u(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,i,(e=>this.tidy(e)),jt);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){var t=this;return a(y(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];let i;a(r.every((e=>e instanceof Et)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};r.forEach(((e,t)=>{o[t]=e}));const l=(t,n)=>(i=e(...r,n),a(i.value instanceof Et,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),a(y(i.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),i.value),u=(e,t)=>{const n=i.gradFunc(e,t),s=Array.isArray(n)?n:[n];a(s.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),a(s.every((e=>e instanceof Et)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o};return t.runKernelFunc({forwardFunc:l,backwardsFunc:u,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=ft(),n=await this.backend.time(e);return n.wallMs=ft()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Bt;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Vt(){const e=R();if(null==e._tfengine){const t=new S(e);e._tfengine=new Ut(t)}var t;return t=e._tfengine.ENV,_=t,Nt=()=>e._tfengine,e._tfengine}Ut.nextTensorId=0,Ut.nextVariableId=0;const Gt=Vt();function jt(e,t){const n={a:e,b:t};return Gt.runKernel($,n)}const Ht=C();Ht.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ht.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),Ht.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ht.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ht.registerFlag("PROD",(()=>!1)),Ht.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ht.getBool("DEBUG"))),Ht.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ht.registerFlag("IS_TEST",(()=>!1)),Ht.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Ht.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const qt="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Kt(e){return qt?Buffer.byteLength(e):new Blob([e]).size}function Xt(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Zt(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Yt(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Kt(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Kt(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Jt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Jt.instance&&(Jt.instance=new Jt),Jt.instance}static registerSaveRouter(e){Jt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Jt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Jt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Jt.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Jt.getInstance().loadRouters:Jt.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const Qt="tensorflowjs",en="models_store",tn="model_info_store";function nn(){if(!C().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function rn(e){const t=e.result;t.createObjectStore(en,{keyPath:"modelPath"}),t.createObjectStore(tn,{keyPath:"modelPath"})}class an{constructor(e){if(this.indexedDB=nn(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Qt,1);r.onupgradeneeded=()=>rn(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(en,"readonly"),r=t.objectStore(en).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Yt(t),s=a.transaction(tn,"readwrite");let i=s.objectStore(tn);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=a.transaction(en,"readwrite");const o=l.objectStore(en).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(tn);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}an.URL_SCHEME="indexeddb://";const sn=e=>{return C().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(an.URL_SCHEME)?(t=e.slice(an.URL_SCHEME.length),new an(t)):null;var t};Jt.registerSaveRouter(sn),Jt.registerLoadRouter(sn);class on{constructor(){this.indexedDB=nn()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Qt,1);n.onupgradeneeded=()=>rn(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(tn,"readonly"),s=a.objectStore(tn).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(an.URL_SCHEME)?t.slice(an.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Qt,1);r.onupgradeneeded=()=>rn(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(tn,"readwrite"),i=s.objectStore(tn),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{l=a.transaction(en,"readwrite");const r=l.objectStore(en).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const ln="/",un="tensorflowjs_models",dn="info",hn="model_topology",pn="weight_specs",cn="weight_data",fn="model_metadata";function mn(e){return{info:[un,e,dn].join(ln),topology:[un,e,hn].join(ln),weightSpecs:[un,e,pn].join(ln),weightData:[un,e,cn].join(ln),modelMetadata:[un,e,fn].join(ln)}}function gn(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function yn(e){const t=e.split(ln);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ln)}class An{constructor(e){if(!C().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=mn(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Yt(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(qt)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw gn(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(qt){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}An.URL_SCHEME="localstorage://";const bn=e=>{return C().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(An.URL_SCHEME)?(t=e.slice(An.URL_SCHEME.length),new An(t)):null;var t};Jt.registerSaveRouter(bn),Jt.registerLoadRouter(bn);class xn{constructor(){a(C().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),a("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=un+ln,n=ln+dn;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[yn(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=mn(e=(t=e).startsWith(An.URL_SCHEME)?t.slice(An.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return gn(n),r}}class vn{constructor(){this.managers={}}static getInstance(){return null==vn.instance&&(vn.instance=new vn),vn.instance}static registerManager(e,t){a(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),a(e.length>0,(()=>"scheme must not be an empty string."));const n=vn.getInstance();a(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class wn{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(C().get("IS_BROWSER")){C().setPlatform("browser",new wn);try{vn.registerManager(An.URL_SCHEME,new xn)}catch(e){}try{vn.registerManager(an.URL_SCHEME,new on)}catch(e){}}let kn;function In(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",k(e),new St(e,t,n)}function Sn(e,t){let n=e;if(c(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||c(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&C().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Nn(e,r,[]),r}function Nn(e,t,n){if(n=n||[],!Array.isArray(e)&&!c(e))return void a(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));a(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),a(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Nn(e[t],r,n.concat(t))}function Tn(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Cn(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Et)return Tn(r,e.dtype,t,n),e;let a=g(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Tn(r,a,t,n),null==e||!c(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Sn(e,a);c(e)||Array.isArray(e)||(e=[e]);const i=!0,l="string"!==a?ct(e,a):o(e,[],i);return Gt.makeTensor(l,s,a)}function En(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const a=e;return a.map(((e,a)=>Cn(e,`${t}[${a}]`,n,r)))}function _n(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=function(){Gt.startScope(n);try{const e=r(...arguments);return I(e)&&console.error("Cannot return a Promise inside of tidy."),Gt.endScope(e),e}catch(e){throw Gt.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}C().get("IS_NODE")&&C().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=C().global.fetch?C().global.fetch(e,t):(null==kn&&(kn=n(410)),kn(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Rn=_n({cast_:function(e,t){const n=Cn(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Gt.runKernel(P,r,a)}}),Mn=_n({clone_:function(e){const t={x:Cn(e,"x","clone","string_or_numeric")};return Gt.runKernel(ne,t)}});function $n(e){return new Promise((e=>setTimeout(e))).then(e)}Vt(),Tt={buffer:In,cast:Rn,clone:Mn,print:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}};class Fn{constructor(e){if(!C().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Fn.URL_SCHEME)&&(e=e.slice(Fn.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Zt(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await $n((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await $n((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Yt(e)}}}}function On(e,t,n,r){!function(e){a(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){a(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),a(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),a(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function zn(e,t){null==t&&(t={});const n=null==t.fetchFunc?C().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await On(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await On(a,t.onProgress,.5,1)}Fn.URL_SCHEME="downloads://",Jt.registerSaveRouter((e=>C().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Fn.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Fn(e)}(e.slice(Fn.URL_SCHEME.length)):null));class Dn{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(a("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=C().platform.fetch,a(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&a(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Zt(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Yt(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Xt(await zn(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Pn(e){return null!=e.match(Dn.URL_SCHEME_REGEX)}Dn.URL_SCHEME_REGEX=/^https?:\/\//;const Ln=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Pn(e))):Pn(e),n)return function(e,t){return new Dn(e,t)}(e,t)}return null};function Wn(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}function Bn(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Un(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Vn(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}Jt.registerSaveRouter(Ln),Jt.registerLoadRouter(Ln);const Gn=_n({complex_:function(e,t){const n=Cn(e,"real","complex"),r=Cn(t,"imag","complex");s(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return Gt.runKernel("Complex",a)}}),jn=_n({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;a(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=En(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Mn(n[0]);const r=n,s={axis:t};return Gt.runKernel(W,r,s)}}),Hn=_n({imag_:function(e){const t={input:Cn(e,"input","imag")};return Gt.runKernel("Imag",t)}}),qn=_n({real_:function(e){const t={input:Cn(e,"input","real")};return Gt.runKernel("Real",t)}}),Kn=_n({reshape_:function(e,t){const n={x:Cn(e,"x","reshape","string_or_numeric")},r={shape:t};return Gt.runKernel(Ie,n,r)}}),Xn=_n({slice_:function(e,t,n){const r=Cn(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return Gt.runKernel(Me,a,s)}}),Zn=_n({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=Cn(e,"x","split"),a={x:r},s={numOrSizeSplits:t,axis:n};return Gt.runKernel(ze,a,s)}});function Yn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=Yn(e,"float32"),n=Yn(e,"float32");return Gn(t,n)}const n=w(l(e),t);return Gt.makeTensor(n,e,t)}const Jn=_n({zerosLike_:function(e){const t={x:Cn(e,"x","zerosLike")};return Gt.runKernel(Ze,t)}}),Qn=_n({fft_:function(e){a("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Gt.runKernel("FFT",t)}}),er=_n({rfft_:function(e,t){a("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Xn(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=jn([e,Yn(r)],e.shape.length-1),n=t}else s=e;const i=Jn(s),o=Kn(Gn(s,i),[r,n]),l=Qn(o),u=Math.floor(n/2)+1,d=qn(l),h=Hn(l),p=Zn(d,[u,n-u],d.shape.length-1),c=Zn(h,[u,n-u],h.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,Kn(Gn(p[0],c[0]),f)}}),tr=_n({ifft_:function(e){a("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Gt.runKernel("IFFT",t)}}),nr=_n({mul_:function(e,t){let n=Cn(e,"a","mul"),r=Cn(t,"b","mul");[n,r]=Dt(n,r);const a={a:n,b:r};return Gt.runKernel(pe,a)}}),rr=_n({reverse_:function(e,t){const n={x:Cn(e,"x","reverse")},r={dims:t};return Gt.runKernel(Ce,n,r)}});function ar(e,t,n,r){if(null==r&&(r=g(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!c(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){k(t);const e=l(t),r=l(n);a(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==l(t.slice(e));a(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return c(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ct(e,r):o(e,[],!0),Gt.makeTensor(e,t,r)}function sr(e,t){if((c(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&c(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ar(e,[],[],t)}function ir(e,t){i(e);const n=Sn(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ar(e,null,n,t)}function or(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function lr(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ir(a,"float32")}_n({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Kn(e,[n,t]);r=tr(a)}else{const a=[n,2*(t-1)],s=Kn(qn(e),[n,t]),i=Kn(Hn(e),[n,t]),o=rr(Xn(s,[0,1],[n,t-2]),1),l=nr(rr(Xn(i,[0,1],[n,t-2]),1),sr(-1)),u=jn([s,o],1),d=jn([i,l],1),h=Kn(Gn(u,d),[a[0],a[1]]);r=tr(h)}if(r=qn(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Kn(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),_n({hammingWindow_:function(e){return lr(e,.54,.46)}});const ur=_n({hannWindow_:function(e){return lr(e,.5,.5)}});function dr(e,t,n){const r={shape:e,value:t,dtype:n};return Gt.runKernel(X,{},r)}function hr(e,t,n){if(i(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Sn(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ar(e,t,r,n)}const pr=_n({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const i=[];for(;s+t<=e.size;)i.push(Xn(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=jn([Xn(e,s,t-r),dr([r],a)]);i.push(o),s+=n}return 0===i.length?hr([],[0,t]):Kn(jn(i),[i.length,t])}});_n({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ur;null==r&&(r=or(t));const s=pr(e,t,n),i=nr(s,a(t));return er(i,r)}}),_n({cropAndResize_:function(e,t,n,r){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=Cn(e,"image","cropAndResize"),l=Cn(t,"boxes","cropAndResize","float32"),u=Cn(n,"boxInd","cropAndResize","int32"),d=l.shape[0];a(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),a(2===l.rank&&4===l.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${l.shape}.`)),a(1===u.rank&&u.shape[0]===d,(()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${l.shape}.`)),a(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),a(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),a("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const h={image:o,boxes:l,boxInd:u},p={method:s,extrapolationValue:i,cropSize:r},c=Gt.runKernel(G,h,p);return c}}),_n({flipLeftRight_:function(e){const t=Cn(e,"image","flipLeftRight","float32");a(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Gt.runKernel(Z,n,{})}});const cr=_n({tile_:function(e,t){const n=Cn(e,"x","tile","string_or_numeric");a(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Gt.runKernel(je,r,s)}});function fr(e,t,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const o=e.shape[0];return n=Math.min(n,o),a(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),a(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),a(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),a(1===t.rank,(()=>"scores must be a 1D tensor")),a(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),a(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}_n({grayscaleToRGB_:function(e){const t=Cn(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];a(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),a(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,cr(t,s)}}),_n({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=Cn(e,"image","rotateWithOffset","float32");a(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},o={radians:t,fillValue:n,center:r},l=Gt.runKernel(Je,i,o);return l}}),_n({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=Cn(e,"boxes","nonMaxSuppression","float32"),i=Cn(t,"scores","nonMaxSuppression","float32"),o=fr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return Gt.runKernel(fe,{boxes:s,scores:i},l)}}),_n({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const i=Cn(e,"boxes","nonMaxSuppression"),o=Cn(t,"scores","nonMaxSuppression"),l=fr(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;const u={boxes:i,scores:o},d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=Gt.runKernel(ge,u,d);return{selectedIndices:h[0],selectedScores:h[1]}}}),_n({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Cn(e,"boxes","nonMaxSuppression"),o=Cn(t,"scores","nonMaxSuppression"),l=fr(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,p={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:s},f=Gt.runKernel(me,p,c);return{selectedIndices:f[0],validOutputs:f[1]}}}),_n({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Cn(e,"images","resizeBilinear");a(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),a(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),a(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,o=!1;3===s.rank&&(o=!0,i=Kn(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,l={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},d=Gt.runKernel(Ne,l,u);return o?Kn(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),_n({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=Cn(e,"images","resizeNearestNeighbor");a(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),a(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),a("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),a(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,o=!1;3===s.rank&&(o=!0,i=Kn(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,l={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},d=Gt.runKernel(Se,l,u);return o?Kn(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const mr=_n({bincount_:function(e,t,n){const r=Cn(e,"x","bincount"),s=Cn(t,"weights","bincount");a("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),a(n>=0,(()=>`size must be non-negative, but got ${n}.`)),a(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},o={size:n};return Gt.runKernel("Bincount",i,o)}}),gr=_n({lessEqual_:function(e,t){let n=Cn(e,"a","lessEqual","string_or_numeric"),r=Cn(t,"b","lessEqual","string_or_numeric");[n,r]=Dt(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(ae,a)}}),yr=_n({greater_:function(e,t){let n=Cn(e,"a","greater","string_or_numeric"),r=Cn(t,"b","greater","string_or_numeric");[n,r]=Dt(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(ee,a)}}),Ar=_n({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=Cn(e,"x","sum");"bool"===r.dtype&&(r=Rn(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Gt.runKernel(Oe,a,s)}}),br=_n({add_:function(e,t){let n=Cn(e,"a","add"),r=Cn(t,"b","add");[n,r]=Dt(n,r);const a={a:n,b:r};return Gt.runKernel($,a)}}),xr=_n({floorDiv_:function(e,t){let n=Cn(e,"a","floorDiv"),r=Cn(t,"b","floorDiv");[n,r]=Dt(n,r);const a={a:n,b:r};return Gt.runKernel(Y,a)}}),vr=_n({div_:function(e,t){let n=Cn(e,"a","div"),r=Cn(t,"b","div");if([n,r]=Dt(n,r),"int32"===n.dtype&&"int32"===r.dtype)return xr(n,r);const a={a:n,b:r};return Gt.runKernel(q,a,{})}}),wr=_n({sub_:function(e,t){let n=Cn(e,"a","sub"),r=Cn(t,"b","sub");[n,r]=Dt(n,r);const a={a:n,b:r};return Gt.runKernel("Sub",a)}}),kr=_n({round_:function(e){const t={x:Cn(e,"x","round")};return Gt.runKernel(Ee,t)}}),Ir=_n({broadcastTo_:function(e,t){let n=Cn(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Kn(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Mn(n);const i={x:n},o={reps:s};return Gt.runKernel(je,i,o)}}),Sr=_n({where_:function(e,t,n){const r=Cn(t,"a","where"),a=Cn(n,"b","where"),s=Cn(e,"condition","where","bool"),i=Wn(Wn(s.shape,r.shape),a.shape),o={condition:Ir(s,i),t:Ir(r,i),e:Ir(a,i)};return Gt.runKernel(Re,o)}});function Nr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Gt.runKernel(we,{},a)}function Tr(e,t,n){return ar(e,t,Sn(e,n),n)}function Cr(e,t){let n,r,a,s,i,o,l=ir([-1]),u=ir([0]),d=ir([0]);for(let h=0;h<e.size-1;h++){n=Xn(e,0,h+1),r=Xn(e,h+1),i=vr(Ar(n),t),o=vr(Ar(r),t);const p=Ar(nr(n,Nr(0,n.size)));a=vr(p,Ar(n));const c=dr(r.shape,n.size),f=br(Nr(0,r.size),c),m=nr(r,f);s=vr(Ar(m),Ar(r));const g=wr(a,s),y=wr(a,s),A=nr(i,o);d=nr(nr(A,g),y);const b=yr(d,u);u=Sr(b,d,u),l=Sr(b,ir([h]),l)}return l}_n({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const s=Cn(e,"image","threshold"),i=.2989,o=.587,l=.114,u=s.shape[0]*s.shape[1];let d,h,p,c,f=nr(ir([r]),255);if(a(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),a(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),a("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),a("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[d,h,p]=Zn(s,[1,1,1],-1);const e=nr(d,i),t=nr(h,o),n=nr(p,l);c=br(br(e,t),n)}else c=e;"otsu"===t&&(f=Cr(mr(Rn(kr(c),"int32"),Tr([]),256),u));const m=n?gr(c,f):yr(c,f),g=Rn(nr(m,255),"int32");return g}}),_n({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=arguments.length>5?arguments[5]:void 0;const o=Cn(e,"image","transform","float32"),l=Cn(t,"transforms","transform","float32");a(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),a(2===l.rank&&(l.shape[0]===o.shape[0]||1===l.shape[0])&&8===l.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),a(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const u={image:o,transforms:l},d={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return Gt.runKernel(qe,u,d)}});const Er=_n({greaterEqual_:function(e,t){let n=Cn(e,"a","greaterEqual","string_or_numeric"),r=Cn(t,"b","greaterEqual","string_or_numeric");[n,r]=Dt(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(te,a)}}),_r=_n({logicalAnd_:function(e,t){const n=Cn(e,"a","logicalAnd","bool"),r=Cn(t,"b","logicalAnd","bool");Wn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(se,a)}}),Rr=_n({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=En(e,"tensors","stack","string_or_numeric");a(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&a(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Gt.runKernel(Ae,r,s)}}),Mr=_n({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Cn(e,"x","unstack","string_or_numeric");a(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Gt.runKernel(Xe,r,s)}});_n({bandPart_:function(e,t,n){a(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),a(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Cn(e,"a","bandPart");a(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,o]=r.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=i),n<0&&(n=o);const l=Kn(Nr(0,i,1,"int32"),[-1,1]),u=Nr(0,o,1,"int32"),d=wr(l,u),h=_r(gr(d,sr(+t,"int32")),Er(d,sr(-n,"int32"))),p=Yn([i,o],r.dtype);return Kn(Rr(Mr(Kn(r,[-1,i,o])).map((e=>Sr(h,e,p)))),s)}});const $r=_n({abs_:function(e){const t=Cn(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Gt.runKernel("ComplexAbs",e)}{const e={x:t};return Gt.runKernel("Abs",e)}}});function Fr(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Or(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function zr(e,t){return function(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}(e,t.map((e=>1)),t)}function Dr(e,t,n){a(Fr(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Pr(e,t){if(Fr(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Lr(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Wr=_n({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Cn(e,"x","max"),a={x:r},s={reductionIndices:t,keepDims:n};return Gt.runKernel(ie,a,s)}}),Br=_n({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Cn(e,"x","min"),a={x:r},s={axis:t,keepDims:n};return Gt.runKernel(ue,a,s)}}),Ur=_n({pow_:function(e,t){let n=Cn(e,"base","pow"),r=Cn(t,"exp","pow");[n,r]=Dt(n,r);const a={a:n,b:r};return Gt.runKernel("Pow",a)}}),Vr=_n({sqrt_:function(e){const t={x:Cn(e,"x","sqrt","float32")};return Gt.runKernel(Fe,t)}}),Gr=_n({square_:function(e){const t=Cn(e,"x","square");return Gt.runKernel("Square",{x:t},{})}});function jr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return $r(e);if(1!==e.rank&&null===n)return jr(Kn(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Ar($r(e),n);if(t===1/0)return Wr($r(e),n);if(t===-1/0)return Br($r(e),n);if("euclidean"===t||2===t)return Vr(Ar(Ur($r(e),sr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Wr(Ar($r(e),n[0]),n[1]-1);if(t===1/0)return Wr(Ar($r(e),n[1]),n[0]);if(t===-1/0)return Br(Ar($r(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Vr(Ar(Gr(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Hr=_n({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=jr(e=Cn(e,"x","norm"),t,n);let s=a.shape;if(r){const t=h(n,e.shape);s=zr(a.shape,t)}return Kn(a,s)}}),qr=_n({squeeze_:function(e,t){const n=Cn(e,"x","squeeze");return Kn(n,function(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:h(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}(n.shape,t).newShape)}});function Kr(e){Pt(e).forEach((e=>e.dispose()))}_n({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,a(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)a(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Zn(e,e.shape[0],0).map((e=>qr(e,[0])));a(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Gt.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=nr(Ar(nr(n[r],e)),n[r]);e=wr(e,t)}return vr(e,Hr(e,"euclidean"))})));return t?Rr(n,0):n}}),Ct=function(e){C().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Xr=_n({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Cn(e,"x","expandDims","string_or_numeric");a(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Gt.runKernel(K,r,s)}}),Zr=_n({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const a=In([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Kn(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return cr(Xr(i,0),[n[0],1,1]);if(2===n.length)return cr(Xr(Xr(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return cr(Xr(Xr(Xr(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Yr=_n({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=Cn(e,"a","matMul"),s=Cn(t,"b","matMul");[a,s]=Dt(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return Gt.runKernel(D,i,o)}}),Jr=_n({neg_:function(e){const t={x:Cn(e,"x","neg")};return Gt.runKernel("Neg",t)}}),Qr=_n({transpose_:function(e,t){const n=Cn(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),a(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{a(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Gt.runKernel(Ke,r,s)}});function ea(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Gt.tidy((()=>{a(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Zr(n),i=Mn(e);const o=hr([[1]],[1,1]);let l=Mn(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=i,a=l,u=s;[l,i,s]=Gt.tidy((()=>{const t=Xn(i,[e,e],[n-e,1]),a=Hr(t),u=Xn(i,[e,e],[1,1]),d=Sr(yr(u,0),hr([[-1]]),hr([[1]])),h=wr(u,nr(d,a)),p=vr(t,h);l=1===p.shape[0]?Mn(o):jn([o,Xn(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const c=Jr(vr(Yr(d,h),a)),f=Xn(i,[e,0],[n-e,r]),m=nr(c,l),g=Qr(l);if(0===e)i=wr(f,Yr(m,Yr(g,f)));else{const t=wr(f,Yr(m,Yr(g,f)));i=jn([Xn(i,[0,0],[e,r]),t],0)}const y=Qr(m),A=Xn(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=wr(A,Yr(Yr(A,l),y));else{const t=wr(A,Yr(Yr(A,l),y));s=jn([Xn(s,[0,0],[n,e]),t],1)}return[l,i,s]})),Kr([t,a,u])}return!t&&n>r&&(s=Xn(s,[0,0],[n,r]),i=Xn(i,[0,0],[r,r])),[s,i]}))}var ta;_n({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(a(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ea(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Mr(Kn(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=ea(e,t);a.push(n),s.push(r)})),[Kn(Rr(a,0),e.shape),Kn(Rr(s,0),e.shape)]}}}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ta||(ta={}));const na=_n({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Cn(e,"x","mean"),a={x:r},s={axis:t,keepDims:n};return Gt.runKernel(le,a,s)}}),ra=_n({notEqual_:function(e,t){let n=Cn(e,"a","notEqual","string_or_numeric"),r=Cn(t,"b","notEqual","string_or_numeric");[n,r]=Dt(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(ce,a)}});function aa(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){const t=aa(e,"float32"),n=Yn(e,"float32");return Gn(t,n)}const n=v(l(e),t);return Gt.makeTensor(n,e,t)}const sa=_n({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ta.SUM_BY_NONZERO_WEIGHTS;const r=Cn(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Cn(t,"weights","computeWeightedLoss"));const s=null==a?r:nr(r,a);if(n===ta.NONE)return s;if(n===ta.SUM)return Ar(s);if(n===ta.MEAN){if(null==a)return na(s);{const e=r.size/a.size,t=vr(Ar(s),Ar(a));return e>1?vr(t,sr(e)):t}}if(n===ta.SUM_BY_NONZERO_WEIGHTS){if(null==a)return vr(Ar(s),sr(r.size));{const e=nr(a,aa(r.shape)),t=Rn(Ar(ra(e,sr(0))),"float32");return vr(Ar(s),t)}}throw Error(`Unknown reduction: ${n}`)}});_n({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ta.SUM_BY_NONZERO_WEIGHTS;const a=Cn(e,"labels","absoluteDifference"),i=Cn(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Cn(n,"weights","absoluteDifference")),s(a.shape,i.shape,"Error in absoluteDifference: ");const l=$r(wr(a,i));return sa(l,o,r)}}),_n({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ta.SUM_BY_NONZERO_WEIGHTS;const i=Cn(e,"labels","cosineDistance"),o=Cn(t,"predictions","cosineDistance");let l=null;null!=r&&(l=Cn(r,"weights","cosineDistance")),s(i.shape,o.shape,"Error in cosineDistance: ");const u=sr(1),d=wr(u,Ar(nr(i,o),n,!0));return sa(d,l,a)}});const ia=_n({relu_:function(e){const t={x:Cn(e,"x","relu")};return Gt.runKernel(ke,t)}});_n({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ta.SUM_BY_NONZERO_WEIGHTS,a=Cn(e,"labels","hingeLoss");const i=Cn(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Cn(n,"weights","hingeLoss")),s(a.shape,i.shape,"Error in hingeLoss: ");const l=sr(1);a=wr(nr(sr(2),a),l);const u=ia(wr(l,nr(a,i)));return sa(u,o,r)}});const oa=_n({minimum_:function(e,t){let n=Cn(e,"a","minimum"),r=Cn(t,"b","minimum");[n,r]=Dt(n,r),"bool"===n.dtype&&(n=Rn(n,"int32"),r=Rn(r,"int32")),Wn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(de,a)}});_n({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ta.SUM_BY_NONZERO_WEIGHTS;const i=Cn(e,"labels","huberLoss"),o=Cn(t,"predictions","huberLoss");let l=null;null!=n&&(l=Cn(n,"weights","huberLoss")),s(i.shape,o.shape,"Error in huberLoss: ");const u=sr(r),d=$r(wr(o,i)),h=oa(d,u),p=wr(d,h),c=br(nr(sr(.5),Gr(h)),nr(u,p));return sa(c,l,a)}});const la=_n({log_:function(e){const t={x:Cn(e,"x","log","float32")};return Gt.runKernel("Log",t)}});_n({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ta.SUM_BY_NONZERO_WEIGHTS;const i=Cn(e,"labels","logLoss"),o=Cn(t,"predictions","logLoss");let l=null;null!=n&&(l=Cn(n,"weights","logLoss")),s(i.shape,o.shape,"Error in logLoss: ");const u=sr(1),d=sr(r),h=Jr(nr(i,la(br(o,d)))),p=nr(wr(u,i),la(br(wr(u,o),d))),c=wr(h,p);return sa(c,l,a)}});const ua=_n({squaredDifference_:function(e,t){let n=Cn(e,"a","squaredDifference"),r=Cn(t,"b","squaredDifference");[n,r]=Dt(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return Gt.runKernel(Ue,a,{})}});_n({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ta.SUM_BY_NONZERO_WEIGHTS;const a=Cn(e,"labels","meanSquaredError"),i=Cn(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Cn(n,"weights","meanSquaredError")),s(a.shape,i.shape,"Error in meanSquaredError: ");const l=ua(a,i);return sa(l,o,r)}});const da=_n({exp_:function(e){const t={x:Cn(e,"x","exp")};return Gt.runKernel("Exp",t)}}),ha=_n({log1p_:function(e){const t={x:Cn(e,"x","log1p")};return Gt.runKernel("Log1p",t)}});function pa(e,t){const n=Cn(e,"labels","sigmoidCrossEntropyWithLogits"),r=Cn(t,"logits","sigmoidCrossEntropyWithLogits");s(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=ia(r),i=nr(r,n),o=ha(da(Jr($r(r))));return br(wr(a,i),o)}function ca(e){return Gt.customGrad(e)}_n({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ta.SUM_BY_NONZERO_WEIGHTS,i=Cn(e,"multiClassLabels","sigmoidCrossEntropy");const o=Cn(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=Cn(n,"weights","sigmoidCrossEntropy")),s(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=sr(r),t=sr(1),n=sr(.5);i=br(nr(i,wr(t,e)),nr(n,e))}const u=pa(i,o);return sa(u,l,a)}});const fa=_n({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const r=Cn(e,"x","logSumExp"),a=h(t,r.shape),s=Wr(r,a,!0),i=wr(r,s),o=da(i),l=Ar(o,a),u=la(l),d=br(Kn(s,u.shape),u);if(n){const e=zr(d.shape,a);return Kn(d,e)}return d}});function ma(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=ca(((e,t,r)=>{const a=fa(t,[n],!0),s=wr(Rn(t,"float32"),a);r([e,s]);const i=Jr(nr(s,e));return{value:Ar(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=zr(e.shape,[n]);return[nr(Kn(e,s),wr(Rn(r,"float32"),da(a))),nr(Kn(e,s),wr(da(a),Rn(r,"float32")))]}}}));return r(e,t)}function ga(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function ya(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[o,l]=ba(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Aa(e,u,n,r,a,s,!1,i)}function Aa(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,d,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,d]=e}const[p,c,,f]=t,[m,g]=ba(n),[y,A]=ba(r),b=xa(p,y),x=xa(c,A),{padInfo:v,outHeight:w,outWidth:k}=va(a,u,d,m,g,b,x,s,o),I=i?f*h:f;let S;return"channelsFirst"===o?S=[l,I,w,k]:"channelsLast"===o&&(S=[l,w,k,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:h,outHeight:w,outWidth:k,outChannels:I,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:c,effectiveFilterHeight:b,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:A,inShape:e,outShape:S,filterShape:t}}function ba(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function xa(e,t){return t<=1?e:e+(e-1)*(t-1)}function va(e,t,n,r,a,s,i,o,l){let u,d,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=function(e,t,n){const r=xa(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}(e,t,n));const s=e[1];return[wa((e[0]-t+2*r)/n+1,a),wa((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),p=e-l,c=Math.floor(o/2);u={top:l,bottom:p,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:c,left:f,right:m,type:0===p&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},d=wa((t-s+p+c)/r+1,o),h=wa((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:d,outWidth:h}}function wa(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ka(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ia(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Sa(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Na(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Ta(e){try{return e.map((e=>gt(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ca(e){return e.map((e=>mt(e)))}var Ea,_a;let Ra;_n({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ta.SUM_BY_NONZERO_WEIGHTS,i=Cn(e,"onehotLabels","softmaxCrossEntropy");const o=Cn(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=Cn(n,"weights","softmaxCrossEntropy")),s(i.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=sr(r),t=sr(1),n=sr(i.shape[1]);i=br(nr(i,wr(t,e)),vr(e,n))}const u=ma(i,o);return sa(u,l,a)}}),_n({sparseFillEmptyRows_:function(e,t,n,r){const a=Cn(e,"indices","sparseFillEmptyRows","int32"),s=Cn(t,"values","sparseFillEmptyRows"),i=Cn(n,"denseShape","sparseFillEmptyRows","int32"),o=Cn(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:a,values:s,denseShape:i,defaultValue:o},u=Gt.runKernel(Pe,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),_n({sparseReshape_:function(e,t,n){const r=Cn(e,"inputIndices","sparseReshape","int32"),a=Cn(t,"inputShape","sparseReshape","int32"),s=Cn(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=Gt.runKernel(Le,i);return{outputIndices:o[0],outputShape:o[1]}}}),_n({sparseSegmentMean_:function(e,t,n){const r=Cn(e,"data","sparseSegmentMean"),a=Cn(t,"indices","sparseSegmentMean","int32"),s=Cn(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Gt.runKernel(We,i)}}),_n({sparseSegmentSum_:function(e,t,n){const r=Cn(e,"data","sparseSegmentSum"),a=Cn(t,"indices","sparseSegmentSum","int32"),s=Cn(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Gt.runKernel(Be,i)}}),_n({stringNGrams_:function(e,t,n,r,a,s,i,o){const l=Cn(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Cn(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const d={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=Gt.runKernel("StringNGrams",h,d);return{nGrams:p[0],nGramsSplits:p[1]}}}),_n({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=Cn(e,"input","stringSplit","string"),a=Cn(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=Gt.runKernel(Ge,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),_n({stringToHashBucketFast_:function(e,t){const n=Cn(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return Gt.runKernel("StringToHashBucketFast",a,r)}}),_n({elu_:function(e){const t={x:Cn(e,"x","elu","float32")};return Gt.runKernel("Elu",t)}}),_n({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n=Cn(e,"x","leakyRelu"),r={x:n},a={alpha:t};return Gt.runKernel(re,r,a)}}),_n({prelu_:function(e,t){const n={x:Cn(e,"x","prelu"),alpha:Cn(t,"alpha","prelu")};return Gt.runKernel(xe,n)}}),_n({relu6_:function(e){const t={x:Cn(e,"x","relu6")};return Gt.runKernel(Te,t)}}),_n({sigmoid_:function(e){const t={x:Cn(e,"x","sigmoid","float32")};return Gt.runKernel($e,t)}}),_n({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Cn(e,"x","step"),r={x:n},a={alpha:t};return Gt.runKernel(Ye,r,a)}}),function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(Ea||(Ea={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(_a||(_a={}));const Ma={kernelName:Qe,backendName:"wasm",setupFunc:function(e){Ra=e.wasm.cwrap(Qe,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r,p=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=_a[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);const y=l?a.shape[2]:a.shape[1],A=u?s.shape[1]:s.shape[2],b=Wn(a.shape.slice(0,-2),s.shape.slice(0,-2)),x=n.makeOutput([...b,y,A],a.dtype),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(a.shape).buffer),k=new Uint8Array(new Int32Array(s.shape).buffer);return Ra(p,w,a.shape.length,c,k,s.shape.length,l,u,g,f,m,h||0,v),x}};function $a(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===l(i.shape)||n(s,Ea[a.dtype],o),i}}}const Fa=$a("Abs");function Oa(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,u=t.dataIdMap.get(i.dataId).id,d=null!=n?n:s.dtype,h=Wn(s.shape,i.shape),p=t.makeOutput(h,d);if(0===l(h))return p;const c=new Uint8Array(new Int32Array(s.shape).buffer),f=new Uint8Array(new Int32Array(i.shape).buffer),m=t.dataIdMap.get(p.dataId).id;return r(o,c,s.shape.length,u,f,i.shape.length,Ea[s.dtype],m),p}}}const za=Oa($);let Da;const Pa={kernelName:F,backendName:"wasm",setupFunc:function(e){Da=e.wasm.cwrap(F,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===l(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return Da(s,a.length,Ea[r.dtype],i),r}};function La(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const Wa={kernelName:ne,backendName:"wasm",kernelFunc:La};let Ba;function Ua(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=La({inputs:t,backend:n});return e.shape=o,e}const u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return Ba(d,c,l.shape.length,Ea[l.dtype],h,p,s.length),u}const Va={kernelName:Ke,backendName:"wasm",kernelFunc:Ua,setupFunc:function(e){Ba=e.wasm.cwrap(Ke,null,["number","array","number","number","number","array","number"])}};function Ga(e,t,n){const r=e.shape,a=e.shape.length,s=h(t,r);let i=s;const o=Pr(i,a);let l=null,u=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Lr(i.length,a),l=Ua({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}let ja;const Ha={kernelName:"All",backendName:"wasm",setupFunc:function(e){ja=e.wasm.cwrap("All",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=Ga(i,a,t);c&&(u=d,o=t.dataIdMap.get(d.dataId).id),Dr("all",h,u.shape.length);const[f,m]=Or(u.shape,h),g=l(m),y=t.makeOutput(f,i.dtype);if(0!==l(u.shape)){const e=t.dataIdMap.get(y.dataId).id;ja(o,g,e)}if(c&&t.disposeData(d.dataId),s){const e=zr(y.shape,p);y.shape=e}return y}};let qa;const Ka={kernelName:"Any",backendName:"wasm",setupFunc:function(e){qa=e.wasm.cwrap("Any",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=Ga(i,a,t);c&&(u=d,o=t.dataIdMap.get(d.dataId).id),Dr("any",h,u.shape.length);const[f,m]=Or(u.shape,h),g=l(m),y=t.makeOutput(f,i.dtype);if(0!==l(u.shape)){const e=t.dataIdMap.get(y.dataId).id;qa(o,g,e)}if(c&&t.disposeData(d.dataId),s){const e=zr(y.shape,p);y.shape=e}return y}};let Xa;const Za={kernelName:O,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:d,axes:h,inputWasTransposed:p}=Ga(s,a,t);if(p){const e=t.dataIdMap.get(d.dataId).id;e!==i&&(u=d,o=e)}const c=u.shape.slice(0,-1),f=t.makeOutput(c,"int32"),m=t.dataIdMap.get(f.dataId).id,g=l(f.shape),y=u.shape[h[0]];return Xa(o,Ea[u.dtype],g,y,m),p&&t.disposeData(d.dataId),f},setupFunc:function(e){Xa=e.wasm.cwrap(O,null,["number","number","number","number","number"])}};let Ya;const Ja={kernelName:z,backendName:"wasm",setupFunc:function(e){Ya=e.wasm.cwrap(z,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=ya(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,A=d.strideWidth,b=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);const x=r.makeOutput(d.outShape,"float32"),v=r.dataIdMap.get(x.dataId).id;return Ya(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,f,m,g,y,A,b,v),x}};function Qa(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:s}=n,i=l(r.shape),o=function(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}(s,i);return a(i===l(o),(()=>`new shape: ${o}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}const es={kernelName:Ie,backendName:"wasm",kernelFunc:Qa};let ts;const ns={kernelName:D,backendName:"wasm",setupFunc:function(e){ts=e.wasm.cwrap(D,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:o,transposeB:u}=r;if("float32"!==s.dtype||"float32"!==i.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const d=s.shape.length,h=i.shape.length,p=o?s.shape[d-2]:s.shape[d-1],c=u?i.shape[h-1]:i.shape[h-2],f=o?s.shape[d-1]:s.shape[d-2],m=u?i.shape[h-2]:i.shape[h-1],g=s.shape.slice(0,-2),y=i.shape.slice(0,-2),A=l(g),b=l(y),x=Wn(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([f,m]);a(p===c,(()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`));const v=u?[b,m,c]:[b,c,m],w=Qa({inputs:{x:s},backend:n,attrs:{shape:o?[A,p,f]:[A,f,p]}}),k=Qa({inputs:{x:i},backend:n,attrs:{shape:v}}),I=n.dataIdMap.get(w.dataId).id,S=n.dataIdMap.get(k.dataId).id,N=o?w.shape[2]:w.shape[1],T=u?k.shape[1]:k.shape[2],C=Math.max(A,b),E=n.makeOutput([C,N,T],w.dtype),_=n.dataIdMap.get(E.dataId).id,R=new Uint8Array(new Int32Array(w.shape).buffer),M=new Uint8Array(new Int32Array(k.shape).buffer);return ts(I,R,w.shape.length,S,M,k.shape.length,o,u,_),n.disposeData(w.dataId),n.disposeData(k.dataId),E.shape=x,E}};function rs(e,t,n,r,a){const s=Bn(r,t,n),i=l(n),o=A(r);if(s){const n=Un(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=In(r,a,"string"===a?Ta(e):e),d=In(n,a);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));d.set(u.get(...r),...n)}return"string"===a?Ca(d.values):d.values}function as(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:s}=e,[i,o]=function(e,t,n){let r;const s=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{a(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(a(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}(t,n,r),u=Bn(t.shape,i,o),d=s.readSync(t.dataId),h=s.makeOutput(o,t.dtype),p=A(t.shape),c=s.dataIdMap.get(h.dataId);if(u){const e=Un(i,p);return"string"===t.dtype?c.stringBytes=d.slice(e,e+l(o)):s.typedArrayFromHeap(h).set(d.subarray(e,e+l(o))),h}if("string"===t.dtype){const e=rs(d,i,o,t.shape,t.dtype);return c.stringBytes=e,h}const f=s.typedArrayFromHeap(h),m=t.shape.length;if(2===m)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(d,p[0],f,i,o);else if(3===m)!function(e,t,n,r,a,s){let i=0;const o=a[0],l=a[1],u=a[2],d=o+s[0],h=l+s[1];for(let a=o;a<d;a++)for(let o=l;o<h;o++){const l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(d,p[0],p[1],f,i,o);else if(4===m)!function(e,t,n,r,a,s,i){let o=0;const l=s[0],u=s[1],d=s[2],h=l+i[0],p=u+i[1],c=d+i[2],f=s[3];for(let s=l;s<h;s++)for(let l=u;l<p;l++)for(let u=d;u<c;u++){const d=s*t+l*n+u*r+f;a.set(e.subarray(d,d+i[3]),o),o+=i[3]}}(d,p[0],p[1],p[2],f,i,o);else{const e=rs(d,i,o,t.shape,t.dtype);f.set(e)}return h}const ss={kernelName:Me,backendName:"wasm",kernelFunc:as},is={kernelName:"BatchToSpaceND",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=Ia(a.shape,s,o),u=Sa(l.length,s.length),d=Na(a.shape,s,o),h=function(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}(i,s.length),p=function(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}(d,i,s.length),c=Qa({inputs:{x:a},backend:n,attrs:{shape:l}}),f=Ua({inputs:{x:c},backend:n,attrs:{perm:u}}),m=as({inputs:{x:Qa({inputs:{x:f},backend:n,attrs:{shape:d}})},backend:n,attrs:{begin:h,size:p}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),m}};function os(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const ls={kernelName:P,backendName:"wasm",kernelFunc:os},us=$a("Ceil");let ds;const hs={kernelName:L,backendName:"wasm",setupFunc:function(e){ds=e.wasm.cwrap(L,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return ds(o,s,i,u),l}};function ps(e){const{inputs:t,backend:n}=e,r=h(e.attrs.axis,t[0].shape)[0];let s=ga(t.map((e=>e.shape)),r);const i=t.filter((e=>l(e.shape)>0));if(1===i.length)return La({inputs:{x:i[0]},backend:n});const o=n.makeOutput(s,t[0].dtype);if(0===l(s))return o;if(function(e,t){const n=e[0].length;e.forEach(((e,t)=>{a(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),a(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let i=0;i<n;i++)a(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}(i.map((e=>e.shape)),r),"string"===i[0].dtype){const e=i.map((e=>{const t=l(e.shape.slice(r));return Qa({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),a=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));s=ga(e.map((e=>e.shape)),1);const u=1===e[0].shape[0],d=function(e,t,n,r){const a=p(n,l(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=l(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?Ta(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}(a,s,t[0].dtype,u),h=ga(i.map((e=>e.shape)),r);return o.shape=h,n.dataIdMap.get(o.dataId).stringBytes=Ca(d),e.forEach((e=>n.disposeData(e.dataId))),o}const u=l(i[0].shape.slice(0,r));let d=0;const c=i.map((e=>{const t=l(e.shape.slice(r));return d+=t,t})),f=i.map((e=>n.typedArrayFromHeap(e))),m=n.typedArrayFromHeap(o);for(let e=0;e<u;e++){let t=e*d;for(let n=0;n<f.length;n++){const r=c[n],a=e*r,s=f[n].subarray(a,a+r);m.set(s,t),t+=r}}return o}const cs={kernelName:W,backendName:"wasm",kernelFunc:ps};let fs;const ms={kernelName:B,backendName:"wasm",setupFunc:function(e){fs=e.wasm.cwrap(B,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h,dataFormat:p}=n,c=ka(p),f=Aa(a.shape,s.shape,l,u,d,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,b=f.padInfo.bottom,x=f.padInfo.left,v=f.dilationHeight,w=f.dilationWidth,k=f.strideHeight,I=f.strideWidth,S=f.inChannels,N=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return fs(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,A,b,x,T,v,w,k,I,S,N,E),C}};let gs;const ys={kernelName:U,backendName:"wasm",setupFunc:function(e){gs=e.wasm.cwrap(U,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,h=ka(l),p=Aa(d,s.shape,i,1,o,u,!1,h),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:v,outWidth:w,strideHeight:k,strideWidth:I}=p,S=f-1-p.padInfo.top,N=m-1-p.padInfo.left,T="channelsLast"===p.dataFormat,C=A(p.inShape),E=A(a.shape),[_,R,M]=A(s.shape),$=C[0],F=T?C[1]:C[2],O=T?C[2]:1,z=T?1:C[1],D=E[0],P=T?E[1]:E[2],L=T?E[2]:1,W=T?1:E[1],B=t.makeOutput(p.inShape,"float32"),U=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,G=t.dataIdMap.get(s.dataId).id;return gs(V,G,c,f,m,y,b,g,v,w,x,k,I,S,N,_,R,M,$,F,O,z,D,P,L,W,U),B}},As=$a("Cos"),bs=$a("Cosh");var xs;let vs;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(xs||(xs={}));const ws={kernelName:G,backendName:"wasm",setupFunc:function(e){vs=e.wasm.cwrap(G,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=n,d=l.shape[0],[h,p]=i,c=[d,h,p,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=os({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(l.dataId).id,A=t.dataIdMap.get(u.dataId).id,b=t.makeOutput(c,"float32"),x=t.dataIdMap.get(b.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return vs(g,y,A,d,v,h,p,xs[a],s,x),null!=f&&t.disposeData(f.dataId),b}};let ks;const Is={kernelName:V,backendName:"wasm",setupFunc:function(e){ks=e.wasm.cwrap(V,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:o,reverse:l}=r,u=s.shape.length;a("float32"===s.dtype||"int32"===s.dtype,(()=>`cumsum does not support ${s.dtype} tensors in the WASM backend`));const d=Pr([i],u);let h=s;null!==d&&(h=Ua({inputs:{x:s},attrs:{perm:d},backend:n}));const p=Lr(1,u)[0];Dr("cumsum",[p],u);const c=n.makeOutput(h.shape,h.dtype),f=h.shape[p],m=n.dataIdMap.get(h.dataId).id,g=n.dataIdMap.get(c.dataId).id;ks(m,o?1:0,l?1:0,f,g,Ea[s.dtype]);let y=c;if(null!==d){const e=d.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]));y=Ua({inputs:{x:c},attrs:{perm:e},backend:n}),n.disposeData(h.dataId),n.disposeData(c.dataId)}return y}};let Ss;const Ns={kernelName:j,backendName:"wasm",setupFunc:function(e){Ss=e.wasm.cwrap(j,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=t.makeOutput(h,"float32"),c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(A(a.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(A(h)).buffer),y=t.dataIdMap.get(p.dataId).id;return Ss(c,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,h.length,y),p}};let Ts;const Cs={kernelName:H,backendName:"wasm",setupFunc:function(e){Ts=e.wasm.cwrap(H,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h}=n,p=null==u?[1,1]:u,c=Aa(a.shape,s.shape,l,p,d,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,A=c.padInfo.bottom,b=c.padInfo.left,x=c.dilationHeight,v=c.dilationWidth,w=c.strideHeight,k=c.strideWidth,I=c.inChannels,S=c.outChannels,N="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const T=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(T.dataId).id;return Ts(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,A,b,N,x,v,w,k,I,S,C),T}},Es=$a("Elu"),_s=Oa("Equal",0,"bool"),Rs=$a("Exp","float32");function Ms(e){const{inputs:t,attrs:n,backend:r}=e,{input:s}=t,{dim:i}=n,o=s.shape.length,l=s.shape.slice();let u=i;return i<0&&(a(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+i+1),l.splice(u,0,1),Qa({inputs:{x:s},backend:r,attrs:{shape:l}})}const $s={kernelName:K,backendName:"wasm",kernelFunc:Ms};function Fs(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}const Os={kernelName:X,backendName:"wasm",kernelFunc:Fs};let zs;const Ds={kernelName:Z,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,d]=r.shape;return zs(s,o,l,u,d,i),a},setupFunc:function(e){zs=e.wasm.cwrap(Z,null,["number","number","number","number","number","number"])}},Ps=$a("Floor"),Ls=Oa(Y);let Ws;const Bs={kernelName:J,backendName:"wasm",setupFunc:function(e){Ws=e.wasm.cwrap(J,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:d}=n,h=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,c=t.dataIdMap.get(o.dataId).id,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=null!=d?t.dataIdMap.get(d.dataId).id:0,g=t.makeOutput(s.shape,s.dtype);if(0===l(s.shape))return g;const y=t.dataIdMap.get(g.dataId).id;return Ws(h,p,c,f,m,a,y),g}};let Us;const Vs={kernelName:et,backendName:"wasm",setupFunc:function(e){Us=e.wasm.cwrap(et,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=Aa(a.shape,s.shape,l,d,u,p),g=_a[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}const v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return Us(y,$,F,O,A,v,w,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}};let Gs;const js={kernelName:tt,backendName:"wasm",setupFunc:function(e){Gs=e.wasm.cwrap(tt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=Aa(a.shape,s.shape,l,d,u,p,!0),g=_a[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}const v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return Gs(y,$,F,O,A,v,w,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}};let Hs;const qs={kernelName:Q,backendName:"wasm",setupFunc:function(e){Hs=e.wasm.cwrap(Q,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=function(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===l(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let d=1;for(let e=s;e<n;++e)d*=o[e],u.push(o[e]);const h=[...A(e.shape).map((e=>e/d)),1].slice(0,s);return[u,i,d,h]}(r,a),d=t.makeOutput(s,r.dtype);if(0===i)return d;const h=a.shape,p=h[h.length-1],c=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(u).buffer),g=t.dataIdMap.get(d.dataId).id;return Hs(c,Ea[r.dtype],f,i,p,o,m,g),d}};let Ks;const Xs={kernelName:"GatherV2",backendName:"wasm",setupFunc:function(e){Ks=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:s,indices:i}=n,{axis:o,batchDims:u}=r,d=h(o,s.shape)[0],p=t.readSync(i.dataId),c=s.shape[d];for(let e=0;e<p.length;++e){const t=p[e];a(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}const f=function(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,d=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}(s,i,d,u),m=Qa({inputs:{x:s},attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]},backend:t}),g=l(i.shape),y=Qa({inputs:{x:i},attrs:{shape:[f.batchSize,g/f.batchSize]},backend:t}),b=[f.batchSize,f.outerSize,g/f.batchSize,f.sliceSize],x=t.makeOutput(b,s.dtype);if(0===l(s.shape))return x;const v=m.shape.length-1,w=t.dataIdMap.get(m.dataId).id,k=t.dataIdMap.get(y.dataId).id,I=t.dataIdMap.get(x.dataId).id,S=new Uint8Array(new Int32Array(A(m.shape)).buffer),N=new Uint8Array(new Int32Array(A(b)).buffer);return Ks(w,Ea[s.dtype],S,v,k,f.batchSize,N,I),t.disposeData(m.dataId),t.disposeData(y.dataId),x.shape=f.outputShape,x}},Zs=Oa(ee,0,"bool"),Ys=Oa(te,0,"bool");let Js;const Qs={kernelName:re,backendName:"wasm",setupFunc:function(e){Js=e.wasm.cwrap(re,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==l(t.shape)){const e=r.dataIdMap.get(s.dataId).id;Js(a,Ea[t.dtype],n,e)}return s}},ei=Oa("Less",0,"bool"),ti=Oa(ae,0,"bool"),ni=$a("Log"),ri=Oa(se,0,"bool");let ai;const si={kernelName:ie,backendName:"wasm",setupFunc:function(e){ai=e.wasm.cwrap(ie,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=Ga(i,a,t);c&&(u=d,o=t.dataIdMap.get(d.dataId).id),Dr("max",h,u.shape.length);const[f,m]=Or(u.shape,h),g=l(m),y=t.makeOutput(f,i.dtype);if(0!==l(u.shape)){const e=t.dataIdMap.get(y.dataId).id;ai(o,Ea[i.dtype],g,e)}if(c&&t.disposeData(d.dataId),s){const e=zr(y.shape,p);y.shape=e}return y}},ii=Oa("Maximum");let oi;const li={kernelName:oe,backendName:"wasm",setupFunc:function(e){oi=e.wasm.cwrap(oe,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,s=t.x,i=r.dataIdMap.get(s.dataId).id;a("float32"===s.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${s.dtype}.`));const{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=n,h=ya(s.shape,o,l,1,u,d),p=h.filterHeight,c=h.filterWidth,f=h.padInfo.top,m=h.padInfo.right,g=h.padInfo.bottom,y=h.padInfo.left,A=h.dilationHeight,b=h.dilationWidth,x=h.strideHeight,v=h.strideWidth,w=h.inChannels,k=h.outChannels;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(h.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return oi(i,s.shape[0],s.shape[1],s.shape[2],p,c,f,m,g,y,A,b,x,v,w,k,S),I}};let ui;const di={kernelName:le,backendName:"wasm",setupFunc:function(e){ui=e.wasm.cwrap(le,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,d=i;const{transposed:h,axes:p,originalAxes:c,inputWasTransposed:f}=Ga(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(h.dataId).id;e!==o&&(d=h,u=e,m=Lr(m.length,d.shape.length))}Dr("mean",m,d.shape.length);const[g,y]=Or(d.shape,m),A=l(y);let b=d;"float32"!==d.dtype&&(b=os({backend:t,inputs:{x:d},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(g,"float32");if(0!==l(d.shape)){const e=t.dataIdMap.get(x.dataId).id;ui(u,A,e)}if(f&&t.disposeData(h.dataId),s){const e=zr(x.shape,c);x.shape=e}return"float32"!==d.dtype&&t.disposeData(b.dataId),x}};let hi;const pi={kernelName:ue,backendName:"wasm",setupFunc:function(e){hi=e.wasm.cwrap(ue,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,d=i;const{transposed:h,axes:p,originalAxes:c,inputWasTransposed:f}=Ga(i,a,t);if(f){const e=t.dataIdMap.get(h.dataId).id;e!==o&&(d=h,u=e)}Dr("min",p,d.shape.length);const[m,g]=Or(d.shape,p),y=l(g),A=t.makeOutput(m,d.dtype);if(0!==l(d.shape)){const e=t.dataIdMap.get(A.dataId).id;hi(u,Ea[i.dtype],y,e)}if(f&&t.disposeData(h.dataId),s){const e=zr(A.shape,c);A.shape=e}return A}},ci=Oa(de);var fi;let mi;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(fi||(fi={}));const gi={kernelName:he,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return mi(i,u,t.shape.length,Ea[t.dtype],p,c,fi[a],l),o},setupFunc:function(e){mi=e.wasm.cwrap(he,null,["number","array","number","number","array","array","number","number"])}},yi=Oa(pe),Ai=$a("Neg");function bi(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}let xi;const vi={kernelName:fe,backendName:"wasm",setupFunc:function(e){xi=e.wasm.cwrap(fe,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=xi(u,d,s,a,i),{pSelectedIndices:p,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=bi(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",p)}};let wi;const ki={kernelName:me,backendName:"wasm",setupFunc:function(e){wi=e.wasm.cwrap(me,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=wi(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=bi(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};let Ii;const Si={kernelName:ge,backendName:"wasm",setupFunc:function(e){Ii=e.wasm.cwrap(ge,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=Ii(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=bi(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},Ni=Oa(ce,0,"bool");let Ti;const Ci={kernelName:ye,backendName:"wasm",setupFunc:function(e){Ti=e.wasm.cwrap(ye,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(a.dataId).id;return Ti(d,s,i,o,u),l}},Ei={kernelName:Ae,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r;if(1===t.length)return Ms({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const o=t[0].shape,l=t[0].dtype;t.forEach((e=>{s(o,e.shape,"All tensors passed to stack must have matching shapes"),a(l===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],d=ps({inputs:t.map((e=>{const t=Ms({inputs:{input:e},backend:n,attrs:{dim:i}});return u.push(t),t})),backend:n,attrs:{axis:i}});return u.forEach((e=>n.disposeData(e.dataId))),d}};let _i;const Ri={kernelName:be,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===l(t.shape))return Fs({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(t.shape).buffer),h=r.map((e=>e[0])),p=r.map((e=>e[1])),c=new Uint8Array(new Int32Array(h).buffer),f=new Uint8Array(new Int32Array(p).buffer);return _i(i,d,t.shape.length,Ea[t.dtype],c,f,a,u),o},setupFunc:function(e){_i=e.wasm.cwrap(be,null,["number","array","number","number","array","array","number","number"])}},Mi=Oa("Pow");let $i;const Fi={kernelName:xe,backendName:"wasm",setupFunc:function(e){$i=e.wasm.cwrap(xe,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const l=r;let u=l;"float32"!==l.dtype&&(u=os({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);const d=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(d.dataId).id;return $i(o,i,h),"float32"!==l.dtype&&n.disposeData(u.dataId),d}};let Oi;const zi={kernelName:ve,backendName:"wasm",setupFunc:function(e){Oi=e.wasm.cwrap(ve,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,d=i;const{transposed:h,axes:p,originalAxes:c,inputWasTransposed:f}=Ga(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(h.dataId).id;e!==o&&(d=h,u=e,m=Lr(m.length,d.shape.length))}Dr("prod",m,d.shape.length);const[g,y]=Or(d.shape,m),A=l(y),b=t.makeOutput(g,d.dtype);if(0!==l(d.shape)){const e=t.dataIdMap.get(b.dataId).id;Oi(u,A,Ea[b.dtype],e)}if(f&&t.disposeData(h.dataId),s){const e=zr(b.shape,c);b.shape=e}return b}},Di={kernelName:we,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return w(0,r);const a=w(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},Pi=Oa(q),Li=$a(ke),Wi=$a(Te);let Bi;const Ui={kernelName:Ne,backendName:"wasm",setupFunc:function(e){Bi=e.wasm.cwrap(Ne,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,d]=o,[h,p,c,f]=a.shape,m=[h,u,d,f];let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=os({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));const A=y.id,b=t.makeOutput(m,"float32");if(0===l(a.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return Bi(A,h,p,c,f,u,d,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),b}};let Vi;const Gi={kernelName:Ce,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=h(s,a.shape);if(0===a.shape.length)return La({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);Vi(l,d,i.length,p,a.shape.length,u);const c=Qa({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),c},setupFunc:function(e){Vi=e.wasm.cwrap(Ce,null,["number","array","number","array","number","number"])}};let ji;const Hi={kernelName:Je,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[h,p,c,f]=a.shape,[m,g]=function(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}(o,p,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],A=new Uint8Array(new Int32Array(y).buffer);return ji(u,h,p,c,f,s,m,g,A,y.length,d),l},setupFunc:function(e){ji=e.wasm.cwrap(Je,null,["number","number","number","number","number","number","number","number","array","number","number"])}},qi=$a(Ee),Ki=$a("Rsqrt");let Xi;const Zi={kernelName:_e,backendName:"wasm",setupFunc:function(e){Xi=e.wasm.cwrap(_e,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===l(i))return o;const{sliceRank:u,numUpdates:d,sliceSize:h,strides:p,outputSize:c}=function(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:l(t.shape)/o,sliceSize:i,strides:[...A(n.slice(0,a)),1],outputSize:l(n)}}(0,a,i),f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=new Uint8Array(new Int32Array(p).buffer),y=t.dataIdMap.get(o.dataId).id;return Xi(f,m,Ea[s.dtype],u,d,h,g,c,y),o}};let Yi;const Ji={kernelName:Re,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,d=n.makeOutput(a.shape,a.dtype),h=n.dataIdMap.get(d.dataId).id,p=r.shape.length,c=a.shape.length,f=0===p||p>1||1===c?1:l(a.shape.slice(1));return Yi(i,o,u,f,h),d},setupFunc:function(e){Yi=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let Qi;const eo={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){Qi=e.wasm.cwrap($e,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===l(a.shape)||Qi(r,s),a}},to=$a("Sin");let no;const ro={kernelName:De,backendName:"wasm",setupFunc:function(e){no=e.wasm.cwrap(De,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=l(n.shape)/o;return 0===l(s.shape)||no(a,i,o,u),s}},ao={kernelName:"SpaceToBatchND",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=l(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const d=Ri.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=Ia(d.shape,s,o,!1),p=Sa(h.length,s.length,!1),c=Na(d.shape,s,o,!1),f=Qa({inputs:{x:d},backend:n,attrs:{shape:h}}),m=Ua({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Qa({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeData(d.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}};let so;const io={kernelName:Pe,backendName:"wasm",setupFunc:function(e){so=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],l=r.shape[1],u=t.readSync(s.dataId)[0],d=[o+u,l],h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(d,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(d.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,A=t.makeOutput([u],"bool"),b=t.dataIdMap.get(A.dataId).id,x=t.makeOutput([o],r.dtype),v=t.dataIdMap.get(x.dataId).id,w=t.makeOutput([4],"int32"),k=t.dataIdMap.get(w.dataId).id,I=so(h,p,Ea[a.dtype],o,u,l,c,m,y,b,v,k),S=t.readSync(w.dataId);let N;switch(S[0]){case 1:N=`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${S[1]}`;break;case 2:N=function(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}(S[1],S[2]);break;case 3:N=function(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}(S[1],S[2],S[3]);break;default:N=""}if(t.disposeData(w.dataId),N)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(A.dataId),t.disposeData(x.dataId),new Error(N);let T=f,C=g;return I!==d[0]&&(T=as({inputs:{x:f},attrs:{begin:0,size:[I,l]},backend:t}),C=as({inputs:{x:g},attrs:{begin:0,size:I},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[T,C,A,x]}};let oo;const lo={kernelName:Le,backendName:"wasm",setupFunc:function(e){oo=e.wasm.cwrap(Le,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,u=t.dataIdMap.get(s.dataId).id,d=r.shape[0],h=l(s.shape),p=t.makeOutput([d,h],r.dtype),c=t.dataIdMap.get(p.dataId).id,f=t.makeOutput([h],s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput([3],"int32"),y=t.dataIdMap.get(g.dataId).id;oo(i,o,u,d,c,m,y);const A=t.readSync(g.dataId);let b;switch(A[0]){case 0:b=`only one output dimension may be -1, not both ${A[1]} and ${A[2]}`;break;case 1:b=`size ${A[1]} must be non-negative, not ${A[2]}`;break;case 2:b="reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero";break;case 3:b=function(e,t){return`Input to reshape is a SparseTensor with ${l(e)}\n  dense values, but the requested shape requires a multiple of ${l(t)}. inputShape=${e} outputShape= ${t}`}(Array.from(t.readSync(a.dataId)),Array.from(t.readSync(f.dataId)));break;case 4:b=function(e,t){return`Input to reshape is a tensor with ${l(e)} dense values, but the requested shape has ${l(t)}. inputShape=${e} outputShape=${t}`}(Array.from(t.readSync(a.dataId)),Array.from(t.readSync(f.dataId)));break;default:b=""}if(t.disposeData(g.dataId),b)throw t.disposeData(p.dataId),t.disposeData(f.dataId),new Error(b);return[p,f]}};let uo;function ho(e){uo=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function po(e,t){const{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error("segment ids must be >= 0");const d=a.shape.slice();d[0]=u;const h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(d,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;uo(h,Ea[a.dtype],a.shape[0],p,c,m,y,t,0);const A=n.readSync(g.dataId);let b;switch(A[0]){case 0:b="segment ids must be >= 0";break;case 1:b="segment ids are not increasing";break;case 2:b=function(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}(A[1],A[2]);break;case 3:b=function(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}(A[1],A[2],A[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}const co={kernelName:We,backendName:"wasm",setupFunc:ho,kernelFunc:function(e){return po(e,!0)}},fo={kernelName:Be,backendName:"wasm",setupFunc:ho,kernelFunc:function(e){return po(e,!1)}},mo={kernelName:ze,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=n,l=h(o,s.shape)[0],u=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"==typeof t)a(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);a(s<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}a(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}(s,i,l),d=new Array(s.shape.length).fill(0),p=s.shape.slice();return u.map((e=>{const t=[...p];t[l]=e;const n=as({inputs:{x:s},attrs:{begin:d,size:t},backend:r});return d[l]+=e,n}))}},go=$a(Fe),yo=$a("Square"),Ao=Oa(Ue);let bo;const xo={kernelName:Ye,backendName:"wasm",setupFunc:function(e){bo=e.wasm.cwrap(Ye,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return bo(i,a,Ea[s.dtype],l),o}};let vo;const wo={kernelName:Ve,backendName:"wasm",setupFunc:function(e){vo=e.wasm.cwrap(Ve,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:v,strides:w}=function(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)d&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(d=!0);d||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let c=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=Vn(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=Vn(p.end[t],1,p.strides[t],r,a,s);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;c=c&&e,f=f&&(0===t&&1===p.strides[t]||e)}else c=c&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}(s.shape,i,o,l,u,d,h,p,c);let k;if(g)k=Qa({inputs:{x:s},backend:t,attrs:{shape:m}});else if(y||b){a(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=function(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}(x,v,w),n=as({inputs:{x:s},backend:t,attrs:{begin:x,size:e}});k=Qa({inputs:{x:n},backend:t,attrs:{shape:m}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(f,"float32"),n=t.dataIdMap.get(s.dataId).id,r=new Uint8Array(new Int32Array(A(s.shape)).buffer),a=new Uint8Array(new Int32Array(x).buffer),i=new Uint8Array(new Int32Array(v).buffer),o=new Uint8Array(new Int32Array(w).buffer),l=new Uint8Array(new Int32Array(f).buffer),u=new Uint8Array(new Int32Array(A(f)).buffer),d=t.dataIdMap.get(e.dataId).id;vo(n,r,s.shape.length,a,i,o,l,u,f.length,d),k=Qa({inputs:{x:e},backend:t,attrs:{shape:m}}),t.disposeData(e.dataId)}return k}},ko=Oa("Sub");let Io;const So={kernelName:Oe,backendName:"wasm",setupFunc:function(e){Io=e.wasm.cwrap(Oe,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,d=i;const{transposed:h,axes:p,originalAxes:c,inputWasTransposed:f}=Ga(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(h.dataId).id;e!==o&&(d=h,u=e,m=Lr(m.length,d.shape.length))}Dr("sum",m,d.shape.length);const[g,y]=Or(d.shape,m),A=l(y),b=t.makeOutput(g,d.dtype);if(0!==l(d.shape)){const e=t.dataIdMap.get(b.dataId).id;Io(u,A,Ea[b.dtype],e)}if(f&&t.disposeData(h.dataId),s){const e=zr(b.shape,c);b.shape=e}return b}},No=$a("Tan"),To=$a("Tanh");let Co;let Eo;let _o;const Ro={kernelName:qe,backendName:"wasm",setupFunc:function(e){_o=e.wasm.cwrap(qe,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,h,p,c]=a.shape,[f,m]=null!=u?u:[h,p],g=[d,f,m,c],y=new Uint8Array(new Int32Array(A(a.shape)).buffer),b=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(b.dataId).id,v=t.dataIdMap.get(a.dataId).id,w=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":default:I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4}return _o(v,w,s.shape[0]>1,d,f,m,c,p,h,y,a.shape.length-1,k,I,l,x),b}},Mo={kernelName:Xe,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,l=new Array(o-1);let u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);const d=new Array(i),h=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<d.length;e++)h[s]=e,d[e]=as({inputs:{x:a},attrs:{begin:h,size:p},backend:n});return d.map((e=>{let{dataId:t,dtype:n}=e;return{dataId:t,dtype:n,shape:l}}))}},$o=[Ma,Fa,za,Pa,Ha,Ka,Za,Ja,ns,is,ls,us,hs,cs,ms,ys,As,bs,ws,Is,Ns,Cs,Es,_s,Rs,$s,Os,Ds,Ps,Ls,Bs,Vs,js,qs,Xs,Zs,Ys,Wa,Qs,ei,ti,ni,ri,si,ii,li,di,pi,ci,gi,yi,Ai,vi,ki,Si,Ni,Ci,{kernelName:"OnesLike",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},Ei,Ri,Mi,Fi,zi,Di,Pi,Li,Wi,es,Ui,Gi,Hi,qi,Ki,Zi,Ji,eo,to,ss,ro,ao,io,lo,co,fo,mo,go,yo,Ao,xo,wo,ko,So,No,To,{kernelName:je,backendName:"wasm",setupFunc:function(e){Co=e.wasm.cwrap(je,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(d.dataId).id;return Co(s,l,a.shape.length,u,o.length,Ea[d.dtype],h),d}},{kernelName:He,backendName:"wasm",setupFunc:function(e){Eo=e.wasm.cwrap(He,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a}=t,{k:s,sorted:i}=r,o=n.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(a.shape).buffer),u=a.shape.slice();u[u.length-1]=s;const d=n.makeOutput(u,a.dtype),h=n.dataIdMap.get(d.dataId).id,p=n.makeOutput(u,"int32"),c=n.dataIdMap.get(p.dataId).id;return Eo(o,l,a.shape.length,Ea[a.dtype],s,i,h,c),[d,p]}},Ro,Va,Mo,{kernelName:Ze,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of $o)lt(e);const Fo=C();Fo.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),Fo.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Fo.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var Oo=n(950),zo=n.n(Oo),Do=n(235),Po=n.n(Do);class Lo extends t{constructor(t){super(),this.wasm=t,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(qo),Ko=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new e(this,Gt)}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=ft();return e(),{kernelMs:ft()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=l(n),o=i*f(r),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||l(s);const o=f(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=l(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap(e){let{shape:t,dtype:n,dataId:r}=e;const a=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(r),i=l(t);switch(n){case"float32":return new Float32Array(a,s,i);case"int32":return new Int32Array(a,s,i);case"bool":return new Uint8Array(a,s,i);default:throw new Error(`Unknown dtype ${n}`)}}}function Wo(e,t,n){if(null!=Uo)return Uo;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Go&&null!=Go[r]?Go[r]:n+r}const Bo=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let Uo=null,Vo=null,Go={},jo=!1,Ho=!1,qo=-1,Ko=null;!function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;Gt.registerBackend(e,t,n)}("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([C().getAsync("WASM_HAS_SIMD_SUPPORT"),C().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?Wo(e,t,null!=Vo?Vo:r):r+n}};var s;Ho&&(a.instantiateWasm=(s=Wo(e,t,null!=Vo?Vo:""),(e,t)=>(function(e,t){return C().platform.fetch(e,{credentials:"same-origin"})}(s).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;a.onAbort=()=>{o||jo||(jo=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==Uo?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+zo().toString()],{type:"text/javascript"}),i=zo()(a)):i=Po()(a),i.then((e=>{o=!0,jo=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new Lo(e)}),2);var Xo="node_modules/@vladmandic/human/dist/human.esm.js",Zo=Object.defineProperty,Yo=(e,t)=>{for(var n in t)Zo(e,n,{get:t[n],enumerable:!0})},Jo=(e,t,n)=>(((e,t,n)=>{t in e?Zo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n),Qo=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)},el=(e,t,n)=>(Qo(e,t,"read from private field"),n?n.call(e):t.get(e)),tl=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},nl=(e,t,n,r)=>(Qo(e,t,"write to private field"),r?r.call(e,n):t.set(e,n),n);function rl(){const e=new Date,t=`${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}:${e.getSeconds().toString().padStart(2,"0")}.${e.getMilliseconds().toString().padStart(3,"0")}`;for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];r&&console.log(t,"Human:",...r)}var al=()=>"undefined"!=typeof performance?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function sl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"config",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];for(const a of Object.keys(t))if("object"==typeof t[a])sl(e[a],t[a],a,r);else{const s=e&&void 0!==e[a];s||r.push({reason:"unknown property",where:`${n}.${a} = ${t[a]}`});const i=e&&typeof e[a]==typeof t[a];s&&!i&&r.push({reason:"property type mismatch",where:`${n}.${a} = ${t[a]}`,expected:typeof e[a]})}return t.debug&&"config"===n&&r.length>0&&rl("invalid configuration",r),r}function il(){const e=e=>e&&"object"==typeof e;for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return n.reduce(((t,n)=>(Object.keys(n||{}).forEach((r=>{const a=t[r],s=n[r];Array.isArray(a)&&Array.isArray(s)?t[r]=a.concat(...s):e(a)&&e(s)?t[r]=il(a,s):t[r]=s})),t)),{})}var ol={backend:"",modelBasePath:"",cacheModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}},ll={};Yo(ll,{Abs:()=>Gu,Acos:()=>ju,Acosh:()=>Hu,AdadeltaOptimizer:()=>zw,AdagradOptimizer:()=>Dw,AdamOptimizer:()=>Pw,AdamaxOptimizer:()=>Lw,Add:()=>qu,AddN:()=>Ku,All:()=>Xu,Any:()=>Zu,ArgMax:()=>Yu,ArgMin:()=>Ju,Asin:()=>Qu,Asinh:()=>ed,Atan:()=>td,Atan2:()=>rd,Atanh:()=>nd,AvgPool:()=>ad,AvgPool3D:()=>id,AvgPool3DGrad:()=>od,AvgPoolGrad:()=>sd,BackendWasm:()=>M7,BatchMatMul:()=>ld,BatchToSpaceND:()=>ud,Bincount:()=>dd,BroadcastArgs:()=>pd,BroadcastTo:()=>hd,Callback:()=>V$,CallbackList:()=>CC,Cast:()=>cd,Ceil:()=>fd,ClipByValue:()=>md,Complex:()=>gd,ComplexAbs:()=>yd,Concat:()=>Ad,Conv2D:()=>bd,Conv2DBackpropFilter:()=>xd,Conv2DBackpropInput:()=>vd,Conv3D:()=>wd,Conv3DBackpropFilterV2:()=>kd,Conv3DBackpropInputV2:()=>Id,Cos:()=>Sd,Cosh:()=>Nd,CropAndResize:()=>Ed,Cumprod:()=>Td,Cumsum:()=>Cd,CustomCallback:()=>RC,DataStorage:()=>Pl,DenseBincount:()=>_d,DepthToSpace:()=>Rd,DepthwiseConv2dNative:()=>Md,DepthwiseConv2dNativeBackpropFilter:()=>$d,DepthwiseConv2dNativeBackpropInput:()=>Fd,Diag:()=>Od,Dilation2D:()=>zd,Dilation2DBackpropFilter:()=>Pd,Dilation2DBackpropInput:()=>Dd,ENV:()=>Bu,EarlyStopping:()=>H$,Einsum:()=>Wd,Elu:()=>Bd,EluGrad:()=>Ud,Environment:()=>zu,Equal:()=>Gd,Erf:()=>Vd,Exp:()=>jd,ExpandDims:()=>Hd,Expm1:()=>qd,FFT:()=>Kd,Fill:()=>Xd,FlipLeftRight:()=>Zd,Floor:()=>Yd,FloorDiv:()=>Jd,FromPixels:()=>jp,FusedBatchNorm:()=>Qd,FusedConv2D:()=>Kp,FusedDepthwiseConv2D:()=>Xp,GPGPUContext:()=>ij,GatherNd:()=>th,GatherV2:()=>eh,GraphModel:()=>TO,Greater:()=>nh,GreaterEqual:()=>rh,History:()=>_C,IFFT:()=>sh,Identity:()=>ah,Imag:()=>ih,InputSpec:()=>gC,IsFinite:()=>oh,IsInf:()=>lh,IsNan:()=>uh,KernelBackend:()=>Ll,LRN:()=>xh,LRNGrad:()=>vh,LayerVariable:()=>cC,LayersModel:()=>BE,LeakyRelu:()=>dh,Less:()=>hh,LessEqual:()=>ph,LinSpace:()=>ch,Log:()=>fh,Log1p:()=>mh,LogSoftmax:()=>bh,LogicalAnd:()=>gh,LogicalNot:()=>yh,LogicalOr:()=>Ah,MathBackendCPU:()=>Hz,MathBackendWebGL:()=>xH,Max:()=>wh,MaxPool:()=>Ih,MaxPool3D:()=>Nh,MaxPool3DGrad:()=>Th,MaxPoolGrad:()=>Sh,MaxPoolWithArgmax:()=>Ch,Maximum:()=>kh,Mean:()=>Eh,Min:()=>_h,Minimum:()=>Rh,MirrorPad:()=>Mh,Mod:()=>$h,MomentumOptimizer:()=>Bw,Multinomial:()=>Fh,Multiply:()=>Oh,Neg:()=>zh,NonMaxSuppressionV3:()=>Ph,NonMaxSuppressionV4:()=>Lh,NonMaxSuppressionV5:()=>Wh,NotEqual:()=>Dh,OP_SCOPE_SUFFIX:()=>If,OneHot:()=>Uh,OnesLike:()=>Bh,Optimizer:()=>Ow,OptimizerConstructors:()=>Vw,Pack:()=>Vh,PadV2:()=>Gh,Pool:()=>jh,Pow:()=>Hh,Prelu:()=>qh,Prod:()=>Kh,RMSPropOptimizer:()=>Uw,RNN:()=>J_,Range:()=>Xh,Rank:()=>Hc,Real:()=>Zh,RealDiv:()=>Ld,Reciprocal:()=>Yh,Reduction:()=>uw,Relu:()=>Jh,Relu6:()=>ap,Reshape:()=>Qh,ResizeBilinear:()=>np,ResizeBilinearGrad:()=>rp,ResizeNearestNeighbor:()=>ep,ResizeNearestNeighborGrad:()=>tp,Reverse:()=>sp,RotateWithOffset:()=>Hp,Round:()=>ip,Rsqrt:()=>op,SGDOptimizer:()=>Ww,ScatterNd:()=>lp,Select:()=>up,Selu:()=>dp,Sequential:()=>jE,Sigmoid:()=>mp,Sign:()=>fp,Sin:()=>pp,Sinh:()=>cp,Slice:()=>hp,Softmax:()=>vp,Softplus:()=>gp,SpaceToBatchND:()=>bp,SparseFillEmptyRows:()=>wp,SparseReshape:()=>kp,SparseSegmentMean:()=>Ip,SparseSegmentSum:()=>Sp,SparseToDense:()=>Np,SplitV:()=>xp,Sqrt:()=>yp,Square:()=>Cp,SquaredDifference:()=>Tp,Step:()=>Gp,StridedSlice:()=>Ep,StringNGrams:()=>_p,StringSplit:()=>Rp,StringToHashBucketFast:()=>Mp,Sub:()=>$p,Sum:()=>Ap,SymbolicTensor:()=>yC,Tan:()=>Fp,Tanh:()=>Op,Tensor:()=>Uc,TensorBuffer:()=>Lc,Tile:()=>zp,TopK:()=>Dp,Transform:()=>Pp,Transpose:()=>Lp,Unique:()=>Wp,Unpack:()=>Bp,UnsortedSegmentSum:()=>Up,Variable:()=>Vc,ZerosLike:()=>Vp,_FusedMatMul:()=>qp,abs:()=>gy,acos:()=>yy,acosh:()=>Ay,add:()=>py,addN:()=>by,all:()=>xy,any:()=>vy,argMax:()=>wy,argMin:()=>ky,asin:()=>Iy,asinh:()=>Sy,atan:()=>Ny,atan2:()=>Ty,atanh:()=>Cy,avgPool:()=>Hy,avgPool3d:()=>qy,backend:()=>dy,backend_util:()=>qw,basicLSTMCell:()=>Jy,batchNorm:()=>tA,batchNorm2d:()=>nA,batchNorm3d:()=>rA,batchNorm4d:()=>aA,batchToSpaceND:()=>Qy,bincount:()=>sA,booleanMaskAsync:()=>dv,broadcastArgs:()=>iA,broadcastTo:()=>oA,broadcast_util:()=>Hm,browser:()=>Ym,buffer:()=>xm,callbacks:()=>q$,cast:()=>vm,ceil:()=>lA,clipByValue:()=>uA,clone:()=>wm,complex:()=>Nf,concat:()=>Ky,concat1d:()=>dA,concat2d:()=>hA,concat3d:()=>pA,concat4d:()=>cA,constraints:()=>XS,conv1d:()=>mA,conv2d:()=>fA,conv2dTranspose:()=>yA,conv3d:()=>AA,conv3dTranspose:()=>xA,copyRegisteredKernels:()=>oc,cos:()=>vA,cosh:()=>wA,cosineWindow:()=>xv,cumprod:()=>kA,cumsum:()=>IA,customGrad:()=>db,data:()=>_O,denseBincount:()=>SA,deprecationWarn:()=>Kg,depthToSpace:()=>NA,depthwiseConv2d:()=>TA,deregisterOp:()=>Q$,device_util:()=>ff,diag:()=>CA,dilation2d:()=>EA,disableDeprecationWarnings:()=>qg,dispose:()=>ey,disposeVariables:()=>Xg,div:()=>fy,divNoNan:()=>$A,dot:()=>FA,dropout:()=>Av,einsum:()=>OA,elu:()=>zA,enableDebugMode:()=>Hg,enableProdMode:()=>jg,enclosingPowerOfTwo:()=>bv,engine:()=>Zg,env:()=>Lu,equal:()=>_A,erf:()=>DA,exp:()=>PA,expandDims:()=>LA,expm1:()=>WA,eye:()=>UA,fft:()=>Lx,fill:()=>VA,findBackend:()=>oy,findBackendFactory:()=>ly,floor:()=>GA,floorDiv:()=>cy,forceHalfFloat:()=>wH,fused:()=>wv,gather:()=>jA,gatherND:()=>yv,gather_util:()=>ag,getBackend:()=>sy,getGradient:()=>tc,getKernel:()=>ec,getKernelsForBackend:()=>nc,getThreadsCount:()=>j7,gpgpu_util:()=>DG,grad:()=>sb,grads:()=>ib,greater:()=>HA,greaterEqual:()=>qA,ifft:()=>Wx,imag:()=>KA,image:()=>_w,inTopKAsync:()=>vv,initializers:()=>ON,input:()=>XE,io:()=>Im,irfft:()=>Bx,isFinite:()=>XA,isInf:()=>ZA,isNaN:()=>YA,keep:()=>ty,kernel_impls:()=>Hk,layers:()=>nC,leakyRelu:()=>JA,less:()=>QA,lessEqual:()=>eb,linalg:()=>Rw,linspace:()=>tb,loadGraphModel:()=>CO,loadLayersModel:()=>KE,localResponseNormalization:()=>nb,log:()=>rb,log1p:()=>ab,logSigmoid:()=>fb,logSoftmax:()=>Ab,logSumExp:()=>Tb,logicalAnd:()=>Cb,logicalNot:()=>Eb,logicalOr:()=>_b,logicalXor:()=>Rb,losses:()=>Mw,matMul:()=>Um,math:()=>Bm,max:()=>mb,maxPool:()=>Mb,maxPool3d:()=>$b,maxPoolWithArgmax:()=>Fb,maximum:()=>Ob,mean:()=>zb,memory:()=>Yg,meshgrid:()=>Lb,metrics:()=>w$,min:()=>Wb,minimum:()=>Bb,mirrorPad:()=>Ub,mod:()=>Vb,model:()=>HE,models:()=>P$,moments:()=>jb,movingAverage:()=>cv,mul:()=>my,multiRNNCell:()=>Hb,multinomial:()=>qb,neg:()=>pb,nextFrame:()=>Hw,norm:()=>pv,notEqual:()=>Kb,oneHot:()=>Vm,ones:()=>Pb,onesLike:()=>Xb,op:()=>Sf,outerProduct:()=>Zb,pad:()=>Yb,pad1d:()=>Jb,pad2d:()=>Qb,pad3d:()=>ex,pad4d:()=>tx,pool:()=>rx,pow:()=>ax,prelu:()=>sx,print:()=>km,prod:()=>ix,profile:()=>Jg,rand:()=>ox,randomGamma:()=>px,randomNormal:()=>cx,randomUniform:()=>fx,range:()=>mx,ready:()=>ay,real:()=>gx,reciprocal:()=>yx,registerBackend:()=>uy,registerCallbackConstructor:()=>ZE,registerGradient:()=>ac,registerKernel:()=>rc,registerOp:()=>Y$,regularizers:()=>L$,relu:()=>Ax,relu6:()=>bx,removeBackend:()=>iy,reshape:()=>jy,reverse:()=>xx,reverse1d:()=>vx,reverse2d:()=>wx,reverse3d:()=>kx,reverse4d:()=>Ix,rfft:()=>Vx,round:()=>Sx,rsqrt:()=>Nx,scalar:()=>Tx,scatterND:()=>fv,scatter_util:()=>ig,selu:()=>Cx,separableConv2d:()=>Ex,sequential:()=>qE,serialization:()=>Cg,setBackend:()=>ry,setPlatform:()=>hy,setThreadsCount:()=>G7,setWasmPath:()=>W7,setWasmPaths:()=>B7,setWebGLContext:()=>rV,setdiff1dAsync:()=>_x,shared:()=>qz,sigmoid:()=>Xy,sign:()=>Rx,signal:()=>Ew,sin:()=>Mx,sinh:()=>$x,slice:()=>Zy,slice1d:()=>Fx,slice2d:()=>Ox,slice3d:()=>zx,slice4d:()=>Dx,slice_util:()=>dg,softmax:()=>Px,softplus:()=>cb,spaceToBatchND:()=>nx,sparse:()=>$w,sparseToDense:()=>gv,spectral:()=>Cw,split:()=>Ux,sqrt:()=>Gx,square:()=>Gb,squaredDifference:()=>jx,squeeze:()=>Hx,stack:()=>qx,step:()=>Kx,stridedSlice:()=>Xx,string:()=>Fw,sub:()=>gb,sum:()=>yb,sumOutType:()=>Qc,tan:()=>Zx,tanh:()=>Yy,tensor:()=>Cf,tensor1d:()=>Yx,tensor2d:()=>Jx,tensor3d:()=>Jm,tensor4d:()=>Qx,tensor5d:()=>ev,tensor6d:()=>tv,tensor_util:()=>Gc,test_util:()=>Mg,tidy:()=>Qg,tile:()=>BA,time:()=>ny,topk:()=>nv,train:()=>Gw,transpose:()=>Gm,truncatedNormal:()=>rv,unique:()=>av,unregisterGradient:()=>ic,unregisterKernel:()=>sc,unsortedSegmentSum:()=>sv,unstack:()=>iv,upcastType:()=>Jc,util:()=>uc,valueAndGrad:()=>ob,valueAndGrads:()=>lb,variable:()=>ov,variableGrads:()=>ub,version:()=>K7,version_converter:()=>EO,version_core:()=>Gg,version_cpu:()=>YP,version_layers:()=>mE,version_wasm:()=>H7,version_webgl:()=>vH,webgl:()=>kH,webgl_util:()=>eV,webgpu:()=>b2,where:()=>RA,whereAsync:()=>uv,zeros:()=>Db,zerosLike:()=>MA});var ul=Object.create,dl=Object.defineProperty,hl=Object.getOwnPropertyDescriptor,pl=Object.getOwnPropertyNames,cl=Object.getPrototypeOf,fl=Object.prototype.hasOwnProperty,ml=(e,t)=>function(){return t||(0,e[pl(e)[0]])((t={exports:{}}).exports,t),t.exports},gl=(e,t)=>{for(var n in t)dl(e,n,{get:t[n],enumerable:!0})},yl=(e,t)=>((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of pl(t))!fl.call(e,n)&&"default"!==n&&dl(e,n,{get:()=>t[n],enumerable:!(r=hl(t,n))||r.enumerable});return e})((e=>dl(e,"__esModule",{value:!0}))(dl(null!=e?ul(cl(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),Al=ml({"src/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?A:y;if(t){if(e<0)return A;if(e>=f)return k}else{if(e<=-m)return I;if(e+1>=m)return w}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var d=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(e.substring(1),t,n).neg();for(var a=l(d(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var p=l(d(n,o));s=s.mul(p).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?h(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=p;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var A=o(0,!0);r.UZERO=A;var b=o(1);r.ONE=b;var x=o(1,!0);r.UONE=x;var v=o(-1);r.NEG_ONE=v;var w=u(-1,2147483647,!1);r.MAX_VALUE=w;var k=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);r.MIN_VALUE=I;var S=r.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(d(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return a(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(a(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){a(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,d=0,h=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,h+=(c+=r+l)>>>16,d+=(h+=n+o)>>>16,d+=t+i,u((c&=65535)<<16|(f&=65535),(d&=65535)<<16|(h&=65535),this.unsigned)},S.subtract=function(e){return a(e)||(e=p(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=p(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(I))return e.isOdd()?I:y;if(e.eq(I))return this.isOdd()?I:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,d=65535&e.high,h=e.low>>>16,c=65535&e.low,f=0,m=0,A=0,b=0;return A+=(b+=i*c)>>>16,m+=(A+=s*c)>>>16,A&=65535,m+=(A+=i*h)>>>16,f+=(m+=r*c)>>>16,m&=65535,f+=(m+=s*h)>>>16,m&=65535,f+=(m+=i*d)>>>16,f+=t*c+r*h+s*d+i*o,u((A&=65535)<<16|(b&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(a(e)||(e=p(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?A:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return A;if(e.gt(this.shru(1)))return x;s=A}else{if(this.eq(I))return e.eq(b)||e.eq(v)?I:e.eq(I)?b:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?b:v:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(I))return this.unsigned?A:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:d(2,i-48),h=l(t),c=h.mul(e);c.isNegative()||c.gt(r);)c=(h=l(t-=o,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),r=r.sub(c)}return s},S.div=S.divide,S.modulo=function(e){return a(e)||(e=p(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return a(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return a(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return a(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}}),bl=ml({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),xl=ml({"(disabled):util"(){}}),vl=ml({"src/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),wl=ml({"src/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),kl=ml({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Il=ml({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Sl=ml({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Nl=ml({"src/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),Tl=ml({"(disabled):crypto"(){}}),Cl=ml({"src/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r,a){var s,i=256,o="random",l=a.pow(i,6),u=a.pow(2,52),d=2*u,h=255;function p(t,n,h){var p=[],A=g(m((n=1==n?{entropy:!0}:n||{}).entropy?[t,y(r)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),y(t)}catch(t){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,y(r)]}}():t,3),p),b=new c(p),x=function(){for(var e=b.g(6),t=l,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,g(y(b.S),r),(n.pass||h||function(e,t,n,r){return r&&(r.S&&f(r,b),e.state=function(){return f(b,{})}),n?(a[o]=e,t):e})(x,A,"global"in n?n.global:this==a,n.state)}function c(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=h&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*i+o[h&(o[a]=o[s=h&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(g(a.random(),r),"object"==typeof t&&t.exports){t.exports=p;try{s=Tl()}catch(e){}}else"function"==typeof define&&n.amdO?define((function(){return p})):a["seed"+o]=p}("undefined"!=typeof self?self:e,[],Math)}}),El=ml({"src/node_modules/seedrandom/index.js"(e,t){var n=vl(),r=wl(),a=kl(),s=Il(),i=Sl(),o=Nl(),l=Cl();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}}),_l=ml({"(disabled):src/node_modules/string_decoder/index.js"(){}}),Rl=ml({"(disabled):fs"(){}}),Ml=ml({"(disabled):path"(){}}),$l=ml({"(disabled):worker_threads"(){}}),Fl=ml({"(disabled):perf_hooks"(){}}),Ol=ml({"(disabled):os"(){}}),zl=ml({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||Xo,function(e){function t(){return M.buffer!=L&&X(M.buffer),B}function a(){return M.buffer!=L&&X(M.buffer),U}function s(){return M.buffer!=L&&X(M.buffer),V}var i,o,l,u=void 0!==(e=e||{})?e:{};u.ready=new Promise((function(e,t){i=e,o=t})),"undefined"!=typeof process&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d,h,p,c,f,m,g=Object.assign({},u),y=[],A=(e,t)=>{throw t},b="object"==typeof window,x="function"==typeof importScripts,v="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,w=u.ENVIRONMENT_IS_PTHREAD||!1,k="";function I(e){return u.locateFile?u.locateFile(e,k):k+e}if(v){let e;k=x?Ml().dirname(k)+"/":"//",m=()=>{f||(c=Rl(),f=Ml())},d=function(e,t){return m(),e=f.normalize(e),c.readFileSync(e,t?void 0:"utf8")},p=e=>{var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),t},h=(e,t,n)=>{m(),e=f.normalize(e),c.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),y=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof at))throw e})),process.on("unhandledRejection",(function(e){throw e})),A=(e,t)=>{if(ne())throw process.exitCode=e,t;(function(e){e instanceof at||E("exiting due to exception: "+e)})(t),process.exit(e)},u.inspect=function(){return"[Emscripten Module object]"};try{e=$l()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=e.Worker}else(b||x)&&(x?k=self.location.href:"undefined"!=typeof document&&document.currentScript&&(k=document.currentScript.src),void 0!==r&&r&&(k=r),k=0!==k.indexOf("blob:")?k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):"",v||(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},x&&(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),h=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));v&&"undefined"==typeof performance&&(n.g.performance=Fl().performance);var S=console.log.bind(console),N=console.warn.bind(console);v&&(m(),S=e=>c.writeSync(1,e+"\n"),N=e=>c.writeSync(2,e+"\n"));var T,C=u.print||S,E=u.printErr||N;function _(e){_.shown||(_.shown={}),_.shown[e]||(_.shown[e]=1,E(e))}Object.assign(u,g),g=null,u.arguments&&(y=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&(A=u.quit),Atomics.load,Atomics.store,Atomics.compareExchange,u.wasmBinary&&(T=u.wasmBinary);var R=u.noExitRuntime||!0;"object"!=typeof WebAssembly&&le("no native wasm support detected");var M,$,F,O=!1;function z(e){return u["_"+e]}function D(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);q(e,t=nt(n),n)}return t},array:function(e){var t=nt(e.length);return function(e,t){(M.buffer!=L&&X(M.buffer),W).set(e,t)}(e,t),t}},i=z(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var d=s[n[u]];d?(0===l&&(l=et()),o[u]=d(r[u])):o[u]=r[u]}var h,p=i.apply(null,o);return h=p,0!==l&&tt(l),p=function(e){return"string"===t?H(e):"boolean"===t?Boolean(e):e}(h),p}function P(e){var t=new TextDecoder(e);this.decode=e=>(e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e))}var L,W,B,U,V,G="undefined"!=typeof TextDecoder?new P("utf8"):void 0;function j(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&G)return G.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function H(e,n){return e?j(t(),e,n):""}function q(e,n,r){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,t(),n,r)}function K(e,t){return e%t>0&&(e+=t-e%t),e}function X(e){L=e,u.HEAP8=W=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=U=new Int32Array(e),u.HEAPU8=B=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=V=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new P("utf-16le"),w&&(L=u.buffer);var Z=u.INITIAL_MEMORY||16777216;if(w)M=u.wasmMemory,L=u.buffer;else if(u.wasmMemory)M=u.wasmMemory;else if(!((M=new WebAssembly.Memory({initial:Z/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),v&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");M&&(L=M.buffer),Z=L.byteLength,X(L);var Y,J=[],Q=[],ee=[],te=[];function ne(){return R||!1}function re(){!w&&ce(Q)}var ae,se=0,ie=null,oe=null;function le(e){w?postMessage({cmd:"onAbort",arg:e}):u.onAbort&&u.onAbort(e),E(e="Aborted("+e+")"),O=!0,F=1,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw o(t),t}function ue(e){return e.startsWith("data:application/octet-stream;base64,")}function de(e){return e.startsWith("file://")}function he(e){try{if(e==ae&&T)return new Uint8Array(T);if(p)return p(e);throw"both async and sync fetching of the wasm failed"}catch(e){le(e)}}u.preloadedImages={},u.preloadedAudios={},ue(ae="tfjs-backend-wasm-threaded-simd.wasm")||(ae=I(ae));var pe={};function ce(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?ve(n)():ve(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(u)}}function fe(e){var t=et(),n=e();return tt(t),n}function me(e){var t=ye.pthreads[e];if(t){a()[e>>2]=0;var n=t.worker;ye.returnWorkerToPool(n)}}function ge(e){!function(e,t){if(F=e,w)throw Ae(e),"unwind";ne()||w||ye.terminateAllThreads(),function(e){F=e,ne()||(ye.terminateAllThreads(),u.onExit&&u.onExit(e),O=!0),A(e,new at(e))}(e)}(e)}var ye={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){w?ye.initWorker():ye.initMainThread()},initMainThread:function(){for(var e=0;e<8;++e)ye.allocateUnusedWorker()},initWorker:function(){R=!1},pthreads:{},setExitStatus:function(e){F=e},terminateAllThreads:function(){for(var e in ye.pthreads){var t=ye.pthreads[e];t&&t.worker&&ye.returnWorkerToPool(t.worker)}for(var n=0;n<ye.unusedWorkers.length;++n)ye.unusedWorkers[n].terminate();ye.unusedWorkers=[]},returnWorkerToPool:function(e){ye.runWithoutMainThreadQueuedCalls((function(){delete ye.pthreads[e.pthread.threadInfoStruct],ye.unusedWorkers.push(e),ye.runningWorkers.splice(ye.runningWorkers.indexOf(e),1),Je(e.pthread.threadInfoStruct),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){a()[rt>>2]=0;try{e()}finally{a()[rt>>2]=1}},receiveObjectTransfer:function(e){},threadInit:function(){for(var e in ye.tlsInitFunctions)ye.tlsInitFunctions[e]()},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r=n.data,s=r.cmd;if(e.pthread&&(ye.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=He()){var i=ye.pthreads[r.targetThread];return i?i.worker.postMessage(r,r.transferList):E('Internal error! Worker sent a message "'+s+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(ye.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===s?qe():"spawnThread"===s?we(r):"cleanupThread"===s?me(r.thread):"killThread"===s?function(e){a()[e>>2]=0;var t=ye.pthreads[e];delete ye.pthreads[e],t.worker.terminate(),Je(e),ye.runningWorkers.splice(ye.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread):"cancelThread"===s?function(e){ye.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread):"loaded"===s?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===s?C("Thread "+r.threadId+": "+r.text):"printErr"===s?E("Thread "+r.threadId+": "+r.text):"alert"===s?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"onAbort"===s?u.onAbort&&u.onAbort(r.arg):E("worker sent an unknown command "+s),ye.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw E("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},v&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),e.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:M,wasmModule:$})},allocateUnusedWorker:function(){var e=I("tfjs-backend-wasm-threaded-simd.worker.js");ye.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==ye.unusedWorkers.length&&(ye.allocateUnusedWorker(),ye.loadWasmModuleToWorker(ye.unusedWorkers[0])),ye.unusedWorkers.pop()}};function Ae(e){if(w)return ke(1,0,e);try{ge(e)}catch(e){!function(e){if(e instanceof at||"unwind"==e)return F;A(1,e)}(e)}}u.establishStackSpace=function(){var e=He(),t=a()[e+44>>2],n=a()[e+48>>2];Qe(t,t-n),tt(t)};var be,xe=[];function ve(e){var t=xe[e];return t||(e>=xe.length&&(xe.length=e+1),xe[e]=t=Y.get(e)),t}function we(e){var t=ye.getNewWorker();if(!t)return 6;ye.runningWorkers.push(t);var n=ye.pthreads[e.pthread_ptr]={worker:t,threadInfoStruct:e.pthread_ptr};t.pthread=n;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function ke(e,t){var n=arguments.length-2,r=arguments;return fe((function(){for(var a=n,i=nt(8*a),o=i>>3,l=0;l<n;l++){var u=r[2+l];s()[o+l]=u}return Ze(e,a,i,t)}))}u.invokeEntryPoint=function(e,t){return ve(e)(t)},be=v?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:w?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Ie=[];function Se(e){try{return M.grow(e-L.byteLength+65535>>>16),X(M.buffer),1}catch(e){}}var Ne={inEventHandler:0,removeAllEventListeners:function(){for(var e=Ne.eventHandlers.length-1;e>=0;--e)Ne._removeHandler(e);Ne.eventHandlers=[],Ne.deferredCalls=[]},registerRemoveEventListeners:function(){Ne.removeEventListenersRegistered||(ee.push(Ne.removeAllEventListeners),Ne.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in Ne.deferredCalls){var s=Ne.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}Ne.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),Ne.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<Ne.deferredCalls.length;++t)Ne.deferredCalls[t].targetFunction==e&&(Ne.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return Ne.inEventHandler&&Ne.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Ne.canPerformEventHandlerRequests())for(var e=0;e<Ne.deferredCalls.length;++e){var t=Ne.deferredCalls[e];Ne.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<Ne.eventHandlers.length;++n)Ne.eventHandlers[n].target==e&&(!t||t==Ne.eventHandlers[n].eventTypeString)&&Ne._removeHandler(n--)},_removeHandler:function(e){var t=Ne.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),Ne.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++Ne.inEventHandler,Ne.currentEventHandler=e,Ne.runDeferredCalls(),e.handlerFunc(t),Ne.runDeferredCalls(),--Ne.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),Ne.eventHandlers.push(e),Ne.registerRemoveEventListeners();else for(var n=0;n<Ne.eventHandlers.length;++n)Ne.eventHandlers[n].target==e.target&&Ne.eventHandlers[n].eventTypeString==e.eventTypeString&&Ne._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,s){fe((function(){var i=nt(12);a()[i>>2]=n,a()[i+4>>2]=r,a()[i+8>>2]=s,Ye(e,637534208,t,r,i)}))},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return ye.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};var Te=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Ce(e){return function(e){return e=function(e){return e>2?H(e):e}(e),Te[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}(e)}function Ee(e,t,n){var r=Ce(e);if(!r)return-4;if(r.canvasSharedPtr&&(a()[r.canvasSharedPtr>>2]=t,a()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){!function(e,t,n,r){fe((function(){var s=nt(12),i=0;t&&(i=function(e){var t=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(e)+1,n=Ve(t);return q(e,n,t),n}(t)),a()[s>>2]=i,a()[s+4>>2]=n,a()[s+8>>2]=r,Ye(e,657457152,0,i,s)}))}(e,t=t?H(t):"",n,r)}(a()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var s=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);s=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,s&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function _e(e,t,n){return w?ke(2,1,e,t,n):Ee(e,t,n)}var Re={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(e){Re.lastError||(Re.lastError=e)},getNewId:function(e){for(var t=Re.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var s="",i=0;i<t;++i){var o=r?a()[r+4*i>>2]:-1;s+=H(a()[n+4*i>>2],o<0?void 0:o)}return s},createContext:function(e,t){e.getContextSafariWebGL2Fixed||(e.getContextSafariWebGL2Fixed=e.getContext,e.getContext=function(t,n){var r=e.getContextSafariWebGL2Fixed(t,n);return"webgl"==t==r instanceof WebGLRenderingContext?r:null});var n=e.getContext("webgl",t);return n?Re.registerContext(n,t):0},registerContext:function(e,t){var n=Ve(8);a()[n+4>>2]=He();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Re.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Re.initExtensions(r),n},makeContextCurrent:function(e){return Re.currentContext=Re.contexts[e],u.ctx=De=Re.currentContext&&Re.currentContext.GLctx,!(e&&!De)},getContext:function(e){return Re.contexts[e]},deleteContext:function(e){Re.currentContext===Re.contexts[e]&&(Re.currentContext=null),"object"==typeof Ne&&Ne.removeAllHandlersOnTarget(Re.contexts[e].GLctx.canvas),Re.contexts[e]&&Re.contexts[e].GLctx.canvas&&(Re.contexts[e].GLctx.canvas.GLctxObject=void 0),Ge(Re.contexts[e].handle),Re.contexts[e]=null},initExtensions:function(e){if(e||(e=Re.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;(function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})})(t),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),function(e){e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw")}(t),(t.getSupportedExtensions()||[]).forEach((function(e){!e.includes("lose_context")&&!e.includes("debug")&&t.getExtension(e)}))}}},Me=["default","low-power","high-performance"],$e={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=$e.buffers[e];0===t||10===t?((1===e?C:E)(j(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return $e.varargs+=4,a()[$e.varargs-4>>2]},getStr:function(e){return H(e)},get64:function(e,t){return e}};function Fe(e){return w?ke(3,1,e):0}function Oe(e,t,n,r,a){if(w)return ke(4,1,e,t,n,r,a)}function ze(e,n,r,s){if(w)return ke(5,1,e,n,r,s);for(var i=0,o=0;o<r;o++){var l=a()[n>>2],u=a()[n+4>>2];n+=8;for(var d=0;d<u;d++)$e.printChar(e,t()[l+d]);i+=u}return a()[s>>2]=i,0}ye.init();var De,Pe,Le,We,Be=[null,Ae,_e,Fe,Oe,ze],Ue={__clock_gettime:function(e,t){return function(e,t){var n;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return a()[je()>>2]=28,-1;n=be()}return a()[t>>2]=n/1e3|0,a()[t+4>>2]=n%1e3*1e3*1e3|0,0}(e,t)},__emscripten_init_main_thread_js:function(e){Ke(e,!x,1,!b),ye.threadInit()},__emscripten_thread_cleanup:function(e){w?postMessage({cmd:"cleanupThread",thread:e}):me(e)},__pthread_create_js:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(w&&0===a.length)return Xe(687865856,e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return w?(s.cmd="spawnThread",postMessage(s,a),0):we(s)},_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_notify_thread_queue:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(w)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=ye.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},abort:function(){le("")},emscripten_check_blocking_allowed:function(){v||x||_("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_get_heap_max:function(){return 2147483648},emscripten_get_now:be,emscripten_memcpy_big:function(e,n,r){t().copyWithin(e,n,n+r)},emscripten_num_logical_cores:function(){return v?Ol().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Ie.length=t;for(var r=n>>3,a=0;a<t;a++)Ie[a]=s()[r+a];return(e<0?pe[-e-1]:Be[e]).apply(null,Ie)},emscripten_resize_heap:function(e){var n=t().length;if((e>>>=0)<=n)return!1;var r=2147483648;if(e>r)return!1;for(var a=1;a<=4;a*=2){var s=n*(1+.2/a);if(s=Math.min(s,e+100663296),Se(Math.min(r,K(Math.max(e,s),65536))))return!0}return!1},emscripten_set_canvas_element_size:function(e,t,n){return Ce(e)?Ee(e,t,n):_e(e,t,n)},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},emscripten_webgl_create_context:function(e,t){return function(e,t){var n=t>>2,r=a()[n+6],s={alpha:!!a()[n+0],depth:!!a()[n+1],stencil:!!a()[n+2],antialias:!!a()[n+3],premultipliedAlpha:!!a()[n+4],preserveDrawingBuffer:!!a()[n+5],powerPreference:Me[r],failIfMajorPerformanceCaveat:!!a()[n+7],majorVersion:a()[n+8],minorVersion:a()[n+9],enableExtensionsByDefault:a()[n+10],explicitSwapControl:a()[n+11],proxyContextToMainThread:a()[n+12],renderViaOffscreenBackBuffer:a()[n+13]},i=Ce(e);return!i||s.explicitSwapControl?0:Re.createContext(i,s)}(e,t)},exit:ge,fd_close:Fe,fd_seek:Oe,fd_write:ze,memory:M||u.wasmMemory,setTempRet0:function(e){}},Ve=(function(){var e={env:Ue,wasi_snapshot_preview1:Ue};function t(e,t){var n=e.exports;if(u.asm=n,function(e,t,n){ye.tlsInitFunctions.push(e)}(u.asm.emscripten_tls_init),Y=u.asm.__indirect_function_table,function(e){Q.unshift(e)}(u.asm.__wasm_call_ctors),$=t,!w){var r=ye.unusedWorkers.length;ye.unusedWorkers.forEach((function(e){ye.loadWasmModuleToWorker(e,(function(){--r||function(e){if(se--,u.monitorRunDependencies&&u.monitorRunDependencies(se),0==se&&(null!==ie&&(clearInterval(ie),ie=null),oe)){var t=oe;oe=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!T&&(b||x)){if("function"==typeof fetch&&!de(ae))return fetch(ae,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ae+"'";return e.arrayBuffer()})).catch((function(){return he(ae)}));if(h)return new Promise((function(e,t){h(ae,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he(ae)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),le(e)}))}if(w||(se++,u.monitorRunDependencies&&u.monitorRunDependencies(se)),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){return E("Module.instantiateWasm callback failed with error: "+e),!1}(T||"function"!=typeof WebAssembly.instantiateStreaming||ue(ae)||de(ae)||"function"!=typeof fetch?r(n):fetch(ae,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(o)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(Ve=u._malloc=u.asm.malloc).apply(null,arguments)}),Ge=u._free=function(){return(Ge=u._free=u.asm.free).apply(null,arguments)},je=(u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.emscripten_tls_init).apply(null,arguments)},u.___errno_location=function(){return(je=u.___errno_location=u.asm.__errno_location).apply(null,arguments)}),He=u._pthread_self=function(){return(He=u._pthread_self=u.asm.pthread_self).apply(null,arguments)},qe=u._emscripten_main_thread_process_queued_calls=function(){return(qe=u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Ke=(u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},u.__emscripten_thread_init=function(){return(Ke=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)}),Xe=(u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_2=function(){return(u._emscripten_sync_run_in_main_thread_2=u.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_4=function(){return(Xe=u._emscripten_sync_run_in_main_thread_4=u.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)}),Ze=u._emscripten_run_in_main_runtime_thread_js=function(){return(Ze=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},Ye=u._emscripten_dispatch_to_thread_=function(){return(Ye=u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},Je=u.__emscripten_thread_free_data=function(){return(Je=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},Qe=(u.__emscripten_thread_exit=function(){return(u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},u._memalign=function(){return(u._memalign=u.asm.memalign).apply(null,arguments)},u._emscripten_stack_set_limits=function(){return(Qe=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)}),et=u.stackSave=function(){return(et=u.stackSave=u.asm.stackSave).apply(null,arguments)},tt=u.stackRestore=function(){return(tt=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},nt=u.stackAlloc=function(){return(nt=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)},rt=(u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.__emscripten_allow_main_runtime_queued_calls=21456);function at(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function st(e){if(e=e||y,!(se>0)){if(w)return i(u),re(),void postMessage({cmd:"loaded"});(function(){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)e=u.preRun.shift(),J.unshift(e);var e;ce(J)})(),se>0||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}function t(){Pe||(Pe=!0,u.calledRun=!0,!O&&(re(),i(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),function(){if(!w){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)e=u.postRun.shift(),te.unshift(e);ce(te)}var e}()))}}if(u.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?z(e):function(){return D(e,t,n,arguments)}},u.keepRuntimeAlive=ne,u.PThread=ye,u.PThread=ye,u.wasmMemory=M,u.ExitStatus=at,oe=function e(){Pe||st(),Pe||(oe=e)},u.run=st,u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();if(st(),l&&(Le={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!l.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!l.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)We=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");We=e}if(Le){var it=We._dispose;We._dispose=function(){it(),Le.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Le.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n.amdO?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=a)}}),Dl=ml({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||Xo,function(e){var t,n,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,r){t=e,n=r})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u,d,h,p=Object.assign({},s),c=[],f="object"==typeof window,m="function"==typeof importScripts,g="";"object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node?(g=m?Ml().dirname(g)+"/":"//",h=()=>{d||(u=Rl(),d=Ml())},i=function(e,t){return h(),e=d.normalize(e),u.readFileSync(e,t?void 0:"utf8")},l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{h(),e=d.normalize(e),u.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),c=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof ae))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}):(f||m)&&(m?g=self.location.href:"undefined"!=typeof document&&document.currentScript&&(g=document.currentScript.src),r&&(g=r),g=0!==g.indexOf("blob:")?g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},m&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var y,A=s.print||console.log.bind(console),b=s.printErr||console.warn.bind(console);Object.assign(s,p),p=null,s.arguments&&(c=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(y=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&U("no native wasm support detected");var x,v=!1;function w(e){return s["_"+e]}function k(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,N,t,n)}(e,t=re(n),n)}return t},array:function(e){var t=re(e.length);return function(e,t){S.set(e,t)}(e,t),t}},i=w(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var d=s[n[u]];d?(0===l&&(l=te()),o[u]=d(r[u])):o[u]=r[u]}var h,p=i.apply(null,o);return h=p,0!==l&&ne(l),p=function(e){return"string"===t?_(e):"boolean"===t?Boolean(e):e}(h),p}var I,S,N,T,C="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function E(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&C)return C.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function _(e,t){return e?E(N,e,t):""}function R(e,t){return e%t>0&&(e+=t-e%t),e}function M(e){I=e,s.HEAP8=S=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=T=new Int32Array(e),s.HEAPU8=N=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le"),s.INITIAL_MEMORY;var $,F,O,z=[],D=[],P=[],L=0,W=null,B=null;function U(e){s.onAbort&&s.onAbort(e),b(e="Aborted("+e+")"),v=!0,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function V(e){return e.startsWith("data:application/octet-stream;base64,")}function G(e){return e.startsWith("file://")}function j(e){try{if(e==F&&y)return new Uint8Array(y);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){U(e)}}function H(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?K(n)():K(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}s.preloadedImages={},s.preloadedAudios={},V(F="tfjs-backend-wasm.wasm")||(O=F,F=s.locateFile?s.locateFile(O,g):g+O);var q=[];function K(e){var t=q[e];return t||(e>=q.length&&(q.length=e+1),q[e]=t=$.get(e)),t}function X(e){try{return x.grow(e-I.byteLength+65535>>>16),M(x.buffer),1}catch(e){}}var Z,Y,J,Q={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Q.buffers[e];0===t||10===t?((1===e?A:b)(E(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Q.varargs+=4,T[Q.varargs-4>>2]},getStr:function(e){return _(e)},get64:function(e,t){return e}},ee={abort:function(){U("")},emscripten_memcpy_big:function(e,t,n){N.copyWithin(e,t,t+n)},emscripten_resize_heap:function(e){var t=N.length,n=2147483648;if((e>>>=0)>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),X(Math.min(n,R(Math.max(e,a),65536))))return!0}return!1},fd_close:function(e){return 0},fd_seek:function(e,t,n,r,a){},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=T[t>>2],o=T[t+4>>2];t+=8;for(var l=0;l<o;l++)Q.printChar(e,N[i+l]);a+=o}return T[r>>2]=a,0},setTempRet0:function(e){}},te=(function(){var e={env:ee,wasi_snapshot_preview1:ee};function t(e,t){var n=e.exports;s.asm=n,M((x=s.asm.memory).buffer),$=s.asm.__indirect_function_table,function(e){D.unshift(e)}(s.asm.__wasm_call_ctors),function(e){if(L--,s.monitorRunDependencies&&s.monitorRunDependencies(L),0==L&&(null!==W&&(clearInterval(W),W=null),B)){var t=B;B=null,t()}}()}function r(e){t(e.instance)}function a(t){return function(){if(!y&&(f||m)){if("function"==typeof fetch&&!G(F))return fetch(F,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+F+"'";return e.arrayBuffer()})).catch((function(){return j(F)}));if(o)return new Promise((function(e,t){o(F,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return j(F)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){b("failed to asynchronously prepare wasm: "+e),U(e)}))}if(L++,s.monitorRunDependencies&&s.monitorRunDependencies(L),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return b("Module.instantiateWasm callback failed with error: "+e),!1}(y||"function"!=typeof WebAssembly.instantiateStreaming||V(F)||G(F)||"function"!=typeof fetch?a(r):fetch(F,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return b("wasm streaming compile failed: "+e),b("falling back to ArrayBuffer instantiation"),a(r)}))}))).catch(n)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s._emscripten_main_thread_process_queued_calls=function(){return(s._emscripten_main_thread_process_queued_calls=s.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},s.stackSave=function(){return(te=s.stackSave=s.asm.stackSave).apply(null,arguments)}),ne=s.stackRestore=function(){return(ne=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},re=s.stackAlloc=function(){return(re=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function ae(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function se(e){function n(){Z||(Z=!0,s.calledRun=!0,!v&&(H(D),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),P.unshift(e);var e;H(P)}()))}e=e||c,L>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),z.unshift(e);var e;H(z)}(),L>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?w(e):function(){return k(e,t,n,arguments)}},B=function e(){Z||se(),Z||(B=e)},s.run=se,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(se(),a&&(Y={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)J=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");J=WasmBackendModuleThreadedSimd}if(Y){var ie=J._dispose;J._dispose=function(){ie(),Y.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Y.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n.amdO?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModule=a)}}),Pl=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Ll=class{refCount(e){return Wl("refCount")}incRef(e){return Wl("incRef")}timerAvailable(){return!0}time(e){return Wl("time")}read(e){return Wl("read")}readSync(e){return Wl("readSync")}readToGPU(e,t){return Wl("readToGPU")}numDataIds(){return Wl("numDataIds")}disposeData(e,t){return Wl("disposeData")}write(e,t,n){return Wl("write")}move(e,t,n,r,a){return Wl("move")}memory(){return Wl("memory")}floatPrecision(){return Wl("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Wl("dispose")}};function Wl(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Bl(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,jl(e,t,n)}function Ul(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,jl(e,n,r),jl(t,n,r)}function Vl(e,t,n){return Math.max(e,Math.min(t,n))}function Gl(e){return e%2==0?e:e+1}function jl(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function Hl(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function ql(e,t){let n=Math.random();return t*n+(1-n)*e}function Kl(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Xl(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Zl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";Xl(tu(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Yl(e){Xl(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Jl(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),Array.isArray(e)||gu(e)&&!n)for(let r=0;r<e.length;++r)Jl(e[r],t,n);else t.push(e);return t}function Ql(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function eu(e){return 0===e.length}function tu(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function nu(e){return e%1==0}function ru(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function au(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function su(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Bl(t),t}function iu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ou(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0;return new Promise(((r,a)=>{let s=0,i=()=>{if(e())return void r();s++;let o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function lu(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function uu(e,t){let n=t.length;return Xl((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Xl(e.every((e=>nu(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function du(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:uu(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function hu(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function pu(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function cu(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function fu(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function mu(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function gu(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function yu(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Au(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function bu(e){return"string"==typeof e||e instanceof String}function xu(e){return"boolean"==typeof e}function vu(e){return"number"==typeof e}function wu(e){return Array.isArray(e)?wu(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":vu(e)?"float32":bu(e)?"string":xu(e)?"bool":"float32"}function ku(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Iu(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Su(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Nu(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=Nu(e+t*o,i,n,r)}return a}function Tu(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];let r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Nu(0,e,t,n)}function Cu(e,t){let n=Eu(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Eu(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function _u(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Tu(e,new Float32Array(n));if("int32"===t)return Tu(e,new Int32Array(n));if("bool"===t)return Tu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ru(e){e.forEach((t=>{Xl(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Mu(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function $u(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Fu(e){return e&&e.then&&"function"==typeof e.then}var Ou="tfjsflags",zu=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Du,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Lu().getBool("IS_TEST")||Lu().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Lu().getBool("IS_TEST")||Lu().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Fu(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);Ou in e&&e[Ou].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function Du(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return Pu(t,r[0],r[1]),r.join("=")})),t}function Pu(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function Lu(){return Bu}var Wu,Bu=null;function Uu(){if(null==Wu){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Wu=e}return Wu}function Vu(e,t){let n=function(){let e=Uu();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var Gu="Abs",ju="Acos",Hu="Acosh",qu="Add",Ku="AddN",Xu="All",Zu="Any",Yu="ArgMax",Ju="ArgMin",Qu="Asin",ed="Asinh",td="Atan",nd="Atanh",rd="Atan2",ad="AvgPool",sd="AvgPoolGrad",id="AvgPool3D",od="AvgPool3DGrad",ld="BatchMatMul",ud="BatchToSpaceND",dd="Bincount",hd="BroadcastTo",pd="BroadcastArgs",cd="Cast",fd="Ceil",md="ClipByValue",gd="Complex",yd="ComplexAbs",Ad="Concat",bd="Conv2D",xd="Conv2DBackpropFilter",vd="Conv2DBackpropInput",wd="Conv3D",kd="Conv3DBackpropFilterV2",Id="Conv3DBackpropInputV2",Sd="Cos",Nd="Cosh",Td="Cumprod",Cd="Cumsum",Ed="CropAndResize",_d="DenseBincount",Rd="DepthToSpace",Md="DepthwiseConv2dNative",$d="DepthwiseConv2dNativeBackpropFilter",Fd="DepthwiseConv2dNativeBackpropInput",Od="Diag",zd="Dilation2D",Dd="Dilation2DBackpropInput",Pd="Dilation2DBackpropFilter",Ld="RealDiv",Wd="Einsum",Bd="Elu",Ud="EluGrad",Vd="Erf",Gd="Equal",jd="Exp",Hd="ExpandDims",qd="Expm1",Kd="FFT",Xd="Fill",Zd="FlipLeftRight",Yd="Floor",Jd="FloorDiv",Qd="FusedBatchNorm",eh="GatherV2",th="GatherNd",nh="Greater",rh="GreaterEqual",ah="Identity",sh="IFFT",ih="Imag",oh="IsFinite",lh="IsInf",uh="IsNan",dh="LeakyRelu",hh="Less",ph="LessEqual",ch="LinSpace",fh="Log",mh="Log1p",gh="LogicalAnd",yh="LogicalNot",Ah="LogicalOr",bh="LogSoftmax",xh="LRN",vh="LRNGrad",wh="Max",kh="Maximum",Ih="MaxPool",Sh="MaxPoolGrad",Nh="MaxPool3D",Th="MaxPool3DGrad",Ch="MaxPoolWithArgmax",Eh="Mean",_h="Min",Rh="Minimum",Mh="MirrorPad",$h="Mod",Fh="Multinomial",Oh="Multiply",zh="Neg",Dh="NotEqual",Ph="NonMaxSuppressionV3",Lh="NonMaxSuppressionV4",Wh="NonMaxSuppressionV5",Bh="OnesLike",Uh="OneHot",Vh="Pack",Gh="PadV2",jh="Pool",Hh="Pow",qh="Prelu",Kh="Prod",Xh="Range",Zh="Real",Yh="Reciprocal",Jh="Relu",Qh="Reshape",ep="ResizeNearestNeighbor",tp="ResizeNearestNeighborGrad",np="ResizeBilinear",rp="ResizeBilinearGrad",ap="Relu6",sp="Reverse",ip="Round",op="Rsqrt",lp="ScatterNd",up="Select",dp="Selu",hp="Slice",pp="Sin",cp="Sinh",fp="Sign",mp="Sigmoid",gp="Softplus",yp="Sqrt",Ap="Sum",bp="SpaceToBatchND",xp="SplitV",vp="Softmax",wp="SparseFillEmptyRows",kp="SparseReshape",Ip="SparseSegmentMean",Sp="SparseSegmentSum",Np="SparseToDense",Tp="SquaredDifference",Cp="Square",Ep="StridedSlice",_p="StringNGrams",Rp="StringSplit",Mp="StringToHashBucketFast",$p="Sub",Fp="Tan",Op="Tanh",zp="Tile",Dp="TopK",Pp="Transform",Lp="Transpose",Wp="Unique",Bp="Unpack",Up="UnsortedSegmentSum",Vp="ZerosLike",Gp="Step",jp="FromPixels",Hp="RotateWithOffset",qp="_FusedMatMul",Kp="FusedConv2D",Xp="FusedDepthwiseConv2D";function Zp(){Lu().getBool("IS_TEST")||Lu().getBool("PROD")||console.warn(...arguments)}function Yp(){Lu().getBool("IS_TEST")||Lu().getBool("PROD")||console.log(...arguments)}var Jp=Vu("kernelRegistry",(()=>new Map)),Qp=Vu("gradRegistry",(()=>new Map));function ec(e,t){let n=lc(e,t);return Jp.get(n)}function tc(e){return Qp.get(e)}function nc(e){let t=Jp.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function rc(e){let{kernelName:t,backendName:n}=e,r=lc(t,n);Jp.has(r)&&Zp(`The kernel '${t}' for backend '${n}' is already registered`),Jp.set(r,e)}function ac(e){let{kernelName:t}=e;Qp.has(t)&&Lu().getBool("DEBUG")&&Zp(`Overriding the gradient for '${t}'`),Qp.set(t,e)}function sc(e,t){let n=lc(e,t);if(!Jp.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Jp.delete(n)}function ic(e){if(!Qp.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Qp.delete(e)}function oc(e,t){nc(e).forEach((e=>{rc(Object.assign({},e,{backendName:t}))}))}function lc(e,t){return`${t}_${e}`}var uc={};gl(uc,{arraysEqual:()=>tu,assert:()=>Xl,assertNonNegativeIntegerDimensions:()=>Ru,assertNonNull:()=>Yl,assertShapesMatch:()=>Zl,bytesFromStringArray:()=>Au,bytesPerElement:()=>yu,checkConversionForErrors:()=>cu,clamp:()=>Vl,computeStrides:()=>Su,createScalarValue:()=>Tc,createShuffledIndices:()=>su,decodeString:()=>Mc,distSquared:()=>Kl,encodeString:()=>Rc,fetch:()=>_c,fingerPrint64:()=>Nc,flatten:()=>Jl,getArrayFromDType:()=>pu,getTypedArrayFromDType:()=>hu,hasEncodingLoss:()=>mu,hexToLong:()=>pc,indexToLoc:()=>$u,inferDtype:()=>wu,inferFromImplicitShape:()=>lu,isBoolean:()=>xu,isFunction:()=>ku,isInt:()=>nu,isNumber:()=>vu,isPromise:()=>Fu,isScalarShape:()=>eu,isString:()=>bu,isTypedArray:()=>gu,isValidDtype:()=>fu,locToIndex:()=>Mu,makeOnesTypedArray:()=>Cu,makeZerosNestedTypedArray:()=>_u,makeZerosTypedArray:()=>Eu,nearestDivisor:()=>Iu,nearestLargerEven:()=>Gl,now:()=>Ec,parseAxisParam:()=>uu,randUniform:()=>ql,repeatedTry:()=>ou,rightPad:()=>iu,shuffle:()=>Bl,shuffleCombo:()=>Ul,sizeFromShape:()=>Ql,sizeToSquarishShape:()=>au,squeezeShape:()=>du,sum:()=>Hl,swap:()=>jl,tanh:()=>ru,toNestedArray:()=>Tu,toTypedArray:()=>Cc});var dc=yl(Al()),hc=dc.default||dc;function pc(e){return hc.fromString(e,!0,16)}var cc=pc("c3a5c85c97cb3127"),fc=pc("b492b66fbe98f273"),mc=pc("9ae16a3b2f90404f");function gc(e){return e.xor(e.shru(47))}function yc(e,t,n){let r=e.slice(t,t+n);return hc.fromBytes(Array.from(r),!0,!0)}function Ac(e,t){return yc(e,t,8)}function bc(e,t){return yc(e,t,4)}function xc(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function vc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:pc("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function wc(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=xc(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(xc(a,44)),[a.add(r),s.add(i)]}(Ac(e,t),Ac(e,t+8),Ac(e,t+16),Ac(e,t+24),n,r)}function kc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){let n=mc.add(2*t),r=Ac(e,0).add(mc),a=Ac(e,t-8);return vc(xc(a,37).mul(n).add(r),xc(r,25).add(a).mul(n),n)}if(t>=4){let n=mc.add(2*t);return vc(bc(e,0).shl(3).add(t),bc(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return gc(mc.mul(n).xor(cc.mul(r))).mul(mc)}return mc}function Ic(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=mc.add(2*t),r=Ac(e,0).mul(fc),a=Ac(e,8),s=Ac(e,t-8).mul(n),i=Ac(e,t-16).mul(mc);return vc(xc(r.add(a),43).add(xc(s,30)).add(i),r.add(xc(a.add(mc),18)).add(s),n)}function Sc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=mc.add(2*t),r=Ac(e,0).mul(mc),a=Ac(e,8),s=Ac(e,t-8).mul(n),i=Ac(e,t-16).mul(mc),o=xc(r.add(a),43).add(xc(s,30)).add(i),l=vc(o,r.add(xc(a.add(mc),18)).add(s),n),u=Ac(e,16).mul(n),d=Ac(e,24),h=o.add(Ac(e,t-32)).mul(n),p=l.add(Ac(e,t-24)).mul(n);return vc(xc(u.add(d),43).add(xc(h,30)).add(p),u.add(xc(d.add(r),18)).add(h),n)}function Nc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=hc.fromNumber(81,!0);if(t<=32)return t<=16?kc(e,t):Ic(e,t);if(t<=64)return Sc(e,t);let r=n,a=n.mul(fc).add(113),s=gc(a.mul(mc).add(113)).mul(mc),i=[hc.UZERO,hc.UZERO],o=[hc.UZERO,hc.UZERO];r=r.mul(mc).add(Ac(e,0));let l=0,u=64*(t-1>>6),d=u+(t-1&63)-63;do{r=xc(r.add(a).add(i[0]).add(Ac(e,l+8)),37).mul(fc),a=xc(a.add(i[1]).add(Ac(e,l+48)),42).mul(fc),r=r.xor(o[1]),a=a.add(i[0]).add(Ac(e,l+40)),s=xc(s.add(o[0]),33).mul(fc),i=wc(e,l,i[1].mul(fc),r.add(o[0])),o=wc(e,l+32,s.add(o[1]),a.add(Ac(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let h=fc.add(s.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=xc(r.add(a).add(i[0]).add(Ac(e,l+8)),37).mul(h),a=xc(a.add(i[1]).add(Ac(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Ac(e,l+40))),s=xc(s.add(o[0]),33).mul(h),i=wc(e,l,i[1].mul(h),r.add(o[0])),o=wc(e,l+32,s.add(o[1]),a.add(Ac(e,l+16))),[s,r]=[r,s],vc(vc(i[0],o[0],h).add(gc(a).mul(cc)).add(s),vc(i[1],o[1],h).add(r),h)}function Tc(e,t){return"string"===t?Rc(e):Cc([e],t)}function Cc(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Jl(e)),Lu().getBool("DEBUG")&&cu(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ec(){return Lu().platform.now()}function _c(e,t){return Lu().platform.fetch(e,t)}function Rc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Lu().platform.encode(e,t)}function Mc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Lu().platform.decode(e,t)}function $c(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}function Fc(e,t,n,r){let a=Su(t),s=function(e,t,n,r){let a=Ql(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Pc(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Oc(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Dc(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Oc(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:bu(e)?`'${e}'`:"bool"===n?zc(e):parseFloat(e.toFixed(7)).toString(),iu(r,t)}function zc(e){return 0===e?"false":"true"}function Dc(e,t,n,r,a){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Oc(Pc(e)[0],0,n)]:"bool"===n?[zc(e[0])]:[e[0].toString()];if(1===l){if(o>20){let t=3*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Pc(r),s=Pc(s)),["["+r.map(((e,t)=>Oc(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Oc(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Pc(e):Array.from(e)).map(((e,t)=>Oc(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),d=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){let r=t*h,s=r+h;p.push(...Dc(e.slice(r,s),u,n,d,a,!1))}p.push("...");for(let t=o-3;t<o;t++){let r=t*h,s=r+h;p.push(...Dc(e.slice(r,s),u,n,d,a,t===o-1))}}else for(let t=0;t<o;t++){let r=t*h,s=r+h;p.push(...Dc(e.slice(r,s),u,n,d,a,t===o-1))}let c=2===l?",":"";p[0]="["+p[0]+c;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function Pc(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Lc=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Ql(e),null!=n){let e=n.length;Xl(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||pu(t,this.size),this.strides=Su(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),Xl(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));let a=this.locToIndex(n);this.values[a]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(let e of t){if(e<0||e>=this.shape[r]){let e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let a=t[t.length-1];for(let e=0;e<t.length-1;++e)a+=this.strides[e]*t[e];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Wc().makeTensor(this.values,this.shape,this.dtype)}},Wc=null,Bc=null,Uc=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Ql(e),this.strides=Su(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Bc.buffer(this.shape,this.dtype,e)}bufferSync(){return Bc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Tu(this.shape,e,"complex64"===this.dtype)}arraySync(){return Tu(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=Wc().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Mc(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Wc().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Wc().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Mc(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Wc().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Wc().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Bc.print(this,e)}clone(){return this.throwIfDisposed(),Bc.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Fc(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Bc.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Wc().makeVariable(this,e,t,n)}};Object.defineProperty(Uc,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Vu("Tensor",(()=>Uc));var Vc=class extends Uc{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!tu(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Wc().disposeTensor(this),this.dataId=e.dataId,Wc().incRef(this,null)}dispose(){Wc().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Vc,Symbol.hasInstance,{value:e=>e instanceof Uc&&null!=e.assign&&e.assign instanceof Function});var Gc={};gl(Gc,{assertTypesMatch:()=>tf,getTensorsInContainer:()=>rf,isTensorInList:()=>nf,makeTypesMatch:()=>ef});var jc,Hc=((jc=Hc||{}).R0="R0",jc.R1="R1",jc.R2="R2",jc.R3="R3",jc.R4="R4",jc.R5="R5",jc.R6="R6",jc),qc=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(qc||{}),Kc=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(Kc||{}),Xc=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(Xc||{}),Zc=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(Zc||{}),Yc={float32:Xc,int32:qc,bool:Kc,complex64:Zc};function Jc(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Yc[e][t]}function Qc(e){return Jc(e,"int32")}function ef(e,t){if(e.dtype===t.dtype)return[e,t];let n=Jc(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function tf(e,t){Xl(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function nf(e,t){return t.some((t=>t.id===e.id))}function rf(e){let t=[];return af(e,t,new Set),t}function af(e,t,n){if(null==e)return;if(e instanceof Uc)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let e in r){let a=r[e];n.has(a)||(n.add(a),af(a,t,n))}}function sf(e){return null!=e.kernelName}var of=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},lf=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new of}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(Zp(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?iu(`${r}ms`,9):r.error,o=iu(e,25),l=t.rank,u=t.size,d=iu(t.shape.toString(),14),h="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${d}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}})}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=Ec();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:Ec()-i})}if(Lu().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){let n=r[t];n.data().then((t=>{$c(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){nc(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){nc(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof Ll||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Zp(`Initialization of backend ${e} failed`),Zp(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Zp(`Initialization of backend ${e} failed`),Zp(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return lf.nextTensorId++}nextVariableId(){return lf.nextVariableId++}clone(e){let t=hf.runKernel(ah,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e};return hf.runKernel(cd,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==ec(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=sf(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(sf(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=ec(t,this.backendName);Xl(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>{if(null!=e.rank)return e;let{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{!a||(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:d,attrs:h}=e,p=sf(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,d,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,d,t,p,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=tc(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(Xl(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&bu(e[0])&&(a=e.map((e=>Rc(e))));let s=r.write(a,t,n),i=new Uc(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=Au(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a=new Uc(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new Vc(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*yu(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Vc||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*yu(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=tc(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=Eu(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=rf(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(Xl(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Xl(a instanceof Uc,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=Cu(Ql(e),"float32");return hf.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!tu(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),pf);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){var t=this;return Xl(ku(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];Xl(r.every((e=>e instanceof Uc)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let s,i={};r.forEach(((e,t)=>{i[t]=e}));let o=(t,n)=>(s=e(...r,n),Xl(s.value instanceof Uc,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Xl(ku(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),l=(e,t)=>{let n=s.gradFunc(e,t),a=Array.isArray(n)?n:[n];Xl(a.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Xl(a.every((e=>e instanceof Uc)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i};return t.runKernelFunc({forwardFunc:o,backwardsFunc:l,inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Ec(),n=await this.backend.time(e);return n.wallMs=Ec()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new of;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},uf=lf;function df(){let e=Uu();if(null==e._tfengine){let t=new zu(e);e._tfengine=new uf(t)}return function(e){Bu=e}(e._tfengine.ENV),function(e){Wc=e}((()=>e._tfengine)),e._tfengine}uf.nextTensorId=0,uf.nextVariableId=0;var hf=df();function pf(e,t){let n={a:e,b:t};return hf.runKernel(qu,n)}var cf,ff={};function mf(e){cf=e}function gf(e){if(void 0!==cf)return cf;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function yf(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}gl(ff,{isBrowser:()=>yf,isMobile:()=>gf,mockIsMobile:()=>mf});var Af=Lu();function bf(e,t){let n=e;if(gu(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||gu(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Lu().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&xf(e,r,[]),r}function xf(e,t,n){if(n=n||[],!Array.isArray(e)&&!gu(e))return void Xl(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Xl(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Xl(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let t=0;t<e.length;++t)xf(e[t],r,n.concat(t))}function vf(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function wf(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Uc)return vf(r,e.dtype,t,n),e;let a=wu(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),vf(r,a,t,n),null==e||!gu(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=bf(e,a);!gu(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?Cc(e,a):Jl(e,[],!0);return hf.makeTensor(i,s,a)}function kf(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>wf(e,`${t}[${a}]`,n,r)))}Af.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Af.registerFlag("IS_BROWSER",(()=>yf())),Af.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Af.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Af.registerFlag("PROD",(()=>!1)),Af.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Af.getBool("DEBUG"))),Af.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Af.registerFlag("IS_TEST",(()=>!1)),Af.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Af.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Af.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var If="__op";function Sf(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=If;let a=function(){hf.startScope(n);try{let e=r(...arguments);return Fu(e)&&console.error("Cannot return a Promise inside of tidy."),hf.endScope(e),e}catch(e){throw hf.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var Nf=Sf({complex_:function(e,t){let n=wf(e,"real","complex"),r=wf(t,"imag","complex");Zl(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return hf.runKernel(gd,a)}});function Tf(e,t,n,r){if(null==r&&(r=wu(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!gu(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ru(t);let e=Ql(t),r=Ql(n);Xl(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==Ql(t.slice(e));Xl(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!gu(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Cc(e,r):Jl(e,[],!0),hf.makeTensor(e,t,r)}function Cf(e,t,n){return Tf(e,t,bf(e,n),n)}var Ef={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function _f(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Mf(await Promise.all(r)),specs:n}}function Rf(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=Ql(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=Ef[r.dtype],d=e.slice(a,a+u*l),h="uint8"===r.dtype?new Uint8Array(d):new Uint16Array(d);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(h.length);for(let e=0;e<h.length;e++){let n=h[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=Wf()),t=n(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(h.length);for(let e=0;e<h.length;e++){let n=h[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=Ql(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+4))[0];a+=4;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=Ef[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=Cf(e,l,"float32"),o=Cf(n,l,"float32");r[i]=Nf(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=Cf(t,l,o))}return r}function Mf(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var $f="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ff(e){return $f?Buffer.byteLength(e):new Blob([e]).size}function Of(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function zf(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Df(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Pf(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){let[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Lf(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ff(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ff(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Wf(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var Bf=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Bf.instance&&(Bf.instance=new Bf),Bf.instance}static registerSaveRouter(e){Bf.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Bf.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Bf.getHandlers(e,"save")}static getLoadHandlers(e,t){return Bf.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?Bf.getInstance().loadRouters:Bf.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},Uf=e=>Bf.registerSaveRouter(e),Vf=e=>Bf.registerLoadRouter(e),Gf=e=>Bf.getSaveHandlers(e),jf=(e,t)=>Bf.getLoadHandlers(e,t),Hf="tensorflowjs",qf="models_store",Kf="model_info_store";function Xf(){if(!Lu().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Zf(e){let t=e.result;t.createObjectStore(qf,{keyPath:"modelPath"}),t.createObjectStore(Kf,{keyPath:"modelPath"})}var Yf=class{constructor(e){if(this.indexedDB=Xf(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(Hf,1);r.onupgradeneeded=()=>Zf(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(qf,"readonly"),r=t.objectStore(qf).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=Lf(t),i=a.transaction(Kf,"readwrite"),o=i.objectStore(Kf),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(qf,"readwrite");let l=r.objectStore(qf).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(Kf);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};Yf.URL_SCHEME="indexeddb://";var Jf=e=>Lu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Yf.URL_SCHEME)?function(e){return new Yf(e)}(e.slice(Yf.URL_SCHEME.length)):null;Bf.registerSaveRouter(Jf),Bf.registerLoadRouter(Jf);var Qf="/",em="tensorflowjs_models",tm="info",nm="model_topology",rm="weight_specs",am="weight_data",sm="model_metadata";function im(e){return{info:[em,e,tm].join(Qf),topology:[em,e,nm].join(Qf),weightSpecs:[em,e,rm].join(Qf),weightData:[em,e,am].join(Qf),modelMetadata:[em,e,sm].join(Qf)}}function om(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function lm(e){let t=e.split(Qf);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Qf)}var um=class{constructor(e){if(!Lu().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=im(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Lf(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if($f)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw om(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if($f){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};um.URL_SCHEME="localstorage://";var dm=e=>Lu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(um.URL_SCHEME)?function(e){return new um(e)}(e.slice(um.URL_SCHEME.length)):null;Bf.registerSaveRouter(dm),Bf.registerLoadRouter(dm);var hm="://",pm=class{constructor(){this.managers={}}static getInstance(){return null==pm.instance&&(pm.instance=new pm),pm.instance}static registerManager(e,t){Xl(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(hm)&&(e=e.slice(0,e.indexOf(hm))),Xl(e.length>0,(()=>"scheme must not be an empty string."));let n=pm.getInstance();Xl(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function cm(e){if(-1===e.indexOf(hm))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${pm.getSchemes().join(",")}`);return{scheme:e.split(hm)[0],path:e.split(hm)[1]}}async function fm(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];Xl(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=Bf.getLoadHandlers(e);Xl(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Xl(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=Bf.getSaveHandlers(t);Xl(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Xl(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=cm(e).scheme,l=cm(e).path,u=o===cm(e).scheme,d=await a.load();n&&u&&await pm.getManager(o).removeModel(l);let h=await i.save(d);return n&&!u&&await pm.getManager(o).removeModel(l),h.modelArtifactsInfo}async function mm(){let e=pm.getSchemes(),t={};for(let n of e){let e=await pm.getManager(n).listModels();for(let r in e)t[n+hm+r]=e[r]}return t}async function gm(e){let t=cm(e);return pm.getManager(t.scheme).removeModel(t.path)}async function ym(e,t){return fm(e,t,!1)}async function Am(e,t){return fm(e,t,!0)}if(Lu().get("IS_BROWSER")){Lu().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{pm.registerManager(um.URL_SCHEME,new class{constructor(){Xl(Lu().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Xl("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=em+Qf,n=Qf+tm;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[lm(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=im(e=function(e){return e.startsWith(um.URL_SCHEME)?e.slice(um.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return om(t),n}})}catch(jc){}try{pm.registerManager(Yf.URL_SCHEME,new class{constructor(){this.indexedDB=Xf()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(Hf,1);n.onupgradeneeded=()=>Zf(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Kf,"readonly"),s=a.objectStore(Kf).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(Yf.URL_SCHEME)?e.slice(Yf.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(Hf,1);r.onupgradeneeded=()=>Zf(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(Kf,"readwrite"),o=i.objectStore(Kf),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(qf,"readwrite");let r=a.objectStore(qf).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch(jc){}}var bm;function xm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",Ru(e),new Lc(e,t,n)}Lu().get("IS_NODE")&&!Lu().get("IS_BROWSER")&&Lu().setPlatform("node",new class{constructor(){this.util=xl(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Lu().global.fetch?Lu().global.fetch(e,t):(null==bm&&(bm=bl()),bm(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var vm=Sf({cast_:function(e,t){let n=wf(e,"x","cast");if(!fu(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return hf.runKernel(cd,r,a)}}),wm=Sf({clone_:function(e){let t={x:wf(e,"x","clone","string_or_numeric")};return hf.runKernel(ah,t)}});function km(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}df(),function(e){Bc=e}({buffer:xm,cast:vm,clone:wm,print:km});var Im={};function Sm(e){return new Promise((e=>setTimeout(e))).then(e)}gl(Im,{browserFiles:()=>Cm,browserHTTPRequest:()=>Dm,concatenateArrayBuffers:()=>Of,copyModel:()=>ym,decodeWeights:()=>Rf,encodeWeights:()=>_f,fromMemory:()=>Lm,getLoadHandlers:()=>jf,getModelArtifactsForJSON:()=>Pf,getModelArtifactsInfoForJSON:()=>Lf,getSaveHandlers:()=>Gf,http:()=>zm,isHTTPScheme:()=>Fm,listModels:()=>mm,loadWeights:()=>Rm,moveModel:()=>Am,registerLoadRouter:()=>Vf,registerSaveRouter:()=>Uf,removeModel:()=>gm,weightsLoaderFactory:()=>Mm,withSaveHandler:()=>Wm});var Nm=class{constructor(e){if(!Lu().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Nm.URL_SCHEME)&&(e=e.slice(Nm.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=Df(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Sm((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Sm((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Lf(e)}}}},Tm=Nm;function Cm(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=Pf(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let r of e)t.push(...r.weights),n.push(...r.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,Of(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>zf(e.name))),r={};for(let a of e)a.paths.forEach((e=>{let a=zf(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}(e)}function Em(e,t,n,r){var a;Xl(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){Xl(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Xl(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Xl(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function _m(e,t){null==t&&(t={});let n=null==t.fetchFunc?Lu().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Em(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Em(a,t.onProgress,.5,1)}async function Rm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Mm((e=>_m(e,{requestInit:r})))(e,t,n)}function Mm(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0,a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=Ef[l]*Ql(e.shape),d=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(d(),i[n]=!0)})):d(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let d=await e(u),h={},p=0;return l.forEach((e=>{let n=t[e].paths.length,r=0;for(let e=0;e<n;e++)r+=d[p+e].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let e=0;e<n;e++){let t=new Uint8Array(d[p+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{let t=Rf(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)h[e]=t[e]})),p+=n})),h}}Tm.URL_SCHEME="downloads://",Bf.registerSaveRouter((e=>Lu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Tm.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Tm(e)}(e.slice(Tm.URL_SCHEME.length)):null));var $m=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Xl("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Lu().platform.fetch,Xl(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Xl(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Df(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Lf(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Pf(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(let t of e)s.push(...t.weights);let i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Of(await _m(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function Fm(e){return null!=e.match($m.URL_SCHEME_REGEX)}$m.URL_SCHEME_REGEX=/^https?:\/\//;var Om=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Fm(e))):Fm(e),n)return zm(e,t)}return null};function zm(e,t){return new $m(e,t)}function Dm(e,t){return zm(e,t)}Bf.registerSaveRouter(Om),Bf.registerLoadRouter(Om);var Pm=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}};function Lm(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Pm(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Pm({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Pm({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Wm(e){return new class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}(e)}var Bm={};gl(Bm,{confusionMatrix:()=>jm});var Um=Sf({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=wf(e,"a","matMul"),s=wf(t,"b","matMul");[a,s]=ef(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return hf.runKernel(ld,i,o)}}),Vm=Sf({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:wf(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return hf.runKernel(Uh,a,s)}}),Gm=Sf({transpose_:function(e,t){let n=wf(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),Xl(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{Xl(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();let r={x:n},a={perm:t};return hf.runKernel(Lp,r,a)}}),jm=Sf({confusionMatrix_:function(e,t,n){let r=wf(e,"labels","confusionMatrix"),a=wf(t,"predictions","confusionMatrix");Xl(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Xl(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Xl(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),Xl(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),Xl(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=Vm(vm(r,"int32"),n),i=Vm(vm(a,"int32"),n),o=Gm(s),l=Um(o,i);return vm(l,"int32")}}),Hm={};function qm(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Km(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Xm(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}gl(Hm,{assertAndGetBroadcastShape:()=>Xm,getBroadcastDims:()=>qm,getReductionAxes:()=>Km});var Zm,Ym={};function Jm(e,t,n){if(Yl(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=bf(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Tf(e,t,r,n)}function Qm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=ec(jp,hf.backendName)){let n={pixels:e},r={numChannels:t};return hf.runKernel(jp,n,r)}let l,u,[d,h]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,d,h).data;else if(r||n)l=e.data;else if(s||a||o){if(null==Zm)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Zm=new OffscreenCanvas(1,1).getContext("2d")}else Zm=document.createElement("canvas").getContext("2d");Zm.canvas.width=d,Zm.canvas.height=h,Zm.drawImage(e,0,0,d,h),l=Zm.getImageData(0,0,d,h).data}if(4===t)u=new Int32Array(l);else{let e=d*h;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return Jm(u,[h,d,t],"int32")}function eg(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function tg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if(Lu().getBool("WRAP_TO_IMAGEBITMAP")&&eg(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Qm(n,t)}async function ng(e,t){let n=wf(e,"img","toPixels");if(!(e instanceof Uc)){let e=n;n=vm(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}gl(Ym,{fromPixels:()=>rg,fromPixelsAsync:()=>tg,toPixels:()=>ng});var rg=Sf({fromPixels_:Qm}),ag={};function sg(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Ql(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let d=[...Su(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,d]}gl(ag,{prepareAndValidate:()=>sg});var ig={};function og(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function lg(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}og(n,t,e)}function ug(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a;return{sliceRank:a,numUpdates:Ql(t.shape)/o,sliceSize:i,strides:[...Su(n.slice(0,a)),1],outputSize:Ql(n)}}gl(ig,{calculateShapes:()=>ug,validateInput:()=>lg,validateUpdateShape:()=>og});var dg={};function hg(e,t,n){let r=e.shape.length;Xl(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Xl(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)Xl(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function pg(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function cg(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function fg(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function mg(e,t,n){return n<=e?n:n-(t-1)}function gg(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function yg(e,t,n,r,a,s,i,o,l){let u=e.length,d=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;d=Ag(i,l,u,r,e),h=bg(o,l,u,a,e),p=fg(s,l,u,e)}else for(let t=0;t<u;t++)d[t]=vg(i,r,s,e,t,l),h[t]=wg(o,a,s,e,t,l),p[t]=xg(s,t,l);return{begin:d,end:h,strides:p}}function Ag(e,t,n,r,a){let s=[...a],i=gg(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let i=mg(t,n,a),o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function bg(e,t,n,r,a){let s=[...a],i=gg(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let i=mg(t,n,a),o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=Vl(0,s[e],a[e])}return s}function xg(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function vg(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=Vl(0,i,l-1),i}function wg(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?Vl(0,i,l):Vl(-1,i,l-1),i}function kg(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Ig(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Sg(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Xl(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Xl(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Ng(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)d&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(d=!0);d||(h.ellipsisMask|=1<<h.dims,h.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}let a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];let i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){let e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=Tg(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=Tg(p.end[t],1,p.strides[t],r,a,s);let e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;c=c&&e,f=f&&(0===t&&1===p.strides[t]||e)}else c=c&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){let t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Tg(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}gl(dg,{assertParamsValid:()=>hg,computeFlatOffset:()=>Ig,computeOutShape:()=>cg,getNormalizedAxes:()=>yg,isSliceContinous:()=>kg,maskToAxes:()=>pg,parseSliceParams:()=>Sg,sliceInfo:()=>Ng,startForAxis:()=>vg,startIndicesWithElidedDims:()=>Ag,stopForAxis:()=>wg,stopIndicesWithElidedDims:()=>bg,stridesForAxis:()=>xg,stridesWithElidedDims:()=>fg});var Cg={};gl(Cg,{Serializable:()=>Eg,SerializationMap:()=>_g,registerClass:()=>Rg});var Eg=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},_g=class{constructor(){this.classNameMap={}}static getMap(){return null==_g.instance&&(_g.instance=new _g),_g.instance}static register(e){_g.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Rg(e){Xl(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Xl("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Xl(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),_g.register(e)}var Mg={};gl(Mg,{TEST_EPSILON_FLOAT16:()=>$g,encodeStrings:()=>Vg,expectArrayBuffersEqual:()=>Ug,expectArraysClose:()=>Fg,expectArraysEqual:()=>Pg,expectNumbersClose:()=>Lg,expectPromiseToFail:()=>Dg,expectValuesInRange:()=>Bg,testEpsilon:()=>Og});var $g=.1;function Fg(e,t,n){return null==n&&(n=Og()),zg(e,t,((e,t)=>Wg(e,t,n)))}function Og(){return 32===hf.backend.floatPrecision()?.001:$g}function zg(e,t,n){let r=!0;if((gu(e)||gu(t))&&(r=!1),gu(e)&&gu(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=bf(e),r=bf(t);if(!tu(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=gu(e)?e:Jl(e),s=gu(t)?t:Jl(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Dg(e,t){e().then((()=>t.fail()),(()=>t()))}function Pg(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return bu(e)||bu(e[0])||bu(t)||bu(t[0])?zg(e,n,((e,t)=>e==t)):zg(e,t,((e,t)=>Wg(e,t,0)))}function Lg(e,t,n){if(null==n&&(n=Og()),!Wg(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Wg(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Bg(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Ug(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Vg(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Vg(n):e[t]=Rc(n)}return e}var Gg="0.0.0";function jg(){Lu().set("PROD",!0)}function Hg(){Lu().set("DEBUG",!0)}function qg(){Lu().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Kg(e){Lu().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Xg(){hf.disposeVariables()}function Zg(){return hf}function Yg(){return hf.memory()}function Jg(e){return hf.profile(e)}function Qg(e,t){return hf.tidy(e,t)}function ey(e){rf(e).forEach((e=>e.dispose()))}function ty(e){return hf.keep(e)}function ny(e){return hf.time(e)}function ry(e){return hf.setBackend(e)}function ay(){return hf.ready()}function sy(){return hf.backendName}function iy(e){hf.removeBackend(e)}function oy(e){return hf.findBackend(e)}function ly(e){return hf.findBackendFactory(e)}function uy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return hf.registerBackend(e,t,n)}function dy(){return hf.backend}function hy(e,t){Lu().setPlatform(e,t)}var py=Sf({add_:function(e,t){let n=wf(e,"a","add"),r=wf(t,"b","add");[n,r]=ef(n,r);let a={a:n,b:r};return hf.runKernel(qu,a)}}),cy=Sf({floorDiv_:function(e,t){let n=wf(e,"a","floorDiv"),r=wf(t,"b","floorDiv");[n,r]=ef(n,r);let a={a:n,b:r};return hf.runKernel(Jd,a)}}),fy=Sf({div_:function(e,t){let n=wf(e,"a","div"),r=wf(t,"b","div");if([n,r]=ef(n,r),"int32"===n.dtype&&"int32"===r.dtype)return cy(n,r);let a={a:n,b:r};return hf.runKernel(Ld,a,{})}}),my=Sf({mul_:function(e,t){let n=wf(e,"a","mul"),r=wf(t,"b","mul");[n,r]=ef(n,r);let a={a:n,b:r};return hf.runKernel(Oh,a)}}),gy=Sf({abs_:function(e){let t=wf(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return hf.runKernel(yd,e)}{let e={x:t};return hf.runKernel(Gu,e)}}}),yy=Sf({acos_:function(e){let t={x:wf(e,"x","acos")};return hf.runKernel(ju,t)}}),Ay=Sf({acosh_:function(e){let t={x:wf(e,"x","acosh")};return hf.runKernel(Hu,t)}}),by=Sf({addN_:function(e){Xl(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Xl(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>wf(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!tu(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return hf.runKernel(Ku,r)}}),xy=Sf({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:wf(e,"x","all","bool")},a={axis:t,keepDims:n};return hf.runKernel(Xu,r,a)}}),vy=Sf({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:wf(e,"x","any","bool")},a={axis:t,keepDims:n};return hf.runKernel(Zu,r,a)}}),wy=Sf({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:wf(e,"x","argMax")},r={axis:t};return hf.runKernel(Yu,n,r)}}),ky=Sf({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:wf(e,"x","argMin")},r={axis:t};return hf.runKernel(Ju,n,r)}}),Iy=Sf({asin_:function(e){let t={x:wf(e,"x","asin")};return hf.runKernel(Qu,t)}}),Sy=Sf({asinh_:function(e){let t={x:wf(e,"x","asinh")};return hf.runKernel(ed,t)}}),Ny=Sf({atan_:function(e){let t={x:wf(e,"x","atan")};return hf.runKernel(td,t)}}),Ty=Sf({atan2_:function(e,t){let n=wf(e,"a","atan2"),r=wf(t,"b","atan2");[n,r]=ef(n,r);let a={a:n,b:r};return hf.runKernel(rd,a)}}),Cy=Sf({atanh_:function(e){let t={x:wf(e,"x","atanh")};return hf.runKernel(nd,t)}});function Ey(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0,i=e[3],o=[...t,i],l=Vy(a);return My(e,o,n,s,r,null,null,l)}function _y(e,t,n,r,a,s){let i,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",[l,u]=Oy(t);if("channelsLast"===o)i=[l,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);i=[l,u,e[1],e[1]]}return My(e,i,n,r,a,s,!1,o)}function Ry(e,t,n,r,a,s){let i,o,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC",[u,d,h]=zy(t);if("NDHWC"===l)o="channelsLast",i=[u,d,h,e[4],e[4]];else{if("NCDHW"!==l)throw new Error(`Unknown dataFormat ${l}`);o="channelsFirst",i=[u,d,h,e[1],e[1]]}return $y(e,i,n,r,a,!1,o,s)}function My(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,d,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,d]=e}let p,[c,f,,m]=t,[g,y]=Oy(n),[A,b]=Oy(r),x=Dy(c,A),v=Dy(f,b),{padInfo:w,outHeight:k,outWidth:I}=Py(a,u,d,g,y,x,v,s,o),S=i?m*h:m;return"channelsFirst"===o?p=[l,S,k,I]:"channelsLast"===o&&(p=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:A,dilationWidth:b,inShape:e,outShape:p,filterShape:t}}function $y(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,u,d,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,d,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,d,h]=e}let c,[f,m,g,,y]=t,[A,b,x]=zy(n),[v,w,k]=zy(r),I=Dy(f,v),S=Dy(m,w),N=Dy(g,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:_}=Ly(a,u,d,h,A,b,x,I,S,N,o),R=s?y*p:y;return"channelsFirst"===i?c=[l,R,C,E,_]:"channelsLast"===i&&(c=[l,C,E,_,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:d,inWidth:h,inChannels:p,outDepth:C,outHeight:E,outWidth:_,outChannels:R,padInfo:T,strideDepth:A,strideHeight:b,strideWidth:x,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:c,filterShape:t}}function Fy(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=Dy(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Oy(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function zy(e){return"number"==typeof e?[e,e,e]:e}function Dy(e,t){return t<=1?e:e+(e-1)*(t-1)}function Py(e,t,n,r,a,s,i,o,l){let u,d,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=Fy(e,t,n));let s=e[1];return[Wy((e[0]-t+2*r)/n+1,a),Wy((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);let e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),p=e-l,c=Math.floor(o/2);u={top:l,bottom:p,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let p="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:c,left:f,right:m,type:0===p&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},d=Wy((t-s+p+c)/r+1,o),h=Wy((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:d,outWidth:h}}function Ly(e,t,n,r,a,s,i,o,l,u,d){let h,p,c,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let s=function(e,t,n,r,a,s){null==a&&(a=Fy(e,t,r));let i=e[1],o=e[2];return[Wy((e[0]-t+2*a)/r+1,s),Wy((i-t+2*a)/r+1,s),Wy((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,d);p=s[0],c=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),c=Math.ceil(n/s),f=Math.ceil(r/i);let e=(p-1)*a+o-t,d=(c-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,A=Math.floor(d/2),b=d-A,x=Math.floor(m/2);h={top:A,bottom:b,left:x,right:m-x,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),c=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:p,outHeight:c,outWidth:f}}function Wy(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function By(e){let[t,n,r]=Oy(e);return 1===t&&1===n&&1===r}function Uy(e,t){return By(e)||By(t)}function Vy(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Gy(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Xl(nu(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Xl(nu(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var jy=Sf({reshape_:function(e,t){let n={x:wf(e,"x","reshape","string_or_numeric")},r={shape:t};return hf.runKernel(Qh,n,r)}}),Hy=Sf({avgPool_:function(e,t,n,r,a){let s=wf(e,"x","avgPool","float32");Xl(Uy(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=jy(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Xl(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Gy("avgPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=hf.runKernel(ad,l,u);return d=vm(d,s.dtype),o?jy(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),qy=Sf({avgPool3d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",i=wf(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=jy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Xl(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Xl("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Gy("avgPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=hf.runKernel(id,u,d);return h=vm(h,o.dtype),l?jy(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ky=Sf({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;Xl(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=kf(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return wm(n[0]);let r=n,a={axis:t};return hf.runKernel(Ad,r,a)}}),Xy=Sf({sigmoid_:function(e){let t={x:wf(e,"x","sigmoid","float32")};return hf.runKernel(mp,t)}}),Zy=Sf({slice_:function(e,t,n){let r=wf(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return hf.runKernel(hp,a,s)}}),Yy=Sf({tanh_:function(e){let t={x:wf(e,"x","tanh","float32")};return hf.runKernel(Op,t)}}),Jy=Sf({basicLSTMCell_:function(e,t,n,r,a,s){let i=wf(e,"forgetBias","basicLSTMCell"),o=wf(t,"lstmKernel","basicLSTMCell"),l=wf(n,"lstmBias","basicLSTMCell"),u=wf(r,"data","basicLSTMCell"),d=wf(a,"c","basicLSTMCell"),h=wf(s,"h","basicLSTMCell"),p=Ky([u,h],1),c=Um(p,o),f=py(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],A=Zy(f,[0,0],y),b=Zy(f,[0,g],y),x=Zy(f,[0,2*g],y),v=Zy(f,[0,3*g],y),w=py(my(Xy(A),Yy(b)),my(d,Xy(py(i,x))));return[w,my(Yy(w),Xy(v))]}}),Qy=Sf({batchToSpaceND_:function(e,t,n){let r=wf(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));Xl(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Xl(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Xl(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return hf.runKernel(ud,s,i)}});function eA(e){let t;return t=0===e.rank||1===e.rank?jy(e,[1,1,1,e.size]):2===e.rank?jy(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?jy(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var tA=Sf({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=wf(e,"x","batchNorm"),u=wf(t,"mean","batchNorm"),d=wf(n,"variance","batchNorm");null!=a&&(i=wf(a,"scale","batchNorm")),null!=r&&(o=wf(r,"offset","batchNorm")),Xl(u.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Xl(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Xl(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let h={x:eA(l),scale:i,offset:o,mean:u,variance:d},p={varianceEpsilon:s},c=hf.runKernel(Qd,h,p);return jy(c,l.shape)}}),nA=Sf({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=wf(e,"x","batchNorm"),u=wf(t,"mean","batchNorm"),d=wf(n,"variance","batchNorm");return null!=a&&(i=wf(a,"scale","batchNorm")),null!=r&&(o=wf(r,"offset","batchNorm")),Xl(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),Xl(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),Xl(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`)),null!=i&&Xl(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&Xl(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),tA(l,u,d,o,i,s)}}),rA=Sf({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=wf(e,"x","batchNorm"),u=wf(t,"mean","batchNorm"),d=wf(n,"variance","batchNorm");return null!=a&&(i=wf(a,"scale","batchNorm")),null!=r&&(o=wf(r,"offset","batchNorm")),Xl(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),Xl(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),Xl(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`)),null!=i&&Xl(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&Xl(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),tA(l,u,d,o,i,s)}}),aA=Sf({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=wf(e,"x","batchNorm"),u=wf(t,"mean","batchNorm"),d=wf(n,"variance","batchNorm");return null!=a&&(i=wf(a,"scale","batchNorm")),null!=r&&(o=wf(r,"offset","batchNorm")),Xl(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),Xl(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),Xl(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`)),null!=i&&Xl(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&Xl(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),tA(l,u,d,o,i,s)}}),sA=Sf({bincount_:function(e,t,n){let r=wf(e,"x","bincount"),a=wf(t,"weights","bincount");Xl("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Xl(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Xl(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return hf.runKernel(dd,s,i)}}),iA=Sf({broadcastArgs_:function(e,t){let n=wf(e,"s0","broadcastArgs","int32"),r=wf(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return hf.runKernel(pd,a)}}),oA=Sf({broadcastTo_:function(e,t){let n=wf(e,"broadcastTo","x"),r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=jy(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return wm(n);let i={x:n},o={reps:s};return hf.runKernel(zp,i,o)}}),lA=Sf({ceil_:function(e){let t={x:wf(e,"x","ceil","float32")};return hf.runKernel(fd,t)}}),uA=Sf({clipByValue_:function(e,t,n){let r=wf(e,"x","clipByValue");Xl(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));let a={x:r},s={clipValueMin:t,clipValueMax:n};return hf.runKernel(md,a,s)}}),dA=Sf({concat1d_:function(e){return Ky(e,0)}}),hA=Sf({concat2d_:function(e,t){return Ky(e,t)}}),pA=Sf({concat3d_:function(e,t){return Ky(e,t)}}),cA=Sf({concat4d_:function(e,t){return Ky(e,t)}}),fA=Sf({conv2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=wf(e,"x","conv2d","float32"),l=wf(t,"filter","conv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=jy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Xl(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Xl(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Gy("conv2d",r,i);let h="NHWC"===a?u.shape[3]:u.shape[1];Xl(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Xl(Uy(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let p={x:u,filter:l},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=hf.runKernel(bd,p,c);return d?jy(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),mA=Sf({conv1d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6?arguments[6]:void 0,o=wf(e,"x","conv1d"),l=wf(t,"filter","conv1d"),u=o,d=!1;2===o.rank&&(d=!0,u=jy(o,[1,o.shape[0],o.shape[1]])),Xl(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Xl(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Gy("conv1d",r,i),Xl(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Xl(Uy(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),Xl("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let h=jy(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=jy(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=fA(p,h,[1,n],r,"NHWC",[1,s],i);return jy(c,d?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}}),gA=Sf({conv2DBackpropInput_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0;Xl(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=jy(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Xl(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Xl(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Xl(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let d="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];Xl(d===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`)),Xl(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Gy("conv2dDerInput",a,i);let p={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=hf.runKernel(vd,p,c);return u?jy(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),yA=Sf({conv2dTranspose_:function(e,t,n,r,a,s){let i=wf(e,"x","conv2dTranspose"),o=wf(t,"filter","conv2dTranspose");return gA(n,i,o,r,a,"NHWC",s)}}),AA=Sf({conv3d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1],i=wf(e,"x","conv3d"),o=wf(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=jy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Xl(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Xl(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Xl(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Xl(Uy(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Xl("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));let d={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},p=hf.runKernel(wd,d,h);return u?jy(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),bA=Sf({conv3DBackpropInput_:function(e,t,n,r,a){Xl(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=jy(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];Xl(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),Xl(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Xl(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Xl(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Xl(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let d={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=hf.runKernel(Id,d,h);return o?jy(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),xA=Sf({conv3dTranspose_:function(e,t,n,r,a){let s=wf(e,"x","conv3dTranspose"),i=wf(t,"filter","conv3dTranspose");return bA(n,s,i,r,a)}}),vA=Sf({cos_:function(e){let t={x:wf(e,"x","cos","float32")};return hf.runKernel(Sd,t)}}),wA=Sf({cosh_:function(e){let t={x:wf(e,"x","cosh","float32")};return hf.runKernel(Nd,t)}}),kA=Sf({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={x:wf(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return hf.runKernel(Td,a,s)}}),IA=Sf({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={x:wf(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return hf.runKernel(Cd,a,s)}}),SA=Sf({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=wf(e,"x","denseBincount"),s=wf(t,"weights","denseBincount");Xl("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),Xl(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),Xl(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Xl(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return hf.runKernel(_d,i,o)}}),NA=Sf({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC",r=wf(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Xl(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Xl(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Xl(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Xl(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return hf.runKernel(Rd,o,l)}}),TA=Sf({depthwiseConv2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=wf(e,"x","depthwiseConv2d","float32"),l=wf(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=jy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Xl(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Xl(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),Xl(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Gy("depthwiseConv2d",r,i);let h={x:u,filter:l},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},c=hf.runKernel(Md,h,p);return d?jy(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),CA=Sf({diag_:function(e){let t={x:wf(e,"x","diag")};return hf.runKernel(Od,t)}}),EA=Sf({dilation2d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=wf(e,"x","dilation2d"),o=wf(t,"filter","dilation2d");Xl(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Xl(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Xl("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=jy(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let d={x:l,filter:o},h={strides:n,pad:r,dilations:a},p=hf.runKernel(zd,d,h);return u?jy(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),_A=Sf({equal_:function(e,t){let n=wf(e,"a","equal","string_or_numeric"),r=wf(t,"b","equal","string_or_numeric");[n,r]=ef(n,r),Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(Gd,a)}}),RA=Sf({where_:function(e,t,n){let r=wf(t,"a","where"),a=wf(n,"b","where"),s=wf(e,"condition","where","bool"),i=Xm(Xm(s.shape,r.shape),a.shape),o={condition:oA(s,i),t:oA(r,i),e:oA(a,i)};return hf.runKernel(up,o)}}),MA=Sf({zerosLike_:function(e){let t={x:wf(e,"x","zerosLike")};return hf.runKernel(Vp,t)}}),$A=Sf({divNoNan_:function(e,t){let n=wf(e,"a","div"),r=wf(t,"b","div");[n,r]=ef(n,r);let a=fy(n,r),s=MA(a),i=_A(r,s);return RA(i,s,a)}}),FA=Sf({dot_:function(e,t){let n=wf(e,"t1","dot"),r=wf(t,"t2","dot");Xl(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Xl(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=jy(n,[1,-1]),t=jy(r,[-1,1]),a=Um(e,t);return jy(a,[])}if(1===n.rank&&2===r.rank){let e=jy(n,[1,-1]),t=jy(r,[r.shape[0],r.shape[1]]),a=Um(e,t);return jy(a,[a.size])}if(2===n.rank&&1===r.rank){let e=jy(r,[-1,1]),t=Um(n,e);return jy(t,[t.size])}{let e=jy(r,[r.shape[0],r.shape[1]]);return Um(n,e)}}}),OA=Sf({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];let a=n.map(((e,t)=>wf(e,`tensors${t}`,"einsum"))),s={equation:e};return hf.runKernel(Wd,a,s)}}),zA=Sf({elu_:function(e){let t={x:wf(e,"x","elu","float32")};return hf.runKernel(Bd,t)}}),DA=Sf({erf_:function(e){let t=wf(e,"x","erf");Xl("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=vm(t,"float32"));let n={x:t};return hf.runKernel(Vd,n)}}),PA=Sf({exp_:function(e){let t={x:wf(e,"x","exp")};return hf.runKernel(jd,t)}}),LA=Sf({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=wf(e,"x","expandDims","string_or_numeric");Xl(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return hf.runKernel(Hd,r,a)}}),WA=Sf({expm1_:function(e){let t={x:wf(e,"x","expm1")};return hf.runKernel(qd,t)}}),BA=Sf({tile_:function(e,t){let n=wf(e,"x","tile","string_or_numeric");Xl(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return hf.runKernel(zp,r,a)}}),UA=Sf({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);let a=xm([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=jy(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return BA(LA(i,0),[n[0],1,1]);if(2===n.length)return BA(LA(LA(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return BA(LA(LA(LA(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function VA(e,t,n){let r={shape:e,value:t,dtype:n};return hf.runKernel(Xd,{},r)}var GA=Sf({floor_:function(e){let t={x:wf(e,"x","floor","float32")};return hf.runKernel(Yd,t)}}),jA=Sf({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=wf(e,"x","gather"),s=wf(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return hf.runKernel(eh,i,o)}}),HA=Sf({greater_:function(e,t){let n=wf(e,"a","greater","string_or_numeric"),r=wf(t,"b","greater","string_or_numeric");[n,r]=ef(n,r),Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(nh,a)}}),qA=Sf({greaterEqual_:function(e,t){let n=wf(e,"a","greaterEqual","string_or_numeric"),r=wf(t,"b","greaterEqual","string_or_numeric");[n,r]=ef(n,r),Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(rh,a)}}),KA=Sf({imag_:function(e){let t={input:wf(e,"input","imag")};return hf.runKernel(ih,t)}}),XA=Sf({isFinite_:function(e){let t={x:wf(e,"x","isFinite")};return hf.runKernel(oh,t)}}),ZA=Sf({isInf_:function(e){let t={x:wf(e,"x","isInf")};return hf.runKernel(lh,t)}}),YA=Sf({isNaN_:function(e){let t={x:wf(e,"x","isNaN")};return hf.runKernel(uh,t)}}),JA=Sf({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2,n={x:wf(e,"x","leakyRelu")},r={alpha:t};return hf.runKernel(dh,n,r)}}),QA=Sf({less_:function(e,t){let n=wf(e,"a","less","string_or_numeric"),r=wf(t,"b","less","string_or_numeric");[n,r]=ef(n,r),Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(hh,a)}}),eb=Sf({lessEqual_:function(e,t){let n=wf(e,"a","lessEqual","string_or_numeric"),r=wf(t,"b","lessEqual","string_or_numeric");[n,r]=ef(n,r),Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(ph,a)}});function tb(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return hf.runKernel(ch,{},r)}var nb=Sf({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5,s=wf(e,"x","localResponseNormalization");Xl(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),Xl(nu(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=jy(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},d=hf.runKernel(xh,l,u);return o?jy(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),rb=Sf({log_:function(e){let t={x:wf(e,"x","log","float32")};return hf.runKernel(fh,t)}}),ab=Sf({log1p_:function(e){let t={x:wf(e,"x","log1p")};return hf.runKernel(mh,t)}});function sb(e){return Xl(ku(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=wf(t,"x","tf.grad","string_or_numeric"),a=null!=n?wf(n,"dy","tf.grad"):null;return hf.tidy((()=>{let{value:t,grads:n}=hf.gradients((()=>e(r)),[r],a);return null!=a&&Zl(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),hb(n),n[0]}))}}function ib(e){return Xl(ku(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Xl(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=kf(t,"args","tf.grads","string_or_numeric"),a=null!=n?wf(n,"dy","tf.grads"):null;return hf.tidy((()=>{let{value:t,grads:n}=hf.gradients((()=>e(...r)),r,a);return null!=a&&Zl(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),hb(n),n}))}}function ob(e){return Xl(ku(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Xl(t instanceof Uc,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Xl(null==n||n instanceof Uc,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=hf.gradients((()=>e(t)),[t],n);return hb(r),{grad:r[0],value:a}}}function lb(e){return Xl(ku(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Xl(Array.isArray(t)&&t.every((e=>e instanceof Uc)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Xl(null==n||n instanceof Uc,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=hf.gradients((()=>e(...t)),t,n);return null!=n&&Zl(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),hb(r.grads),r}}function ub(e,t){Xl(ku(e),(()=>"The f passed in variableGrads(f) must be a function")),Xl(null==t||Array.isArray(t)&&t.every((e=>e instanceof Vc)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in hf.registeredVariables)t.push(hf.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;Xl((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=hf.gradients(e,t,null,!0);Xl(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Xl(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function db(e){return hf.customGrad(e)}function hb(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var pb=Sf({neg_:function(e){let t={x:wf(e,"x","neg")};return hf.runKernel(zh,t)}}),cb=Sf({softplus_:function(e){let t={x:wf(e,"x","softplus")};return hf.runKernel(gp,t)}}),fb=Sf({logSigmoid_:function(e){let t=wf(e,"x","logSigmoid");return db((e=>({value:pb(cb(pb(e))),gradFunc:t=>my(t,Xy(pb(e)))})))(t)}}),mb=Sf({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:wf(e,"x","max")},a={reductionIndices:t,keepDims:n};return hf.runKernel(wh,r,a)}}),gb=Sf({sub_:function(e,t){let n=wf(e,"a","sub"),r=wf(t,"b","sub");[n,r]=ef(n,r);let a={a:n,b:r};return hf.runKernel($p,a)}}),yb=Sf({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=wf(e,"x","sum");"bool"===r.dtype&&(r=vm(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return hf.runKernel(Ap,a,s)}}),Ab=Sf({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=wf(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return db(((e,n)=>{let r=mb(e,t,!0),a=gb(e,r),s=gb(vm(a,"float32"),rb(yb(PA(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=PA(r);return gb(e,my(yb(e,t,!0),a))}}}))(n)}});function bb(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function xb(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function vb(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function wb(e,t){return xb(e,t.map((e=>1)),t)}function kb(e,t,n){Xl(bb(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Ib(e,t){if(bb(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Sb(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Nb(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var Tb=Sf({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=wf(e,"x","logSumExp"),a=uu(t,r.shape),s=mb(r,a,!0),i=gb(r,s),o=PA(i),l=yb(o,a),u=rb(l),d=py(jy(s,u.shape),u);if(n){let e=wb(d.shape,a);return jy(d,e)}return d}}),Cb=Sf({logicalAnd_:function(e,t){let n=wf(e,"a","logicalAnd","bool"),r=wf(t,"b","logicalAnd","bool");Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(gh,a)}}),Eb=Sf({logicalNot_:function(e){let t={x:wf(e,"x","logicalNot","bool")};return hf.runKernel(yh,t)}}),_b=Sf({logicalOr_:function(e,t){let n=wf(e,"a","logicalOr","bool"),r=wf(t,"b","logicalOr","bool");Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(Ah,a)}}),Rb=Sf({logicalXor_:function(e,t){let n=wf(e,"a","logicalXor","bool"),r=wf(t,"b","logicalXor","bool");return Xm(n.shape,r.shape),Cb(_b(e,t),Eb(Cb(e,t)))}}),Mb=Sf({maxPool_:function(e,t,n,r,a){let s=wf(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=jy(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Xl(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Xl(Uy(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Gy("maxPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=hf.runKernel(Ih,l,u);return o?jy(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),$b=Sf({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",i=wf(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=jy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Xl(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Xl("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Gy("maxPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=hf.runKernel(Nh,u,d);return l?jy(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Fb=Sf({maxPoolWithArgmax_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s={x:wf(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=hf.runKernel(Ch,s,i);return{result:o[0],indexes:o[1]}}}),Ob=Sf({maximum_:function(e,t){let n=wf(e,"a","maximum"),r=wf(t,"b","maximum");[n,r]=ef(n,r),"bool"===n.dtype&&(n=vm(n,"int32"),r=vm(r,"int32")),Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(kh,a)}}),zb=Sf({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:wf(e,"x","mean")},a={axis:t,keepDims:n};return hf.runKernel(Eh,r,a)}});function Db(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){let t=Db(e,"float32"),n=Db(e,"float32");return Nf(t,n)}let n=Eu(Ql(e),t);return hf.makeTensor(n,e,t)}function Pb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===t){let t=Pb(e,"float32"),n=Db(e,"float32");return Nf(t,n)}let n=Cu(Ql(e),t);return hf.makeTensor(n,e,t)}function Lb(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=wf(e,"x","meshgrid",e instanceof Uc?e.dtype:"float32");if(void 0===t)return[r];let a=wf(t,"y","meshgrid",t instanceof Uc?t.dtype:"float32"),s=Ql(r.shape),i=Ql(a.shape);return"xy"===n?(r=jy(r,[1,-1]),a=jy(a,[-1,1]),[Um(Pb([i,1],r.dtype),r),Um(a,Pb([1,s],a.dtype))]):(r=jy(r,[-1,1]),a=jy(a,[1,-1]),[Um(r,Pb([1,i],r.dtype)),Um(Pb([s,1],a.dtype),a)])}var Wb=Sf({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r={x:wf(e,"x","min")},a={axis:t,keepDims:n};return hf.runKernel(_h,r,a)}}),Bb=Sf({minimum_:function(e,t){let n=wf(e,"a","minimum"),r=wf(t,"b","minimum");[n,r]=ef(n,r),"bool"===n.dtype&&(n=vm(n,"int32"),r=vm(r,"int32")),Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(Rh,a)}}),Ub=Sf({mirrorPad_:function(e,t,n){Xl("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=wf(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Xl(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Xl(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Xl(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return hf.runKernel(Mh,i,s)}}),Vb=Sf({mod_:function(e,t){let n=wf(e,"a","mod"),r=wf(t,"b","mod");[n,r]=ef(n,r);let a={a:n,b:r};return hf.runKernel($h,a)}}),Gb=Sf({square_:function(e){let t=wf(e,"x","square");return hf.runKernel("Square",{x:t},{})}}),jb=Sf({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=uu(t,(e=wf(e,"x","moments")).shape),a=zb(e,r,n),s=a.shape;n||(s=wb(a.shape,r));let i=Gb(gb(vm(e,"float32"),jy(a,s))),o=zb(i,r,n);return{mean:a,variance:o}}}),Hb=Sf({multiRNNCell_:function(e,t,n,r){let a=wf(t,"data","multiRNNCell"),s=kf(n,"c","multiRNNCell"),i=kf(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],d=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),d.push(l[e+1]);return[u,d]}}),qb=Sf({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=wf(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?jy(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=hf.runKernel(Fh,o,l);return 1===i?jy(u,[u.size]):u}}),Kb=Sf({notEqual_:function(e,t){let n=wf(e,"a","notEqual","string_or_numeric"),r=wf(t,"b","notEqual","string_or_numeric");[n,r]=ef(n,r),Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(Dh,a)}}),Xb=Sf({onesLike_:function(e){let t={x:wf(e,"x","onesLike")};return hf.runKernel(Bh,t)}}),Zb=Sf({outerProduct_:function(e,t){let n=wf(e,"v1","outerProduct"),r=wf(t,"v2","outerProduct");Xl(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=jy(n,[-1,1]),s=jy(r,[1,-1]);return Um(a,s)}}),Yb=Sf({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=wf(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return hf.runKernel(Gh,s,a)}}),Jb=Sf({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Xl(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Yb(e,[t],n)}}),Qb=Sf({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Xl(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Yb(e,t,n)}}),ex=Sf({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Xl(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Yb(e,t,n)}}),tx=Sf({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Xl(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Yb(e,t,n)}}),nx=Sf({spaceToBatchND_:function(e,t,n){let r=wf(e,"x","spaceToBatchND");Xl(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Xl(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Xl(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return hf.runKernel(bp,a,s)}}),rx=Sf({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=wf(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=jy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Xl(Uy(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let d,h=_y(l.shape,t,s,a,r),p=[h.dilationHeight,h.dilationWidth];d="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([h.filterHeight,h.filterWidth],p):[[0,0],[0,0]];let c=1===p[0]&&1===p[1],[f,m]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([h.inHeight,h.inWidth],p,d),g=c?r:"valid",y=c?l:nx(l,p,f),A=("avg"===n?()=>Hy(y,t,s,g,i):()=>Mb(y,t,s,g,i))(),b=c?A:Qy(A,p,m);return u?jy(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),ax=Sf({pow_:function(e,t){let n=wf(e,"base","pow"),r=wf(t,"exp","pow");[n,r]=ef(n,r);let a={a:n,b:r};return hf.runKernel(Hh,a)}}),sx=Sf({prelu_:function(e,t){let n={x:wf(e,"x","prelu"),alpha:wf(t,"alpha","prelu")};return hf.runKernel(qh,n)}}),ix=Sf({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=wf(e,"x","prod");"bool"===r.dtype&&(r=vm(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return hf.runKernel(Kh,a,s)}}),ox=Sf({rand_:function(e,t,n){let r=Ql(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return hf.makeTensor(a,e,n)}}),lx=yl(El()),ux=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=lx.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},dx=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=lx.alea(a.toString()),this.randn=new ux(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},hx=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=lx.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}},px=Sf({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new dx(t,n,r,a),i=xm(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),cx=Sf({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new ux(t,n,r,!1,a),i=xm(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),fx=Sf({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0,s=xm(e,r),i=new hx(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function mx(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return hf.runKernel(Xh,{},a)}var gx=Sf({real_:function(e){let t={input:wf(e,"input","real")};return hf.runKernel(Zh,t)}}),yx=Sf({reciprocal_:function(e){let t={x:wf(e,"x","reciprocal")};return hf.runKernel(Yh,t)}}),Ax=Sf({relu_:function(e){let t={x:wf(e,"x","relu")};return hf.runKernel(Jh,t)}}),bx=Sf({relu6_:function(e){let t={x:wf(e,"x","relu6")};return hf.runKernel(ap,t)}}),xx=Sf({reverse_:function(e,t){let n={x:wf(e,"x","reverse")},r={dims:t};return hf.runKernel(sp,n,r)}}),vx=Sf({reverse1d_:function(e){let t=wf(e,"x","reverse");return Xl(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),xx(t,0)}}),wx=Sf({reverse2d_:function(e,t){let n=wf(e,"x","reverse");return Xl(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),xx(n,t)}}),kx=Sf({reverse3d_:function(e,t){let n=wf(e,"x","reverse");return Xl(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),xx(n,t)}}),Ix=Sf({reverse4d_:function(e,t){let n=wf(e,"x","reverse");return Xl(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),xx(n,t)}}),Sx=Sf({round_:function(e){let t={x:wf(e,"x","round")};return hf.runKernel(ip,t)}}),Nx=Sf({rsqrt_:function(e){let t={x:wf(e,"x","rsqrt","float32")};return hf.runKernel(op,t)}});function Tx(e,t){if((gu(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&gu(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Tf(e,[],[],t)}var Cx=Sf({selu_:function(e){let t={x:wf(e,"x","selu")};return hf.runKernel(dp,t)}}),Ex=Sf({separableConv2d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC",o=wf(e,"x","separableConv2d"),l=wf(t,"depthwiseFilter","separableConv2d"),u=wf(n,"pointwiseFilter","separableConv2d"),d=o,h=!1;if(3===o.rank&&(h=!0,d=jy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Xl(4===d.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`)),Xl(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Xl(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Xl(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Xl(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let p=l.shape[2],c=l.shape[3];Xl(u.shape[2]===p*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*c}, but got ${u.shape[2]}.`));let f=TA(d,l,r,a,i,s),m=fA(f,u,1,"valid",i);return h?jy(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),_x=async function(e,t){let n=wf(e,"x","setdiff1d"),r=wf(t,"y","setdiff1d");Xl(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Xl(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Xl(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;let l=new Lc([o],n.dtype),u=new Lc([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},Rx=Sf({sign_:function(e){let t={x:wf(e,"x","sign")};return hf.runKernel(fp,t)}}),Mx=Sf({sin_:function(e){let t={x:wf(e,"x","sin","float32")};return hf.runKernel(pp,t)}}),$x=Sf({sinh_:function(e){let t={x:wf(e,"x","sinh")};return hf.runKernel(cp,t)}}),Fx=Sf({slice1d_:function(e,t,n){let r=wf(e,"x","slice1d");return Xl(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Zy(r,[t],[n])}}),Ox=Sf({slice2d_:function(e,t,n){let r=wf(e,"x","slice2d");return Xl(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Zy(r,t,n)}}),zx=Sf({slice3d_:function(e,t,n){let r=wf(e,"x","slice3d");return Xl(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Zy(r,t,n)}}),Dx=Sf({slice4d_:function(e,t,n){let r=wf(e,"x","slice4d");return Xl(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Zy(r,t,n)}}),Px=Sf({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=wf(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return hf.runKernel(vp,r,a)}}),Lx=Sf({fft_:function(e){Xl("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return hf.runKernel(Kd,t)}}),Wx=Sf({ifft_:function(e){Xl("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return hf.runKernel(sh,t)}}),Bx=Sf({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=jy(e,[r,n]);t=Wx(a)}else{let a=[r,2*(n-1)],s=jy(gx(e),[r,n]),i=jy(KA(e),[r,n]),o=xx(Zy(s,[0,1],[r,n-2]),1),l=my(xx(Zy(i,[0,1],[r,n-2]),1),Tx(-1)),u=Ky([s,o],1),d=Ky([i,l],1),h=jy(Nf(u,d),[a[0],a[1]]);t=Wx(h)}if(t=gx(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=jy(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}}),Ux=Sf({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r={x:wf(e,"x","split")},a={numOrSizeSplits:t,axis:n};return hf.runKernel(xp,r,a)}}),Vx=Sf({rfft_:function(e,t){Xl("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=Zy(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=Ky([e,Db(a)],e.shape.length-1),r=t}else n=e;let s=MA(n),i=jy(Nf(n,s),[a,r]),o=Lx(i),l=Math.floor(r/2)+1,u=gx(o),d=KA(o),h=Ux(u,[l,r-l],u.shape.length-1),p=Ux(d,[l,r-l],d.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,jy(Nf(h[0],p[0]),c)}}),Gx=Sf({sqrt_:function(e){let t={x:wf(e,"x","sqrt","float32")};return hf.runKernel(yp,t)}}),jx=Sf({squaredDifference_:function(e,t){let n=wf(e,"a","squaredDifference"),r=wf(t,"b","squaredDifference");[n,r]=ef(n,r),Xm(n.shape,r.shape);let a={a:n,b:r};return hf.runKernel(Tp,a,{})}}),Hx=Sf({squeeze_:function(e,t){let n=wf(e,"x","squeeze");return jy(n,du(n.shape,t).newShape)}}),qx=Sf({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=kf(e,"tensors","stack","string_or_numeric");Xl(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Xl(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return hf.runKernel(Vh,r,a)}}),Kx=Sf({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:wf(e,"x","step")},r={alpha:t};return hf.runKernel(Gp,n,r)}}),Xx=Sf({stridedSlice_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0,u={x:wf(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return hf.runKernel(Ep,u,d)}}),Zx=Sf({tan_:function(e){let t={x:wf(e,"x","tan","float32")};return hf.runKernel(Fp,t)}});function Yx(e,t){Yl(e);let n=bf(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Tf(e,null,n,t)}function Jx(e,t,n){if(Yl(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=bf(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Tf(e,t,r,n)}function Qx(e,t,n){if(Yl(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=bf(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Tf(e,t,r,n)}function ev(e,t,n){if(Yl(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=bf(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Tf(e,t,r,n)}function tv(e,t,n){if(Yl(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=bf(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Tf(e,t=t||r,r,n)}var nv=Sf({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=wf(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=hf.runKernel(Dp,s,i);return{values:o,indices:l}}}),rv=Sf({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new ux(t,n,r,!0,a),i=xm(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),av=Sf({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=wf(e,"x","unique","string_or_numeric");Xl(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=hf.runKernel(Wp,r,a);return{values:s,indices:i}}}),sv=Sf({unsortedSegmentSum_:function(e,t,n){let r=wf(e,"x","unsortedSegmentSum"),a=wf(t,"segmentIds","unsortedSegmentSum","int32");Xl(nu(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return hf.runKernel(Up,s,i)}}),iv=Sf({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=wf(e,"x","unstack","string_or_numeric");Xl(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return hf.runKernel(Bp,r,a)}});function ov(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return hf.makeVariable(e,t,n,r)}function lv(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=xm(e,"int32"),a=xm([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var uv=async function(e){let t=wf(e,"condition","whereAsync","bool"),n=await t.data(),r=lv(t.shape,n);return e!==t&&t.dispose(),r},dv=async function(e,t,n){let r=wf(e,"tensor","boolMask"),a=wf(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Xl(i>0,(()=>"mask cannot be scalar")),Zl(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),d=jy(r,u),h=jy(a,[-1]),p=await uv(h),c=Hx(p,[1]),f=jA(d,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),d.dispose(),h.dispose(),p.dispose(),f};function hv(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return gy(e);if(1!==e.rank&&null===n)return hv(jy(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return yb(gy(e),n);if(t===1/0)return mb(gy(e),n);if(t===-1/0)return Wb(gy(e),n);if("euclidean"===t||2===t)return Gx(yb(ax(gy(e),Tx(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return mb(yb(gy(e),n[0]),n[1]-1);if(t===1/0)return mb(yb(gy(e),n[1]),n[0]);if(t===-1/0)return Wb(yb(gy(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Gx(yb(Gb(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var pv=Sf({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=hv(e=wf(e,"x","norm"),t,n),s=a.shape;if(r){let t=uu(n,e.shape);s=wb(a.shape,t)}return jy(a,s)}}),cv=Sf({movingAverage_:function(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=wf(e,"v","movingAverage"),i=wf(t,"x","movingAverage"),o=wf(n,"decay","movingAverage");tf(s,i),Xl(tu(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=Tx(1),u=gb(l,o),d=my(gb(i,s),u);if(a){Xl(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=wf(r,"step","movingAverage");d=fy(d,gb(l,ax(o,e)))}return py(s,d)}}),fv=Sf({scatterND_:function(e,t,n){let r=wf(e,"indices","scatterND","int32"),a=wf(t,"updates","scatterND");lg(a,r,n);let s={indices:r,updates:a},i={shape:n};return hf.runKernel(lp,s,i)}});function mv(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}var gv=Sf({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=wf(e,"sparseIndices","sparseToDense","int32"),s=wf(t,"sparseValues","sparseToDense"),i=wf(r,"defaultValue","sparseToDense",s.dtype);mv(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return hf.runKernel(Np,o,l)}}),yv=Sf({gatherND_:function(e,t){let n=wf(t,"indices","gatherND","int32"),r={params:wf(e,"x","gatherND","string_or_numeric"),indices:n};return hf.runKernel(th,r)}}),Av=Sf({dropout_:function(e,t,n,r){let a=wf(e,"x","dropout");if(Xl("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),Xl(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Uc?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(tu(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=fy(GA(py(fx(s,0,1,"float32",r),i)),i);return my(a,o)}});function bv(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function xv(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Yx(a,"float32")}var vv=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=wf(e,"predictions","inTopK"),a=wf(t,"targets","inTopK");Xl(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Xl(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Zl(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];Xl(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],d=hu("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),d[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){d[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Cf(d,a.shape,"bool")},wv={};gl(wv,{conv2d:()=>Cv,depthwiseConv2d:()=>Rv,matMul:()=>Mv});var kv=Sf({conv2DBackpropFilter_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=jy(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=jy(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Xl(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Xl(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Xl(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],d="NHWC"===s?l.shape[3]:l.shape[1];Xl(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Xl(d===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`)),Gy("conv2dDerFilter",a,i);let h={x:o,dy:l},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return hf.runKernel(xd,h,p)}});function Iv(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return my(e,Kx(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Sv(e,t){let n=t,r=Km(e.shape,t.shape);return r.length>0&&(n=yb(n,r)),jy(n,e.shape)}function Nv(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ax(e);if("elu"===t)return zA(e);if("relu6"===t)return bx(e);if("prelu"===t)return sx(e,n);if("leakyrelu"===t)return JA(e,r);if("sigmoid"===t)return Xy(e);throw new Error(`Unknown fused activation ${t}.`)}var Tv=(e,t)=>!(e>0)||"linear"===t,Cv=Sf({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:h}=e;if(u=u||"linear",!1===Tv(hf.state.gradientDepth,u)){let e=fA(t,n,r,a,s,i,o);return null!=l&&(e=py(e,l)),Nv(e,u,d,h)}let p=wf(t,"x","conv2d","float32"),c=wf(n,"filter","conv2d","float32"),f=p,m=!1;3===p.rank&&(m=!0,f=jy(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Xl(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),Xl(4===c.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`)),Gy("fused conv2d",a,o),Xl(f.shape[3]===c.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${c.shape[2]}.`)),Xl(Uy(r,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),Xl("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));let g,y,A=My(f.shape,c.shape,r,i,a,o);null!=l&&(g=wf(l,"bias","fused conv2d"),[g]=ef(g,p),Xm(A.outShape,g.shape)),null!=d&&(y=wf(d,"prelu weights","fused conv2d"));let b=(e,t)=>{let[n,s,o,l]=t,d=Iv(e,o,u);Xl(By(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));let h=[gA(s.shape,d,n,r,a),kv(s,d,n.shape,r,a)];if(null!=l){let e=Sv(l,d);h.push(e)}return h},x={x:f,filter:c,bias:g,preluActivationWeights:y},v={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};return null==l?db(((e,t,n)=>{let r=hf.runKernel(Kp,x,v);return n([t,e,r]),m&&(r=jy(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(f,c):db(((e,t,n,r)=>{let a=hf.runKernel(Kp,x,v);return r([t,e,a,n]),m&&(a=jy(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(f,c,g)}}),Ev=Sf({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=jy(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=jy(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return hf.runKernel($d,u,d)}}),_v=Sf({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],i=arguments.length>6?arguments[6]:void 0,o=t,l=!1;3===t.rank&&(l=!0,o=jy(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=hf.runKernel(Fd,u,d);return l?jy(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Rv=Sf({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:h}=e;if(!1===Tv(hf.state.gradientDepth,u)){let e=TA(t,n,r,a,s,i,o);return null!=l&&(e=py(e,l)),Nv(e,u,d,h)}let p=wf(t,"x","depthwiseConv2d","float32"),c=wf(n,"filter","depthwiseConv2d","float32"),f=p,m=!1;3===p.rank&&(m=!0,f=jy(p,[1,p.shape[0],p.shape[1],p.shape[2]])),Xl(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),Xl(4===c.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`)),Xl(f.shape[3]===c.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),null==i&&(i=[1,1]),Xl(Uy(r,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),Gy("fused depthwiseConv2d",a,o);let g,y,A=My(f.shape,c.shape,r,i,a,o,!0);null!=l&&(g=wf(l,"bias","fused conv2d"),[g]=ef(g,p),Xm(A.outShape,g.shape)),null!=d&&(y=wf(d,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{Xl(By(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));let[n,s,l,d]=t,h=Iv(e,l,u),p=_v(s.shape,h,n,r,a,i,o),c=Ev(s,h,n.shape,r,a,i,o);return null!=d?[p,c,Sv(g,h)]:[p,c]},x={x:f,filter:c,bias:g,preluActivationWeights:y},v={strides:r,pad:a,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:h};return null==l?db(((e,t,n)=>{let r=hf.runKernel(Xp,x,v);return n([t,e,r]),m&&(r=jy(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(f,c):db(((e,t,n,r)=>{let a=hf.runKernel(Xp,x,v);return r([t,e,a,n]),m&&(a=jy(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(f,c,g)}}),Mv=Sf({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:a=!1,bias:s,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:l}=e;if(!1===Tv(hf.state.gradientDepth,i)){let e=Um(t,n,r,a);return null!=s&&(e=py(e,s)),Nv(e,i,o,l)}let u=wf(t,"a","fused matMul"),d=wf(n,"b","fused matMul");[u,d]=ef(u,d);let h=r?u.shape[u.rank-2]:u.shape[u.rank-1],p=a?d.shape[d.rank-1]:d.shape[d.rank-2],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],f=a?d.shape[d.rank-2]:d.shape[d.rank-1],m=u.shape.slice(0,-2),g=d.shape.slice(0,-2),y=Ql(m),A=Ql(g);Xl(h===p,(()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${u.shape} and ${d.shape} and transposeA=${r} and transposeB=${a} must match.`));let b,x,v=Xm(u.shape.slice(0,-2),d.shape.slice(0,-2)).concat([c,f]),w=jy(u,r?[y,h,c]:[y,c,h]),k=jy(d,a?[A,f,p]:[A,p,f]);null!=s&&(b=wf(s,"bias","fused matMul"),[b]=ef(b,u),Xm(v,b.shape)),null!=o&&(x=wf(o,"prelu weights","fused matMul"));let I=(e,t)=>{let n,o,[l,u,d,h]=t,p=Iv(jy(e,d.shape),d,i);return r||a?!r&&a?(n=Um(p,u,!1,!1),o=Um(p,l,!0,!1)):r&&!a?(n=Um(u,p,!1,!0),o=Um(l,p,!1,!1)):(n=Um(u,p,!0,!0),o=Um(p,l,!0,!0)):(n=Um(p,u,!1,!0),o=Um(l,p,!0,!1)),null!=s?[n,o,Sv(h,p)]:[n,o]},S={a:w,b:k,bias:b,preluActivationWeights:x},N={transposeA:r,transposeB:a,activation:i,leakyreluAlpha:l};return null==s?db(((e,t,n)=>{let r=hf.runKernel(qp,S,N);return n([e,t,r]),{value:jy(r,v),gradFunc:I}}))(w,k):db(((e,t,n,r)=>{let a=hf.runKernel(qp,S,N);return r([e,t,a,n]),{value:jy(a,v),gradFunc:I}}))(w,k,b)}}),$v=Sf({hammingWindow_:function(e){return xv(e,.54,.46)}}),Fv=Sf({hannWindow_:function(e){return xv(e,.5,.5)}}),Ov=Sf({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0,i=[];for(;s+t<=e.size;)i.push(Zy(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=Ky([Zy(e,s,t-r),VA([r],a)]);i.push(o),s+=n}return 0===i.length?Jx([],[0,t]):jy(Ky(i),[i.length,t])}}),zv=Sf({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Fv;null==r&&(r=bv(t));let s=Ov(e,t,n),i=my(s,a(t));return Vx(i,r)}}),Dv=Sf({cropAndResize_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=wf(e,"image","cropAndResize"),o=wf(t,"boxes","cropAndResize","float32"),l=wf(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Xl(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Xl(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Xl(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Xl(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Xl(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Xl("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let d={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return hf.runKernel(Ed,d,h)}}),Pv=Sf({flipLeftRight_:function(e){let t=wf(e,"image","flipLeftRight","float32");Xl(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return hf.runKernel(Zd,n,{})}}),Lv=Sf({grayscaleToRGB_:function(e){let t=wf(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Xl(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Xl(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,BA(t,a)}}),Wv=Sf({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=wf(e,"image","rotateWithOffset","float32");Xl(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return hf.runKernel(Hp,s,i)}});function Bv(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),Xl(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Xl(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Xl(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Xl(1===t.rank,(()=>"scores must be a 1D tensor")),Xl(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Xl(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Uv=Sf({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=wf(e,"boxes","nonMaxSuppression","float32"),i=wf(t,"scores","nonMaxSuppression","float32"),o=Bv(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return hf.runKernel(Ph,{boxes:s,scores:i},l)}});function Vv(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Gv)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Gv(e,t){return e>t?1:e<t?-1:0}function jv(e,t,n,r,a){return Kv(e,t,n,r,a,0)}function Hv(e,t,n,r,a,s){return Kv(e,t,n,r,a,0,!1,s,!0)}function qv(e,t,n,r,a,s){return Kv(e,t,n,r,a,s,!0)}function Kv(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8],u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Yv);let d=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){let i=Xv(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Zv(r,d,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),p.push(t.score)):t.score>a&&Vv(u,t,Yv))}let c=h.length,f=n-c;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=c),m}function Xv(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),d=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(h-u)*(p-d);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,d),y=Math.min(o,h),A=Math.min(l,p),b=Math.max(y-m,0)*Math.max(A-g,0);return b/(c+f-b)}function Zv(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function Yv(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var Jv=Sf({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=wf(e,"boxes","nonMaxSuppression"),o=wf(t,"scores","nonMaxSuppression"),l=Bv(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},h=hf.runKernel(Wh,u,d);return{selectedIndices:h[0],selectedScores:h[1]}}}),Qv=Sf({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=wf(e,"boxes","nonMaxSuppression"),o=wf(t,"scores","nonMaxSuppression"),l=Bv(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,p={boxes:i,scores:o},c={maxOutputSize:u,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:s},f=hf.runKernel(Lh,p,c);return{selectedIndices:f[0],validOutputs:f[1]}}}),ew=Sf({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=wf(e,"images","resizeBilinear");Xl(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),Xl(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Xl(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=jy(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=hf.runKernel(np,o,l);return i?jy(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),tw=Sf({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=wf(e,"images","resizeNearestNeighbor");Xl(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),Xl(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Xl("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Xl(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=jy(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=hf.runKernel(ep,o,l);return i?jy(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});function nw(e,t){let n,r,a,s,i,o,l=Yx([-1]),u=Yx([0]),d=Yx([0]);for(let h=0;h<e.size-1;h++){n=Zy(e,0,h+1),r=Zy(e,h+1),i=fy(yb(n),t),o=fy(yb(r),t);let p=yb(my(n,mx(0,n.size)));a=fy(p,yb(n));let c=VA(r.shape,n.size),f=py(mx(0,r.size),c),m=my(r,f);s=fy(yb(m),yb(r));let g=gb(a,s),y=gb(a,s),A=my(i,o);d=my(my(A,g),y);let b=HA(d,u);u=RA(b,d,u),l=RA(b,Yx([h]),l)}return l}var rw=Sf({threshold_:function(e){let t,n,r,a,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,l=wf(e,"image","threshold"),u=.2989,d=.587,h=.114,p=l.shape[0]*l.shape[1],c=my(Yx([o]),255);if(Xl(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),Xl(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),Xl("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),Xl("otsu"===s||"binary"===s,(()=>`Method must be binary or otsu, but was ${s}`)),3===l.shape[2]){[t,n,r]=Ux(l,[1,1,1],-1);let e=my(t,u),s=my(n,d),i=my(r,h);a=py(py(e,s),i)}else a=e;"otsu"===s&&(c=nw(sA(vm(Sx(a),"int32"),Cf([]),256),p));let f=i?eb(a,c):HA(a,c);return vm(my(f,255),"int32")}}),aw=Sf({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0,i=wf(e,"image","transform","float32"),o=wf(t,"transforms","transform","float32");Xl(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),Xl(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Xl(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return hf.runKernel(Pp,l,u)}}),sw=Sf({bandPart_:function(e,t,n){Xl(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Xl(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let r=wf(e,"a","bandPart");Xl(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=jy(mx(0,s,1,"int32"),[-1,1]),l=mx(0,i,1,"int32"),u=gb(o,l),d=Cb(eb(u,Tx(+t,"int32")),qA(u,Tx(-n,"int32"))),h=Db([s,i],r.dtype);return jy(qx(iv(jy(r,[-1,s,i])).map((e=>RA(d,e,h)))),a)}}),iw=Sf({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Xl(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)Xl(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Ux(e,e.shape[0],0).map((e=>Hx(e,[0])));Xl(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let t=0;t<e.length;++t)n.push(hf.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=my(yb(my(n[r],e)),n[r]);e=gb(e,t)}return fy(e,pv(e,"euclidean"))})));return t?qx(n,0):n}});function ow(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return hf.tidy((()=>{Xl(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=UA(n),s=wm(e),i=Jx([[1]],[1,1]),o=wm(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=hf.tidy((()=>{let t=Zy(s,[e,e],[n-e,1]),l=pv(t),u=Zy(s,[e,e],[1,1]),d=RA(HA(u,0),Jx([[-1]]),Jx([[1]])),h=gb(u,my(d,l)),p=fy(t,h);o=1===p.shape[0]?wm(i):Ky([i,Zy(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);let c=pb(fy(Um(d,h),l)),f=Zy(s,[e,0],[n-e,r]),m=my(c,o),g=Gm(o);if(0===e)s=gb(f,Um(m,Um(g,f)));else{let t=gb(f,Um(m,Um(g,f)));s=Ky([Zy(s,[0,0],[e,r]),t],0)}let y=Gm(m),A=Zy(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=gb(A,Um(Um(A,o),y));else{let t=gb(A,Um(Um(A,o),y));a=Ky([Zy(a,[0,0],[n,e]),t],1)}return[o,s,a]})),ey([t,l,u])}return!t&&n>r&&(a=Zy(a,[0,0],[n,r]),s=Zy(s,[0,0],[r,r])),[a,s]}))}var lw=Sf({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Xl(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ow(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=iv(jy(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=ow(e,t);a.push(n),s.push(r)})),[jy(qx(a,0),e.shape),jy(qx(s,0),e.shape)]}}}),uw=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(uw||{}),dw=Sf({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3,r=wf(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=wf(t,"weights","computeWeightedLoss"));let s=null==a?r:my(r,a);if(0===n)return s;if(2===n)return yb(s);if(1===n){if(null==a)return zb(s);{let e=r.size/a.size,t=fy(yb(s),yb(a));return e>1?fy(t,Tx(e)):t}}if(3===n){if(null==a)return fy(yb(s),Tx(r.size));{let e=my(a,Pb(r.shape)),t=vm(yb(Kb(e,Tx(0))),"float32");return fy(yb(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),hw=Sf({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3,a=wf(e,"labels","absoluteDifference"),s=wf(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=wf(n,"weights","absoluteDifference")),Zl(a.shape,s.shape,"Error in absoluteDifference: ");let o=gy(gb(a,s));return dw(o,i,r)}}),pw=Sf({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3,s=wf(e,"labels","cosineDistance"),i=wf(t,"predictions","cosineDistance"),o=null;null!=r&&(o=wf(r,"weights","cosineDistance")),Zl(s.shape,i.shape,"Error in cosineDistance: ");let l=Tx(1),u=gb(l,yb(my(s,i),n,!0));return dw(u,o,a)}}),cw=Sf({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3,a=wf(e,"labels","hingeLoss"),s=wf(t,"predictions","hingeLoss"),i=null;null!=n&&(i=wf(n,"weights","hingeLoss")),Zl(a.shape,s.shape,"Error in hingeLoss: ");let o=Tx(1);a=gb(my(Tx(2),a),o);let l=Ax(gb(o,my(a,s)));return dw(l,i,r)}}),fw=Sf({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3,s=wf(e,"labels","huberLoss"),i=wf(t,"predictions","huberLoss"),o=null;null!=n&&(o=wf(n,"weights","huberLoss")),Zl(s.shape,i.shape,"Error in huberLoss: ");let l=Tx(r),u=gy(gb(i,s)),d=Bb(u,l),h=gb(u,d),p=py(my(Tx(.5),Gb(d)),my(l,h));return dw(p,o,a)}}),mw=Sf({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3,s=wf(e,"labels","logLoss"),i=wf(t,"predictions","logLoss"),o=null;null!=n&&(o=wf(n,"weights","logLoss")),Zl(s.shape,i.shape,"Error in logLoss: ");let l=Tx(1),u=Tx(r),d=pb(my(s,rb(py(i,u)))),h=my(gb(l,s),rb(py(gb(l,i),u))),p=gb(d,h);return dw(p,o,a)}}),gw=Sf({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3,a=wf(e,"labels","meanSquaredError"),s=wf(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=wf(n,"weights","meanSquaredError")),Zl(a.shape,s.shape,"Error in meanSquaredError: ");let o=jx(a,s);return dw(o,i,r)}});function yw(e,t){let n=wf(e,"labels","sigmoidCrossEntropyWithLogits"),r=wf(t,"logits","sigmoidCrossEntropyWithLogits");Zl(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=Ax(r),s=my(r,n),i=ab(PA(pb(gy(r))));return py(gb(a,s),i)}var Aw=Sf({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3,s=wf(e,"multiClassLabels","sigmoidCrossEntropy"),i=wf(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=wf(n,"weights","sigmoidCrossEntropy")),Zl(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=Tx(r),t=Tx(1),n=Tx(.5);s=py(my(s,gb(t,e)),my(n,e))}let l=yw(s,i);return dw(l,o,a)}});function bw(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return db(((e,t,r)=>{let a=Tb(t,[n],!0),s=gb(vm(t,"float32"),a);r([e,s]);let i=pb(my(s,e));return{value:yb(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=wb(e.shape,[n]);return[my(jy(e,s),gb(vm(r,"float32"),PA(a))),my(jy(e,s),gb(PA(a),vm(r,"float32")))]}}}))(e,t)}var xw=Sf({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3,s=wf(e,"onehotLabels","softmaxCrossEntropy"),i=wf(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=wf(n,"weights","softmaxCrossEntropy")),Zl(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=Tx(r),t=Tx(1),n=Tx(s.shape[1]);s=py(my(s,gb(t,e)),fy(e,n))}let l=bw(s,i);return dw(l,o,a)}}),vw=Sf({sparseFillEmptyRows_:function(e,t,n,r){let a=wf(e,"indices","sparseFillEmptyRows","int32"),s=wf(t,"values","sparseFillEmptyRows"),i=wf(n,"denseShape","sparseFillEmptyRows","int32"),o=wf(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=hf.runKernel(wp,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),ww=Sf({sparseReshape_:function(e,t,n){let r=wf(e,"inputIndices","sparseReshape","int32"),a=wf(t,"inputShape","sparseReshape","int32"),s=wf(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=hf.runKernel(kp,i);return{outputIndices:o[0],outputShape:o[1]}}}),kw=Sf({sparseSegmentMean_:function(e,t,n){let r=wf(e,"data","sparseSegmentMean"),a=wf(t,"indices","sparseSegmentMean","int32"),s=wf(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return hf.runKernel(Ip,i)}}),Iw=Sf({sparseSegmentSum_:function(e,t,n){let r=wf(e,"data","sparseSegmentSum"),a=wf(t,"indices","sparseSegmentSum","int32"),s=wf(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return hf.runKernel(Sp,i)}}),Sw=Sf({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=wf(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=wf(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let d={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=hf.runKernel(_p,h,d);return{nGrams:p[0],nGramsSplits:p[1]}}}),Nw=Sf({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=wf(e,"input","stringSplit","string"),a=wf(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=hf.runKernel(Rp,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Tw=Sf({stringToHashBucketFast_:function(e,t){let n=wf(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return hf.runKernel(Mp,a,r)}}),Cw={fft:Lx,ifft:Wx,rfft:Vx,irfft:Bx},Ew={hammingWindow:$v,hannWindow:Fv,frame:Ov,stft:zv},_w={flipLeftRight:Pv,grayscaleToRGB:Lv,resizeNearestNeighbor:tw,resizeBilinear:ew,rotateWithOffset:Wv,cropAndResize:Dv,nonMaxSuppression:Uv,nonMaxSuppressionAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=wf(e,"boxes","nonMaxSuppressionAsync"),i=wf(t,"scores","nonMaxSuppressionAsync"),o=Bv(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:h}=jv(u,d,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Yx(h,"int32")},nonMaxSuppressionWithScore:Jv,nonMaxSuppressionWithScoreAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=wf(e,"boxes","nonMaxSuppressionAsync"),o=wf(t,"scores","nonMaxSuppressionAsync"),l=Bv(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),d=u[0],h=u[1],{selectedIndices:p,selectedScores:c}=qv(d,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Yx(p,"int32"),selectedScores:Yx(c)}},nonMaxSuppressionPadded:Qv,nonMaxSuppressionPaddedAsync:async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=wf(e,"boxes","nonMaxSuppressionAsync"),o=wf(t,"scores","nonMaxSuppressionAsync"),l=Bv(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,[p,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Hv(p,c,u,d,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Yx(f,"int32"),validOutputs:Tx(m,"int32")}},threshold:rw,transform:aw},Rw={bandPart:sw,gramSchmidt:iw,qr:lw},Mw={absoluteDifference:hw,computeWeightedLoss:dw,cosineDistance:pw,hingeLoss:cw,huberLoss:fw,logLoss:mw,meanSquaredError:gw,sigmoidCrossEntropy:Aw,softmaxCrossEntropy:xw},$w={sparseFillEmptyRows:vw,sparseReshape:ww,sparseSegmentMean:kw,sparseSegmentSum:Iw},Fw={stringNGrams:Sw,stringSplit:Nw,stringToHashBucketFast:Tw},Ow=class extends Eg{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0,{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return ey(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return ub(e,t)}dispose(){null!=this.iterations_&&ey(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Tx(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Ow,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var zw=class extends Ow{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=hf.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=hf.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Qg((()=>MA(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Qg((()=>MA(r).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Qg((()=>{let e=py(my(s,this.rho),my(Gb(a),1-this.rho)),t=my(fy(Gx(py(i,this.epsilon)),Gx(py(s,this.epsilon))),a),n=py(my(i,this.rho),my(Gb(t),1-this.rho));s.assign(e),i.assign(n);let o=py(my(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ey(this.accumulatedGrads.map((e=>e.variable))),ey(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};zw.className="Adadelta",Rg(zw);var Dw=class extends Ow{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=hf.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Qg((()=>VA(r.shape,this.initialAccumulatorValue).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;Qg((()=>{let e=py(s,Gb(a));s.assign(e);let t=py(my(fy(a,Gx(py(e,hf.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ey(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Dw.className="Adagrad",Rg(Dw);var Pw=class extends Ow{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Qg((()=>{this.accBeta1=Tx(t).variable(),this.accBeta2=Tx(n).variable()})),null==r&&(this.epsilon=hf.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Qg((()=>{let n=gb(1,this.accBeta1),r=gb(1,this.accBeta2);t.forEach(((t,a)=>{let s=hf.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Qg((()=>MA(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Qg((()=>MA(s).variable(!1)))});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=py(my(o,this.beta1),my(i,1-this.beta1)),d=py(my(l,this.beta2),my(Gb(i),1-this.beta2)),h=fy(u,n),p=fy(d,r);o.assign(u),l.assign(d);let c=py(my(fy(h,py(Gx(p),this.epsilon)),-this.learningRate),s);s.assign(c)})),this.accBeta1.assign(my(this.accBeta1,this.beta1)),this.accBeta2.assign(my(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ey(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ey(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Qg((()=>{this.accBeta1.assign(ax(this.beta1,this.iterations_+1)),this.accBeta2.assign(ax(this.beta2,this.iterations_+1))}));let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Pw.className="Adam",Rg(Pw);var Lw=class extends Ow{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Qg((()=>{this.iteration=Tx(0).variable(),this.accBeta1=Tx(t).variable()})),null==r&&(this.epsilon=hf.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Qg((()=>{let n=gb(1,this.accBeta1),r=fy(-this.learningRate,py(my(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=hf.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:MA(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:MA(s).variable(!1)});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=py(my(o,this.beta1),my(i,1-this.beta1)),d=my(l,this.beta2),h=gy(i),p=Ob(d,h);o.assign(u),l.assign(p);let c=py(my(fy(r,n),fy(u,py(p,this.epsilon))),s);s.assign(c)})),this.iteration.assign(py(this.iteration,1)),this.accBeta1.assign(my(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ey(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ey(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Lw.className="Adamax",Rg(Lw);var Ww=class extends Ow{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=hf.registeredVariables[t];Qg((()=>{let e=py(my(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ty(Tx(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Ww.className="SGD",Rg(Ww);var Bw=class extends Ww{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Tx(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=hf.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:Qg((()=>MA(r).variable(!1)))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Qg((()=>{let e,t=py(my(this.m,a),s);e=this.useNesterov?py(my(this.c,py(s,my(t,this.m))),r):py(my(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ey(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Bw.className="Momentum",Rg(Bw);var Uw=class extends Ow{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=hf.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=hf.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Qg((()=>MA(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Qg((()=>MA(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Qg((()=>MA(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Qg((()=>{let e=py(my(i,this.decay),my(Gb(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=py(my(t,this.decay),my(s,1-this.decay)),l=fy(my(s,this.learningRate),Gx(gb(e,py(Gb(a),this.epsilon)))),u=py(my(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let d=gb(r,u);r.assign(d)}else{let e=py(my(i,this.decay),my(Gb(s),1-this.decay)),t=py(my(o,this.momentum),fy(my(s,this.learningRate),Gx(py(e,this.epsilon))));i.assign(e),o.assign(t);let n=gb(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ey(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ey(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ey(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Uw.className="RMSProp",Rg(Uw);var Vw=class{static sgd(e){return new Ww(e)}static momentum(e,t){return new Bw(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Uw(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Pw(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new zw(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Lw(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Dw(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},Gw={sgd:Vw.sgd,momentum:Vw.momentum,adadelta:Vw.adadelta,adagrad:Vw.adagrad,rmsprop:Vw.rmsprop,adamax:Vw.adamax,adam:Vw.adam},jw="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Hw(){return new Promise((e=>jw((()=>e()))))}var qw={};function Kw(e,t){let n=e[0].length;e.forEach(((e,t)=>{Xl(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Xl(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)Xl(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Xw(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}gl(qw,{ERF_A1:()=>ok,ERF_A2:()=>lk,ERF_A3:()=>uk,ERF_A4:()=>dk,ERF_A5:()=>hk,ERF_P:()=>ik,PARALLELIZE_THRESHOLD:()=>Zw,SELU_SCALE:()=>sk,SELU_SCALEALPHA:()=>ak,applyActivation:()=>Nv,assertAndGetBroadcastShape:()=>Xm,assertAxesAreInnerMostDims:()=>kb,assertParamsConsistent:()=>Kw,assignToTypedArray:()=>yk,axesAreInnerMostDims:()=>bb,calculateShapes:()=>ug,checkEinsumDimSizes:()=>kk,checkPadOnDimRoundingMode:()=>Gy,combineLocations:()=>xb,complexWithEvenIndex:()=>fk,complexWithOddIndex:()=>mk,computeConv2DInfo:()=>My,computeConv3DInfo:()=>$y,computeDefaultPad:()=>Fy,computeDilation2DInfo:()=>Ey,computeOptimalWindowSize:()=>Yw,computeOutAndReduceShapes:()=>vb,computeOutShape:()=>Xw,computePool2DInfo:()=>_y,computePool3DInfo:()=>Ry,convertConv2DDataFormat:()=>Vy,decodeEinsumEquation:()=>vk,eitherStridesOrDilationsAreOne:()=>Uy,expandShapeToKeepDim:()=>wb,exponent:()=>bk,exponents:()=>Ak,fromStringArrayToUint8:()=>jk,fromUint8ToStringArray:()=>Gk,getAxesPermutation:()=>Ib,getBroadcastDims:()=>qm,getComplexWithIndex:()=>gk,getEinsumComputePath:()=>Ik,getEinsumPermutation:()=>wk,getFusedBiasGradient:()=>Sv,getFusedDyActivation:()=>Iv,getImageCenter:()=>Jw,getInnerMostAxes:()=>Nb,getPermuted:()=>ek,getReductionAxes:()=>Km,getReshaped:()=>Qw,getReshapedPermuted:()=>tk,getSliceBeginCoords:()=>nk,getSliceSize:()=>rk,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Ck,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Ek,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>_k,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>$k,getSparseReshapeInputOutputMismatchErrorMessage:()=>Ok,getSparseReshapeInputOutputMultipleErrorMessage:()=>Fk,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Rk,getSparseReshapeNegativeOutputDimErrorMessage:()=>Mk,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Lk,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>zk,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Dk,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Pk,getUndoAxesPermutation:()=>Sb,isIdentityPermutation:()=>Sk,log:()=>Yp,mergeRealAndImagArrays:()=>pk,prepareAndValidate:()=>sg,prepareSplitSize:()=>Tk,segment_util:()=>Wk,shouldFuse:()=>Tv,slice_util:()=>dg,splitRealAndImagArrays:()=>ck,tupleValuesAreOne:()=>By,upcastType:()=>Jc,validateInput:()=>lg,validateUpdateShape:()=>og,warn:()=>Zp});var Zw=30;function Yw(e){return e<=Zw?e:Iu(e,Math.floor(Math.sqrt(e)))}function Jw(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Qw(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function ek(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function tk(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function nk(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function rk(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var ak=1.7580993408473768,sk=1.0507009873554805,ik=.3275911,ok=.254829592,lk=-.284496736,uk=1.421413741,dk=-1.453152027,hk=1.061405429;function pk(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function ck(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function fk(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function mk(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function gk(e,t){return{real:e[2*t],imag:e[2*t+1]}}function yk(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Ak(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function bk(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var xk=/->/g;function vk(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(xk,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');let[r,a]=e.split("->");Xl(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));let s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){let t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}let l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,d=[];for(let e=a.length;e<u;++e)d.push(e);return{allDims:o,summedDims:d,idDims:l}}function wk(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function kk(e,t,n){let r=new Array(e);for(let e=0;e<n.length;++e){let a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Xl(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Ik(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);let s=[];for(let e=0;e<n.length;++e){let a=Nk(t,n[e]);for(let t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Sk(e){return e.every(((e,t)=>e===t))}function Nk(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function Tk(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"==typeof t)Xl(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{Xl(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}Xl(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Ck(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Ek(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function _k(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Rk(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Mk(e,t){return`size ${e} must be non-negative, not ${t}`}function $k(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Fk(e,t){return`Input to reshape is a SparseTensor with ${Ql(e)}\n  dense values, but the requested shape requires a multiple of ${Ql(t)}. inputShape=${e} outputShape= ${t}`}function Ok(e,t){return`Input to reshape is a tensor with ${Ql(e)} dense values, but the requested shape has ${Ql(t)}. inputShape=${e} outputShape=${t}`}function zk(){return"segment ids must be >= 0"}function Dk(){return"segment ids are not increasing"}function Pk(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Lk(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Wk={};function Bk(e,t){let n,r=!1;for(e<=Zw?(n=e,r=!0):n=Iu(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Iu(e,n+1);return n}function Uk(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Vk(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,d=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}function Gk(e){try{return e.map((e=>Mc(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function jk(e){return e.map((e=>Rc(e)))}gl(Wk,{collectGatherOpShapeInfo:()=>Vk,computeOutShape:()=>Uk,segOpComputeOptimalWindowSize:()=>Bk});var Hk={};gl(Hk,{nonMaxSuppressionV3Impl:()=>jv,nonMaxSuppressionV4Impl:()=>Hv,nonMaxSuppressionV5Impl:()=>qv,whereImpl:()=>lv});var qk={kernelName:Gu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(e,Kx(vm(n,"float32"),-1))}}},Kk={kernelName:ju,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Gb(vm(n,"float32")),r=Gx(gb(Tx(1),t));return pb(fy(e,r))}}}},Xk={kernelName:Hu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Gx(gb(Gb(vm(n,"float32")),1));return fy(e,t)}}}},Zk={kernelName:qu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Xm(n.shape,r.shape);return{a:()=>{let t=e,r=Km(n.shape,a);return r.length>0&&(t=yb(t,r)),jy(t,n.shape)},b:()=>{let t=e,n=Km(r.shape,a);return n.length>0&&(t=yb(t,n)),jy(t,r.shape)}}}},Yk={kernelName:Ku,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Jk={kernelName:Yu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>MA(n)}}},Qk={kernelName:Ju,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>MA(n)}}},eI={kernelName:Qu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fy(e,Gx(gb(Tx(1),Gb(vm(n,"float32")))))}}},tI={kernelName:ed,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Gx(py(Tx(1),Gb(vm(n,"float32"))));return fy(e,t)}}}},nI={kernelName:rd,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Xm(n.shape,r.shape);return{a:()=>{let t=py(Gb(n),Gb(r)),s=my(e,fy(r,t)),i=Km(n.shape,a);return i.length>0&&(s=yb(s,i)),jy(s,n.shape)},b:()=>{let t=py(Gb(n),Gb(r)),s=pb(my(e,fy(n,t))),i=Km(r.shape,a);return i.length>0&&(s=yb(s,i)),jy(s,r.shape)}}}},rI={kernelName:td,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fy(e,py(Gb(vm(n,"float32")),1))}}},aI={kernelName:nd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fy(e,gb(Tx(1),Gb(vm(n,"float32"))))}}},sI=Sf({avgPool3dGrad_:function(e,t,n,r,a,s){let i=wf(e,"dy","avgPool3dGrad"),o=wf(t,"input","avgPool3dGrad"),l=i,u=o,d=!1;4===o.rank&&(d=!0,l=jy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=jy(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Xl(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Xl(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Gy("avgPool3dGrad",a,s);let h={dy:l,input:u},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=hf.runKernel(od,h,p);return d?jy(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),iI={kernelName:id,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>sI(e,r,a,s,i,o)}}},oI=Sf({avgPoolGrad_:function(e,t,n,r,a){let s=wf(e,"dy","avgPoolGrad"),i=wf(t,"input","avgPoolGrad");Xl(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=jy(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=jy(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Xl(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Xl(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let d={dy:l,input:o},h={filterSize:n,strides:r,pad:a},p=hf.runKernel(sd,d,h);return u?jy(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),lI={kernelName:ad,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>oI(e,r,a,s,i)}}},uI={kernelName:ld,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Um(e,a,!1,!1),b:()=>Um(e,r,!0,!1)}:s&&!i?{a:()=>Um(a,e,!1,!0),b:()=>Um(r,e,!1,!1)}:{a:()=>Um(a,e,!0,!0),b:()=>Um(e,r,!0,!0)}:{a:()=>Um(e,a,!1,!0),b:()=>Um(r,e,!0,!1)}}},dI={kernelName:ud,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>nx(e,r,a)}}},hI={kernelName:hd,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>yb(e,o,!0)}}},pI={kernelName:cd,gradFunc:e=>({x:()=>e.clone()})},cI={kernelName:fd,gradFunc:e=>({x:()=>MA(e)})},fI={kernelName:md,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>RA(Cb(qA(r,a),eb(r,s)),e,MA(e))}}},mI={kernelName:yd,inputsToSave:["x"],gradFunc:qk.gradFunc},gI={kernelName:Ad,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=uu(a,t[0].shape)[0],i=r.map((e=>e[s]));return Ux(e,i,s).map((e=>()=>e))}},yI={kernelName:bd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return Xl(By(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>gA(r.shape,e,a,i,o,l),filter:()=>kv(r,e,a.shape,i,o,l)}}},AI={kernelName:vd,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>fA(e,a,s,i,o,1,l),filter:()=>kv(e,r,a.shape,s,i,o,l)}}},bI=Sf({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=jy(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=jy(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Xl(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),Xl(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Xl(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Xl(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),Xl(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return hf.runKernel(kd,o,l)}}),xI={kernelName:wd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;Xl(By(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>bA(i.shape,e,o,a,s),filter:()=>bI(i,e,o.shape,a,s)}}},vI={kernelName:Sd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(pb(Mx(vm(n,"float32"))),e)}}},wI={kernelName:Nd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my($x(vm(n,"float32")),e)}}},kI={kernelName:Cd,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=Ib([a],r.rank),n=IA(e,a,s,!i);return null!=t&&(n=Gm(n,t)),n}}}},II={kernelName:Md,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Xl(By(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return Xl(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Xl(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Xl(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Xl(Uy(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Gy("depthwiseConv2d",s,i),{x:()=>_v(l.shape,e,u,a,s,o,i),filter:()=>Ev(l,e,u.shape,a,s,o,i)}}},SI={kernelName:zd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>hf.runKernel(Dd,s,n),filter:()=>hf.runKernel(Pd,i,n)}}},NI={kernelName:Bd,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>hf.runKernel(Ud,r)}}},TI={kernelName:Vd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=my(PA(pb(Gb(n))),2/Math.sqrt(Math.PI));return{x:()=>my(e,r)}}},CI={kernelName:jd,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(e,n)}}},EI={kernelName:Hd,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>jy(e,n.shape)}}},_I={kernelName:qd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(e,PA(n))}}},RI={kernelName:Yd,gradFunc:e=>({x:()=>MA(e)})},MI={kernelName:Jd,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Xm(n.shape,r.shape);return{a:()=>{let t=fy(e,vm(r,"float32")),s=Km(n.shape,a);return s.length>0?jy(yb(t,s),n.shape):t},b:()=>{let t=my(e,vm(n,"float32")),s=Km(r.shape,a);s.length>0&&(t=jy(yb(t,s),r.shape));let i=Gb(r);return pb(fy(t,vm(i,"float32")))}}}},$I={kernelName:Qd,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?Tx(1):o,u=Km(s.shape,a.shape),d=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)d.push(a.shape[e]);d.push(1)}let h=gb(a,s),p=my(e,l),c=Nx(py(i,Tx(r))),f=my(my(my(c,c),c),Tx(-.5));return{x:()=>1===s.rank?jy(my(my(e,BA(jy(c,[1,1,1,s.shape[0]]),d)),l),a.shape):jy(my(my(e,c),l),a.shape),mean:()=>{let e=my(my(c,Tx(-1)),p);return 1===s.rank&&(e=yb(e,u)),jy(e,s.shape)},variance:()=>{let e=my(my(f,h),p);return 1===s.rank&&(e=yb(e,u)),jy(e,s.shape)},scale:()=>{let t=my(h,c),n=my(e,t);return 1===s.rank&&(n=yb(n,u)),jy(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=yb(t,u)),jy(t,s.shape)}}}},FI={kernelName:eh,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=uu(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),d=u.length,h=OI(0,l),p=OI(l+1,l+1+d),c=zI([o,[n],u]),f=jy(e,c),m=jy(a,[n]),g=zI([[l],h,p]),y=Gm(f,g),A=sv(y,m,r.shape[i]),b=Sb(g);return A=Gm(A,b),A},indices:()=>a}}};function OI(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function zI(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var DI={kernelName:rh,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>MA(n),b:()=>MA(r)}}},PI={kernelName:ah,gradFunc:e=>({x:()=>vm(e,"float32")})},LI={kernelName:oh,gradFunc:e=>({x:()=>MA(e)})},WI={kernelName:lh,gradFunc:e=>({x:()=>MA(e)})},BI={kernelName:uh,gradFunc:e=>({x:()=>MA(e)})},UI={kernelName:dh,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=HA(r,0);return{x:()=>RA(s,e,my(e,a))}}},VI={kernelName:mh,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fy(e,py(n,1))}}},GI={kernelName:fh,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fy(e,vm(n,"float32"))}}},jI={kernelName:bh,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=PA(r);return gb(e,my(yb(e,a,!0),t))}}}},HI=Sf({localResponseNormalizationBackprop_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5,o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return hf.runKernel(vh,o,l)}}),qI={kernelName:xh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>HI(r,a,e,s,i,o,l)}}};function KI(e,t,n,r){return t.rank<n.rank&&(t=jy(t,wb(t.shape,r))),e.rank<n.rank&&(e=jy(e,wb(e.shape,r))),{x:()=>my(e,vm(_A(n,t),e.dtype))}}var XI={kernelName:wh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=KI(e,t[1],s,uu(a,s.shape));return{x:()=>i.x()}}},ZI={kernelName:kh,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>my(e,vm(qA(n,r),"float32")),b:()=>my(e,vm(QA(n,r),"float32"))}}},YI=Sf({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=wf(e,"dy","maxPool3dGrad"),l=wf(t,"input","maxPool3dGrad"),u=wf(n,"output","maxPool3dGrad"),d=o,h=l,p=u,c=!1;4===l.rank&&(c=!0,d=jy(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=jy(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=jy(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Xl(5===d.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`)),Xl(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Xl(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),Gy("maxPool3dGrad",s,i);let f={dy:d,input:h,output:p},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=hf.runKernel(Th,f,m);return c?jy(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),JI={kernelName:Nh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>YI(e,r,a,s,i,o,l)}}},QI=Sf({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=wf(e,"dy","maxPoolGrad"),l=wf(t,"input","maxPoolGrad"),u=wf(n,"output","maxPoolGrad");Xl(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Xl(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Xl(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Gy("maxPoolGrad",s,i);let d={dy:o,input:l,output:u},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return hf.runKernel(Sh,d,h)}}),eS={kernelName:Ih,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>QI(e,r,a,s,i,o)}}},tS={kernelName:Eh,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=uu(a,r.shape),i=Ql(vb(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=jy(e,t);return fy(my(n,Pb(r.shape,"float32")),i)}}}},nS={kernelName:_h,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=KI(e,i,s,uu(a,s.shape));return{x:()=>o.x()}}},rS={kernelName:Rh,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>my(e,vm(eb(n,r),"float32")),b:()=>my(e,vm(HA(n,r),"float32"))}}},aS={kernelName:Mh,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Zy(e,s,r.shape)}}},sS={kernelName:$h,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Xm(n.shape,r.shape);return{a:()=>{let t=Km(n.shape,a);return t.length>0?jy(yb(e,t),n.shape):e},b:()=>{let t=my(e,pb(GA(fy(n,r)))),s=Km(r.shape,a);return s.length>0?jy(yb(t,s),r.shape):t}}}},iS={kernelName:Oh,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Xm(n.shape,r.shape);return{a:()=>{let t=my(e,vm(r,"float32")),s=Km(n.shape,a);return s.length>0?jy(yb(t,s),n.shape):t},b:()=>{let t=my(e,vm(n,"float32")),s=Km(r.shape,a);return s.length>0?jy(yb(t,s),r.shape):t}}}},oS={kernelName:zh,gradFunc:e=>({x:()=>pb(e)})},lS={kernelName:Bh,gradFunc:e=>({x:()=>MA(e)})},uS={kernelName:Vh,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return iv(e,r).map((e=>()=>e))}},dS={kernelName:Gh,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Zy(e,s,r.shape)}}},hS={kernelName:Hh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=Xm(s.shape,i.shape);return{a:()=>{let t=vm(i,"float32"),n=my(e,my(t,ax(s,gb(t,Tx(1))))),r=Km(s.shape,o);return r.length>0&&(n=yb(n,r)),jy(n,s.shape)},b:()=>{let t=HA(s,0),n=RA(t,rb(s),MA(s)),r=my(e,my(a,n)),l=Km(i.shape,o);return l.length>0&&(r=yb(r,l)),jy(r,i.shape)}}}},pS={kernelName:qh,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=HA(n,0);return{x:()=>RA(a,e,my(e,r)),alpha:()=>{let t=RA(a,MA(e),my(e,n)),s=Km(r.shape,e.shape);return s.length>0&&(t=yb(t,s)),jy(t,r.shape)}}}},cS={kernelName:Ld,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Xm(n.shape,r.shape);return{a:()=>{let t=fy(e,vm(r,"float32")),s=Km(n.shape,a);return s.length>0?jy(yb(t,s),n.shape):t},b:()=>{let t=my(e,vm(n,"float32")),s=Km(r.shape,a);s.length>0&&(t=jy(yb(t,s),r.shape));let i=Gb(r);return pb(fy(t,vm(i,"float32")))}}}},fS={kernelName:Yh,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fy(e,pb(Gb(n)))}}},mS={kernelName:ap,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=my(eb(n,6),Kx(n));return{x:()=>my(e,vm(r,"float32"))}}},gS={kernelName:Jh,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(e,vm(Kx(n),"float32"))}}},yS={kernelName:Qh,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>jy(e,n.shape)}}},AS={kernelName:np,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>hf.runKernel(rp,a,n)}}},bS={kernelName:ep,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>hf.runKernel(tp,a,n)}}},xS={kernelName:sp,gradFunc:(e,t,n)=>{let{dims:r}=n,a=uu(r,e.shape);return{x:()=>xx(e,a)}}},vS={kernelName:ip,gradFunc:e=>({x:()=>MA(e)})},wS={kernelName:op,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pb(fy(e,my(ax(n,1.5),2)))}}},kS={kernelName:up,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>vm(MA(n),"float32"),t:()=>my(e,vm(n,e.dtype)),e:()=>my(e,vm(Eb(n),e.dtype))}}},IS={kernelName:dp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=HA(n,Tx(0)),r=Tx(ak),a=Tx(sk),s=my(e,a),i=my(my(e,r),PA(vm(n,"float32")));return RA(t,s,i)}}}},SS={kernelName:mp,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(e,my(n,gb(Tx(1),n)))}}},NS={kernelName:fp,gradFunc:e=>({x:()=>MA(e)})},TS={kernelName:pp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(vA(vm(n,"float32")),e)}}},CS={kernelName:cp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(wA(vm(n,"float32")),e)}}},ES={kernelName:hp,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=Sg(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Yb(e,u)}}},_S={kernelName:vp,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=my(e,r);return{logits:()=>gb(s,my(yb(s,[a],!0),r))}}},RS={kernelName:gp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(e,Xy(n))}}},MS={kernelName:bp,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>Qy(e,r,a)}}},$S={kernelName:xp,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>Ky(e,r)}}},FS={kernelName:yp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fy(e,my(Gx(vm(n,"float32")),2))}}},OS={kernelName:Cp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(e,my(vm(n,"float32"),2))}}},zS={kernelName:Tp,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Tx(2);return{a:()=>my(e,my(a,gb(n,r))),b:()=>my(e,my(a,gb(r,n)))}}},DS={kernelName:Gp,gradFunc:e=>({x:()=>MA(e)})},PS={kernelName:$p,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Xm(n.shape,r.shape);return{a:()=>{let t=e,r=Km(n.shape,a);return r.length>0&&(t=yb(t,r)),jy(t,n.shape)},b:()=>{let t=e,n=Km(r.shape,a);return n.length>0&&(t=yb(t,n)),jy(pb(t),r.shape)}}}},LS={kernelName:Ap,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;uu(s,r.shape).forEach((e=>{a[e]=1}));let i=jy(e,a),o=my(i,Pb(r.shape,"float32"));return{x:()=>o}}},WS={kernelName:Fp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fy(e,Gb(vA(n)))}}},BS={kernelName:Op,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>my(gb(Tx(1),Gb(n)),e)}}},US={kernelName:zp,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=MA(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=py(t,Zy(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=py(t,Zy(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=py(t,Zy(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=py(t,Zy(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},VS={kernelName:Lp,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Sb(a);return{x:()=>Gm(e,s)}}},GS={kernelName:Bp,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>qx(e,a)}}},jS={kernelName:Up,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=Ob(t,MA(t)),r=jA(e,n),a=qA(t,Tx(0,"int32")),s=r.rank-a.rank;for(let e=0;e<s;++e)a=LA(a,e+1);a=Cb(a,Pb(r.shape,"bool"));let i=MA(r);return RA(a,r,i)}(e,n)}}},HS={kernelName:Vp,gradFunc:e=>({x:()=>MA(e)})},qS=[qk,Kk,Xk,Zk,Yk,Jk,Qk,eI,tI,nI,rI,aI,iI,lI,uI,dI,hI,pI,cI,fI,mI,gI,AI,yI,xI,vI,wI,kI,II,SI,cS,NI,TI,CI,EI,_I,MI,RI,$I,FI,DI,PI,LI,WI,BI,UI,VI,GI,jI,qI,XI,XI,ZI,JI,eS,tS,nS,rS,aS,sS,iS,oS,{kernelName:Uh,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Db(n.shape,"float32")}}},lS,uS,dS,dS,hS,pS,fS,mS,gS,yS,AS,bS,xS,vS,wS,kS,IS,SS,NS,TS,CS,ES,_S,RS,MS,MS,$S,$S,FS,zS,OS,DS,PS,LS,WS,BS,US,VS,GS,jS,HS];for(let e of qS)ac(e);var KS,XS={};function ZS(){return null==KS&&(KS=dy().epsilon()),KS}gl(XS,{maxNorm:()=>RN,minMaxNorm:()=>FN,nonNeg:()=>$N,unitNorm:()=>MN});var YS=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,YS.prototype)}},JS=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,JS.prototype)}},QS=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,QS.prototype)}},eN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,eN.prototype)}},tN=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tN.prototype)}};function nN(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function rN(e,t){if(!e)throw new tN(t)}function aN(e,t){let n=0;for(let r of e)r===t&&n++;return n}function sN(e){return 1===e.length?e[0]:e}function iN(e){return Array.isArray(e)?e:[e]}function oN(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function lN(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var uN={};function dN(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function hN(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>hN(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?hN(t):e[n]=t.value)}}}function pN(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in uN)a=uN[s];else if(a=t[s],null==a)throw new QS(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new QS(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in uN?[i,o]=uN.className:l in t&&([i,o]=t[l]),null==i)throw new QS(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(uN))e[t]=uN[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t={...uN};for(let e of Object.keys(n))uN[e]=n[e];hN(s.config);let r=o(i,s.config,n,a);return uN={...t},r}{let e={...uN};for(let e of Object.keys(n))uN[e]=n[e];let t=new i(s.config);return uN={...e},t}}}function cN(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function fN(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function mN(e){if(null==e)throw new QS(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function gN(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new QS(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function yN(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return rN(n>=0),rN(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function AN(e,t){Array.isArray(e)?(uc.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>AN(e,`element ${n+1} of ${t}`)))):uc.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${bN(e)}.`))}function bN(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>bN(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function xN(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function vN(e,t){return Qg((()=>Gx(yb(my(e,e),t,!0))))}var wN=class extends Cg.Serializable{getConfig(){return{}}},kN=class extends wN{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qg((()=>{let t=vN(e,this.axis),n=uA(t,0,this.maxValue);return my(e,fy(n,py(ZS(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};kN.className="MaxNorm",Cg.registerClass(kN);var IN=class extends wN{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qg((()=>fy(e,py(ZS(),vN(e,this.axis)))))}getConfig(){return{axis:this.axis}}};IN.className="UnitNorm",Cg.registerClass(IN);var SN=class extends wN{apply(e){return Ax(e)}};SN.className="NonNeg",Cg.registerClass(SN);var NN=class extends wN{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Qg((()=>{let t=vN(e,this.axis),n=py(my(this.rate,uA(t,this.minValue,this.maxValue)),my(1-this.rate,t));return my(e,fy(n,py(ZS(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};NN.className="MinMaxNorm",Cg.registerClass(NN);var TN={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function CN(e){return dN(e)}function EN(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return pN(e,Cg.SerializationMap.getMap().classNameMap,t,"constraint")}function _N(e){return null==e?null:"string"==typeof e?EN({className:e in TN?TN[e]:e,config:{}}):e instanceof wN?e:EN(e)}function RN(e){return new kN(e)}function MN(e){return new IN(e)}function $N(){return new SN}function FN(e){return new NN(e)}var ON={};gl(ON,{constant:()=>VT,glorotNormal:()=>ZT,glorotUniform:()=>XT,heNormal:()=>YT,heUniform:()=>JT,identity:()=>qT,leCunNormal:()=>QT,leCunUniform:()=>eC,ones:()=>UT,orthogonal:()=>tC,randomNormal:()=>jT,randomUniform:()=>GT,truncatedNormal:()=>HT,varianceScaling:()=>KT,zeros:()=>BT});var zN=["channelsFirst","channelsLast"],DN=["nearest","bilinear"],PN=["valid","same","causal"],LN=["max","avg"],WN=["sum","mul","concat","ave"],BN=new Map;function UN(e){gN(zN,"DataFormat",e)}function VN(e){gN(PN,"PaddingMode",e)}function GN(e){gN(LN,"PoolMode",e)}var jN=[];function HN(e,t){jN.push(e);try{let e=t();return jN.pop(),e}catch(e){throw jN.pop(),e}}function qN(e){if(!ZN(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===jN.length?"":jN.join("/")+"/")+e}function KN(e){if(!ZN(e))throw new Error("Not a valid tensor name: '"+e+"'");BN.has(e)||BN.set(e,0);let t=BN.get(e);if(BN.set(e,BN.get(e)+1),t>0){let n=`${e}_${t}`;return BN.set(n,1),n}return e}var XN=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ZN(e){return!!e.match(XN)}function YN(e){return e===parseInt(e.toString(),10)}function JN(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function QN(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function eT(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function tT(e,t){if(t<e)throw new QS(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function nT(e,t){return vm(e,t)}function rT(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),jy(e,n)}function aT(e){let t=[JN(e.shape)];return jy(e,t)}function sT(e,t,n){return Qg((()=>{switch(e.rank){case 1:return Fx(e,t,n);case 2:return Ox(e,[t,0],[n,e.shape[1]]);case 3:return zx(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Dx(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Zy(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Zy(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new QS(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function iT(e,t,n){return Qg((()=>{switch(e.rank){case 1:return Fx(e,t,n);case 2:return Ox(e,[0,t],[e.shape[0],n]);case 3:return zx(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Dx(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new QS(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function oT(e,t,n,r){return Qg((()=>{switch(e.rank){case 1:return Fx(e,t,n);case 2:switch(r){case 1:return sT(e,t,n);case 2:return iT(e,t,n);default:throw new QS(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return sT(e,t,n);case 2:return zx(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return iT(e,t,n);default:throw new QS(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return sT(e,t,n);case 2:return Dx(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Dx(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return iT(e,t,n);default:throw new QS(`The axis is not within the rank of the tensor ${r}`)}default:throw new QS(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function lT(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),Ky(e,n)}function uT(e,t){switch(e.rank){case 1:return dA([e,t]);case 2:return hA([e,t],0);case 3:return pA([e,t],0);case 4:return cA([e,t],0);default:throw new QS(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function dT(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new QS(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return BA(e,t)}function hT(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;return cx(e,t,n,r,a)}function pT(e,t,n,r){if(e.rank<2||t.rank<2)throw new eN(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new eN(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return wv.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?mT(e.rank,r,"channelsLast"):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=jy(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=jy(Gm(t,d),[l,-1]);let h=[...a,...u],p=!1,c=!1;return jy(wv.matMul({a:e,b:t,transposeA:p,transposeB:c,bias:r?mT(e.rank,r,"channelsLast"):null,activation:n}),h)}}function cT(e,t,n){return Qg((()=>(t=Array.isArray(t)?Yx(t,"int32"):vm(t,"int32"),jA(e,t,n))))}function fT(e){return my(e,e)}function mT(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new QS(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?jy(t,[1,r[0],1,1,1]):jy(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?jy(t,[1,1,1,1,r[0]]):jy(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?jy(t,[1,r[0],1,1]):jy(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?jy(t,[1,1,1,r[0]]):jy(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?jy(t,[1,r[0],1]):jy(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?jy(t,[1,1,r[0]]):jy(t,[1].concat(r))}else if(e<3)return t;throw new QS(`Unsupported input rank by biasAdd: ${t.rank}`)}function gT(e,t,n){return Qg((()=>(null==n&&(n="channelsLast"),UN(n),py(e,mT(e.rank,t,n)))))}function yT(e,t,n,r){return Qg((()=>Av(e,t,n,r)))}function AT(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return n?e():t()}var bT=["fanIn","fanOut","fanAvg"],xT=["normal","uniform","truncatedNormal"],vT=class extends Cg.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},wT=class extends vT{apply(e,t){return Db(e,t)}};wT.className="Zeros",Cg.registerClass(wT);var kT=class extends vT{apply(e,t){return Pb(e,t)}};kT.className="Ones",Cg.registerClass(kT);var IT=class extends vT{constructor(e){if(super(),"object"!=typeof e)throw new QS(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new QS(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Qg((()=>my(Tx(this.value),Pb(e,t))))}getConfig(){return{value:this.value}}};IT.className="Constant",Cg.registerClass(IT);var ST=class extends vT{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return fx(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};ST.className="RandomUniform",Cg.registerClass(ST);var NT=class extends vT{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new eN(`randomNormal does not support dType ${t}.`);return hT(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};NT.className="RandomNormal",Cg.registerClass(NT);var TT=class extends vT{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new eN(`truncatedNormal does not support dType ${t}.`);return rv(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};TT.className="TruncatedNormal",Cg.registerClass(TT);var CT=class extends vT{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Qg((()=>{if(2!==e.length||e[0]!==e[1])throw new QS("Identity matrix initializer can only be used for 2D square matrices.");return my(this.gain,UA(e[0]))}))}getConfig(){return{gain:this.gain}}};CT.className="Identity",Cg.registerClass(CT);var ET=class extends vT{constructor(e){if(super(),e.scale<0)throw new QS(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){gN(bT,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){gN(xT,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(UN(r),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===r){let r=JN(e,2);t=e[1]*r,n=e[0]*r}else if("channelsLast"===r){let r=JN(e,0,e.length-2);t=e[e.length-2]*r,n=e[e.length-1]*r}}else{let r=JN(e);t=Math.sqrt(r),n=Math.sqrt(r)}return[t,n]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new eN(`${this.getClassName()} does not support dType ${t}.`);return rv(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return fx(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};ET.className="VarianceScaling",Cg.registerClass(ET);var _T=class extends ET{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ET.className}};_T.className="GlorotUniform",Cg.registerClass(_T);var RT=class extends ET{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ET.className}};RT.className="GlorotNormal",Cg.registerClass(RT);var MT=class extends ET{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ET.className}};MT.className="HeNormal",Cg.registerClass(MT);var $T=class extends ET{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ET.className}};$T.className="HeUniform",Cg.registerClass($T);var FT=class extends ET{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ET.className}};FT.className="LeCunNormal",Cg.registerClass(FT);var OT=class extends ET{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ET.className}};OT.className="LeCunNormal",Cg.registerClass(OT);var zT=class extends vT{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new eN("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Qg((()=>{if(e.length<2)throw new eN("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let t=hT(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32"),n=Rw.gramSchmidt(t);return e[0]>e[1]&&(n=Gm(n)),my(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};zT.className="Orthogonal",Cg.registerClass(zT);var DT={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function PT(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return pN(e,Cg.SerializationMap.getMap().classNameMap,t,"initializer")}function LT(e){return dN(e)}function WT(e){if("string"==typeof e){let t=e in DT?DT[e]:e;if("GlorotNormal"===t)return new RT;if("GlorotUniform"===t)return new _T;if("HeNormal"===t)return new MT;if("HeUniform"===t)return new $T;if("LeCunNormal"===t)return new FT;if("LeCunUniform"===t)return new OT;{let e={};return e.className=t,e.config={},PT(e)}}return e instanceof vT?e:PT(e)}function BT(){return new wT}function UT(){return new kT}function VT(e){return new IT(e)}function GT(e){return new ST(e)}function jT(e){return new NT(e)}function HT(e){return new TT(e)}function qT(e){return new CT(e)}function KT(e){return new ET(e)}function XT(e){return new _T(e)}function ZT(e){return new RT(e)}function YT(e){return new MT(e)}function JT(e){return new $T(e)}function QT(e){return new FT(e)}function eC(e){return new OT(e)}function tC(e){return new zT(e)}var nC={};gl(nC,{Layer:()=>vC,RNN:()=>J_,RNNCell:()=>Q_,activation:()=>vM,add:()=>_M,alphaDropout:()=>x$,average:()=>RM,averagePooling1d:()=>WM,averagePooling2d:()=>VM,averagePooling3d:()=>HM,avgPool1d:()=>BM,avgPool2d:()=>GM,avgPool3d:()=>qM,avgPooling1d:()=>UM,avgPooling2d:()=>jM,avgPooling3d:()=>KM,batchNormalization:()=>DM,bidirectional:()=>p$,concatenate:()=>MM,conv1d:()=>pM,conv2d:()=>cM,conv2dTranspose:()=>fM,conv3d:()=>mM,conv3dTranspose:()=>gM,convLstm2d:()=>l$,convLstm2dCell:()=>u$,cropping2D:()=>AM,dense:()=>wM,depthwiseConv2d:()=>xM,dot:()=>zM,dropout:()=>kM,elu:()=>iM,embedding:()=>EM,flatten:()=>SM,gaussianDropout:()=>b$,gaussianNoise:()=>A$,globalAveragePooling1d:()=>XM,globalAveragePooling2d:()=>ZM,globalMaxPool1d:()=>f$,globalMaxPool2d:()=>m$,globalMaxPooling1d:()=>YM,globalMaxPooling2d:()=>JM,gru:()=>n$,gruCell:()=>r$,input:()=>XE,inputLayer:()=>sM,layerNormalization:()=>PM,leakyReLU:()=>lM,lstm:()=>a$,lstmCell:()=>s$,masking:()=>v$,maxPool1d:()=>g$,maxPool2d:()=>y$,maxPooling1d:()=>QM,maxPooling2d:()=>e$,maxPooling3d:()=>t$,maximum:()=>$M,minimum:()=>FM,multiply:()=>OM,permute:()=>CM,prelu:()=>uM,reLU:()=>oM,repeatVector:()=>NM,reshape:()=>TM,rnn:()=>d$,separableConv2d:()=>yM,simpleRNN:()=>i$,simpleRNNCell:()=>o$,softmax:()=>dM,spatialDropout1d:()=>IM,stackedRNNCells:()=>h$,thresholdedReLU:()=>hM,timeDistributed:()=>c$,upSampling2d:()=>bM,zeroPadding2d:()=>LM});var rC=0;function aC(){return rC++}var sC={};function iC(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in sC||(sC[e]=0),sC[e]+=1,e+sC[e].toString()}function oC(e){return Array.isArray(e)&&Array.isArray(e[0])}function lC(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function uC(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new QS(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function dC(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new QS(`Expected exactly 1 Shape; got ${e.length}`)}return e}function hC(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var pC="Variable",cC=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:pC,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=aC(),n=null==n?pC:n,this.originalName=qN(n),this.name=KN(this.originalName),this.trainable_=r,this.constraint=a,this.val=ov(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function fC(e){return e.map((e=>e.read()))}function mC(e){e.forEach((e=>{e[0].write(e[1])}))}var gC=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},yC=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=aC(),null!=s&&(this.originalName=qN(s),this.name=KN(this.originalName)),this.rank=t.length}},AC=0,bC=class{constructor(e,t){this.callArgs=t,this.id=AC++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},xC=0,vC=class extends Cg.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=xC++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=oN(e)+"_"+iC(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new JS(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new QS(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return sN(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return sN(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new YS(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new YS(`Layer ${this.name} is not connected, no input to return.`);return sN(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new YS(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new YS(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return sN(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=iN(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=iN(this.inputSpec);if(e.length!==t.length)throw new QS(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new QS(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new QS(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new QS(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new QS(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new QS(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new QS(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=iN(e),r=!0;for(let e of n)if(!(e instanceof yC)){r=!1;break}let a=!0;for(let e of n)if(e instanceof yC){a=!1;break}if(r===a)throw new QS("Arguments to apply() must be all SymbolicTensors or all Tensors");return HN(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of iN(e))t.push(n.shape);this.build(sN(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=iN(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=sN(s),null!=this.activityRegularizer)throw new eN("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=iN(e);let t=[];for(let n of e)t.push(n.shape);return sN(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new yC(s,n,this,iN(e),t,this.name,r))):new yC(s,a,this,iN(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new eN("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new YS(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new YS(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new JS(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return hC(this.weights)}build(e){this.built=!0}getWeights(){return fC(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){Qg((()=>{let t=this.weights;if(t.length!==e.length)throw new QS(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=fC(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!uc.arraysEqual(s.shape,o.shape))throw new QS(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}mC(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new QS(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():WT("zeros"));let l=r.apply(t,n),u=new cC(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=iN(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=iN(e);t=iN(t),n=iN(n),r=iN(r),a=lC(a),s=lC(s);let l=[],u=[],d=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),d.push(e.tensorIndex);new bC({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function wC(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=wC(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var kC=class extends vC{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:iC("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new QS("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new QS("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new QS("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new yC(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new bC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new QS(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function IC(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new QS("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new kC({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function SC(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];ey(r)}}function NC(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}kC.className="InputLayer",Cg.registerClass(kC);var TC=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},CC=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},EC=class extends TC{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=Qg((()=>py(this.totals[e],my(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Qg((()=>{let n=my(fy(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ty(t[e])})))}},_C=class extends TC{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},RC=class extends TC{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Hw,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");uc.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():uc.now();return function(){let s=null!=n?n():uc.now();return s-a<t||(a=s,r=e(...arguments)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await SC(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await SC(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await SC(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await SC(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await SC(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):uc.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await SC(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await SC(e),await this.trainEnd(e))}};function MC(e,t){return null==e&&(e={}),e instanceof TC?[e]:Array.isArray(e)&&e[0]instanceof TC?e:iN(e).map((e=>new RC(e,t)))}var $C=class{constructor(){}static registerCallbackConstructor(e,t){uc.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),$C.checkForDuplicate(t),null==$C.constructors[e]&&($C.constructors[e]=[]),$C.constructors[e].push(t)}static checkForDuplicate(e){for(let t in $C.constructors)$C.constructors[+t].forEach((t=>{if(t===e)throw new QS("Duplicate callback constructor.")}))}static clear(){$C.constructors={}}static createCallbacks(e){let t=[];for(let n in $C.constructors){let r=+n;e>=r&&t.push(...$C.constructors[r])}return t.map((e=>new e))}},FC=$C;function OC(e,t,n,r,a,s,i,o,l){let u=new _C,d=[new EC,...FC.createCallbacks(t)];null!=e&&d.push(...e),d.push(u);let h=new CC(d);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function zC(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return pN(e,Cg.SerializationMap.getMap().classNameMap,t,"layer",n)}function DC(e,t){return Qg((()=>{"float32"!==e.dtype&&(e=vm(e,"float32"));let n=yb(fT(e),t,!0),r=VA(n.shape,ZS()),a=Gx(Ob(n,r));return fy(e,a)}))}function PC(e,t){return Qg((()=>zb(fT(gb(t,e)),-1)))}function LC(e,t){return Qg((()=>zb(gy(gb(t,e)),-1)))}function WC(e,t){return Qg((()=>{let n=gb(e,t),r=uA(gy(e),ZS(),Number.MAX_VALUE),a=gy(fy(n,r));return my(100,zb(a,-1))}))}function BC(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Qg((()=>{if(n)t=Px(t);else{let e=yb(t,t.shape.length-1,!0);t=fy(t,e)}return t=uA(t,ZS(),1-ZS()),pb(yb(my(vm(e,"float32"),rb(t)),t.shape.length-1))}))}function UC(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Qg((()=>{let r=vm(GA(aT(e)),"int32"),a=(t=uA(t,ZS(),1-ZS())).shape;return BC(jy(Vm(r,a[a.length-1]),a),t,n)}))}function VC(e,t){return Qg((()=>{let n;return n=uA(t,ZS(),1-ZS()),n=rb(fy(n,gb(1,n))),zb(function(e,t){if(!uc.arraysEqual(e.shape,t.shape))throw new QS(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Qg((()=>{let n=Ax(t),r=pb(gy(t));return py(gb(n,my(t,e)),ab(PA(r)))}))}(e,n),-1)}))}function GC(e,t){return Qg((()=>{let n=DC(e,-1),r=DC(t,-1),a=my(n,r);return pb(yb(a,-1))}))}FC.constructors={};var jC={meanSquaredError:PC,meanAbsoluteError:LC,meanAbsolutePercentageError:WC,meanSquaredLogarithmicError:function(e,t){return Qg((()=>{let n=uA(t,ZS(),Number.MAX_VALUE),r=rb(py(1,n)),a=uA(e,ZS(),Number.MAX_VALUE),s=rb(py(1,a));return zb(fT(gb(r,s)),-1)}))},squaredHinge:function(e,t){return Qg((()=>{let n=Ob(0,gb(1,my(e,t)));return zb(fT(n),-1)}))},hinge:function(e,t){return Qg((()=>{let n=Ob(0,gb(1,my(e,t)));return zb(n,-1)}))},categoricalHinge:function(e,t){return Qg((()=>{let n=yb(my(e,t),-1),r=mb(my(gb(1,e),t),-1);return Ob(0,py(1,gb(r,n)))}))},logcosh:function(e,t){return Qg((()=>{let n=Math.log(2),r=gb(t,e),a=gb(py(r,cb(my(-2,r))),n);return zb(a,-1)}))},categoricalCrossentropy:BC,sparseCategoricalCrossentropy:UC,binaryCrossentropy:VC,kullbackLeiblerDivergence:function(e,t){return Qg((()=>{let n=uA(e,ZS(),1),r=uA(t,ZS(),1);return yb(my(e,rb(fy(n,r))),-1)}))},poisson:function(e,t){return Qg((()=>{let n=rb(py(ZS(),t));return zb(gb(t,my(e,n)),-1)}))},cosineProximity:GC};function HC(e){if("string"==typeof e){if(e in jC)return jC[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new QS(t)}return e}function qC(e,t){return Qg((()=>{let n=my(.5,Xb(t)),r=nT(HA(t,n),e.dtype);return zb(_A(e,r),-1)}))}function KC(e,t){return Qg((()=>nT(_A(wy(e,-1),wy(t,-1)),"float32")))}function XC(e,t){return Qg((()=>vm(yb(Cb(_A(e,1),_A(t,1))),"float32")))}function ZC(e,t){return Qg((()=>{let n=XC(e,t),r=function(e,t){return Qg((()=>vm(yb(Cb(_A(e,0),_A(t,1))),"float32")))}(e,t),a=py(n,r);return vm(RA(HA(a,0),fy(n,a),0),"float32")}))}function YC(e,t){return VC(e,t)}function JC(e,t){return e.rank===t.rank&&(e=Hx(e,[e.rank-1])),(t=wy(t,-1)).dtype!==e.dtype&&(t=vm(t,e.dtype)),vm(_A(e,t),"float32")}var QC=BC,eE=UC,tE={binaryAccuracy:qC,categoricalAccuracy:KC,precision:ZC,categoricalCrossentropy:QC,sparseCategoricalCrossentropy:eE,mse:PC,MSE:PC,mae:LC,MAE:LC,mape:WC,MAPE:WC,cosine:GC};function nE(e){if("string"==typeof e&&e in tE)return tE[e];if("string"!=typeof e&&null!=e)return e;throw new QS(`Unknown metric ${e}`)}function rE(e){if(rN(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(jC))if(jC[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(tE))if(tE[n]===e){t=n;break}return void 0!==t?t:e.name}}var aE=1048576;function sE(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!iE(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>aE&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${aE}.`)}}function iE(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!iE(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!iE(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function oE(e){let t;return t=null!=e.collectedTrainableWeights?hC(e.collectedTrainableWeights):hC(e.trainableWeights),t}function lE(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}function uE(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function dE(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}uE([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function hE(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];uE([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)uE(["","","","",i[e]],t,r)}function pE(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function cE(e,t){if(null===e)return null;if("string"==typeof e)return lN(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];pE(t,a,r)?n.push(r):n.push(cE(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=lN(n);t[e]=cE(r,e)}}return t}}function fE(e,t){if(null==e)return null;if("string"==typeof e)return oN(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];pE(t,a,r)?n.push(r):n.push(fE(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];t[oN(n)]="name"!==n&&"className"!==n||"string"!=typeof r?fE(r,n):r}return t}}var mE="0.0.0",gE=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof gE)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new QS(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return vm(t,e.dtype)}catch(n){throw new QS(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof yC){if(null==this.id2Value[e.id])throw new QS(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new QS(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof yC){if(null==this.id2Value[e.id])throw new QS(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new QS(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ey(this.id2Mask)}},yE={},AE={};function bE(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let d,h,p=o.join(",")+"|"+t.names().join(",");if(null==yE[p]){let e=function(e,t){uc.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=vE(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=vE(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:xE(r)}}(i,t);d=e.sorted,h=e.recipientCounts,yE[p]=d,AE[p]=h}d=yE[p],h={},a||Object.assign(h,AE[p]);let c=new gE(t);for(let e=0;e<d.length;++e){if(null!=r){let e=Yg().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=d[e],i=s.sourceLayer;if(i instanceof kC)continue;let u=[],p=[],f=[],m=!1;for(let e of s.inputs){let n=c.getValue(e),r=c.getMask(e);u.push(n),p.push(r),null!=r&&(m=!0),a||(h[e.name]--,0===h[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=p[0]);let g=iN(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,p));let A=wE(s),b=Array.isArray(A)?A:[A];for(let e=0;e<b.length;++e){c.hasKey(b[e])||c.add(b[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(b[e].name);-1!==t&&(l[t]=g[e])}a||ey(f)}return c.disposeMasks(),s?l:l[0]}function xE(e){let t={};for(let n in e)t[n]=e[n].size;return t}function vE(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function wE(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var kE=class extends vC{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=iC(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],fN(this.inputs).length!==this.inputs.length)throw new QS(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);fN(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;rN(0===n,"input layer has >1 nodes"),rN(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof kC))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new JS(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(kE.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let d=u.inboundLayers.length;for(let e=0;e<d;e++){let r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let d=i.slice().reverse();for(let e of d){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let h={};for(let e in t){let r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}let p={};for(let e in r){let t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let c=Object.keys(p).map((e=>parseInt(e,10))).sort(cN);this.layers=[];for(let e of c){let t=p[e];t.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let e of t)e instanceof kE&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,c=Object.keys(h).map((e=>parseInt(e,10))).sort(cN);let f=this.inputs.slice(),m=[];for(let e of c)for(let t of h[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new JS(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new JS(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new bC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new QS("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n={},r=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new QS(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}let a=[];for(let r in e){let s=r;if(null==n[r]){let e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new QS(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new QS(`${e.length} of ${r} weights are not set: ${e}`)}mC(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${mE}`,t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=fE(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Qg((()=>{e=iN(e);let n=new gE;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return bE(this.outputs,n,t)}))}computeMask(e,t){return Qg((()=>{let n;return e=iN(e),n=null==t?nN(null,e.length):iN(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=lC(e);if(t.length!==this.inputLayers.length)throw new QS(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(cN);if(r.length>1)for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let r=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=lC(t.computeOutputShape(sN(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];rN(t in n),a.push(n[t])}return sN(a)}runInternalGraph(e,t){null==t&&(t=nN(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(cN);for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=iN(t.call(e,u)),l=iN(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=iN(t.call(r,u)),l=iN(t.computeMask(r,i));if(t.activityRegularizer)throw new eN("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){rN(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof kE?1:0;for(let r=0;r<e.inboundNodes.length;r++){let a=kE.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new QS(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new QS("Provide either a layer name or layer index");for(let t of this.layers)if(t.name===e)return t;throw new QS(`No such layer: ${e}`)}calculateLosses(){return Qg((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=kE.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=kE.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[kE.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=kE.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=kE.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={},a={};function s(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function i(e,t){let n,a=[];for(let i of t){let o=i[0],l=i[1],u=i[2];if(n=null==i[3]?{}:i[3],!(o in r))return void s(e,t);let d=r[o];if(d.inboundNodes.length<=l)return void s(e,t);let h=d.inboundNodes[l];a.push(h.outputTensors[u])}a.length>0&&e.apply(sN(a),n)}function o(e){let a=e.name,i=zC(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(n),r[a]=i,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new QS(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}let l=t.name,u=t.layers;for(let e of u)o(e);for(;!mN(a);)for(let e of u){let t=r[e.name];if(t.name in a){let e=a[t.name];delete a[t.name];for(let n of e)i(t,n)}}let d=[],h=[],p=t.inputLayers;for(let e of p){let t=e[0],n=e[1],a=e[2];rN(t in r);let s=r[t].inboundNodes[n].outputTensors;d.push(s[a])}let c=t.outputLayers;for(let e of c){let t=e[0],n=e[1],a=e[2];rN(t in r);let s=r[t].inboundNodes[n].outputTensors;h.push(s[a])}return new e({inputs:d,outputs:h,name:l})}get stateful(){if(this._stateful)throw new QS("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Qg((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function IE(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function SE(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=Qg((()=>{if(1===e.shape.length)return wm(e);if(2===e.shape.length){if(e.shape[1]>1)return wy(e,1);if(1===e.shape[1])return jy(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());ey(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Yx(a,"float32")}return null}function NE(e,t){return my(e,t)}function TE(e,t){let n,r,a=t;n=a.xs,r=a.ys,uc.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=CE("input",e.inputNames,n),i=CE("output",e.outputNames,r),o=s[0].shape[0];uc.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),uc.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)uc.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)uc.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function CE(e,t,n){if(n instanceof Uc)return[n];if(Array.isArray(n))return uc.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new QS(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function EE(e){return"function"==typeof e.iterator}function _E(e){uc.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function RE(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>sT(e,t,n-t))):sT(e,t,n-t)}function ME(e,t){return Qg((()=>null==e?null:Array.isArray(e)?e.map((e=>ME(e,t))):cT(e,"int32"===t.dtype?t:vm(t,"int32"))))}function $E(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function FE(e,t,n,r,a,s,i,o,l,u,d,h,p,c,f){null==a&&(a=32),null==s&&(s=1),null==d&&(d=!0),null==p&&(p=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==c))throw new QS("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g,y=e.checkNumSamples(n,a,c,"steps_per_epoch");null!=y&&(g=tT(0,y)),null==i&&(i=1);let{callbackList:A,history:b}=OC(o,i,s,p,y,c,a,m,h);A.setModel(e),e.history=b,await A.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<s;++i){await A.onEpochBegin(i);let s={};if(null!=c)throw new eN("stepsPerEpoch mode is not implemented yet.");{if("batch"===d)throw new eN("batch shuffling is not implemneted yet");d&&uc.shuffle(g);let i=Yx(g),o=$E(y,a);for(let d=0;d<o.length;++d){let h={};if(await A.onBatchBegin(d,h),Qg((()=>{let p=o[d][0],c=o[d][1],f=sT(i,p,c-p);h.batch=d,h.size=c-p;let g=ME(n,f),y=t(g);for(let e=0;e<r.length;++e){let t=r[e],n=y[e];h[t]=n,ty(n)}if(d===o.length-1&&m){let t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){let n=r[e],a=t[e];ty(a),s["val_"+n]=a}}})),await A.onBatchEnd(d,h),NC(h),e.stopTraining_)break}i.dispose()}if(await A.onEpochEnd(i,s),e.stopTraining_)break}return await A.onTrainEnd(),await e.history.syncData(),e.history}function OE(e){let t=[];e instanceof Uc&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(rT(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function zE(e,t){if(null==e)return;let n=[];if(t instanceof Uc)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof Uc)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function DE(e){return Array.isArray(e)}function PE(e){return!function(e){return e instanceof Uc}(e)&&!DE(e)}function LE(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(DE(e)&&e.length>0)t=!0;else if(PE(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new QS(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));if(PE(e)){r=[];for(let n of t){if(null==e[n])throw new QS(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(DE(e)){if(e.length!==t.length)throw new QS(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(t.length>1)throw new QS(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=OE(r),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=r[e];if(i.shape.length!==n[e].length)throw new QS(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;let r=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&r!==o)throw new QS(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return r}function WE(e,t,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new QS(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new QS(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=r[e];if(i.shape.length!==n[e].length)throw new QS(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let r=0;r<n[e].length;++r){if(0===r&&!a)continue;let o=i.shape[r],l=n[e][r];if(null!=l&&l!==o)throw new QS(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var BE=class extends kE{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new QS("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log,s=lE(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),r=[];for(let t in e.nodesByDepth)r.push(...e.nodesByDepth[t])}a("_".repeat(t)),uE(i,n,a),a("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?dE(o[e],n,a):hE(o[e],n,r,a),a((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=oE(e),u=hC(e.nonTrainableWeights);a(`Total params: ${l+u}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${u}`),a("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>Gw.adagrad(.01),Adadelta:()=>Gw.adadelta(1,.95,ZS()),Adam:()=>Gw.adam(.001,.9,.999,ZS()),Adamax:()=>Gw.adamax(.002,.9,.999,ZS(),0),RMSProp:()=>Gw.rmsprop(.001,.9,0,ZS()),SGD:()=>Gw.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new QS(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ow))throw new QS("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new QS(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>HC(e)))}else{let n=HC(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new QS(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(HC(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],HN("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};HN("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===VC?-1!==["accuracy","acc"].indexOf(i)?r=qC:-1!==["crossentropy","ce"].indexOf(i)&&(r=YC):this.lossFunctions[e]===UC?-1!==["accuracy","acc"].indexOf(i)?r=JC:-1!==["crossentropy","ce"].indexOf(i)&&(r=eE):-1!==["accuracy","acc"].indexOf(i)?r=KC:-1!==["crossentropy","ce"].indexOf(i)&&(r=QC),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=nE(i),n=""+rE(i);let t;HN(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=null==n.batchSize?32:n.batchSize;_E(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let s=a[0].concat(a[1]);this.makeTestFunction();let i=this.testFunction;return sN(this.testLoop(i,s,r,n.verbose,n.steps))}finally{zE(a[0],e),zE(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new eN("Verbose mode is not implemented yet.");uc.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=Qg((()=>{if(t.value){let{xs:n,ys:r}=TE(e,t.value),i=n.concat(r),u=Qg((()=>a(i)));if(ey(i),0===l)for(let e=0;e<u.length;++e)s.push(Tx(0));let d=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=Qg((()=>py(s[e],my(d,t)))),l>0&&ey(n)}ey(u),o+=d,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=fy(s[e],o),ey(t)}return sN(s)}(this,e,t)}checkNumSamples(e,t,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=t)throw new QS(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new QS(`Either the input data should have a defined shape, or ${a} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new QS("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new gE;if(e instanceof Uc&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new QS(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new QS(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=bE(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=nN(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new QS(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Qg((()=>{let r=this.checkNumSamples(e);if(n)throw new eN("Verbose predictLoop() is not implemented yet.");let a=$E(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)Qg((()=>{let n=a[t][0],r=a[t][1],s=RE(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new gE(i);return bE(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return sN(s.map((e=>Ky(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=OE(e);WE(n,this.inputNames,this.feedInputShapes,!1);try{let r=null==t.batchSize?32:t.batchSize;return _E(r),this.predictLoop(n,r)}finally{zE(n,e)}}predictOnBatch(e){WE(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new JS("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===UC?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){let r=fN(e.map((e=>e.shape[0])));r.sort();let a=fN(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new QS(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new QS(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!uc.arraysEqual(r,a))throw new QS(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=LE(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=LE(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){let r=[PC,VC,BC];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===BC&&1===s.shape[s.shape.length-1])throw new QS(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new QS(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!=0)throw new QS(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0,[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=IE(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await SE(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4?arguments[4]:void 0;return Qg((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new eN("Verbose mode is not implemented yet.");if(null!=a)throw new eN("steps mode in testLoop() is not implemented yet");{let r=$E(s,n),a=Yx(tT(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=sT(a,s,o-s),u=ME(t,l),d=e(u);if(0===n)for(let e=0;e<d.length;++e)i.push(Tx(0));for(let e=0;e<d.length;++e){let t=d[e];i[e]=py(i[e],my(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=fy(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;aN(e,r)>1&&(a+=`_${aN(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new gE(e),l=bE(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=this.lossFunctions[e](r[e],l[e]);null!=a[e]&&(n=NE(n,a[e]));let s=zb(n);t.push(s),i=0===e?n:py(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=zb(t(r[a],l[a]))}ty(n),s.push(n)}return i=zb(i),this.calculateLosses().forEach((e=>{i=py(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>Qg((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new gE(s),o=bE(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=zb(r(a[e],o[e]));t=0===e?s:py(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=zb(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t){return async function(e,t,n){let r,a,s,i,o,l,u,d,h,p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let c=null==p.batchSize?32:p.batchSize;_E(c);let f=!1,m=await e.standardizeUserData(t,n,p.sampleWeight,p.classWeight,f,c);r=m[0],a=m[1],h=m[2];let g,y=!1;if(null!=p.validationData&&p.validationData.length>0){if(y=!0,2!==p.validationData.length)throw 3===p.validationData.length?new eN("validationData including sample weights is not supported yet."):new QS(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${p.validationData} is invalid.`);o=p.validationData[0],l=p.validationData[1];let t=!0,n=await e.standardizeUserData(o,l,null,null,t,c);u=n[0],d=n[1],g=u.concat(d)}else if(null!=p.validationSplit&&p.validationSplit>0&&p.validationSplit<1){y=!0;let e=Math.floor(r[0].shape[0]*(1-p.validationSplit)),t=r[0].shape[0];u=RE(r,e,t),s=r,r=RE(r,0,e),d=RE(a,e,t),i=a,a=RE(a,0,e),g=u.concat(d)}else null!=p.validationSteps&&(y=!0);let A=r.concat(a).concat(h);e.checkTrainableWeightsConsistency();let b,x,v=e.makeTrainFunction(),w=e.getDedupedMetricsNames();y?(e.makeTestFunction(),b=e.testFunction,x=w.slice().concat(w.map((e=>"val_"+e)))):(b=null,g=[],x=w.slice());let k=MC(p.callbacks,p.yieldEvery);return await FE(e,v,A,w,c,p.epochs,p.verbose,k,b,g,p.shuffle,x,p.initialEpoch,null,null)}finally{e.isTraining=!1,zE(r,t),zE(a,n),zE(s,t),zE(i,n),zE(u,o),zE(d,l),null!=h&&ey(h)}}(this,e,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}async fitDataset(e,t){return async function(e,t,n){let r=null!=n.batchesPerEpoch;if(uc.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),uc.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),uc.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),uc.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),uc.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(EE(n.validationData))uc.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new eN("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let d=MC(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:c}=OC(d,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);p.setModel(e),e.history=c,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await p.onEpochBegin(f);let d=0,h=0;for(r||(m=await t.iterator());!r||d<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=TE(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);let i=[];if(null!=n.classWeight){let t=IE(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await SE(a[e],null,t[e]))}let o=r.concat(a).concat(i),c=l(o);ey(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,ty(n)}await p.onBatchEnd(h,s),NC(s),h++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(i){let t;t=EE(n.validationData)?iN(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):iN(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,o),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return ey(s),zE(n[0],e),zE(n[1],t),sN(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=Yg().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Yg().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=oN(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>oN(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=oN(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[oN(rE(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>oN(rE(e))));{let e={};for(let t in this.metrics)e[t]=oN(rE(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=zC(cE(e.optimizer_config));if("string"==typeof e.loss)t=lN(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>lN(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=lN(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>lN(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=lN(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=Im.getSaveHandlers(e);if(0===t.length)throw new QS(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new QS(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new QS("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Im.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${mE}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await Im.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Im.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(sE(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){sE(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};BE.className="Model",Cg.registerClass(BE);var UE=class extends BE{};async function VE(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=zC(cE(n),t);if(null!=e.weightsManifest){let t=await Im.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),ey(t)}return r}UE.className="Functional",Cg.registerClass(UE);var GE=class extends BE{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:iC("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new QS(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof GE||e instanceof BE;if(n){if(t=e,1!==t.outputs.length)throw new QS("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new QS("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new QS("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=IC({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new QS(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new QS("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=wC(this.outputs[0])}this.inboundNodes=[],new bC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:nN(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(dC(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new BE({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new JS("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new JS("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new JS("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new JS("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new QS("Legacy serialization format not supported yet.");n=t}else uc.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,a=t;let s=new e(a);if(!(s instanceof GE))throw new eN(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(let e of n){let t=zC(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(e){if(null==this.model)throw new QS("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new QS("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},jE=GE;function HE(e){return new BE(e)}function qE(e){return new jE(e)}function KE(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){let n=Im.getLoadHandlers(e,t);if(0===n.length)n.push(Im.browserHTTPRequest(e,t));else if(n.length>1)throw new QS(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new QS("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=zC(cE(a),void 0,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new QS("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=Im.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),ey(e),ey(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function XE(e){return IC(e)}function ZE(e,t){FC.registerCallbackConstructor(e,t)}jE.className="Sequential",Cg.registerClass(jE);var YE=class extends Cg.Serializable{getConfig(){return{}}},JE=class extends YE{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new eN(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return zA(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}};JE.className="elu",Cg.registerClass(JE);var QE=class extends YE{apply(e){return Cx(e)}};QE.className="selu",Cg.registerClass(QE);var e_=class extends YE{apply(e){return Ax(e)}};e_.className="relu",Cg.registerClass(e_);var t_=class extends YE{apply(e){return Qg((()=>Bb(6,Ax(e))))}};t_.className="relu6",Cg.registerClass(t_);var n_=class extends YE{apply(e){return e}};n_.className="linear",Cg.registerClass(n_);var r_=class extends YE{apply(e){return Xy(e)}};r_.className="sigmoid",Cg.registerClass(r_);var a_=class extends YE{apply(e){return function(e){return Qg((()=>{let t=py(.5,my(.2,e));return uA(t,0,1)}))}(e)}};a_.className="hardSigmoid",Cg.registerClass(a_);var s_=class extends YE{apply(e){return cb(e)}};s_.className="softplus",Cg.registerClass(s_);var i_=class extends YE{apply(e){return function(e){return Qg((()=>fy(e,py(gy(e),1))))}(e)}};i_.className="softsign",Cg.registerClass(i_);var o_=class extends YE{apply(e){return Yy(e)}};o_.className="tanh",Cg.registerClass(o_);var l_=class extends YE{apply(e){return Px(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}};l_.className="softmax",Cg.registerClass(l_);var u_=class extends YE{apply(e){return Ab(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}};u_.className="logSoftmax",Cg.registerClass(u_);var d_=class extends YE{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Qg((()=>my(Xy(my(e,t)),e)))}};d_.className="swish",Cg.registerClass(d_);var h_=class extends YE{apply(e){return Qg((()=>my(e,Yy(cb(e)))))}};function p_(e){return e.getClassName()}function c_(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return pN(e,Cg.SerializationMap.getMap().classNameMap,t,"activation")}function f_(e){if(null==e){return c_({className:"linear",config:{}})}if("string"==typeof e){let t={};return t.className=e,t.config={},c_(t)}return e instanceof YE?e:c_(e)}function m_(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}h_.className="mish",Cg.registerClass(h_);var g_=class extends Cg.Serializable{},y_=class extends g_{constructor(e){super(),m_(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Qg((()=>{let t=Db([1]);return this.hasL1&&(t=py(t,yb(my(this.l1,gy(e))))),this.hasL2&&(t=py(t,yb(my(this.l2,fT(e))))),jy(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};y_.className="L1L2",Cg.registerClass(y_);var A_={l1l2:"L1L2"};function b_(e){return dN(e)}function x_(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return pN(e,Cg.SerializationMap.getMap().classNameMap,t,"regularizer")}function v_(e){return null==e?null:"string"==typeof e?x_({className:e in A_?A_[e]:e,config:{}}):e instanceof g_?e:x_(e)}var w_=class extends vC{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=uC(e);let n=Ax(e);return null!=this.maxValue&&(n=uA(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};w_.className="ReLU",Cg.registerClass(w_);var k_=class extends vC{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=uC(e);return JA(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};k_.className="LeakyReLU",Cg.registerClass(k_);var I_=class extends vC{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=WT(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=v_(e.alphaRegularizer),this.alphaConstraint=_N(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new QS(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=dC(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new gC({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=uC(e),sx(e,this.alpha.read())}getConfig(){let e={alphaInitializer:LT(this.alphaInitializer),alphaRegularizer:b_(this.alphaRegularizer),alphaConstraint:CN(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};I_.className="PReLU",Cg.registerClass(I_);var S_=class extends vC{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new eN(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=uC(e);return zA(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};S_.className="ELU",Cg.registerClass(S_);var N_=class extends vC{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=uC(e);return my(n,vm(HA(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};N_.className="ThresholdedReLU",Cg.registerClass(N_);var T_=class extends vC{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new l_).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=uC(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function C_(e,t,n){if("number"==typeof e)return nN(e,t);if(e.length!==t)throw new QS(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!YN(a))throw new QS(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function E_(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(null==e)return e;let s,i=t+(t-1)*(a-1);return s="same"===n?e:e-i+1,Math.floor((s+r-1)/r)}function __(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+eT([n-t,0]);else{if("same"!==r)throw new QS(`Unsupport padding mode: ${r}.`);e*=t}return e}function R_(e,t){return Qg((()=>(UN(t),"channelsFirst"===t?Gm(e,[0,2,3,1]):e)))}function M_(e,t){return Qg((()=>(UN(t),"channelsFirst"===t?Gm(e,[0,2,3,4,1]):e)))}function $_(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Qg((()=>{if(null==s&&(s="channelsLast"),UN(s),3!==e.rank&&4!==e.rank)throw new QS(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new QS(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=R_(e,s);if("causal"===a)throw new eN("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=wv.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Gm(l,[0,3,1,2])),l}))}T_.className="Softmax",Cg.registerClass(T_);var F_=class extends vC{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",F_.verifyArgs(t),this.rank=e,AN(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new eN(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=C_(t.kernelSize,e,"kernelSize"),this.strides=C_(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,VN(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,UN(this.dataFormat),this.activation=f_(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=WT(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=_N(t.biasConstraint),this.biasRegularizer=v_(t.biasRegularizer),this.activityRegularizer=v_(t.activityRegularizer),this.dilationRate=C_(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new QS(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new QS(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new QS(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(rN("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!yN(e.kernelSize,"number",1,3))throw new QS(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:p_(this.activation),useBias:this.useBias,biasInitializer:LT(this.biasInitializer),biasRegularizer:b_(this.biasRegularizer),activityRegularizer:b_(this.activityRegularizer),biasConstraint:CN(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},O_=class extends F_{constructor(e,t){super(e,t),this.kernel=null,O_.verifyArgs(t),this.filters=t.filters,AN(this.filters,"filters"),this.kernelInitializer=WT(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=_N(t.kernelConstraint),this.kernelRegularizer=v_(t.kernelRegularizer)}build(e){e=dC(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new QS(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Qg((()=>{e=uC(e);let t,n=null==this.bias?null:this.bias.read(),r=xN(this.activation.getClassName());if(null!=r&&2===this.rank)t=$_(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Qg((()=>{if(null==s&&(s="channelsLast"),UN(s),3!==e.shape.length)throw new QS(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new QS(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new QS(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Gm(e,[0,2,1])),"causal"===a)throw new eN("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=mA(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=gT(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=$_(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new eN("convolutions greater than 3D are not implemented yet.");t=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return Qg((()=>{if(null==s&&(s="channelsLast"),UN(s),4!==e.rank&&5!==e.rank)throw new QS(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new QS(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=M_(e,s);if("causal"===a)throw new eN("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=AA(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=gT(o,n)),"channelsFirst"===s&&(o=Gm(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=dC(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=E_(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:LT(this.kernelInitializer),kernelRegularizer:b_(this.kernelRegularizer),kernelConstraint:CN(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new QS(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},z_=class extends O_{constructor(e){super(2,e),z_.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!yN(e.kernelSize,"number",1,2))throw new QS(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},D_=z_;D_.className="Conv2D",Cg.registerClass(D_);var P_=class extends O_{constructor(e){super(3,e),P_.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new QS(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},L_=P_;L_.className="Conv3D",Cg.registerClass(L_);var W_=class extends D_{constructor(e){if(super(e),this.inputSpec=[new gC({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new QS(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=dC(e)).length)throw new QS("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new QS("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new gC({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Qg((()=>{let t=uC(e);if(4!==t.shape.length)throw new QS(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[s,__(i,d,l,this.padding),__(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Gm(t,[0,2,3,1]));let c=yA(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=Gm(c,[0,3,1,2])),null!=this.bias&&(c=gT(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,r,a=(e=dC(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=__(a[n],o,s,this.padding),a[r]=__(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};W_.className="Conv2DTranspose",Cg.registerClass(W_);var B_=class extends L_{constructor(e){if(super(e),this.inputSpec=[new gC({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new QS(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=dC(e)).length)throw new QS("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new QS("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new gC({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Qg((()=>{let t=uC(e);if(5!==t.shape.length)throw new QS(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=[i,__(o,c,d,this.padding),__(l,f,h,this.padding),__(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Gm(t,[0,2,3,4,1]));let y=xA(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Gm(y,[0,4,1,2,3])),null!==this.bias&&(y=gT(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){let t,n,r,a,s=(e=dC(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],d=this.strides[1],h=this.strides[2];return s[t]=this.filters,s[n]=__(s[n],u,i,this.padding),s[r]=__(s[r],d,o,this.padding),s[a]=__(s[a],h,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};B_.className="Conv3DTranspose",Cg.registerClass(B_);var U_=class extends O_{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new QS("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new QS("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new QS(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=WT(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=v_(t.depthwiseRegularizer),this.depthwiseConstraint=_N(t.depthwiseConstraint),this.pointwiseInitializer=WT(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=v_(t.pointwiseRegularizer),this.pointwiseConstraint=_N(t.pointwiseConstraint)}build(e){if((e=dC(e)).length<this.rank+2)throw new QS(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new QS(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new gC({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Qg((()=>{let t;if(e=uC(e),1===this.rank)throw new eN("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Gm(e,[0,2,3,1])),t=Ex(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=gT(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Gm(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=LT(this.depthwiseInitializer),e.pointwiseInitializer=LT(this.pointwiseInitializer),e.depthwiseRegularizer=b_(this.depthwiseRegularizer),e.pointwiseRegularizer=b_(this.pointwiseRegularizer),e.depthwiseConstraint=CN(this.depthwiseConstraint),e.pointwiseConstraint=CN(this.pointwiseConstraint),e}};U_.className="SeparableConv";var V_=class extends U_{constructor(e){super(2,e)}};V_.className="SeparableConv2D",Cg.registerClass(V_);var G_=class extends O_{constructor(e){super(1,e),G_.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!yN(e.kernelSize,"number",1,1))throw new QS(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},j_=G_;j_.className="Conv1D",Cg.registerClass(j_);var H_=class extends vC{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Qg((()=>{if(e=uC(e),"channelsLast"===this.dataFormat){let t=oT(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return oT(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=oT(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return oT(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};H_.className="Cropping2D",Cg.registerClass(H_);var q_=class extends vC{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,UN(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){gN(DN,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Qg((()=>{let t=uC(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=Gm(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?_w.resizeNearestNeighbor(t,[e,r]):_w.resizeBilinear(t,[e,r]);return Gm(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?_w.resizeNearestNeighbor(t,[e,r]):_w.resizeBilinear(t,[e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};q_.className="UpSampling2D",Cg.registerClass(q_);var K_=class extends F_{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=WT(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=_N(e.depthwiseConstraint),this.depthwiseRegularizer=v_(e.depthwiseRegularizer)}build(e){if((e=dC(e)).length<4)throw new QS(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new QS(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qg((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return Qg((()=>{null==a&&(a="channelsLast"),UN(a);let i=R_(e,a);if(4!==e.rank)throw new QS(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new QS(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=TA(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Gm(i,[0,3,1,2])),i}))}(e=uC(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=gT(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=dC(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=E_(t,this.kernelSize[0],this.padding,this.strides[0]),s=E_(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=LT(this.depthwiseInitializer),e.depthwiseRegularizer=b_(this.depthwiseRegularizer),e.depthwiseConstraint=CN(this.depthwiseRegularizer),e}};function X_(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new QS("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Z_(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return Qg((()=>{let l=t.shape.length;if(l<3)throw new QS(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(tT(2,l));if(t=Gm(t,u),null!=s)throw new eN("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=vm(vm(a,"bool"),"float32"),a.rank===l-1&&(a=LA(a,-1)),a=Gm(a,u)),r&&(t=xx(t,0),null!=a&&(a=xx(a,0)));let d,h,p,c=[],f=n,m=t.shape[0],g=iv(t);null!=a&&(h=iv(a));for(let t=0;t<m;++t){let n=g[t],r=Qg((()=>e(n,f)));if(null==a)d=r[0],f=r[1];else{let e=Qg((()=>{let e=h[t],n=gb(Xb(e),e);return{output:py(my(r[0],e),my(f[0],n)),newStates:f.map(((t,a)=>py(my(r[1][a],e),my(t,n))))}}));d=e.output,f=e.newStates}o&&c.push(d)}return o&&(p=qx(c,1)),[d,p,f]}))}K_.className="DepthwiseConv2D",Cg.registerClass(K_);var Y_=class extends vC{constructor(e){let t;if(super(e),null==e.cell)throw new QS("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new iR({cells:e.cell}):e.cell,null==t.stateSize)throw new QS("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new gC({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?tT(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){oC(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return Qg((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new eN("Constants support is not implemented in RNN yet.");oC(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new gC({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!uc.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new QS(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new gC({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Qg((()=>{if(!this.stateful)throw new YS("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new QS("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Db([n,e]))):this.states_=[Db([n,this.cell.stateSize])];else if(null==e)ey(this.states_),null!=this.keptStates&&(ey(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Db([n,e]))):this.states_[0]=Db([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new QS(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ey(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!uc.arraysEqual(r.shape,s))throw new QS(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>ty(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=X_(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new gC({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof yC){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Qg((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=uC(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new QS(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=Z_(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],d=o[2];this.stateful&&this.resetStates(d,r);let h=this.returnSequences?u:l;return this.returnState?[h].concat(d):h}))}getInitialState(e){return Qg((()=>{let t=Db(e.shape);return t=yb(t,[1,2]),t=rT(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?dT(t,[1,e]):t)):this.cell.stateSize>1?[dT(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===Y_.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=zC(t.cell,n);return new e(Object.assign(t,{cell:r}))}},J_=Y_;J_.className="RNN",Cg.registerClass(J_);var Q_=class extends vC{},eR=class extends Q_{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,AN(this.units,"units"),this.activation=f_(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=WT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=WT(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=WT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=v_(e.kernelRegularizer),this.recurrentRegularizer=v_(e.recurrentRegularizer),this.biasRegularizer=v_(e.biasRegularizer),this.kernelConstraint=_N(e.kernelConstraint),this.recurrentConstraint=_N(e.recurrentConstraint),this.biasConstraint=_N(e.biasConstraint),this.dropout=QN([1,eT([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=QN([1,eT([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=dC(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qg((()=>{if(2!==e.length)throw new QS(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=oR({ones:()=>Xb(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=oR({ones:()=>Xb(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=pT(null!=s?my(e,s):e,this.kernel.read()),null!=this.bias&&(a=gT(a,this.bias.read())),null!=i&&(n=my(n,i));let o=py(a,pT(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){return{...super.getConfig(),units:this.units,activation:p_(this.activation),useBias:this.useBias,kernelInitializer:LT(this.kernelInitializer),recurrentInitializer:LT(this.recurrentInitializer),biasInitializer:LT(this.biasInitializer),kernelRegularizer:b_(this.kernelRegularizer),recurrentRegularizer:b_(this.recurrentRegularizer),biasRegularizer:b_(this.biasRegularizer),activityRegularizer:b_(this.activityRegularizer),kernelConstraint:CN(this.kernelConstraint),recurrentConstraint:CN(this.recurrentConstraint),biasConstraint:CN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout}}};eR.className="SimpleRNNCell",Cg.registerClass(eR);var tR=class extends J_{constructor(e){e.cell=new eR(e),super(e)}call(e,t){return Qg((()=>{null!=this.cell.dropoutMask&&(ey(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ey(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};tR.className="SimpleRNN",Cg.registerClass(tR);var nR=class extends Q_{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new QS("GRUCell does not support reset_after parameter set to true.");this.units=e.units,AN(this.units,"units"),this.activation=f_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=f_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=WT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=WT(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=WT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=v_(e.kernelRegularizer),this.recurrentRegularizer=v_(e.recurrentRegularizer),this.biasRegularizer=v_(e.biasRegularizer),this.kernelConstraint=_N(e.kernelConstraint),this.recurrentConstraint=_N(e.recurrentConstraint),this.biasConstraint=_N(e.biasConstraint),this.dropout=QN([1,eT([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=QN([1,eT([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=dC(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Qg((()=>{if(2!==e.length)throw new QS(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=oR({ones:()=>Xb(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=oR({ones:()=>Xb(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=my(e,o[0]));let u=pT(e,this.kernel.read());this.useBias&&(u=gT(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=my(r,l[0]));let d=this.recurrentKernel.read(),[h,p]=Ux(d,[2*this.units,this.units],d.rank-1),c=pT(r,h),[f,m,g]=Ux(u,3,u.rank-1),[y,A]=Ux(c,2,c.rank-1);a=this.recurrentActivation.apply(py(f,y)),s=this.recurrentActivation.apply(py(m,A));let b=pT(my(s,r),p);i=this.activation.apply(py(g,b));let x=py(my(a,r),my(py(1,pb(a)),i));return[x,x]}))}getConfig(){return{...super.getConfig(),units:this.units,activation:p_(this.activation),recurrentActivation:p_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:LT(this.kernelInitializer),recurrentInitializer:LT(this.recurrentInitializer),biasInitializer:LT(this.biasInitializer),kernelRegularizer:b_(this.kernelRegularizer),recurrentRegularizer:b_(this.recurrentRegularizer),biasRegularizer:b_(this.biasRegularizer),activityRegularizer:b_(this.activityRegularizer),kernelConstraint:CN(this.kernelConstraint),recurrentConstraint:CN(this.recurrentConstraint),biasConstraint:CN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1}}};nR.className="GRUCell",Cg.registerClass(nR);var rR=class extends J_{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new nR(e),super(e)}call(e,t){return Qg((()=>{null!=this.cell.dropoutMask&&(ey(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ey(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};rR.className="GRU",Cg.registerClass(rR);var aR=class extends Q_{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,AN(this.units,"units"),this.activation=f_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=f_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=WT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=WT(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=WT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=v_(e.kernelRegularizer),this.recurrentRegularizer=v_(e.recurrentRegularizer),this.biasRegularizer=v_(e.biasRegularizer),this.kernelConstraint=_N(e.kernelConstraint),this.recurrentConstraint=_N(e.recurrentConstraint),this.biasConstraint=_N(e.biasConstraint),this.dropout=QN([1,eT([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=QN([1,eT([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=dC(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends vT{apply(t,n){let a=e.apply([r]),s=(new kT).apply([r]),i=e.apply([2*r]);return uT(uT(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Qg((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new QS(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=oR({ones:()=>Xb(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=oR({ones:()=>Xb(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,d=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=my(e,u[0]));let h=pT(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=my(r,d[0])),h=py(h,pT(r,this.recurrentKernel.read())),this.useBias&&(h=gT(h,this.bias.read()));let[p,c,f,m]=Ux(h,4,h.rank-1);s=this.recurrentActivation.apply(p),i=this.recurrentActivation.apply(c),o=py(my(i,a),my(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=my(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){return{...super.getConfig(),units:this.units,activation:p_(this.activation),recurrentActivation:p_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:LT(this.kernelInitializer),recurrentInitializer:LT(this.recurrentInitializer),biasInitializer:LT(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:b_(this.kernelRegularizer),recurrentRegularizer:b_(this.recurrentRegularizer),biasRegularizer:b_(this.biasRegularizer),activityRegularizer:b_(this.activityRegularizer),kernelConstraint:CN(this.kernelConstraint),recurrentConstraint:CN(this.recurrentConstraint),biasConstraint:CN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation}}};aR.className="LSTMCell",Cg.registerClass(aR);var sR=class extends J_{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new aR(e),super(e)}call(e,t){return Qg((()=>{null!=this.cell.dropoutMask&&(ey(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ey(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};sR.className="LSTM",Cg.registerClass(sR);var iR=class extends Q_{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Qg((()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;oC(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{HN(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){return{...super.getConfig(),cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))}}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=[];for(let e of t.cells)r.push(zC(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return fC(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}mC(t)}};function oR(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):yT(t(),n),o=()=>AT(i,t,r);return!a||a<=1?ty(o().clone()):Array(a).fill(void 0).map(o).map((e=>ty(e.clone())))}iR.className="StackedRNNCells",Cg.registerClass(iR);var lR=class extends J_{constructor(e){if(e.unroll)throw new eN("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new eN("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new gC({ndim:5})]}call(e,t){return Qg((()=>{if(null!=this.cell.dropoutMask&&(ey(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ey(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new QS("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Qg((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Db([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Qg((()=>{if(!this.stateful)throw new YS("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new QS("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Db(a))):this.states_=[Db(a)];else if(null==e)ey(this.states_),null!=this.keptStates&&(ey(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Db(a))):this.states_[0]=Db(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new QS(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ey(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!uc.arraysEqual(n.shape,r))throw new QS(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ty(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],d=E_(l,r[0],a,s[0],i[0]),h=E_(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,d,h]:[d,h,n]]}};lR.className="ConvRNN2D";var uR=class extends aR{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super({...e,units:t}),this.filters=t,AN(this.filters,"filters"),this.kernelSize=C_(n,2,"kernelSize"),this.kernelSize.forEach((e=>AN(e,"kernelSize"))),this.strides=C_(r||1,2,"strides"),this.strides.forEach((e=>AN(e,"strides"))),this.padding=a||"valid",VN(this.padding),this.dataFormat=s||"channelsLast",UN(this.dataFormat),this.dilationRate=C_(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>AN(e,"dilationRate")))}build(e){var t;e=dC(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new QS(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends vT{apply(e,t){return lT([n.apply([r]),Pb([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Qg((()=>{if(3!==e.length)throw new QS(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=oR({ones:()=>Xb(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?my(t[n],e):e,l=o(r,i,0),u=o(r,i,1),d=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=oR({ones:()=>Xb(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let p=this.recurrentDropoutMask,c=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3),[y,A,b,x]=Ux(this.kernel.read(),4,3),[v,w,k,I]=this.useBias?Ux(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,A,w,this.padding),d=this.inputConv(d,b,k,this.padding),h=this.inputConv(h,x,I,this.padding);let[S,N,T,C]=Ux(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,S),f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,C);let E=this.recurrentActivation.apply(py(l,c)),_=this.recurrentActivation.apply(py(u,f)),R=py(my(_,s),my(E,this.activation.apply(py(d,m)))),M=my(this.recurrentActivation.apply(py(h,g)),this.activation.apply(R));return[M,M,R]}))}getConfig(){let{units:e,...t}=super.getConfig();return{...t,filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides}}inputConv(e,t,n,r){let a=fA(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?gT(a,n,this.dataFormat):a}recurrentConv(e,t){return fA(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};uR.className="ConvLSTM2DCell",Cg.registerClass(uR);var dR=class extends lR{constructor(e){let t=new uR(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};dR.className="ConvLSTM2D",Cg.registerClass(dR);var hR=class extends vC{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Qg((()=>{this.invokeCallHook(e,t);let n=uC(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return AT((()=>yT(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};hR.className="Dropout",Cg.registerClass(hR);var pR=class extends hR{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};pR.className="SpatialDropout1D",Cg.registerClass(pR);var cR=class extends vC{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,AN(this.units,"units"),this.activation=f_(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=WT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=WT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=_N(e.kernelConstraint),this.biasConstraint=_N(e.biasConstraint),this.kernelRegularizer=v_(e.kernelRegularizer),this.biasRegularizer=v_(e.biasRegularizer),this.activityRegularizer=v_(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=dC(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=dC(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Qg((()=>{this.invokeCallHook(e,t);let n,r=uC(e),a=xN(this.activation.getClassName());return null!=a?n=pT(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=pT(r,this.kernel.read()),null!=this.bias&&(n=gT(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:p_(this.activation),useBias:this.useBias,kernelInitializer:LT(this.kernelInitializer),biasInitializer:LT(this.biasInitializer),kernelRegularizer:b_(this.kernelRegularizer),biasRegularizer:b_(this.biasRegularizer),activityRegularizer:b_(this.activityRegularizer),kernelConstraint:CN(this.kernelConstraint),biasConstraint:CN(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};cR.className="Dense",Cg.registerClass(cR);var fR=class extends vC{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=dC(e);for(let t of e.slice(1))if(null==t)throw new QS(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],JN(e,1)]}call(e,t){return Qg((()=>{this.invokeCallHook(e,t);let n=uC(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Gm(n,e)}return function(e){if(e.rank<=1)throw new QS(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],JN(e.shape,1)];return jy(e,t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};fR.className="Flatten",Cg.registerClass(fR);var mR=class extends vC{constructor(e){super(e),this.supportsMasking=!0,this.activation=f_(e.activation)}call(e,t){return Qg((()=>{this.invokeCallHook(e,t);let n=uC(e);return this.activation.apply(n)}))}getConfig(){let e={activation:p_(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};mR.className="Activation",Cg.registerClass(mR);var gR=class extends vC{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Qg((()=>function(e,t){return Qg((()=>{if(2!==e.shape.length)throw new QS(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return dT(rT(e,1),[1,t,1])}))}(e=uC(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};gR.className="RepeatVector",Cg.registerClass(gR);var yR=class extends vC{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null!==s)throw new QS("Can only specifiy one unknown dimension.");s=e}else a*=t}let i=JN(e);if(null!==s){if(0===a||i%a!=0)throw new QS(n);r[s]=i/a}else if(i!==a)throw new QS(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Qg((()=>{this.invokeCallHook(e,t);let n=uC(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return jy(n,a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};yR.className="Reshape",Cg.registerClass(yR);var AR=class extends vC{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=tT(1,e.dims.length+1);if(!uc.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new gC({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=dC(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Gm(uC(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};AR.className="Permute",Cg.registerClass(AR);var bR=class extends vC{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=uC(e);return vy(Kb(n,this.maskValue),-1)}call(e,t){return Qg((()=>{this.invokeCallHook(e,t);let n=uC(e),r=vy(Kb(n,this.maskValue),-1,!0);return my(n,vm(r,n.dtype))}))}};bR.className="Masking",Cg.registerClass(bR);var xR=class extends vC{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(iN(e.inputLength))}this.inputDim=e.inputDim,AN(this.inputDim,"inputDim"),this.outputDim=e.outputDim,AN(this.outputDim,"outputDim"),this.embeddingsInitializer=WT(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=v_(e.embeddingsRegularizer),this.activityRegularizer=v_(e.activityRegularizer),this.embeddingsConstraint=_N(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Qg((()=>this.maskZero?(e=uC(e),Kb(e,MA(e))):null))}computeOutputShape(e){if(e=dC(e),null==this.inputLength)return[...e,this.outputDim];let t=iN(this.inputLength);if(t.length!==e.length-1)throw new QS(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new QS(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Qg((()=>{this.invokeCallHook(e,t);let n=uC(e);"int32"!==n.dtype&&(n=nT(n,"int32"));let r=cT(this.embeddings.read(),jy(n,[n.size]));return jy(r,dC(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:LT(this.embeddingsInitializer),embeddingsRegularizer:b_(this.embeddingsRegularizer),activityRegularizer:b_(this.activityRegularizer),embeddingsConstraint:CN(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};xR.className="Embedding",Cg.registerClass(xR);var vR=class extends vC{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new eN}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new QS("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[dC(e)]),e.length<2)throw new QS(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=fN(t),t.length>1)throw new QS(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===fN(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Qg((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=eT(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=rT(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=jy(r,[a].concat(JN(e.slice(1))));i=Gm(i,[1,0]),i=jy(i,s),t.push(i),n=!0}else if(e>1){let a=tT(1,e).concat([0]);t.push(Gm(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=jy(Gm(jy(r,[-1,t]),[1,0]),n)}else if(a>1){let e=[a-1].concat(tT(0,a-1));r=Gm(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=fN(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Qg((()=>{if(null==t)return null;if(!Array.isArray(t))throw new QS("`mask` should be an Array");if(!Array.isArray(e))throw new QS("`inputs` should be an Array");if(t.length!==e.length)throw new QS(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:LA(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Cb(n,t[e]);return n}))}},wR=class extends vR{constructor(e){super(e)}mergeFunction(e){return Qg((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=py(t,e[n]);return t}))}};wR.className="Add",Cg.registerClass(wR);var kR=class extends vR{constructor(e){super(e)}mergeFunction(e){return Qg((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=my(t,e[n]);return t}))}};kR.className="Multiply",Cg.registerClass(kR);var IR=class extends vR{constructor(e){super(e)}mergeFunction(e){return Qg((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=py(t,e[n]);return my(1/e.length,t)}))}};IR.className="Average",Cg.registerClass(IR);var SR=class extends vR{constructor(e){super(e)}mergeFunction(e){return Qg((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ob(t,e[n]);return t}))}};SR.className="Maximum",Cg.registerClass(SR);var NR=class extends vR{constructor(e){super(e)}mergeFunction(e){return Qg((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Bb(t,e[n]);return t}))}};NR.className="Minimum",Cg.registerClass(NR);var TR=class extends vR{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new QS("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(uc.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new QS("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Qg((()=>lT(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new QS("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new QS("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new QS("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new QS(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Qg((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(vm(Xb(e[n]),"bool")):t[n].rank<e[n].rank?r.push(LA(t[n],-1)):r.push(t[n]);let a=Ky(r,this.axis);return xy(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function CR(e,t){for(;e<0;)e+=t;return e}TR.className="Concatenate",Cg.registerClass(TR);var ER=class extends vR{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){uc.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new eN("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new QS(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new QS(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>CR(t,e[n].shape.length))):[CR(this.axes,n.shape.length),CR(this.axes,r.shape.length)],this.normalize&&(n=DC(n,t[0]),r=DC(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new eN("batchDot is not implemented for tensors of 4D or higher rank yet");if(uc.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),uc.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new eN("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return Qg((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=jy(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=jy(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?yb(my(e,t),s[0]):yb(my(Gm(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Um(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=Hx(i,t)}return 1===i.shape.length&&(i=LA(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[CR(this.axes,e.length),CR(this.axes,t.length)],n}computeOutputShape(e){uc.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new eN("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};ER.className="Dot",Cg.registerClass(ER);var _R=class extends vC{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Qg((()=>{this.invokeCallHook(e,t);let n=uC(e);return AT((()=>py(hT(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};_R.className="GaussianNoise",Cg.registerClass(_R);var RR=class extends vC{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Qg((()=>{this.invokeCallHook(e,t);let n=uC(e);return this.rate>0&&this.rate<1?AT((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return my(n,hT(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};RR.className="GaussianDropout",Cg.registerClass(RR);var MR=class extends vC{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||uC(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Qg((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return AT((()=>{let t=uC(e),r=-1.7580993408473766,a=qA(fx(n),this.rate);a=nT(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=py(my(t,a),my(py(a,-1),r));return py(my(o,s),i)}),(()=>uC(e)),t.training||!1)}return e}))}};function $R(e,t,n,r,a){let s,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=nA(e,t,n,r,a,i);else if(3===e.rank)s=rA(e,t,n,r,a,i);else{if(4!==e.rank)throw new eN(`batchNormalization is not implemented for array of rank ${e.rank} yet`);s=aA(e,t,n,r,a,i)}return s}function FR(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Qg((()=>{let s=jb(e,r),i=s.mean,o=s.variance;return[$R(e,i,o,n,t,a),i,o]}))}function OR(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Qg((()=>{let s=jb(e,r),i=s.mean,o=s.variance,l=[];for(let t of tT(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=jy(i,l),d=jy(o,l),h=null==t?null:jy(t,l),p=null==n?null:jy(n,l);return[$R(e,u,d,p,h,a),i,o]}))}MR.className="AlphaDropout",Cg.registerClass(MR);var zR=class extends vC{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=WT(e.betaInitializer||"zeros"),this.gammaInitializer=WT(e.gammaInitializer||"ones"),this.movingMeanInitializer=WT(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=WT(e.movingVarianceInitializer||"ones"),this.betaConstraint=_N(e.betaConstraint),this.gammaConstraint=_N(e.gammaConstraint),this.betaRegularizer=v_(e.betaRegularizer),this.gammaRegularizer=v_(e.gammaRegularizer)}build(e){e=dC(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new QS(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new gC({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Qg((()=>{let n=null!=t.training&&t.training,r=uC(e),a=r.shape,s=a.length,i=tT(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=nN(1,s);l[o]=a[o];let u=i.slice();u.sort();let d=!uc.arraysEqual(u,tT(0,s).slice(0,s-1));if(!n)return(()=>{if(d){let e=jy(this.movingMean.read(),l),t=jy(this.movingVariance.read(),l),n=this.center?jy(this.beta.read(),l):null,a=this.scale?jy(this.gamma.read(),l):null;return $R(r,e,t,n,a,this.epsilon)}return $R(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[h,p,c]=function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return uc.arraysEqual(r.slice().sort(),tT(0,e.rank-1))?FR(e,t,n,r,a):OR(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Qg((()=>{let r=1-n,a=e.read(),s=my(gb(a,t),r);e.write(gb(a,s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,c,this.momentum)})(),h}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:LT(this.betaInitializer),gammaInitializer:LT(this.gammaInitializer),movingMeanInitializer:LT(this.movingMeanInitializer),movingVarianceInitializer:LT(this.movingVarianceInitializer),betaRegularizer:b_(this.betaRegularizer),gammaRegularizer:b_(this.gammaRegularizer),betaConstraint:CN(this.betaConstraint),gammaConstraint:CN(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};zR.className="BatchNormalization",Cg.registerClass(zR);var DR=class extends vC{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=WT(e.betaInitializer||"zeros"),this.gammaInitializer=WT(e.gammaInitializer||"ones"),this.betaRegularizer=v_(e.betaRegularizer),this.gammaRegularizer=v_(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=dC(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==fN(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){let n=uC(e),r=n.shape,a=r.length;return Qg((()=>{let{mean:e,variance:t}=jb(n,this.axis,!0),s=nN(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a?jy(e,s):e,o=i(this.gamma.read()),l=i(this.beta.read()),u=[],d=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),d.push(1)):(u.push(1),d.push(r[e]));return e=BA(e,u),t=BA(t,u),o=BA(o,d),l=BA(l,d),$R(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:LT(this.betaInitializer),gammaInitializer:LT(this.gammaInitializer),betaRegularizer:b_(this.betaRegularizer),gammaRegularizer:b_(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};DR.className="LayerNormalization",Cg.registerClass(DR);var PR=class extends vC{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new QS(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new QS(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new QS(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new gC({ndim:4})]}computeOutputShape(e){let t,n;return e=dC(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Qg((()=>function(e,t,n){return Qg((()=>{if(4!==e.rank)throw new QS(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new QS("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new QS(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],Yb(e,r)}))}(uC(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function LR(e,t,n,r,a,s){return Qg((()=>{UN(a),GN(s),VN(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=R_(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?Mb(e,t,n,o):Hy(e,t,n,o),"channelsFirst"===a&&(i=Gm(i,[0,3,1,2])),i}))}function WR(e,t,n,r,a,s){return Qg((()=>{UN(a),GN(s),VN(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=M_(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?$b(e,t,n,o):qy(e,t,n,o),"channelsFirst"===a&&(i=Gm(i,[0,4,1,2,3])),i}))}PR.className="ZeroPadding2D",Cg.registerClass(PR);var BR=class extends vC{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new QS(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(AN(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new QS(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}AN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,VN(this.padding),this.inputSpec=[new gC({ndim:3})]}computeOutputShape(e){let t=E_((e=dC(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Qg((()=>{this.invokeCallHook(e,t),e=rT(uC(e),2);let n=this.poolingFunction(uC(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Hx(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},UR=class extends BR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return UN(a),VN(r),LR(e,t,n,r,a,"max")}};UR.className="MaxPooling1D",Cg.registerClass(UR);var VR=class extends BR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return UN(a),VN(r),LR(e,t,n,r,a,"avg")}};VR.className="AveragePooling1D",Cg.registerClass(VR);var GR=class extends vC{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new QS(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];AN(this.poolSize,"poolSize"),AN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,UN(this.dataFormat),VN(this.padding),this.inputSpec=[new gC({ndim:4})]}computeOutputShape(e){e=dC(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=E_(t,this.poolSize[0],this.padding,this.strides[0]),n=E_(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Qg((()=>(this.invokeCallHook(e,t),this.poolingFunction(uC(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},jR=class extends GR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return UN(a),VN(r),LR(e,t,n,r,a,"max")}};jR.className="MaxPooling2D",Cg.registerClass(jR);var HR=class extends GR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return UN(a),VN(r),LR(e,t,n,r,a,"avg")}};HR.className="AveragePooling2D",Cg.registerClass(HR);var qR=class extends vC{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new QS(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];AN(this.poolSize,"poolSize"),AN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,UN(this.dataFormat),VN(this.padding),this.inputSpec=[new gC({ndim:5})]}computeOutputShape(e){e=dC(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=E_(t,this.poolSize[0],this.padding,this.strides[0]),n=E_(n,this.poolSize[1],this.padding,this.strides[1]),r=E_(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Qg((()=>(this.invokeCallHook(e,t),this.poolingFunction(uC(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},KR=class extends qR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return UN(a),VN(r),WR(e,t,n,r,a,"max")}};KR.className="MaxPooling3D",Cg.registerClass(KR);var XR=class extends qR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return UN(a),VN(r),WR(e,t,n,r,a,"avg")}};XR.className="AveragePooling3D",Cg.registerClass(XR);var ZR=class extends vC{constructor(e){super(e),this.inputSpec=[new gC({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new eN}},YR=class extends ZR{constructor(e){super(e||{})}call(e,t){return Qg((()=>{let t=uC(e);return zb(t,1)}))}};YR.className="GlobalAveragePooling1D",Cg.registerClass(YR);var JR=class extends ZR{constructor(e){super(e||{})}call(e,t){return Qg((()=>{let t=uC(e);return mb(t,1)}))}};JR.className="GlobalMaxPooling1D",Cg.registerClass(JR);var QR=class extends vC{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,UN(this.dataFormat),this.inputSpec=[new gC({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new eN}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},eM=class extends QR{call(e,t){return Qg((()=>{let t=uC(e);return"channelsLast"===this.dataFormat?zb(t,[1,2]):zb(t,[2,3])}))}};eM.className="GlobalAveragePooling2D",Cg.registerClass(eM);var tM=class extends QR{call(e,t){return Qg((()=>{let t=uC(e);return"channelsLast"===this.dataFormat?mb(t,[1,2]):mb(t,[2,3])}))}};tM.className="GlobalMaxPooling2D",Cg.registerClass(tM);var nM=class extends vC{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=zC(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},rM=class extends nM{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=dC(e)).length<3)throw new QS(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=dC(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Qg((()=>Z_(((e,n)=>[uC(this.layer.call(e,t)),[]]),e=uC(e),[],!1,null,null,!1,!0)[1]))}};rM.className="TimeDistributed",Cg.registerClass(rM);var aM=class extends nM{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=zC(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=zC(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){gN(WN,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new eN("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):sN(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=X_(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new QS("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new gC({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new eN("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof yC;for(let e of s)if(e instanceof yC!==o)throw new QS("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Qg((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=xx(r,1)),"concat"===this.mergeMode?s=lT([n,r]):"sum"===this.mergeMode?s=py(n,r):"ave"===this.mergeMode?s=my(.5,py(n,r)):"mul"===this.mergeMode?s=my(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){HN(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),HN(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=zC(t.layer);if(delete t.layer,null!=t.numConstants)throw new eN("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};function sM(e){return new kC(e)}function iM(e){return new S_(e)}function oM(e){return new w_(e)}function lM(e){return new k_(e)}function uM(e){return new I_(e)}function dM(e){return new T_(e)}function hM(e){return new N_(e)}function pM(e){return new j_(e)}function cM(e){return new D_(e)}function fM(e){return new W_(e)}function mM(e){return new L_(e)}function gM(e){return new B_(e)}function yM(e){return new V_(e)}function AM(e){return new H_(e)}function bM(e){return new q_(e)}function xM(e){return new K_(e)}function vM(e){return new mR(e)}function wM(e){return new cR(e)}function kM(e){return new hR(e)}function IM(e){return new pR(e)}function SM(e){return new fR(e)}function NM(e){return new gR(e)}function TM(e){return new yR(e)}function CM(e){return new AR(e)}function EM(e){return new xR(e)}function _M(e){return new wR(e)}function RM(e){return new IR(e)}function MM(e){return new TR(e)}function $M(e){return new SR(e)}function FM(e){return new NR(e)}function OM(e){return new kR(e)}function zM(e){return new ER(e)}function DM(e){return new zR(e)}function PM(e){return new DR(e)}function LM(e){return new PR(e)}function WM(e){return new VR(e)}function BM(e){return WM(e)}function UM(e){return WM(e)}function VM(e){return new HR(e)}function GM(e){return VM(e)}function jM(e){return VM(e)}function HM(e){return new XR(e)}function qM(e){return HM(e)}function KM(e){return HM(e)}function XM(e){return new YR(e)}function ZM(e){return new eM(e)}function YM(e){return new JR(e)}function JM(e){return new tM(e)}function QM(e){return new UR(e)}function e$(e){return new jR(e)}function t$(e){return new KR(e)}function n$(e){return new rR(e)}function r$(e){return new nR(e)}function a$(e){return new sR(e)}function s$(e){return new aR(e)}function i$(e){return new tR(e)}function o$(e){return new eR(e)}function l$(e){return new dR(e)}function u$(e){return new uR(e)}function d$(e){return new J_(e)}function h$(e){return new iR(e)}function p$(e){return new aM(e)}function c$(e){return new rM(e)}aM.className="Bidirectional",Cg.registerClass(aM);var f$=YM,m$=JM,g$=QM,y$=e$;function A$(e){return new _R(e)}function b$(e){return new RR(e)}function x$(e){return new MR(e)}function v$(e){return new bR(e)}var w$={};function k$(e,t){return qC(e,t)}function I$(e,t){return YC(e,t)}function S$(e,t){return JC(e,t)}function N$(e,t){return KC(e,t)}function T$(e,t){return QC(e,t)}function C$(e,t){return ZC(e,t)}function E$(e,t){return function(e,t){return Qg((()=>{let n=XC(e,t),r=function(e,t){return Qg((()=>vm(yb(Cb(_A(e,1),_A(t,0))),"float32")))}(e,t),a=py(n,r);return vm(RA(HA(a,0),fy(n,a),0),"float32")}))}(e,t)}function _$(e,t){return GC(e,t)}function R$(e,t){return LC(e,t)}function M$(e,t){return WC(e,t)}function $$(e,t){return WC(e,t)}function F$(e,t){return WC(e,t)}function O$(e,t){return PC(e,t)}function z$(e,t){return PC(e,t)}function D$(e,t){return PC(e,t)}gl(w$,{MAPE:()=>$$,MSE:()=>z$,binaryAccuracy:()=>k$,binaryCrossentropy:()=>I$,categoricalAccuracy:()=>N$,categoricalCrossentropy:()=>T$,cosineProximity:()=>_$,mape:()=>F$,meanAbsoluteError:()=>R$,meanAbsolutePercentageError:()=>M$,meanSquaredError:()=>O$,mse:()=>D$,precision:()=>C$,recall:()=>E$,sparseCategoricalAccuracy:()=>S$});var P$={};gl(P$,{modelFromJSON:()=>VE});var L$={};function W$(e){return new y_(e)}function B$(e){return function(e){return m_(e),new y_({l1:null!=e?e.l1:null,l2:0})}(e)}function U$(e){return function(e){return m_(e),new y_({l2:null!=e?e.l2:null,l1:0})}(e)}gl(L$,{l1:()=>B$,l1l2:()=>W$,l2:()=>U$});var V$=class extends TC{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof BE))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function G$(e,t){return e<t}function j$(e,t){return e>t}var H$=class extends V${constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new eN("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=G$:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=j$:this.monitorFunc=G$,this.monitorFunc===G$&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===G$?1/0:-1/0}async onEpochEnd(e,t){await SC(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}},q$={earlyStopping:function(e){return new H$(e)}};Lu().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}));var K$,X$=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(X$||{});(e=>{let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(K$||(K$={}));var Z$={};function Y$(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Z$[e]=n}function J$(e){return Z$[e]}function Q$(e){delete Z$[e]}function eF(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return tF(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>tF(e,n,r,a)));let o=tF(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:uc.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function tF(e,t,n,r){let[a,s]=aF(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[rF(a,e)]));return void 0!==i?t[rF(a,i)][s]:void 0}function nF(e,t){let[n,r,a]=aF(e);return[rF(n,t&&t.currentContextId),r,a]}function rF(e,t){return t?`${e}-${t}`:e}function aF(e){let t=e.split(":");if(1===t.length)return[e,0,void 0];let n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function sF(e,t,n){let r=eF("pad",e,t,n);if("explicit"===r){r=eF("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function iF(e){return e.kept?e:wm(e)}var oF={};gl(oF,{json:()=>lF});var lF=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],uF={};gl(uF,{json:()=>dF});var dF=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hF={};gl(hF,{json:()=>pF});var pF=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],cF={};gl(cF,{json:()=>fF});var fF=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],mF={};gl(mF,{json:()=>gF});var gF=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],yF={};gl(yF,{json:()=>AF});var AF=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bF={};gl(bF,{json:()=>xF});var xF=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],vF={};gl(vF,{json:()=>wF});var wF=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],kF={};gl(kF,{json:()=>IF});var IF=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],SF={};gl(SF,{json:()=>NF});var NF=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],TF={};gl(TF,{json:()=>CF});var CF=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],EF={};gl(EF,{json:()=>_F});var _F=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],RF={};gl(RF,{json:()=>MF});var MF=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],$F={};gl($F,{json:()=>FF});var FF=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],OF={};gl(OF,{json:()=>zF});var zF=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],DF={};gl(DF,{json:()=>PF});var PF=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],LF={};gl(LF,{json:()=>WF});var WF=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],BF={};gl(BF,{json:()=>UF});var UF=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],VF={};gl(VF,{json:()=>GF});var GF=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],jF=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[oF,uF,hF,cF,mF,yF,bF,vF,kF,SF,TF,EF,RF,$F,OF,DF,LF,BF,VF].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},d={};null!=t&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[r,,a]=nF(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(d).length?h.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(d).forEach((e=>{let[t]=nF(e),n=i[t];null!=n&&(n.signatureKey=d[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=nF(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=J$(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=qF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=qF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=rO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=rO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=XF(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=XF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=nO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=nO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=KF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=KF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=sO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=sO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=tO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=tO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=aO(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=aO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=JF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=JF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=QF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=QF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=YF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=YF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=nF(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ZF(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach(((e,n)=>{let[a,,s]=nF(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=nF(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function HF(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Lu().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function qF(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=e[t];return null!=a?HF(a.s,r):n}function KF(e,t,n){let r=e[t];return r?r.b:n}function XF(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function ZF(e){switch("string"==typeof e&&(e=X$[e]),e){case 1:case 19:case 2:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 7:return"string";default:return null}}function YF(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function JF(e,t,n){let r=e[t];return r&&r.type?ZF(r.type):n}function QF(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>ZF(e))):n}function eO(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function tO(e,t,n){let r=e[t];return r&&r.shape?eO(r.shape):n}function nO(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function rO(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>HF(e,r))):n}function aO(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>eO(e))):n}function sO(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}function iO(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!=typeof e&&"number"!=typeof t){uc.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];uc.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function oO(e){return!("number"==typeof e||e.some((e=>e<0)))}function lO(e,t,n){let r=uO(e,n),a=!oO(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=uO(e.shape,r)})),!oO(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function uO(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var dO=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);iO(t,e.shape,"TensorList shape mismatch: "),ty(e)})),this.idTensor=Tx(0),this.maxNumElements=r,ty(this.idTensor)}get id(){return this.idTensor.id}copy(){return new dO([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);iO(e,this.elementShape,"TensorList shape mismatch: ");let r=lO(this.elementShape,this.tensors,e);return Qg((()=>{let e=this.tensors.map((e=>jy(e,r)));return qx(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=lO(this.elementShape,this.tensors,e),r=this.tensors.pop();return iO(r.shape,e,"TensorList shape mismatch: "),jy(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(iO(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ty(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new dO([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);iO(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=lO(this.elementShape,this.tensors,t);return jy(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);iO(this.elementShape,t.shape,"TensorList shape mismatch: "),ty(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);iO(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=lO(this.elementShape,this.tensors,n);return 0===e.length?Cf([],[0].concat(r)):Qg((()=>{let t=e.map((e=>jy(this.tensors[e],r)));return qx(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);iO(this.elementShape,t,"TensorList shape mismatch: ");let n=lO(this.elementShape,this.tensors,t);return 0===this.size()?Cf([],[0].concat(n)):Qg((()=>{let e=this.tensors.map((e=>jy(e,n)));return Ky(e,0)}))}},hO=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=eF("thenBranch",e,t,n),a=eF("elseBranch",e,t,n),s=eF("cond",e,t,n),i=eF("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=eF("body",e,t,n),a=eF("cond",e,t,n),s=eF("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[iF(eF("pred",e,t,n))];case"Switch":{let r=eF("pred",e,t,n),a=eF("data",e,t,n);return a.kept||(a=iF(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==tF(e,t,n)));return r?[iF(tF(r,t,n))]:void 0}case"Enter":{let r=eF("frameName",e,t,n),a=eF("tensor",e,t,n);return n.enterFrame(r),[iF(a)]}case"Exit":{let r=eF("tensor",e,t,n);return n.exitFrame(),[iF(r)]}case"NextIteration":{let r=eF("tensor",e,t,n);return n.nextIteration(),[iF(r)]}case"TensorArrayV3":{let r=eF("size",e,t,n),a=eF("dtype",e,t,n),s=eF("elementShape",e,t,n),i=eF("dynamicSize",e,t,n),o=eF("clearAfterRead",e,t,n),l=eF("identicalElementShapes",e,t,n),u=eF("name",e,t,n),d=new class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Tx(0),ty(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),iO(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ty(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Cf([],[0].concat(this.elementShape));let n=this.readMany(e);return iO(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),qx(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Cf([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return iO(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ky(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,iv(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];Qg((()=>{t=jy(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=jy(Zy(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}(u,a,r,s,l,i,o);return n.addTensorArray(d),[d.idTensor,Tx(1)]}case"TensorArrayWriteV3":{let r=eF("tensorArrayId",e,t,n),a=eF("index",e,t,n),s=eF("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=eF("tensorArrayId",e,t,n),a=eF("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=eF("tensorArrayId",e,t,n),a=eF("indices",e,t,n),s=eF("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=eF("tensorArrayId",e,t,n),a=eF("indices",e,t,n),s=eF("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=eF("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=eF("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=eF("tensorArrayId",e,t,n),a=eF("tensor",e,t,n),s=eF("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=eF("tensorArrayId",e,t,n);return[Tx(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=eF("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=eF("tensorListId",e,t,n),a=eF("index",e,t,n),s=eF("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=eF("tensorListId",e,t,n),a=eF("index",e,t,n),s=eF("elementShape",e,t,n),i=eF("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=eF("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new dO([],n,e.dtype,r),i=iv(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(eF("tensor",e,t,n),r,eF("elementShape",e,t,n),eF("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=eF("elementShape",e,t,n),s=eF("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=function(e,t,n){return new dO([],e,t,n)}(a,s,eF(r,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=eF("tensorListId",e,t,n),a=eF("indices",e,t,n),s=eF("elementShape",e,t,n),i=eF("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=eF("tensorListId",e,t,n),a=eF("elementShape",e,t,n),s=eF("elementDType",e,t,n),i=eF("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);iO(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=iv(e);return new dO(a,t,r)}(eF("tensor",e,t,n),eF("elementShape",e,t,n),eF("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{let r=eF("tensorListId",e,t,n),a=n.getTensorList(r.id),s=eF("dtype",e,t,n),i=eF("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=eF("tensorListId",e,t,n),a=eF("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=eF("tensorListId",e,t,n),a=eF("elementShape",e,t,n),s=eF("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=eF("tensor",e,t,n),a=eF("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=uO(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Qg((()=>{let n=[];e=jy(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=jy(Zy(e,o,l),s)}return e.dispose(),n})),l=new dO([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,eF("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let r=eF("tensorListId",e,t,n);return[Tx(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=eF("tensorListId",e,t,n),a=eF("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function pO(e,t,n){let[r,a]=eF("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=eF("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=eF("strides",e,t,n),h=sF(e,t,n),p=eF("dataFormat",e,t,n).toUpperCase(),c=eF("dilations",e,t,n),[f,m]=eF("args",e,t,n);return i&&(m=f,f=void 0),{stride:d,pad:h,dataFormat:p,dilations:c,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:eF("leakyreluAlpha",e,t,n)}}function cO(e,t,n){return{boxes:eF("boxes",e,t,n),scores:eF("scores",e,t,n),maxOutputSize:eF("maxOutputSize",e,t,n),iouThreshold:eF("iouThreshold",e,t,n),scoreThreshold:eF("scoreThreshold",e,t,n),softNmsSigma:eF("softNmsSigma",e,t,n)}}var fO=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=eF("keyDType",e,t,n),s=eF("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Tx(0),this.tensorMap=new Map,ty(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Tx(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Qg((()=>{let e=iv(t),r=n.length,a=e.length;uc.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];ty(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return Qg((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return qx(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let a=eF("tableHandle",e,t,n,r),s=eF("keys",e,t,n),i=eF("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=eF("tableHandle",e,t,n,r),s=eF("keys",e,t,n),i=eF("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=eF("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function mO(e,t,n,r){let a=((e,t,n)=>{switch(e.category){case"arithmetic":return Qg((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[py(eF("a",e,t,n),eF("b",e,t,n))];case"AddN":return[by(eF("tensors",e,t,n))];case"FloorMod":case"Mod":return[Vb(eF("a",e,t,n),eF("b",e,t,n))];case"Mul":return[my(eF("a",e,t,n),eF("b",e,t,n))];case"RealDiv":case"Div":return[fy(eF("a",e,t,n),eF("b",e,t,n))];case"DivNoNan":return[$A(eF("a",e,t,n),eF("b",e,t,n))];case"FloorDiv":return[cy(eF("a",e,t,n),eF("b",e,t,n))];case"Sub":return[gb(eF("a",e,t,n),eF("b",e,t,n))];case"Minimum":return[Bb(eF("a",e,t,n),eF("b",e,t,n))];case"Maximum":return[Ob(eF("a",e,t,n),eF("b",e,t,n))];case"Pow":return[ax(eF("a",e,t,n),eF("b",e,t,n))];case"SquaredDifference":return[jx(eF("a",e,t,n),eF("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Qg((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[gy(eF("x",e,t,n))];case"Acos":return[yy(eF("x",e,t,n))];case"Acosh":return[Ay(eF("x",e,t,n))];case"Asin":return[Iy(eF("x",e,t,n))];case"Asinh":return[Sy(eF("x",e,t,n))];case"Atan":return[Ny(eF("x",e,t,n))];case"Atan2":return[Ty(eF("x",e,t,n),eF("y",e,t,n))];case"Atanh":return[Cy(eF("x",e,t,n))];case"Ceil":return[lA(eF("x",e,t,n))];case"Complex":return[Nf(eF("real",e,t,n),eF("imag",e,t,n))];case"Cos":return[vA(eF("x",e,t,n))];case"Cosh":return[wA(eF("x",e,t,n))];case"Elu":return[zA(eF("x",e,t,n))];case"Erf":return[DA(eF("x",e,t,n))];case"Exp":return[PA(eF("x",e,t,n))];case"Expm1":return[WA(eF("x",e,t,n))];case"Floor":return[GA(eF("x",e,t,n))];case"Log":return[rb(eF("x",e,t,n))];case"Log1p":return[ab(eF("x",e,t,n))];case"Imag":return[KA(eF("x",e,t,n))];case"Neg":return[pb(eF("x",e,t,n))];case"Reciprocal":return[yx(eF("x",e,t,n))];case"Real":return[gx(eF("x",e,t,n))];case"Relu":return[Ax(eF("x",e,t,n))];case"Round":return[Sx(eF("x",e,t,n))];case"Selu":return[Cx(eF("x",e,t,n))];case"Sigmoid":return[Xy(eF("x",e,t,n))];case"Sin":return[Mx(eF("x",e,t,n))];case"Sign":return[Rx(eF("x",e,t,n))];case"Sinh":return[$x(eF("x",e,t,n))];case"Softplus":return[cb(eF("x",e,t,n))];case"Sqrt":return[Gx(eF("x",e,t,n))];case"Square":return[Gb(eF("x",e,t,n))];case"Tanh":return[Yy(eF("x",e,t,n))];case"Tan":return[Zx(eF("x",e,t,n))];case"ClipByValue":return[uA(eF("x",e,t,n),eF("clipValueMin",e,t,n),eF("clipValueMax",e,t,n))];case"Relu6":return[bx(eF("x",e,t,n))];case"Rsqrt":return[Nx(tF(e.inputNames[0],t,n))];case"Prod":return[ix(eF("x",e,t,n),eF("axes",e,t,n))];case"LeakyRelu":return[JA(eF("x",e,t,n),eF("alpha",e,t,n))];case"Prelu":return[sx(eF("x",e,t,n),eF("alpha",e,t,n))];case"IsNan":return[YA(tF(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return hO(e,t,n);case"convolution":return Qg((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{let r=eF("stride",e,t,n),a=eF("pad",e,t,n),s=eF("dataFormat",e,t,n).toUpperCase(),i=eF("dilation",e,t,n);return[mA(eF("x",e,t,n),eF("filter",e,t,n),r,a,s,i)]}case"Conv2D":{let r=eF("strides",e,t,n),a=sF(e,t,n),s=eF("dataFormat",e,t,n).toUpperCase(),i=eF("dilations",e,t,n);return[fA(eF("x",e,t,n),eF("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:d}=pO(e,t,n);return[wv.conv2d({x:eF("x",e,t,n),filter:eF("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:d}=pO(e,t,n);return[wv.depthwiseConv2d({x:eF("x",e,t,n),filter:eF("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=eF("outputShape",e,t,n),a=eF("strides",e,t,n),s=sF(e,t,n);return[yA(eF("x",e,t,n),eF("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=eF("strides",e,t,n),a=sF(e,t,n),s=eF("dilations",e,t,n),i=eF("dataFormat",e,t,n).toUpperCase();return[TA(eF("input",e,t,n),eF("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{let r=eF("strides",e,t,n),a=eF("pad",e,t,n),s=eF("dataFormat",e,t,n).toUpperCase(),i=eF("dilations",e,t,n);return[AA(eF("x",e,t,n),eF("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{let r=eF("strides",e,t,n),a=eF("pad",e,t,n),s=eF("kernelSize",e,t,n);return[Hy(eF("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=eF("strides",e,t,n),a=eF("pad",e,t,n),s=eF("kernelSize",e,t,n);return[Mb(eF("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=eF("strides",e,t,n),a=eF("pad",e,t,n),s=eF("kernelSize",e,t,n),i=eF("includeBatchInIndex",e,t,n),{result:o,indexes:l}=Fb(eF("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,l]}case"AvgPool3D":{let r=eF("strides",e,t,n),a=eF("pad",e,t,n),s=eF("kernelSize",e,t,n);return[qy(eF("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=eF("strides",e,t,n),a=eF("pad",e,t,n),s=eF("kernelSize",e,t,n);return[$b(eF("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=eF("strides",e,t,n),a=eF("pad",e,t,n),s=eF("dilations",e,t,n),i=r[1],o=r[2],l=s[1],u=s[2];return[EA(eF("x",e,t,n),eF("filter",e,t,n),[i,o],a,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Qg((()=>((e,t,n)=>{switch(e.op){case"Fill":{let r=eF("shape",e,t,n),a=eF("dtype",e,t,n);return[VA(r,eF("value",e,t,n),a)]}case"LinSpace":return[tb(eF("start",e,t,n),eF("stop",e,t,n),eF("num",e,t,n))];case"Multinomial":{let r=eF("logits",e,t,n),a=eF("numSamples",e,t,n),s=eF("seed",e,t,n);return[qb(r,a,s)]}case"OneHot":{let r=eF("indices",e,t,n),a=eF("depth",e,t,n),s=eF("onValue",e,t,n),i=eF("offValue",e,t,n);return[Vm(r,a,s,i)]}case"Ones":return[Pb(eF("shape",e,t,n),eF("dtype",e,t,n))];case"OnesLike":return[Xb(eF("x",e,t,n))];case"RandomUniform":return[fx(eF("shape",e,t,n),eF("minval",e,t,n),eF("maxval",e,t,n),eF("dtype",e,t,n))];case"Range":return[mx(eF("start",e,t,n),eF("stop",e,t,n),eF("step",e,t,n),eF("dtype",e,t,n))];case"TruncatedNormal":{let r=eF("shape",e,t,n),a=eF("mean",e,t,n),s=eF("stdDev",e,t,n),i=eF("seed",e,t,n);return[rv(r,a,s,eF("dtype",e,t,n),i)]}case"Zeros":return[Db(eF("shape",e,t,n),eF("dtype",e,t,n))];case"ZerosLike":return[MA(eF("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=cO(e,t,n),u=await _w.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=cO(e,t,n),l=eF("padToMaxOutputSize",e,t,n),u=await _w.nonMaxSuppressionPaddedAsync(r,a,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=cO(e,t,n);return[await _w.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{let r=vm(eF("condition",e,t,n),"bool"),a=[await uv(r)];return r.dispose(),a}case"ListDiff":return _x(eF("x",e,t,n),eF("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Qg((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{let r=eF("x",e,t,n),a=eF("k",e,t,n),s=eF("sorted",e,t,n),i=nv(r,a,s);return[i.values,i.indices]}case"Unique":{let r=eF("x",e,t,n),a=av(r);return[a.values,a.indices]}case"UniqueV2":{let r=eF("x",e,t,n),a=eF("axis",e,t,n),s=av(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Qg((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{let r=eF("images",e,t,n),a=eF("size",e,t,n),s=eF("alignCorners",e,t,n),i=eF("halfPixelCenters",e,t,n);return[_w.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{let r=eF("images",e,t,n),a=eF("size",e,t,n),s=eF("alignCorners",e,t,n),i=eF("halfPixelCenters",e,t,n);return[_w.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{let r=eF("image",e,t,n),a=eF("boxes",e,t,n),s=eF("boxInd",e,t,n),i=eF("cropSize",e,t,n),o=eF("method",e,t,n),l=eF("extrapolationValue",e,t,n);return[_w.cropAndResize(r,a,s,i,o,l)]}case"ImageProjectiveTransformV3":{let r=eF("images",e,t,n),a=eF("transforms",e,t,n),s=eF("outputShape",e,t,n),i=eF("fillValue",e,t,n),o=eF("interpolation",e,t,n),l=eF("fillMode",e,t,n);return[_w.transform(r,a,o.toLowerCase(),l.toLowerCase(),i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Qg((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=eF("default",e,t,n);return[tF(e.name,t,n)||r];case"Placeholder":return[tF(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[iF(eF("x",e,t,n))];case"IdentityN":return eF("x",e,t,n).map((e=>iF(e)));case"Shape":return[Yx(eF("x",e,t,n).shape,"int32")];case"ShapeN":return eF("x",e,t,n).map((e=>Yx(e.shape)));case"Size":return[Tx(eF("x",e,t,n).size,"int32")];case"Rank":return[Tx(eF("x",e,t,n).rank,"int32")];case"NoOp":return[Tx(1)];case"Print":let a=eF("x",e,t,n),s=eF("data",e,t,n),i=eF("message",e,t,n),o=eF("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Qg((()=>((e,t,n)=>{switch(e.op){case"Equal":return[_A(eF("a",e,t,n),eF("b",e,t,n))];case"NotEqual":return[Kb(eF("a",e,t,n),eF("b",e,t,n))];case"Greater":return[HA(eF("a",e,t,n),eF("b",e,t,n))];case"GreaterEqual":return[qA(eF("a",e,t,n),eF("b",e,t,n))];case"Less":return[QA(eF("a",e,t,n),eF("b",e,t,n))];case"LessEqual":return[eb(eF("a",e,t,n),eF("b",e,t,n))];case"LogicalAnd":return[Cb(eF("a",e,t,n),eF("b",e,t,n))];case"LogicalNot":return[Eb(eF("a",e,t,n))];case"LogicalOr":return[_b(eF("a",e,t,n),eF("b",e,t,n))];case"Select":case"SelectV2":return[RA(eF("condition",e,t,n),eF("a",e,t,n),eF("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Qg((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Um(eF("a",e,t,n),eF("b",e,t,n),eF("transposeA",e,t,n),eF("transposeB",e,t,n))];case"Einsum":return[OA(eF("equation",e,t,n),...eF("tensors",e,t,n))];case"Transpose":return[Gm(eF("x",e,t,n),eF("perm",e,t,n))];case"_FusedMatMul":let[r,a]=eF("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=eF("numArgs",e,t,n),l=eF("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,d]=eF("args",e,t,n);return[wv.matMul({a:eF("a",e,t,n),b:eF("b",e,t,n),transposeA:eF("transposeA",e,t,n),transposeB:eF("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:d,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Qg((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[tA(eF("x",e,t,n),eF("mean",e,t,n),eF("variance",e,t,n),eF("offset",e,t,n),eF("scale",e,t,n),eF("epsilon",e,t,n))];case"LRN":return[nb(eF("x",e,t,n),eF("radius",e,t,n),eF("bias",e,t,n),eF("alpha",e,t,n),eF("beta",e,t,n))];case"Softmax":return[Px(eF("x",e,t,n))];case"LogSoftmax":return[Ab(eF("x",e,t,n))];case"SparseToDense":return[gv(eF("sparseIndices",e,t,n),eF("outputShape",e,t,n),eF("sparseValues",e,t,n),eF("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Qg((()=>((e,t,n)=>{switch(e.op){case"Max":{let r=eF("axis",e,t,n),a=eF("keepDims",e,t,n);return[mb(eF("x",e,t,n),r,a)]}case"Mean":{let r=eF("axis",e,t,n),a=eF("keepDims",e,t,n);return[zb(eF("x",e,t,n),r,a)]}case"Min":{let r=eF("axis",e,t,n),a=eF("keepDims",e,t,n);return[Wb(eF("x",e,t,n),r,a)]}case"Sum":{let r=eF("axis",e,t,n),a=eF("keepDims",e,t,n);return[yb(eF("x",e,t,n),r,a)]}case"All":{let r=eF("axis",e,t,n),a=eF("keepDims",e,t,n);return[xy(eF("x",e,t,n),r,a)]}case"Any":{let r=eF("axis",e,t,n),a=eF("keepDims",e,t,n);return[vy(eF("x",e,t,n),r,a)]}case"ArgMax":{let r=eF("axis",e,t,n);return[wy(eF("x",e,t,n),r)]}case"ArgMin":{let r=eF("axis",e,t,n);return[ky(eF("x",e,t,n),r)]}case"Prod":{let r=eF("axis",e,t,n),a=eF("keepDims",e,t,n);return[ix(eF("x",e,t,n),r,a)]}case"Cumprod":{let r=eF("axis",e,t,n),a=eF("exclusive",e,t,n),s=eF("reverse",e,t,n);return[kA(eF("x",e,t,n),r,a,s)]}case"Cumsum":{let r=eF("axis",e,t,n),a=eF("exclusive",e,t,n),s=eF("reverse",e,t,n);return[IA(eF("x",e,t,n),r,a,s)]}case"Bincount":let r=eF("x",e,t,n),a=eF("weights",e,t,n),s=eF("size",e,t,n);return[sA(r,a,s)];case"DenseBincount":{let r=eF("x",e,t,n),a=eF("weights",e,t,n),s=eF("size",e,t,n),i=eF("binaryOutput",e,t,n);return[SA(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Qg((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=eF("n",e,t,n),a=eF("axis",e,t,n),s=eF("tensors",e,t,n);return s=s.slice(0,r),[Ky(s,a)]}case"Gather":{let r=eF("x",e,t,n),a=eF("indices",e,t,n);return[jA(r,vm(a,"int32"),0)]}case"GatherV2":{let r=eF("axis",e,t,n),a=eF("batchDims",e,t,n),s=eF("x",e,t,n),i=eF("indices",e,t,n);return[jA(s,vm(i,"int32"),r,a)]}case"Reverse":{let r=eF("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);let s=eF("x",e,t,n);return[xx(s,a)]}case"ReverseV2":{let r=eF("axis",e,t,n),a=eF("x",e,t,n);return[xx(a,r)]}case"Slice":{let r=eF("begin",e,t,n),a=eF("size",e,t,n);return[Zy(eF("x",e,t,n),r,a)]}case"StridedSlice":{let r=eF("begin",e,t,n),a=eF("end",e,t,n),s=eF("strides",e,t,n),i=eF("beginMask",e,t,n),o=eF("endMask",e,t,n),l=eF("ellipsisMask",e,t,n),u=eF("newAxisMask",e,t,n),d=eF("shrinkAxisMask",e,t,n),h=eF("x",e,t,n);return[Xx(h,r,a,s,i,o,l,u,d)]}case"Pack":return Qg((()=>{let r=eF("axis",e,t,n),a=eF("tensors",e,t,n),s=a[0].shape,i=Hx(a[0]).shape,o=a.map((e=>{let t=uc.arraysEqual(e.shape,s);if(!t&&!uc.arraysEqual(Hx(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:jy(e,s)}));return[qx(o,r)]}));case"Unpack":{let r=eF("axis",e,t,n),a=eF("tensor",e,t,n);return iv(a,r)}case"Tile":{let r=eF("reps",e,t,n);return[BA(eF("x",e,t,n),r)]}case"Split":case"SplitV":{let r=eF("axis",e,t,n),a=eF("numOrSizeSplits",e,t,n),s=eF("x",e,t,n);return Ux(s,a,r)}case"ScatterNd":{let r=eF("indices",e,t,n),a=eF("values",e,t,n),s=eF("shape",e,t,n);return[fv(r,a,s)]}case"GatherNd":{let r=eF("x",e,t,n),a=eF("indices",e,t,n);return[yv(r,a)]}case"SparseToDense":{let r=eF("sparseIndices",e,t,n),a=eF("outputShape",e,t,n),s=eF("sparseValues",e,t,n),i=eF("defaultValue",e,t,n);return[gv(r,s,a,s.dtype===i.dtype?i:vm(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return Qg((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=$w.sparseFillEmptyRows(eF("indices",e,t,n),eF("values",e,t,n),eF("denseShape",e,t,n),eF("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{let{outputIndices:r,outputShape:a}=$w.sparseReshape(eF("inputIndices",e,t,n),eF("inputShape",e,t,n),eF("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[$w.sparseSegmentMean(eF("data",e,t,n),eF("indices",e,t,n),eF("segmentIds",e,t,n))];case"SparseSegmentSum":return[$w.sparseSegmentSum(eF("data",e,t,n),eF("indices",e,t,n),eF("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Qg((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Lx(eF("x",e,t,n))];case"IFFT":return[Wx(eF("x",e,t,n))];case"RFFT":return[Vx(eF("x",e,t,n))];case"IRFFT":return[Bx(eF("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return Qg((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:a}=Fw.stringNGrams(eF("data",e,t,n),eF("dataSplits",e,t,n),eF("separator",e,t,n),eF("nGramWidths",e,t,n),eF("leftPad",e,t,n),eF("rightPad",e,t,n),eF("padWidth",e,t,n),eF("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{let{indices:r,values:a,shape:s}=Fw.stringSplit(eF("input",e,t,n),eF("delimiter",e,t,n),eF("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[Fw.stringToHashBucketFast(eF("input",e,t,n),eF("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Qg((()=>((e,t,n)=>{switch(e.op){case"Cast":return[vm(eF("x",e,t,n),eF("dtype",e,t,n))];case"ExpandDims":{let r=eF("axis",e,t,n);return[LA(eF("x",e,t,n),r)]}case"Squeeze":{let r=eF("axis",e,t,n);return[Hx(eF("x",e,t,n),r)]}case"Reshape":return[jy(eF("x",e,t,n),eF("shape",e,t,n))];case"MirrorPad":return[Ub(eF("x",e,t,n),eF("padding",e,t,n),eF("mode",e,t,n))];case"PadV2":case"Pad":return[Yb(eF("x",e,t,n),eF("padding",e,t,n),eF("constantValue",e,t,n))];case"SpaceToBatchND":{let r=eF("blockShape",e,t,n),a=eF("paddings",e,t,n);return[nx(eF("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=eF("blockShape",e,t,n),a=eF("crops",e,t,n);return[Qy(eF("x",e,t,n),r,a)]}case"DepthToSpace":{let r=eF("blockSize",e,t,n),a=eF("dataFormat",e,t,n).toUpperCase();return[NA(eF("x",e,t,n),r,a)]}case"BroadcastTo":return[oA(eF("x",e,t,n),eF("shape",e,t,n))];case"BroadcastArgs":return[iA(eF("s0",e,t,n),eF("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return fO(e,t,n,r);case"custom":let a=J$(e.op);if(a&&a.customExecutor)return a.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return tF(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return tF(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return XF(this.node.rawAttrs,e,t);if(null!=n.s)return qF(this.node.rawAttrs,e,t);if(null!=n.b)return KF(this.node.rawAttrs,e,t);if(null!=n.shape)return tO(this.node.rawAttrs,e,t);if(null!=n.type)return JF(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return nO(this.node.rawAttrs,e,t);if(null!=n.list.s)return rO(this.node.rawAttrs,e,t);if(null!=n.list.shape)return aO(this.node.rawAttrs,e,t);if(null!=n.list.b)return sO(this.node.rawAttrs,e,t);if(null!=n.list.type)return QF(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return uc.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var gO=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function yO(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>aF(e)[0])),d=[];null!=r&&(d=r.map((e=>aF(e.name)[0])));let h=[...t];for(;h.length>0;){let e=h.pop();if((vO(e)||wO(e)||kO(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===d.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var AO=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],bO=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],xO=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function vO(e){return AO.indexOf(e.op)>=0}function wO(e){return bO.indexOf(e.op)>=0}function kO(e){return xO.indexOf(e.op)>=0}var IO=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new IO(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=yO(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>aF(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[aF(e)[0]])),a=t.map((e=>aF(e)[0])),s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return Qg((()=>{let n=new gO(this.weightMap,l,u,this.functionExecutorMap),r={...this.weightMap};Object.keys(e).forEach((t=>{let[n,a]=aF(t),s=[];s[a]=e[t],r[n]=s}));let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=mO(t,r,n,this._resourceManager);if(uc.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>tF(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let s=function(e,t,n){return t[rF(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){let n=i[e.id];if(1===n){if(this.keepTensorForDebug){let[n,a]=nF(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{e&&!e.kept&&!e.isDisposed&&!this.keepIds.has(e.id)&&e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Lu().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();let s=new gO(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);let i=t.map((e=>tF(e,this.tensorsMap,s))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[aF(e)[0]])),i=n.map((e=>aF(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:h}=yO(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),c={...this.weightMap};Object.keys(e).forEach((t=>{let[n,r]=aF(t),a=[];a[r]=e[t],c[n]=a}));let f={},m=this.getFrozenTensorIds(c),g={};for(;p.length>0;){let e=this.processStack(s,p,t,c,g,m,i,f,l);await Promise.all(e)}null==d&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter((e=>!vO(e)&&!tF(e.name,c,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&eF("isConstant",e.node,r,n)&&([d]=nF(e.node.name,n)),null==r[e.node.name]){let h=mO(e.node,r,n,this._resourceManager);d||([d]=nF(e.node.name,n));let p=n.currentContext;uc.isPromise(h)?u.push(h.then((u=>(r[d]=u,n.currentContext=p,this.checkTensorForDisposal(d,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[d]=h,this.checkTensorForDisposal(d,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=nF(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!tF(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!tF(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=aF(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));uc.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&uc.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){let t={};for(let n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=aF(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{let[t]=aF(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},SO="?tfjs-format=file",NO="model.json",TO=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Im.browserHTTPRequest(e,this.loadOptions);else{let t=Im.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(Im.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t,n=this.artifacts.modelTopology;t=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=t,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;let r=Im.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new IO(jF.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=jF.Instance.transformGraph(e.modelInitializer);this.initializer=new IO(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){let t=Im.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Uc||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function CO(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${NO}${SO}`);let n=new TO(e,t);return await n.load(),n}var EO="0.0.0",_O={};gl(_O,{CSVDataset:()=>wz,Dataset:()=>uz,FileDataSource:()=>Oz,TextLineDataset:()=>mz,URLDataSource:()=>zz,array:()=>hz,csv:()=>Dz,func:()=>Pz,generator:()=>Lz,microphone:()=>Bz,version_data:()=>Uz,webcam:()=>Wz,zip:()=>pz});var RO=yl(El()),MO=yl(El());function $O(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(DO(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=$O(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function FO(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set,r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(DO(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=FO(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function OO(e){return null===e?null:DO(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function zO(e,t){let n=new Map;$O(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(uc.isPromise(t)){let r=await t;n.set(e,r)}}return $O(e,t,n)}function DO(e){let t=!1;if(Lu().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=_l();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Uc)&&!(e instanceof Promise)&&!t)}function PO(e){return function(e,t){return $O(e,t)}(e,LO)}function LO(e){return e instanceof Uc?{value:e.clone(),recurse:!1}:DO(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var WO=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},BO=class extends WO{constructor(){super(BO.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},UO=BO;function VO(e){return new HO(e)}function GO(e){return new qO(e)}UO.INITIAL_CAPACITY=32;var jO=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ez(this,e)}filter(e){return new JO(this,e)}map(e){return new QO(this,e)}mapAsync(e){return new tz(this,e)}serialMapAsync(e){return new tz(this,e).serial()}flatmap(e){return new rz(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new YO(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:OO;return this.rowMajorBatch(e,t).map((e=>function(e){return FO(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:OO)}(e,n)))}concatenate(e,t){return new az(VO([this,e]),t)}take(e){return e<0||null==e?this:new ZO(this,e)}skip(e){return e<0||null==e?this:new XO(this,e)}prefetch(e){return new oz(this,e)}shuffle(e,t){return new lz(this,e,t)}serial(){return new KO(this)}},HO=class extends jO{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:PO(e),done:!1}}},qO=class extends jO{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},KO=class extends jO{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},XO=class extends jO{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;ey(e.value)}return this.upstream.next()}},ZO=class extends jO{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},YO=class extends jO{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},JO=class extends jO{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ey(e.value)}}},QO=class extends jO{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Gc.getTensorsInContainer(e.value),n=this.transform(e.value),r=Gc.getTensorsInContainer(n);for(let e of t)Gc.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},ez=class extends jO{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},tz=class extends jO{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Gc.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Gc.getTensorsInContainer(n);for(let e of t)Gc.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},nz=class extends jO{constructor(){super(),this.outputQueue=new UO,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},rz=class extends nz{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Gc.getTensorsInContainer(e.value),n=this.transform(e.value),r=Gc.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)Gc.isTensorInList(e,r)||e.dispose();return!0}},az=class extends jO{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},sz=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(sz||{}),iz=class extends jO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0,r=await zO(this.iterators,(function(e){return e instanceof jO?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0}}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},oz=class extends jO{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new WO(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},lz=class extends oz{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=MO.alea(n||uc.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},uz=class{constructor(){this.size=null}batch(e){let t,n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],r=this;return uc.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),t=this.size===1/0||null==this.size?this.size:n?Math.ceil(this.size/e):Math.floor(this.size/e),dz((async()=>(await r.iterator()).columnMajorBatch(e,n,cz)),t)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,dz((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,dz((async()=>(await n.iterator()).filter((t=>Qg((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return dz((async()=>(await t.iterator()).map((t=>Qg((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return dz((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return dz((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,dz((async()=>function(e,t){return new az(e,void 0)}(GO((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,dz((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=RO.alea(t||uc.now().toString());return dz((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,dz((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function dz(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends uz{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function hz(e){return dz((async()=>VO(e)),e.length)}function pz(e){if(!DO(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return dz((async()=>function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:sz.FAIL;return new iz(e,t)}(await zO(e,(e=>{if(e instanceof uz)return{value:e.iterator(),recurse:!1};if(DO(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),1)),t)}function cz(e){return null===e?null:function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof Uc||uc.isTypedArray(e)}(e[0])?{value:fz(e),recurse:!1}:{value:null,recurse:!0}}function fz(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Uc?qx(e):Cf(e)}uz.MAX_BUFFER_SIZE=1e4;var mz=class extends uz{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},gz='"',yz=Symbol("out"),Az=Symbol("field"),bz=Symbol("quote"),xz=Symbol("quoteafterquote"),vz=Symbol("quoteinquote"),wz=class extends uz{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new mz(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(uc.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&uc.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(uc.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=[],r=0,a=e.length,s=yz;for(let t=0;t<a;t++)switch(s){case yz:switch(e.charAt(t)){case gz:r=t+1,s=bz;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=yz;break;default:s=Az,r=t}break;case Az:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),s=yz,r=t+1);break;case bz:e.charAt(t)===gz&&(s=xz);break;case xz:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=yz,r=t+1;break;case gz:s=bz;break;default:s=vz}break;case vz:e.charAt(t)===gz&&(s=bz)}if(s===xz?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},kz=class extends jO{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!Lu().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new kz(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(uc.sizeFromShape(t));return n.set(e,n.length-e.length),Cf(n,t)}},Iz=class extends jO{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Yx([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Jx([r,n,s,a],[1,4])}else this.cropBox=Jx([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Lu().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new Iz(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&uc.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Ym.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Qg((()=>{let t,n=LA(vm(e,"float32"),0);t=_w.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return jy(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},Sz=class{},Nz=class extends jO{split(e){return new Tz(this,e)}},Tz=class extends Nz{constructor(e,t){super(),this.upstream=e,this.impl=new Cz(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Cz=class extends nz{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},Ez=class extends jO{decodeUTF8(){return new _z(this)}},_z=class extends Nz{constructor(e){super(),this.upstream=e,this.impl=new Rz(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},Rz=class extends nz{constructor(e){if(super(),this.upstream=e,Lu().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=_l();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Lu().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},Mz=class extends Ez{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.file=e,this.options=t,uc.assert(e instanceof Uint8Array||!!Lu().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}},$z=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function Fz(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var Oz=class extends Sz{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.input=e,this.options=t}async iterator(){if(Fz(this.input)&&Lu().get("IS_NODE")){let e=Rl();this.input=e.readFileSync(this.input.slice(7))}return new Mz(this.input,this.options)}},zz=class extends Sz{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.url=e,this.fileOptions=t}async iterator(){return Fz(this.url)?new Oz(this.url,this.fileOptions).iterator():async function(e){let t,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2?arguments[2]:void 0;"string"==typeof e?t=e:(t=e.url,n=$z(e));let s=await(a||uc.fetch)(t,n);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new Mz(e,r)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function Dz(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new wz(new zz(e),t)}function Pz(e){let t=GO(e);return dz((async()=>t))}function Lz(e){return dz((async()=>{let t=await e();return GO((()=>t.next()))}))}async function Wz(e,t){return Iz.create(e,t)}async function Bz(e){return kz.create(e)}var Uz="0.0.0";function Vz(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&uc.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var Gz=Hk.whereImpl,jz=class extends Ll{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Pl(this,Zg())}nextDataId(){return jz.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Lu().get("IS_NODE")&&qw.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&uc.isString(n[0])){let a=n.map((e=>uc.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return qw.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>uc.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xm(e.shape,e.dtype,n)}makeOutput(e,t,n){let r=this.write(e,t,n);return Zg().makeTensorFromDataId(r,t,n,this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=uc.now();return e(),{kernelMs:uc.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Vz([e],"where");let t=this.readSync(e.dataId);return Gz(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Hz=jz;Hz.nextDataId=0;var qz={};function Kz(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}gl(qz,{addImpl:()=>lD,bincountImpl:()=>pD,bincountReduceImpl:()=>cD,ceilImpl:()=>yD,concatImpl:()=>xD,equalImpl:()=>vD,expImpl:()=>ID,expm1Impl:()=>TD,floorImpl:()=>_D,gatherNdImpl:()=>$D,gatherV2Impl:()=>FD,greaterEqualImpl:()=>PD,greaterImpl:()=>OD,lessEqualImpl:()=>GD,lessImpl:()=>BD,linSpaceImpl:()=>qD,logImpl:()=>KD,maxImpl:()=>YD,maximumImpl:()=>JD,minimumImpl:()=>tP,multiplyImpl:()=>aP,negImpl:()=>lP,notEqualImpl:()=>dP,prodImpl:()=>gP,rangeImpl:()=>AP,rsqrtImpl:()=>bP,sigmoidImpl:()=>wP,simpleAbsImpl:()=>Kz,sliceImpl:()=>SP,sparseFillEmptyRowsImpl:()=>CP,sparseReshapeImpl:()=>EP,sparseSegmentReductionImpl:()=>_P,sqrtImpl:()=>RP,squaredDifferenceImpl:()=>FP,stridedSliceImpl:()=>DP,stringNGramsImpl:()=>PP,stringSplitImpl:()=>WP,stringToHashBucketFastImpl:()=>BP,subImpl:()=>UP,tileImpl:()=>HP,topKImpl:()=>XP,transposeImpl:()=>cP,uniqueImpl:()=>ZP});var Xz={kernelName:Gu,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;Vz(t,"abs");let r=new Float32Array(uc.sizeFromShape(t.shape));return r=Kz(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function Zz(e){return(t,n,r,a,s)=>{let i=qw.assertAndGetBroadcastShape(t,n),o=i.length,l=uc.computeStrides(i),u=uc.sizeFromShape(i),d=uc.getTypedArrayFromDType(s,u),h=t.length,p=n.length,c=uc.computeStrides(t),f=uc.computeStrides(n),m=qw.getBroadcastDims(t,i),g=qw.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<d.length;++t){let n=uc.indexToLoc(t,o,l),s=n.slice(-h);m.forEach((e=>s[e]=0));let i=uc.locToIndex(s,h,c),u=n.slice(-p);g.forEach((e=>u[e]=0));let y=uc.locToIndex(u,p,f);d[t]=e(r[i],a[y])}return[d,i]}}function Yz(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var Jz={kernelName:gd,backendName:"cpu",kernelFunc:Yz};function Qz(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n)return Yz({inputs:{real:Qz(e,t,"float32"),imag:Qz(e,t,"float32")},backend:e});let r=uc.makeZerosTypedArray(uc.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function eD(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var tD={kernelName:ah,backendName:"cpu",kernelFunc:eD};function nD(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var rD={kernelName:Zh,backendName:"cpu",kernelFunc:nD};function aD(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return eD({inputs:{x:a},backend:n});let e=Qz(n,a.shape,a.dtype),t=aD({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Yz({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=nD({inputs:{input:a},backend:n}),t=aD({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!uc.hasEncodingLoss(a.dtype,s)){let e=eD({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){let e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){let e=n.data.get(a.dataId).values,t=uc.toTypedArray([0],a.dtype),[r,s]=Zz(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var sD={kernelName:cd,backendName:"cpu",kernelFunc:aD};function iD(e,t,n,r){return null==n?n=>{let{inputs:a,backend:s}=n,{a:i,b:o}=a,l=s;Vz([i,o],e);let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,h="string"===i.dtype?qw.fromUint8ToStringArray(u):u,p="string"===i.dtype?qw.fromUint8ToStringArray(d):d,c=r||i.dtype,[f,m]=t(i.shape,o.shape,h,p,c);return l.makeTensorInfo(m,c,f)}:e=>{let{inputs:a,backend:s}=e,{a:i,b:o}=a,l=s;if("complex64"===i.dtype||"complex64"===o.dtype){let e=aD({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,s=l.data.get(r.dataId).values,u=l.data.get(a.dataId).values,d=aD({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(d.dataId),p=h.complexTensorInfos.real,c=h.complexTensorInfos.imag,f=l.data.get(p.dataId).values,m=l.data.get(c.dataId).values,[g,y,A]=n(i.shape,o.shape,s,u,f,m),b=l.makeTensorInfo(A,"float32",g),x=l.makeTensorInfo(A,"float32",y),v=Yz({inputs:{real:b,imag:x},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo(b),l.disposeIntermediateTensorInfo(x),v}{let e=l.data.get(i.dataId).values,n=l.data.get(o.dataId).values,a=r||i.dtype,[s,u]=t(i.shape,o.shape,e,n,a);return l.makeTensorInfo(u,a,s)}}}function oD(e){return(t,n,r,a,s,i)=>{let o=qw.assertAndGetBroadcastShape(t,n),l=uc.sizeFromShape(o),u=o.length,d=uc.computeStrides(o),h=uc.getTypedArrayFromDType("float32",l),p=uc.getTypedArrayFromDType("float32",l),c=qw.getBroadcastDims(t,o),f=qw.getBroadcastDims(n,o),m=qw.mergeRealAndImagArrays(r,a),g=qw.mergeRealAndImagArrays(s,i),y=t.length,A=uc.computeStrides(t),b=n.length,x=uc.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<h.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){let n=uc.indexToLoc(t,u,d),r=n.slice(-y);c.forEach((e=>r[e]=0));let a=uc.locToIndex(r,y,A),s=n.slice(-b);f.forEach((e=>s[e]=0));let i=uc.locToIndex(s,b,x),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}var lD=Zz(((e,t)=>e+t)),uD=oD(((e,t,n,r)=>({real:e+n,imag:t+r}))),dD=iD(qu,lD,uD),hD={kernelName:qu,backendName:"cpu",kernelFunc:dD};function pD(e,t,n,r,a){let s=uc.sizeFromShape(r),i=uc.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function cD(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=e.shape[0],s=e.shape[1],i=xm([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function fD(e){return(t,n,r)=>{let a=uc.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function mD(e,t,n){return r=>{let{inputs:a,attrs:s,backend:i}=r,{x:o}=a;if(Vz(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let l=i,u=l.data.get(o.dataId).values,d=uc.sizeFromShape(o.shape),h=n||o.dtype,p=uc.getArrayFromDType(h,d);for(let e=0;e<d;++e)p[e]=t(u[e],s);return l.makeTensorInfo(o.shape,h,p)}}function gD(e,t,n){return r=>{let{inputs:a,attrs:s,backend:i}=r,{x:o}=a;if(Vz(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let l=i,u=l.data.get(o.dataId).values,d=n||o.dtype,h=t(u,d,s);return l.makeTensorInfo(o.shape,d,h)}}var yD=fD((e=>Math.ceil(e))),AD=gD(fd,yD),bD={kernelName:fd,backendName:"cpu",kernelFunc:AD};function xD(e,t,n,r){let a=uc.getArrayFromDType(n,uc.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=uc.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?qw.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var vD=Zz(((e,t)=>e===t?1:0)),wD=iD(Gd,vD,null,"bool"),kD={kernelName:Gd,backendName:"cpu",kernelFunc:wD},ID=fD((e=>Math.exp(e))),SD=gD(jd,ID,"float32"),ND={kernelName:jd,backendName:"cpu",kernelFunc:SD},TD=fD((e=>Math.expm1(e))),CD=gD(qd,TD),ED={kernelName:qd,backendName:"cpu",kernelFunc:CD},_D=fD((e=>Math.floor(e))),RD=gD(Yd,_D),MD={kernelName:Yd,backendName:"cpu",kernelFunc:RD};function $D(e,t,n,r,a,s,i,o,l){let u=xm([r,s],n);for(let n=0;n<r;n++){let r=[],d=0;for(let t=0;t<a;t++){let s=e[n*a+t];d+=s*i[t],r.push(s)}if(d<0||d>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(d*s+e))}return u}function FD(e,t,n){let r=xm(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}var OD=Zz(((e,t)=>e>t?1:0)),zD=iD(nh,OD,null,"bool"),DD={kernelName:nh,backendName:"cpu",kernelFunc:zD},PD=Zz(((e,t)=>e>=t?1:0)),LD=iD(rh,PD,null,"bool"),WD={kernelName:rh,backendName:"cpu",kernelFunc:LD},BD=Zz(((e,t)=>e<t?1:0)),UD=iD(hh,BD,null,"bool"),VD={kernelName:hh,backendName:"cpu",kernelFunc:UD},GD=Zz(((e,t)=>e<=t?1:0)),jD=iD(ph,GD,null,"bool"),HD={kernelName:ph,backendName:"cpu",kernelFunc:jD};function qD(e,t,n){let r=(t-e)/(n-1),a=uc.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var KD=fD((e=>Math.log(e))),XD=gD(fh,KD),ZD={kernelName:fh,backendName:"cpu",kernelFunc:XD};function YD(e,t,n,r){let a=uc.getTypedArrayFromDType(r,uc.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var JD=Zz(((e,t)=>Math.max(e,t))),QD=iD(kh,JD),eP={kernelName:kh,backendName:"cpu",kernelFunc:QD},tP=Zz(((e,t)=>Math.min(e,t))),nP=iD(Rh,tP),rP={kernelName:Rh,backendName:"cpu",kernelFunc:nP},aP=Zz(((e,t)=>e*t)),sP=oD(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),iP=iD(Oh,aP,sP),oP={kernelName:Oh,backendName:"cpu",kernelFunc:iP};function lP(e,t,n){let r=uc.createScalarValue(-1,n);return aP([],t,r,e,n)}var uP={kernelName:zh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;Vz(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=lP(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},dP=Zz(((e,t)=>e!==t?1:0)),hP=iD(Dh,dP,null,"bool"),pP={kernelName:Dh,backendName:"cpu",kernelFunc:hP};function cP(e,t,n,r,a){let s=t.length,i=uc.sizeFromShape(t),o=uc.computeStrides(t),l=uc.computeStrides(a),u=uc.getTypedArrayFromDType(n,uc.sizeFromShape(a));for(let t=0;t<i;++t){let n=uc.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[uc.locToIndex(a,s,l)]=e[t]}return u}function fP(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;Vz(a,"transpose");let i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=cP(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var mP={kernelName:Lp,backendName:"cpu",kernelFunc:fP};function gP(e,t,n,r){let[a,s]=qw.computeOutAndReduceShapes(e,r),i=Jc(t,"int32"),o=uc.makeZerosTypedArray(uc.sizeFromShape(a),i),l=uc.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var yP={kernelName:Kh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Vz(a,"prod");let o=a.shape.length,l=uc.parseAxisParam(s,a.shape),u=qw.getAxesPermutation(l,o),d=l,h=a,p=[];null!=u&&(h=fP({inputs:{x:a},backend:n,attrs:{perm:u}}),p.push(h),d=qw.getInnerMostAxes(d.length,o));let c=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=gP(h.shape,h.dtype,c,d),y=m;return i&&(y=qw.expandShapeToKeepDim(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function AP(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return uc.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=uc.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var bP=fD((e=>1/Math.sqrt(e))),xP=gD(op,bP),vP={kernelName:op,backendName:"cpu",kernelFunc:xP},wP=fD((e=>1/(1+Math.exp(-e)))),kP=mD(mp,(e=>1/(1+Math.exp(-e)))),IP={kernelName:mp,backendName:"cpu",kernelFunc:kP};function SP(e,t,n,r,a){let s=dg.isSliceContinous(r,t,n),i=uc.sizeFromShape(n),o=uc.computeStrides(r);if(s){let n=dg.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=xm(r,a,"string"===a?qw.fromUint8ToStringArray(e):e),u=xm(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?qw.fromStringArrayToUint8(u.values):u.values}function NP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;Vz(a,"slice");let[o,l]=dg.parseSliceParams(a,s,i);dg.assertParamsValid(a,o,l);let u=SP(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var TP={kernelName:hp,backendName:"cpu",kernelFunc:NP};function CP(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),d=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(qw.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[uc.getArrayFromDType(n,0),[0,h],uc.getArrayFromDType(a,0),u,d]}let p=!0,c=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*h];if(n<0)throw new Error(qw.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(qw.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],p=p&&n>=c,c=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){let t=e,n=r;for(let e=0;e<o;++e)d[e]=e;return[t,[o,h],n,u,d]}{let t=f[l-1],s=uc.getArrayFromDType(n,t*h),p=uc.getArrayFromDType(a,t),c=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*h],a=c[n],i=(0===n?0:f[n-1])+a;c[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];p[i]=r[t],d[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=i}return[s,[t,h],p,u,d]}}function EP(e,t,n,r,a){let s=uc.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,d=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==d)throw new Error(qw.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,l.push(1)}else{if(t<0)throw new Error(qw.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==d){if(u<=0)throw new Error(qw.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(qw.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=e}if(uc.sizeFromShape(l)!==s)throw new Error(qw.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=uc.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[f,[i,o],l]}function _P(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=r.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?a[o-1]+1:0;if(d<0)throw new Error(qw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=d;let p=h.reduce(((e,t)=>e*t),1),c=uc.getArrayFromDType(n,p);if(0===o)return d>0&&c.fill(i),[c,h];if(d<=0)throw new Error(qw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error(qw.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(qw.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&c.fill(i,g*u,y*u);for(let t=f;t<m;++t){let n=r[t];if(n<0||n>=l[0])throw new Error(qw.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)c[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<d&&c.fill(i,g*u,d*u),[c,h]}var RP=fD((e=>Math.sqrt(e))),MP=mD(yp,(e=>Math.sqrt(e))),$P={kernelName:yp,backendName:"cpu",kernelFunc:MP},FP=Zz(((e,t)=>{let n=e-t;return n*n})),OP=iD(Tp,FP),zP={kernelName:Tp,backendName:"cpu",kernelFunc:OP};function DP(e,t,n,r){let a=xm(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}function PP(e,t,n,r,a,s,i,o){return new class{constructor(e,t,n,r,a,s){this.separator=uc.encodeString(e),this.nGramWidths=t,this.leftPad=uc.encodeString(n),this.rightPad=uc.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),d=s-(l+u),h=t+(l>0?0:i-o),p=0;p+=l*this.leftPad.length;for(let t=0;t<d;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+d-1)*this.separator.length,n[r+i]=new Uint8Array(p);let c=n[r+i],f=0,m=e=>e.forEach((e=>c[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<d-1;++t)m(e[h+t]),m(this.separator);if(d>0){m(e[h+d-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=uc.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let n=t[e]-t[e-1],r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}let i=new Array(s[a]);for(let n=0;n<a;++n){let r=t[n],a=s[n];if(this.nGramWidths.forEach((s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l})),this.preserveShort&&a===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth,l=1;this.createNGrams(e,r,i,a,l,o)}}return[i,s]}}(n,r,a,s,i,o).compute(e,t)}function LP(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function WP(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let l=0;l<r;++l){let r=a.length;LP(e[l],t,n,a);let u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}let l=uc.getArrayFromDType("int32",2*s),u=new Array(s),d=[r,i],h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=a[h],++h;return[l,u,d]}function BP(e,t){let n=uc.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=uc.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var UP=Zz(((e,t)=>e-t)),VP=oD(((e,t,n,r)=>({real:e-n,imag:t-r}))),GP=iD($p,UP,VP),jP={kernelName:$p,backendName:"cpu",kernelFunc:GP};function HP(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=xm(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var qP=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function KP(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);KP(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}let a=e[t],s=n,i=r;for(uc.swap(e,n,t),qP(e[r],a)>0&&uc.swap(e,n,r);s<i;){for(uc.swap(e,s,i),s++,i--;qP(e[s],a)<0;)s+=1;for(;qP(e[i],a)>0;)i-=1}0===qP(e[n],a)?uc.swap(e,n,i):(i+=1,uc.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function XP(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=uc.getTypedArrayFromDType(n,i*r),u=uc.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(KP(i,r),i=i.slice(0,r)),a&&i.sort(qP);let d=t*r,h=l.subarray(d,d+r),p=u.subarray(d,d+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}let d=t.slice();return d[d.length-1]=r,[xm(d,n,l),xm(d,"int32",u)]}function ZP(e,t,n,r){let a=uc.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i={},o=new Int32Array(n[a]),l=new Lc(s,r,e),u=[],d=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(d)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{let e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}let h=s.slice();h[1]=Object.keys(i).length;let p=new Lc(h,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(l.get(n,e,r),n,t,r)}));let c=n.slice();return c[a]=h[1],{outputValues:p.values,outputShape:c,indices:o}}var YP="0.0.0";uy("cpu",(()=>new Hz),1);var JP=mD(Bd,(e=>e>=0?e:Math.exp(e)-1)),QP={kernelName:Bd,backendName:"cpu",kernelFunc:JP};function eL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;Vz([a],"leakyRelu");let i=uc.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=uc.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var tL={kernelName:dh,backendName:"cpu",kernelFunc:eL},nL=Zz(((e,t)=>e<0?t*e:e));function rL(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;Vz([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=nL(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var aL={kernelName:qh,backendName:"cpu",kernelFunc:rL},sL=mD(Jh,(e=>Math.max(0,e))),iL={kernelName:Jh,backendName:"cpu",kernelFunc:sL},oL=mD(ap,(e=>Math.min(Math.max(0,e),6))),lL={kernelName:ap,backendName:"cpu",kernelFunc:oL};function uL(e,t,n,r,a){if("linear"===n)return eD({inputs:{x:t},backend:e});if("relu"===n)return sL({inputs:{x:t},backend:e});if("elu"===n)return JP({inputs:{x:t},backend:e});if("relu6"===n)return oL({inputs:{x:t},backend:e});if("prelu"===n)return rL({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return eL({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return kP({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function dL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=uc.sizeFromShape(a.shape),o=uc.inferFromImplicitShape(s,i),l=uc.sizeFromShape(o);uc.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var hL={kernelName:Qh,backendName:"cpu",kernelFunc:dL};function pL(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;Vz([a,s],"matMul");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=uc.sizeFromShape(f),y=uc.sizeFromShape(m),A=Hm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);uc.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let b=o?[y,c,h]:[y,h,c],x=dL({inputs:{x:a},backend:n,attrs:{shape:i?[g,d,p]:[g,p,d]}}),v=dL({inputs:{x:s},backend:n,attrs:{shape:b}}),w=i?x.shape[1]:x.shape[2],k=i?x.shape[2]:x.shape[1],I=o?v.shape[1]:v.shape[2],S=Math.max(g,y),N=n.data.get(x.dataId).values,T=n.data.get(v.dataId).values,C=uc.computeStrides(x.shape),E=uc.computeStrides(v.shape),[_,R,M]=i?[C[0],1,C[1]]:[C[0],C[1],1],[$,F,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],z=k*I,D=xm([S,k,I],x.dtype),P=D.values,L=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<k;t+=L)for(let n=0;n<I;n+=L)for(let r=0;r<w;r+=L){let a=Math.min(t+L,k),s=Math.min(n+L,I),i=Math.min(r+L,w);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){let r=Math.min(e,g-1)*_,s=Math.min(e,y-1)*O;n+=N[r+o*R+a*M]*T[a*$+t*F+s]}P[e*z+(o*I+t)]+=n}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(A,D.dtype,D.values)}var cL={kernelName:ld,backendName:"cpu",kernelFunc:pL},fL={kernelName:qp,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:d}=a,{transposeA:h,transposeB:p,activation:c,leakyreluAlpha:f}=i,m=[];t=pL({inputs:{a:o,b:l},attrs:{transposeA:h,transposeB:p},backend:s}),u&&(n=dD({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=uL(s,t,c,d,f),m.push(t),t=r);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},mL=mD(ju,(e=>Math.acos(e))),gL={kernelName:ju,backendName:"cpu",kernelFunc:mL},yL=mD(Hu,(e=>Math.acosh(e))),AL={kernelName:Hu,backendName:"cpu",kernelFunc:yL},bL={kernelName:Ku,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;Vz(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=xm(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}},xL={kernelName:Xu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Vz(a,"all");let o=uc.parseAxisParam(s,a.shape),l=o,u=qw.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=fP({inputs:{x:a},backend:n,attrs:{perm:u}}),l=qw.getInnerMostAxes(l.length,a.shape.length)),qw.assertAxesAreInnerMostDims("all",l,d.shape.length);let[h,p]=qw.computeOutAndReduceShapes(d.shape,l),c=uc.sizeFromShape(p),f=uc.makeZerosTypedArray(uc.sizeFromShape(h),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,f);if(i){let e=dL({inputs:{x:g},backend:n,attrs:{shape:qw.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},vL={kernelName:Zu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Vz(a,"any");let o=uc.parseAxisParam(s,a.shape),l=o,u=qw.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=fP({inputs:{x:a},backend:n,attrs:{perm:u}}),l=qw.getInnerMostAxes(l.length,a.shape.length)),qw.assertAxesAreInnerMostDims("any",l,d.shape.length);let[h,p]=qw.computeOutAndReduceShapes(d.shape,l),c=uc.sizeFromShape(p),f=uc.makeZerosTypedArray(uc.sizeFromShape(h),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,f);if(i){let e=dL({inputs:{x:g},backend:n,attrs:{shape:qw.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},wL={kernelName:Yu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Vz(a,"argMax");let i=uc.parseAxisParam(s,a.shape),o=qw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=fP({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=qw.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],qw.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[d,h]=qw.computeOutAndReduceShapes(l.shape,i),p=uc.sizeFromShape(d),c=uc.makeZerosTypedArray(p,"int32"),f=uc.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",c)}},kL={kernelName:Ju,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Vz(a,"argMin");let i=uc.parseAxisParam(s,a.shape),o=qw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=fP({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=qw.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],qw.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[d,h]=qw.computeOutAndReduceShapes(l.shape,i),p=uc.sizeFromShape(d),c=uc.makeZerosTypedArray(p,"int32"),f=uc.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",c)}},IL=mD(Qu,(e=>Math.asin(e))),SL={kernelName:Qu,backendName:"cpu",kernelFunc:IL},NL=mD(ed,(e=>Math.asinh(e))),TL={kernelName:ed,backendName:"cpu",kernelFunc:NL},CL=mD(td,(e=>Math.atan(e))),EL={kernelName:td,backendName:"cpu",kernelFunc:CL},_L=Zz(((e,t)=>Math.atan2(e,t))),RL=iD(rd,_L),ML={kernelName:rd,backendName:"cpu",kernelFunc:RL},$L=mD(nd,(e=>Math.atanh(e))),FL={kernelName:nd,backendName:"cpu",kernelFunc:$L};function OL(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,d=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,c=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=xm(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],A=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let x=y*i-p,v=Math.max(0,x),w=Math.min(a.inHeight,d+x),k=n+y*A;for(let n=0;n<a.outWidth;++n){let i=n*o-c,d=Math.max(0,i),p=Math.min(a.inWidth,h+i),y=f,A=0,x=0;for(let n=v;n<w;n+=l){let a=m+n*r[1];for(let n=d;n<p;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(A+=i,x++)}if(isNaN(y))break}g[k+n*b+t]="avg"===s?A/x:y}}}return m}function zL(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=xm(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=xm(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let A=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){let h=o*l-f,c=h;for(;c<0;)c+=d;let b=Math.min(r.inWidth,p+h),x=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<A;n+=u){let i=n-g;for(let o=c;o<b;o+=d){let l=o-h,u=m.get(e,n,o,t);u>x&&(x=u,v=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+l)}}i.set(v,e,n,o,t)}}return i}function DL(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,d=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,A="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=xm(a.outShape,n),x=b.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],w=a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[3]*a.outShape[4],I=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*v,b=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){let S=v*i-m,N=S;for(;N<0;)N+=u;let T=Math.min(a.inDepth,p+S),C=n+v*w;for(let n=0;n<a.outHeight;++n){let i=n*o-g,p=i;for(;p<0;)p+=d;let m=Math.min(a.inHeight,c+i),v=C+n*k;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=h;let c=Math.min(a.inWidth,f+i),g=v+n*I,w=A,k=0,S=0;for(let n=N;n<T;n+=u){let a=b+n*r[1];for(let n=p;n<m;n+=d){let i=a+n*r[2];for(let n=o;n<c;n+=h){let a=e[i+n*r[3]+t];if("max"===s&&a>w?w=a:"avg"===s&&(k+=a,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}x[g+t]="avg"===s?k/S:w}}}}return b}var PL={kernelName:ad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Vz(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;uc.assert(qw.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,d=qw.computePool2DInfo(a.shape,s,i,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&uc.arraysEqual(d.inShape,d.outShape))u=eD({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=uc.computeStrides(a.shape),r=OL(e,a.shape,a.dtype,t,d,"avg");u=n.makeTensorInfo(d.outShape,a.dtype,r.values)}return u}},LL={kernelName:id,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Vz(a,"avgPool3d");let d=qw.computePool3DInfo(a.shape,s,i,1,o,l,u),h=DL(n.data.get(a.dataId).values,a.shape,a.dtype,uc.computeStrides(a.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},WL={kernelName:od,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Vz([a,s],"avgPool3DGrad");let d=qw.computePool3DInfo(s.shape,i,o,1,l,u),h=d.strideDepth,p=d.strideHeight,c=d.strideWidth,f=d.filterDepth,m=d.filterHeight,g=d.filterWidth,y=d.dilationDepth,A=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterDepth,v=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=x-1-d.padInfo.front,I=w-1-d.padInfo.left,S=v-1-d.padInfo.top,N=xm(s.shape,"float32"),T=1/(f*m*g),C=n.bufferSync(a);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){let s=n-k,i=r-S,o=a-I,l=0;for(let n=0;n<x;n+=y){let r=(s+n)/h;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=A){let a=(i+n)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<w;n+=b){let s=(o+n)/c;s<0||s>=d.outWidth||Math.floor(s)!==s||(l+=C.get(e,r,a,s,t))}}}N.set(l*T,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},BL={kernelName:sd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Vz([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=qw.computePool2DInfo(i.shape,o,l,1,u),h=d.strideHeight,p=d.strideWidth,c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,A=d.effectiveFilterWidth,b=A-1-d.padInfo.left,x=y-1-d.padInfo.top,v=xm(i.shape,"float32"),w=1/(c*f),k=n.data.get(a.dataId).values,I=xm(a.shape,"float32",k);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=n-x,s=r-b,i=0;for(let n=0;n<y;n+=m){let r=(a+n)/h;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<A;n+=g){let a=(s+n)/p;a<0||a>=d.outWidth||Math.floor(a)!==a||(i+=I.get(e,r,a,t))}}v.set(i*w,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},UL={kernelName:Qd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;uc.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),uc.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),uc.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Vz([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let d=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(d.length),g=f.length,y=c.length,A=p.length,b=h.length,x=0,v=0,w=0,k=0;for(let e=0;e<d.length;++e)m[e]=f[x++]+(d[e]-h[v++])*c[w++]/Math.sqrt(p[k++]+u),x>=g&&(x=0),v>=b&&(v=0),w>=y&&(w=0),k>=A&&(k=0);return n.makeTensorInfo(a.shape,a.dtype,m)}},VL={kernelName:ud,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Vz([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=qw.getReshaped(a.shape,s,o),u=qw.getPermuted(l.length,s.length),d=qw.getReshapedPermuted(a.shape,s,o),h=qw.getSliceBeginCoords(i,s.length),p=qw.getSliceSize(d,i,s.length),c=dL({inputs:{x:a},backend:n,attrs:{shape:l}}),f=fP({inputs:{x:c},backend:n,attrs:{perm:u}}),m=dL({inputs:{x:f},backend:n,attrs:{shape:d}}),g=NP({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},GL={kernelName:dd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=pD(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},jL={kernelName:pd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=qw.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},HL=mD(md,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),qL={kernelName:md,backendName:"cpu",kernelFunc:HL},KL={kernelName:yd,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(uc.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function XL(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var ZL={kernelName:ih,backendName:"cpu",kernelFunc:XL};function YL(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=uc.parseAxisParam(a,t[0].shape)[0],i=qw.computeOutShape(t.map((e=>e.shape)),s);if(0===uc.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>uc.sizeFromShape(e.shape)>0));if(1===o.length)return eD({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));if(qw.assertParamsConsistent(l,s),"complex64"===o[0].dtype){let e=o.map((e=>nD({inputs:{input:e},backend:n}))),t=o.map((e=>XL({inputs:{input:e},backend:n}))),r=YL({inputs:e,backend:n,attrs:{axis:s}}),a=YL({inputs:t,backend:n,attrs:{axis:s}}),i=Yz({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=o.map((e=>{let t=uc.sizeFromShape(e.shape.slice(s));return dL({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=qw.computeOutShape(u.map((e=>e.shape)),1);let h=1===u[0].shape[0],p=xD(d,i,t[0].dtype,h),c=qw.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var JL={kernelName:Ad,backendName:"cpu",kernelFunc:YL};function QL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r;Vz([a,s],"conv2d");let h=qw.convertConv2DDataFormat(l),p=qw.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,h),c=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,A=p.padInfo.top,b="channelsLast"===p.dataFormat,x=new Lc(p.outShape,a.dtype),v=uc.computeStrides(a.shape),w=uc.computeStrides(s.shape),k=v[0],I=b?v[1]:v[2],S=b?v[2]:1,N=b?1:v[1],T=x.strides[0],C=b?x.strides[1]:x.strides[2],E=b?x.strides[2]:1,_=b?1:x.strides[1],R=n.data.get(a.dataId).values,M=n.data.get(s.dataId).values,$=x.values;for(let e=0;e<p.batchSize;++e){let t=e*k,n=e*T;for(let e=0;e<p.outHeight;++e){let r=n+e*C,a=e*p.strideHeight-A;for(let e=0;e<c;++e){let n=a+e*m;if(n<0||n>=p.inHeight)continue;let s=e*w[0],i=t+n*I;for(let e=0;e<p.outWidth;++e){let t=r+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=p.inWidth)continue;let a=i+r*S,o=s+e*w[1];for(let e=0;e<p.inChannels;++e){let n=R[a+e*N];for(let e=0;e<p.outChannels;++e)$[t+e*_]+=n*M[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,$)}var eW={kernelName:bd,backendName:"cpu",kernelFunc:QL},tW={kernelName:xd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r;Vz([a,s],"conv2dBackpropFilter");let h=qw.convertConv2DDataFormat(l),p=qw.computeConv2DInfo(a.shape,d,i,1,o,u,!1,h),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,A=new Lc(p.filterShape,"float32"),b=p.padInfo.left,x=p.padInfo.top,v=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,k=new Lc(a.shape,a.dtype,v),I=new Lc(s.shape,s.dtype,w);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((x-e)/c)),n=Math.min(p.outHeight,(p.inHeight+x-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((b-r)/f)),s=Math.min(p.outWidth,(p.inWidth+b-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let d=t;d<n;++d){let t=e+d*c-x;for(let e=a;e<s;++e){let n=r+e*f-b;l+=y?k.get(u,t,n,i)*I.get(u,d,e,o):k.get(u,i,t,n)*I.get(u,o,d,e)}}A.set(l,e,r,i,o)}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}},nW={kernelName:vd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r;Vz([a,s],"conv2dBackpropInput");let h=uc.computeStrides(s.shape),p=uc.computeStrides(a.shape),c=qw.convertConv2DDataFormat(u),f=qw.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),m=new Lc(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,A=n.data.get(s.dataId).values,[b,x,v]=h,{batchSize:w,filterHeight:k,filterWidth:I,inChannels:S,inHeight:N,inWidth:T,outChannels:C,outHeight:E,outWidth:_,strideHeight:R,strideWidth:M}=f;c=f.dataFormat;let $=k-1-f.padInfo.top,F=I-1-f.padInfo.left,O="channelsLast"===c,z=m.strides[0],D=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,L=O?1:m.strides[1],W=p[0],B=O?p[1]:p[2],U=O?p[2]:1,V=O?1:p[1];for(let e=0;e<w;++e)for(let t=0;t<S;++t)for(let n=0;n<N;++n){let r=n-$,a=Math.max(0,Math.ceil(r/R)),s=Math.min(E,(k+r)/R);for(let i=0;i<T;++i){let o=i-F,l=Math.max(0,Math.ceil(o/M)),u=Math.min(_,(I+o)/M),d=0;for(let n=a;n<s;++n){let a=n*R-r;for(let r=l;r<u;++r){let s=W*e+B*n+U*r,i=b*(k-1-a)+x*(I-1-(r*M-o))+v*t;for(let e=0;e<C;++e)d+=y[s+V*e]*A[i+e]}}g[z*e+D*n+P*i+L*t]=d}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},rW={kernelName:wd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;Vz([a,s],"conv3d");let u=qw.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,A=g.left,b=g.top,x=new Lc(u.outShape,a.dtype),v=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,k=x.values,I=uc.computeStrides(a.shape),S=uc.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*I[0],n=e*x.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*x.strides[1],a=e*u.strideDepth-y;for(let e=0;e<d;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*S[0],i=t+n*I[1];for(let e=0;e<u.outHeight;++e){let t=r+e*x.strides[2],n=e*u.strideHeight-b;for(let e=0;e<h;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*S[1],o=i+r*I[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-A;for(let e=0;e<p;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*S[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=v[i+e];for(let e=0;e<u.outChannels;++e)k[n+e]+=t*w[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},aW={kernelName:kd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;Vz([a,s],"conv3dBackpropFilterV2");let u=uc.computeStrides(a.shape),d=uc.computeStrides(s.shape),h=qw.computeConv3DInfo(a.shape,l,i,1,o),p=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,A=new Lc(h.filterShape,"float32"),b=A.values,[x,v,w,k]=A.strides,I=n.data.get(s.dataId).values,[S,N,T,C]=d,E=n.data.get(a.dataId).values,[_,R,M,$]=u,F=h.padInfo.front,O=h.padInfo.left,z=h.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((F-e)/p)),n=Math.min(h.outDepth,(h.inDepth+F-e)/p),r=e*x;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((z-a)/c)),i=Math.min(h.outHeight,(h.inHeight+z-a)/c),o=a*v+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((O-r)/f)),u=Math.min(h.outWidth,(h.inWidth+O-r)/f),d=r*w+o;for(let o=0;o<h.inChannels;++o){let m=o*k+d;for(let d=0;d<h.outChannels;++d){let g=0;for(let m=0;m<h.batchSize;++m){let h=m*_,y=m*S;for(let m=t;m<n;++m){let t=(e+m*p-F)*R+h,n=m*N+y;for(let e=s;e<i;++e){let s=(a+e*c-z)*M+t,i=e*T+n;for(let e=l;e<u;++e){let t=e*C+i;g+=E[(r+e*f-O)*$+s+o]*I[t+d]}}}}b[m+d]=g}}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}},sW={kernelName:Id,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;Vz([a],"conv3dBackpropInputV2");let u=uc.computeStrides(a.shape),d=uc.computeStrides(s.shape),h=qw.computeConv3DInfo(l,s.shape,o,1,i),p=new Lc(h.inShape,"float32"),c=p.values,[f,m,g,y]=p.strides,A=n.data.get(a.dataId).values,[b,x,v,w]=u,k=n.data.get(s.dataId).values,[I,S,N,T]=d,{batchSize:C,filterDepth:E,filterHeight:_,filterWidth:R,inChannels:M,inDepth:$,inHeight:F,inWidth:O,outChannels:z,outDepth:D,outHeight:P,outWidth:L,strideDepth:W,strideHeight:B,strideWidth:U}=h,V=E-1-h.padInfo.front,G=_-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<M;++t)for(let n=0;n<$;++n){let r=n-V,a=Math.max(0,Math.ceil(r/W)),s=Math.min(D,(E+r)/W);for(let i=0;i<F;++i){let o=i-G,l=Math.max(0,Math.ceil(o/B)),u=Math.min(P,(_+o)/B);for(let d=0;d<O;++d){let h=d-j,p=Math.max(0,Math.ceil(h/U)),C=Math.min(L,(R+h)/U),M=0;for(let n=a;n<s;++n){let a=n*W-r;for(let r=l;r<u;++r){let s=r*B-o;for(let i=p;i<C;++i){let o=b*e+x*n+v*r+w*i,l=I*(E-1-a)+S*(_-1-s)+N*(R-1-(i*U-h))+T*t;for(let e=0;e<z;++e)M+=A[o+e]*k[l+e]}}}c[f*e+m*n+g*i+y*d+t]=M}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},iW=mD(Sd,(e=>Math.cos(e))),oW={kernelName:Sd,backendName:"cpu",kernelFunc:iW},lW=mD(Nd,(e=>Math.cosh(e))),uW={kernelName:Nd,backendName:"cpu",kernelFunc:lW},dW={kernelName:Ed,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[d,h,p,c]=a.shape,f=s.shape[0],[m,g]=o,y=xm([f,m,g,c],"float32"),A=n.data.get(s.dataId).values,b=n.data.get(i.dataId).values,x=n.data.get(a.dataId).values,v=uc.computeStrides(a.shape),w=uc.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=A[t],r=A[t+1],a=A[t+2],s=A[t+3],i=b[e];if(i>=d)continue;let o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){let d=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(d<0||d>h-1)for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*w[2]+t*w[1]+e*w[0];y.values[a]=u}else if("bilinear"===l){let n=Math.floor(d),a=Math.ceil(d),o=d-n;for(let l=0;l<g;l++){let d=g>1?r*(p-1)+l*f:.5*(r+s)*(p-1);if(d<0||d>p-1){for(let n=0;n<c;n++){let r=n+l*w[2]+t*w[1]+e*w[0];y.values[r]=u}continue}let h=Math.floor(d),m=Math.ceil(d),A=d-h;for(let r=0;r<c;r++){let s=r+h*v[2]+n*v[1]+i*v[0],u=x[s];s=r+m*v[2]+n*v[1]+i*v[0];let d=x[s];s=r+h*v[2]+a*v[1]+i*v[0];let p=x[s];s=r+m*v[2]+a*v[1]+i*v[0];let c=u+(d-u)*A,f=p+(x[s]-p)*A;s=r+l*w[2]+t*w[1]+e*w[0],y.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(p-1)+n*f:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<c;r++){let a=r+n*w[2]+t*w[1]+e*w[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(d);for(let r=0;r<c;r++){let a=r+o*v[2]+l*v[1]+i*v[0],s=r+n*w[2]+t*w[1]+e*w[0];y.values[s]=x[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},hW={kernelName:Td,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Vz(a,"cumprod");let l=qw.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=fP({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=qw.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let h=Jc(u.dtype,"int32"),p=uc.makeOnesTypedArray(uc.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)p[n]=i?1:c[n];else{let r=m(e,t-1);p[n]=i?c[r]*p[r]:c[n]*p[r]}}let g=n.makeTensorInfo(u.shape,h,p);if(null!=l){let e=fP({inputs:{x:g},backend:n,attrs:{perm:qw.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},pW={kernelName:Cd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Vz(a,"cumsum");let l=qw.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=fP({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=qw.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let h=Jc(u.dtype,"int32"),p=uc.makeZerosTypedArray(uc.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)p[n]=i?0:c[n];else{let r=m(e,t-1);p[n]=i?c[r]+p[r]:c[n]+p[r]}}let g=n.makeTensorInfo(u.shape,h,p);if(null!=l){let e=fP({inputs:{x:g},backend:n,attrs:{perm:qw.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},cW={kernelName:_d,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=pD(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=cD(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},fW={kernelName:Rd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;uc.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],d=a.shape[3],h=l*s,p=u*s,c=d/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*p*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){let a=Math.floor(t/s),i=(r*s+t%s)*c;for(let t=0;t<c;++t){let r=t+i+d*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,p,c],a.dtype,m)}};function mW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;Vz([a,s],"depthwiseConv2DNative");let d=uc.computeStrides(a.shape),h=uc.computeStrides(s.shape),p=l;null==p&&(p=[1,1]),uc.assert(qw.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));let c=qw.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:A}=c,b=A.left,x=A.top,v=c.outChannels/c.inChannels,w=new Lc(c.outShape,a.dtype),k=n.data.get(a.dataId).values,I=n.data.get(s.dataId).values,S=w.values;for(let e=0;e<c.batchSize;++e){let t=e*d[0],n=e*w.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*w.strides[1],a=e*c.strideHeight-x;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*h[0],i=t+n*d[1];for(let e=0;e<c.outWidth;++e){let t=r+e*w.strides[2],n=e*c.strideWidth-b;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*h[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=k[o+e];for(let e=0;e<v;++e)S[l+e]+=t*I[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var gW={kernelName:Md,backendName:"cpu",kernelFunc:mW},yW={kernelName:$d,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r;Vz([a,s],"depthwiseConv2dNativeBackpropFilter");let h=qw.computeConv2DInfo(a.shape,d,i,o,l,u,!0),{strideHeight:p,strideWidth:c,filterHeight:f,filterWidth:m}=h,g=new Lc(h.filterShape,"float32"),y=h.padInfo.left,A=h.padInfo.top,b=h.outChannels/h.inChannels,x=n.data.get(a.dataId).values,v=new Lc(a.shape,a.dtype,x),w=n.data.get(s.dataId).values,k=new Lc(s.shape,s.dtype,w);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((A-e)/p)),n=Math.min(h.outHeight,(h.inHeight+A-e)/p);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(h.outWidth,(h.inWidth+y-r)/c);for(let i=0;i<h.outChannels;++i){let o=Math.trunc(i/b),l=i%b,u=0;for(let l=0;l<h.batchSize;++l)for(let d=t;d<n;++d){let t=e+d*p-A;for(let e=a;e<s;++e){let n=r+e*c-y;u+=v.get(l,t,n,o)*k.get(l,d,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},AW={kernelName:Fd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r;Vz([a,s],"depthwiseConv2DNativeBackpropInput");let h=uc.computeStrides(a.shape),p=uc.computeStrides(s.shape),c=qw.computeConv2DInfo(d,s.shape,i,o,l,u,!0),f=new Lc(c.inShape,"float32"),m=f.values,[g,y,A]=f.strides,b=n.data.get(a.dataId).values,[x,v,w]=h,k=n.data.get(s.dataId).values,[I,S,N]=p,{batchSize:T,filterHeight:C,filterWidth:E,inChannels:_,inHeight:R,inWidth:M,outChannels:$,outHeight:F,outWidth:O,strideHeight:z,strideWidth:D}=c,P=C-1-c.padInfo.top,L=E-1-c.padInfo.left,W=$/_;for(let e=0;e<T;++e)for(let t=0;t<_;++t)for(let n=0;n<R;++n){let r=n-P,a=Math.max(0,Math.ceil(r/z)),s=Math.min(F,(C+r)/z);for(let i=0;i<M;++i){let o=i-L,l=Math.max(0,Math.ceil(o/D)),u=Math.min(O,(E+o)/D),d=0;for(let n=a;n<s;++n){let a=n*z-r;for(let r=l;r<u;++r){let s=x*e+v*n+w*r,i=I*(C-1-a)+S*(E-1-(r*D-o))+N*t;for(let e=0;e<W;++e)d+=b[s+(t*W+e)]*k[i+e]}}m[g*e+y*n+A*i+t]=d}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},bW={kernelName:Od,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=uc.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=xm([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},xW={kernelName:zd,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=n,d=u.data.get(a.dataId).values,h=a.shape.length,p=u.data.get(s.dataId).values,c=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:A,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=qw.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",l),C=uc.sizeFromShape(T),E=T.length,_=uc.getArrayFromDType(a.dtype,C);for(let e=0;e<f;++e)for(let t=0;t<A;++t){let n=t*v-x.top;for(let r=0;r<b;++r){let i=r*w-x.left;for(let o=0;o<y;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){let r=n+t*S;if(r>=0&&r<m)for(let n=0;n<I;++n){let u=i+n*N;if(u>=0&&u<g){let i=uc.locToIndex([e,r,u,o],h,uc.computeStrides(a.shape)),f=uc.locToIndex([t,n,o],c,uc.computeStrides(s.shape)),m=d[i]+p[f];m>l&&(l=m)}}}_[uc.locToIndex([e,t,r,o],E,uc.computeStrides(T))]=l}}}return{dataId:u.write(uc.toTypedArray(_,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},vW={kernelName:Pd,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r,d=n,h=uc.toNestedArray(a.shape,d.data.get(a.dataId).values),p=uc.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=qw.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u);uc.assert(i.rank===N.length,(()=>`Error in ${Pd}, dy must have the same rank as output ${N.length}, but got ${i.rank}`));let T=uc.toNestedArray(N,d.data.get(i.dataId).values),C=uc.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*x-b.top;for(let r=0;r<A;++r){let a=r*v-b.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<f)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<m){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=t,l=n)}}}C[o][l][s]+=T[e][t][r][s]}}}return{dataId:d.write(uc.toTypedArray(C,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},wW={kernelName:Dd,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:l,dilations:u}=r,d=n,h=uc.toNestedArray(a.shape,d.data.get(a.dataId).values),p=uc.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=qw.computeDilation2DInfo(a.shape,s.shape,o,l,"NHWC",u);uc.assert(i.rank===N.length,(()=>`Error in ${Dd}, dy must have the same rank as output ${N.length}, but got ${i.rank}`));let T=uc.toNestedArray(N,d.data.get(i.dataId).values),C=uc.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<c;++e)for(let t=0;t<y;++t){let n=t*x-b.top;for(let r=0;r<A;++r){let a=r*v-b.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){let r=n+t*I;if(r>=0&&r<f)for(let n=0;n<k;++n){let u=a+n*S;if(u>=0&&u<m){let a=h[e][r][u][s]+p[t][n][s];a>i&&(i=a,o=r,l=u)}}}C[e][o][l][s]+=T[e][t][r][s]}}}return{dataId:d.write(uc.toTypedArray(C,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};function kW(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;Vz(s,"sum"),t="bool"===s.dtype?aD({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):eD({inputs:{x:s},backend:r});let l=t.shape.length,u=uc.parseAxisParam(i,t.shape),d=qw.getAxesPermutation(u,l),h=u,p=t;null!=d&&(p=fP({inputs:{x:t},backend:r,attrs:{perm:d}}),h=qw.getInnerMostAxes(h.length,l)),qw.assertAxesAreInnerMostDims("sum",h,p.shape.length);let[c,f]=qw.computeOutAndReduceShapes(p.shape,h),m=Qz(r,c,qw.upcastType(p.dtype,"int32")),g=uc.sizeFromShape(f),y=r.data.get(m.dataId).values,A=r.data.get(p.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=A[t+e];y[e]=n}if(o){let e=m;m=dL({inputs:{x:m},backend:r,attrs:{shape:qw.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=d&&r.disposeIntermediateTensorInfo(p),m}var IW={kernelName:Ap,backendName:"cpu",kernelFunc:kW},SW={kernelName:Wd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=qw.decodeEinsumEquation(a,s.length);qw.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=qw.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,f=[];for(let e=0;e<h;++e){for(let t of d[e]){let e,{permutationIndices:r,expandDims:a}=qw.getEinsumPermutation(c,l[t]);qw.isIdentityPermutation(r)?e=s[t]:(e=fP({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);uc.arraysEqual(e.shape,i)||(e=dL({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===p?p=e:(p=iP({inputs:{a:e,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=kW({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},NW={kernelName:Ud,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;Vz([r,a],"eluGrad");let s=new Float32Array(uc.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},TW=qw.ERF_P,CW=qw.ERF_A1,EW=qw.ERF_A2,_W=qw.ERF_A3,RW=qw.ERF_A4,MW=qw.ERF_A5,$W=mD(Vd,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+TW*n);return t*(1-((((MW*r+RW)*r+_W)*r+EW)*r+CW)*r*Math.exp(-n*n))})),FW={kernelName:Vd,backendName:"cpu",kernelFunc:$W};function OW(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(uc.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),dL({inputs:{x:a},backend:n,attrs:{shape:o}})}var zW={kernelName:Hd,backendName:"cpu",kernelFunc:OW},DW=Zz(((e,t)=>e/t)),PW=iD(Ld,DW),LW={kernelName:Ld,backendName:"cpu",kernelFunc:PW};function WW(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],d=uc.sizeFromShape(u),h=uc.getTypedArrayFromDType("float32",d),p=uc.getTypedArrayFromDType("float32",d);for(let e=0;e<a;e++){let r=NP({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=NP({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=Yz({inputs:{real:r,imag:a},backend:n}),{real:u,imag:d}=BW(i,t,n),c=qw.mergeRealAndImagArrays(u,d);for(let t=0;t<s;t++){let n=qw.getComplexWithIndex(c,t);h[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=Yz({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function BW(e,t,n){let r=uc.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return 0==(e&e-1)}(r)){let a=UW(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",uc.createScalarValue(r,"float32")),i=eD({inputs:{x:s},backend:n}),l=LW.kernelFunc({inputs:{a:e,b:s},backend:n}),u=LW.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:d,imag:h}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=qw.exponent(a*r,t,n),l=qw.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),qw.assignToTypedArray(r,s,i,a)}return r}(qw.mergeRealAndImagArrays(s,i),r,t);return qw.splitRealAndImagArrays(e)}}function UW(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=qw.mergeRealAndImagArrays(e,t),i=n/2,o=qw.complexWithEvenIndex(s),l=o.real,u=o.imag,d=[l.length],h=a.makeTensorInfo(d,"float32",l),p=a.makeTensorInfo(d,"float32",u),c=Yz({inputs:{real:h,imag:p},backend:a}),f=qw.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],A=a.makeTensorInfo(y,"float32",m),b=a.makeTensorInfo(y,"float32",g),x=Yz({inputs:{real:A,imag:b},backend:a}),v=UW(l,u,i,r,a),w=v.real,k=v.imag,I=[w.length],S=a.makeTensorInfo(I,"float32",w),N=a.makeTensorInfo(I,"float32",k),T=Yz({inputs:{real:S,imag:N},backend:a}),C=UW(m,g,i,r,a),E=C.real,_=C.imag,R=[E.length],M=a.makeTensorInfo(R,"float32",E),$=a.makeTensorInfo(R,"float32",_),F=Yz({inputs:{real:M,imag:$},backend:a}),O=qw.exponents(n,r),z=[O.real.length],D=a.makeTensorInfo(z,"float32",O.real),P=a.makeTensorInfo(z,"float32",O.imag),L=Yz({inputs:{real:D,imag:P},backend:a}),W=iP({inputs:{a:L,b:F},backend:a}),B=dD({inputs:{a:T,b:W},backend:a}),U=GP({inputs:{a:T,b:W},backend:a}),V=nD({inputs:{input:B},backend:a}),G=nD({inputs:{input:U},backend:a}),j=XL({inputs:{input:B},backend:a}),H=XL({inputs:{input:U},backend:a}),q=YL({inputs:[V,G],backend:a,attrs:{axis:0}}),K=YL({inputs:[j,H],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Z=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Z}}var VW={kernelName:Kd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=uc.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=dL({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=WW(i,!1,n),l=dL({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function GW(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||uc.inferDtype(a),o=uc.getArrayFromDType(i,uc.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var jW={kernelName:Xd,backendName:"cpu",kernelFunc:GW},HW={kernelName:Zd,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,s=r,i=uc.getTypedArrayFromDType(a.dtype,uc.sizeFromShape(a.shape)),[o,l,u,d]=a.shape,h=s.data.get(a.dataId).values;for(let e=0;e<o;e++){let t=e*u*l*d;for(let e=0;e<l;e++){let n=e*(u*d);for(let e=0;e<u;e++){let r=e*d;for(let a=0;a<d;a++){let s=Math.round(u-e-1),o=t+n+r+a,l=h[o];s>=0&&s<u&&(l=h[t+n+s*d+a]),i[o]=l}}}}return{dataId:s.write(i,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},qW=Zz(((e,t)=>Math.floor(e/t))),KW=iD(Jd,qW,null,"int32"),XW={kernelName:Jd,backendName:"cpu",kernelFunc:KW},ZW={kernelName:Kp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=QL({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){let e=m;m=dD({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=uL(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}},YW={kernelName:Xp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=mW({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p}});if(i){let e=m;m=dD({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=uL(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}},JW={kernelName:th,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=uc.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,d,h]=qw.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let p=$D(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,d,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,p.values)}},QW={kernelName:eh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;Vz([a,s],"gatherV2");let l=uc.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,d=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];uc.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let h=o;null==o&&(h=0);let p=uc.sizeFromShape(s.shape),c=qw.segment_util.collectGatherOpShapeInfo(a,s,l,h),f=dL({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=dL({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,p/c.batchSize]}}),g=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize],y=n.bufferSync(m),A=FD(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,A.dtype,A.values)}},eB={kernelName:sh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=uc.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=dL({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=WW(i,!0,n),l=dL({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},tB=mD(oh,(e=>Number.isFinite(e)?1:0),"bool"),nB={kernelName:oh,backendName:"cpu",kernelFunc:tB},rB=mD(lh,(e=>Math.abs(e)===1/0?1:0),"bool"),aB={kernelName:lh,backendName:"cpu",kernelFunc:rB},sB=mD(uh,(e=>Number.isNaN(e)?1:0),"bool"),iB={kernelName:uh,backendName:"cpu",kernelFunc:sB},oB={kernelName:ch,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=qD(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},lB=mD(mh,(e=>Math.log1p(e))),uB={kernelName:mh,backendName:"cpu",kernelFunc:lB},dB=Zz(((e,t)=>e&&t)),hB=iD(gh,dB,null,"bool"),pB={kernelName:gh,backendName:"cpu",kernelFunc:hB},cB=mD(yh,(e=>e?0:1),"bool"),fB={kernelName:yh,backendName:"cpu",kernelFunc:cB},mB=Zz(((e,t)=>e||t)),gB=iD(Ah,mB,null,"bool"),yB={kernelName:Ah,backendName:"cpu",kernelFunc:gB},AB={kernelName:xh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;Vz(a,"LRN");let u=a.shape[3],d=u-1,h=n.data.get(a.dataId).values,p=uc.sizeFromShape(a.shape),c=new Float32Array(p);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,d),a=0;for(;n<=r;n++){let e=h[n];a+=e*e}return a}for(let e=0;e<p;e++){let t=f(e),n=h[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}},bB={kernelName:vh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;Vz(i,"LRNGrad");let h=uc.sizeFromShape(i.shape),p=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){let t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*d*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-d)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function xB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,d=uc.parseAxisParam(s,l),h=d,p=qw.getAxesPermutation(h,u),c=o.data.get(a.dataId).values;if(null!=p){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];c=cP(c,l,a.dtype,p,e),h=qw.getInnerMostAxes(h.length,u),l=e}Vz(a,"max"),qw.assertAxesAreInnerMostDims("max",h,u);let[f,m]=qw.computeOutAndReduceShapes(l,h),g=YD(c,uc.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),A=f;return i&&(A=qw.expandShapeToKeepDim(f,d)),{dataId:y,shape:A,dtype:a.dtype}}var vB={kernelName:wh,backendName:"cpu",kernelFunc:xB},wB={kernelName:Ih,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Vz(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;uc.assert(qw.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,d=qw.computePool2DInfo(a.shape,s,i,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&uc.arraysEqual(d.inShape,d.outShape))u=eD({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=uc.computeStrides(a.shape),r=OL(e,a.shape,a.dtype,t,d,"max");u=n.makeTensorInfo(d.outShape,a.dtype,r.values)}return u}},kB={kernelName:Nh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Vz(a,"maxPool3d");let d=qw.computePool3DInfo(a.shape,s,i,1,o,l,u),h=DL(n.data.get(a.dataId).values,a.shape,a.dtype,uc.computeStrides(a.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},IB={kernelName:Th,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Vz([a,s],"maxPool3DGrad");let d=qw.computePool3DInfo(s.shape,i,o,1,l,u),h=function(e,t){let n=xm(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let A=y*r-p,b=A;for(;b<0;)b+=i;let x=Math.min(t.inDepth,u+A);for(let r=0;r<t.outHeight;++r){let u=r*a-c,p=u;for(;p<0;)p+=o;let v=Math.min(t.inHeight,d+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,w=c;for(;w<0;)w+=l;let k=Math.min(t.inWidth,h+c),I=Number.NEGATIVE_INFINITY,S=-1;for(let t=b;t<x;t+=i){let n=t-A;for(let r=p;r<v;r+=o){let a=r-u;for(let s=w;s<k;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=I&&(I=o,S=n*d*h+a*d+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),d),p=d.strideDepth,c=d.strideHeight,f=d.strideWidth,m=d.dilationDepth,g=d.dilationHeight,y=d.dilationWidth,A=d.effectiveFilterDepth,b=d.effectiveFilterHeight,x=d.effectiveFilterWidth,v=A-1-d.padInfo.front,w=x-1-d.padInfo.left,k=b-1-d.padInfo.top,I=xm(s.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){let s=n-v,i=r-k,o=a-w,l=0;for(let n=0;n<A;n+=m){let r=(s+n)/p;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let a=0;a<b;a+=g){let s=(i+a)/c;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let i=0;i<x;i+=y){let u=(o+i)/f;if(u<0||u>=d.outWidth||Math.floor(u)!==u)continue;let p=A*b*x-1-h.get(e,r,s,u,t)===n*b*x+a*x+i?1:0;0!==p&&(l+=S.get(e,r,s,u,t)*p)}}}I.set(l,e,n,r,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},SB={kernelName:Sh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Vz([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,p=qw.computePool2DInfo(o.shape,l,u,1,d,h),c=n.data.get(o.dataId).values,f=xm(p.outShape,o.dtype,zL(c,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,A=p.dilationWidth,b=p.effectiveFilterHeight,x=p.effectiveFilterWidth,v=x-1-p.padInfo.left,w=b-1-p.padInfo.top,k=xm(o.shape,"float32"),I=n.data.get(a.dataId).values,S=xm(a.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){let a=n-w,s=r-v,i=0;for(let n=0;n<b;n+=y){let r=(a+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<x;a+=A){let o=(s+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;let l=b*x-1-f.get(e,r,o,t)===n*x+a?1:0;0!==l&&(i+=S.get(e,r,o,t)*l)}}k.set(i,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},NB={kernelName:Ch,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=n,u=r;Vz(a,"MaxPoolWithArgmax");let d=u.data.get(a.dataId).values,h=qw.computePool2DInfo(a.shape,s,i,[1,1],o),[p,c]=function(e,t,n,r,a){let s=OL(e,0,n,uc.computeStrides(t),a,"max"),i=zL(e,t,n,a,!0,r);return[s.values,i.values]}(d,a.shape,a.dtype,l,h),f=u.write(p,h.outShape,a.dtype),m=u.write(c,h.outShape,a.dtype);return[{dataId:f,shape:h.outShape,dtype:a.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}},TB={kernelName:Eh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=uc.parseAxisParam(s,a.shape),l=qw.computeOutAndReduceShapes(a.shape,o)[1],u=uc.sizeFromShape(l),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);let p=aD({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(p);let c=PW({inputs:{a:p,b:h},backend:n});d.push(c);let f=kW({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},CB={kernelName:_h,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Vz(a,"min");let o=uc.parseAxisParam(s,a.shape),l=o,u=qw.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=fP({inputs:{x:a},backend:n,attrs:{perm:u}}),l=qw.getInnerMostAxes(l.length,a.shape.length)),qw.assertAxesAreInnerMostDims("min",l,d.shape.length);let[h,p]=qw.computeOutAndReduceShapes(d.shape,l),c=uc.sizeFromShape(p),f=uc.makeZerosTypedArray(uc.sizeFromShape(h),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(h,d.dtype,f);if(i){let e=dL({inputs:{x:g},backend:n,attrs:{shape:qw.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},EB={kernelName:Mh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;Vz(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),d="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,c=uc.computeStrides(a.shape),f=uc.sizeFromShape(o),m=o.length,g=uc.computeStrides(o),y=uc.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=uc.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-d:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+d);t=t.map(((e,t)=>e-l[t]));let n=uc.locToIndex(t,p,c);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},_B=Zz(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),RB=iD($h,_B),MB={kernelName:$h,backendName:"cpu",kernelFunc:RB},$B=yl(El());function FB(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=uc.parseAxisParam([o],a.shape),u=xB({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=qw.expandShapeToKeepDim(u.shape,l),h=dL({inputs:{x:u},backend:n,attrs:{shape:d}}),p=GP({inputs:{a,b:h},backend:n}),c=SD({inputs:{x:p},backend:n}),f=kW({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=dL({inputs:{x:f},backend:n,attrs:{shape:d}}),g=PW({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var OB={kernelName:vp,backendName:"cpu",kernelFunc:FB},zB={kernelName:Fh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;Vz(a,"multinomial");let l=o?a:FB({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],h=n.data.get(l.dataId).values,p=[u,s],c=uc.makeZerosTypedArray(uc.sizeFromShape(p),"int32");for(let e=0;e<u;++e){let t=e*d,n=new Float32Array(d-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];let r=$B.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",c)}},DB=Hk.nonMaxSuppressionV3Impl,PB={kernelName:Ph,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;Vz(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h}=DB(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},LB=Hk.nonMaxSuppressionV4Impl,WB={kernelName:Lh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Vz(a,"NonMaxSuppressionPadded");let d=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:c}=LB(d,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},BB=Hk.nonMaxSuppressionV5Impl,UB={kernelName:Wh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Vz(a,"NonMaxSuppressionWithScore");let d=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=BB(d,h,p,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},VB={kernelName:Uh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;Vz(a,"oneHot");let l=uc.sizeFromShape(a.shape),u=new Float32Array(l*s);u.fill(o);let d=n.data.get(a.dataId).values;for(let e=0;e<l;++e)d[e]>=0&&d[e]<s&&(u[e*s+d[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",u)}};function GB(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=nD({inputs:{input:r},backend:n}),t=GB({inputs:{x:e},backend:n}),a=XL({inputs:{input:r},backend:n}),s=GB({inputs:{x:a},backend:n}),i=Yz({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return GW({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var jB={kernelName:Vp,backendName:"cpu",kernelFunc:GB},HB={kernelName:Bh,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=nD({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=XL({inputs:{input:a},backend:r}),i=GB({inputs:{x:s},backend:r}),o=Yz({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return GW({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function qB(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return OW({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{uc.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),uc.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=YL({inputs:t.map((e=>{let t=OW({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var KB={kernelName:Vh,backendName:"cpu",kernelFunc:qB},XB={kernelName:Gh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;Vz(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,d=uc.sizeFromShape(a.shape),h=a.shape.length,p=uc.computeStrides(a.shape),c=uc.sizeFromShape(o),f=o.length,m=uc.computeStrides(o),g=uc.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<d;e++){let t=uc.indexToLoc(e,h,p).map(((e,t)=>e+l[t]));g[uc.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},ZB=Zz(((e,t)=>Math.pow(e,t))),YB=iD(Hh,ZB),JB={kernelName:Hh,backendName:"cpu",kernelFunc:YB},QB={kernelName:Xh,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=AP(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},eU=mD(Yh,(e=>1/e)),tU={kernelName:Yh,backendName:"cpu",kernelFunc:eU},nU={kernelName:np,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Vz(a,"resizeBilinear");let l=uc.computeStrides(a.shape),[u,d]=o,[h,p,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(uc.sizeFromShape([h,u,d,f])),y=[s&&u>1?p-1:p,s&&d>1?c-1:c],A=[s&&u>1?u-1:u,s&&d>1?d-1:d],b=0,x=y[0]/A[0],v=y[1]/A[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?x*(t+.5)-.5:x*t;let r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<d;e++){let t;t=i?v*(e+.5)-.5:v*e;let n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(c-1,Math.ceil(t)),d=o+n*l[2],h=u+n*l[2],p=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[d+e],n=m[h+e],s=t+(m[p+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[b++]=i}}}return n.makeTensorInfo([h,u,d,f],"float32",g)}},rU={kernelName:rp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Vz([s,a],"resizeBilinearGrad");let o=uc.computeStrides(a.shape),[l,u,d,h]=a.shape,[,p,c]=s.shape,f=new Float32Array(l*u*d*h),m=[i&&p>1?u-1:u,i&&c>1?d-1:d],g=[i&&p>1?p-1:p,i&&c>1?c-1:c],y=m[0]/g[0],A=m[1]/g[1],b=n.data.get(s.dataId).values,x=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<p;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,p=1-l;for(let e=0;e<c;e++){let t=e*A,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=p*u,w=p*a,k=l*u,I=l*a;for(let e=0;e<h;e++){let t=b[x++];f[c+e]+=t*v,f[m+e]+=t*w,f[g+e]+=t*k,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,d,u,h],"float32",f)}},aU={kernelName:ep,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Vz(a,"resizeNearestNeighbor");let l=uc.computeStrides(a.shape),[u,d]=o,[h,p,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*u*d*f),y=[s&&u>1?p-1:p,s&&d>1?c-1:c],A=[s&&u>1?u-1:u,s&&d>1?d-1:d],b=y[0]/A[0],x=y[1]/A[1],v=0;for(let e=0;e<h;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?b*(e+.5):b*e,r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<d;e++){let t=i?x*(e+.5):x*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,u,d,f],a.dtype,g)}},sU={kernelName:tp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Vz([s,a],"resizeNearestNeighborGrad");let o=uc.computeStrides(a.shape),l=uc.computeStrides(s.shape),[u,d,h,p]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*d*h*p),g=n.data.get(s.dataId).values,y=[i&&c>1?d-1:d,i&&f>1?h-1:h],A=[i&&c>1?c-1:c,i&&f>1?f-1:f],b=y[0]/A[0],x=y[1]/A[1],v=1/b,w=1/x,k=2*Math.ceil(v)+2,I=2*Math.ceil(w)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=t+e*o[1],r=Math.floor(e*v),a=Math.floor(r-k/2);for(let r=0;r<h;r++){let s=n+r*o[2],u=Math.floor(r*w),y=Math.floor(u-I/2);for(let n=0;n<p;n++){let o=0;for(let s=0;s<k;s++){let u=s+a;if(u<0||u>=c)continue;let p=t+u*l[1],m=u*b;if(e===Math.min(d-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){let t=e+y;if(t<0||t>=f)continue;let a=p+t*l[2],s=t*x;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},iU={kernelName:sp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;Vz(a,"reverse");let i=a.shape.length,o=uc.parseAxisParam(s,a.shape);if(0===i)return eD({inputs:{x:a},backend:n});let l=new Lc(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},oU={kernelName:Hp,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=n,l=r,u=uc.getTypedArrayFromDType(a.dtype,uc.sizeFromShape(a.shape)),[d,h,p,c]=a.shape,[f,m]=qw.getImageCenter(o,h,p),g=Math.sin(s),y=Math.cos(s),A=l.data.get(a.dataId).values;for(let e=0;e<d;e++){let t=e*p*h*c;for(let e=0;e<h;e++){let n=e*(p*c);for(let r=0;r<p;r++){let a=r*c;for(let s=0;s<c;s++){let o=[d,e,r,s],l=o[2],b=o[1],x=(l-f)*y-(b-m)*g,v=(l-f)*g+(b-m)*y;x=Math.round(x+f),v=Math.round(v+m);let w=i;"number"!=typeof i&&(w=3===s?255:i[s]),x>=0&&x<p&&v>=0&&v<h&&(w=A[t+v*(p*c)+x*c+s]),u[t+n+a+s]=w}}}}return{dataId:l.write(u,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},lU=mD(ip,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),uU={kernelName:ip,backendName:"cpu",kernelFunc:lU};function dU(e,t,n,r,a,s,i,o,l,u){let d=[r/a,a],h=e.values,p=t.values;if(0===r)return xm(n,t.dtype);let c=xm(d,t.dtype);c.values.fill(l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=h[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?c.values[l*a+n]+=p[e*a+n]:c.values[l*a+n]=0===t.rank?p[0]:p[e*a+n]}return c}var hU={kernelName:lp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=qw.calculateShapes(s,a,i),p=dU(n.bufferSync(a),n.bufferSync(s),i,h,u,l,o,d,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},pU={kernelName:up,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;Vz([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=Jc(a.dtype,s.dtype),h=uc.makeZerosTypedArray(uc.sizeFromShape(a.shape),d),p=0,c=0===i||i>1||1===a.shape.length?1:uc.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?h[p++]=l[e]:h[p++]=u[e];return n.makeTensorInfo(a.shape,d,h)}},cU=qw.SELU_SCALEALPHA,fU=qw.SELU_SCALE,mU=mD(dp,(e=>e>=0?fU*e:cU*(Math.exp(e)-1))),gU={kernelName:dp,backendName:"cpu",kernelFunc:mU},yU=mD(fp,(e=>e<0?-1:e>0?1:0)),AU={kernelName:fp,backendName:"cpu",kernelFunc:yU},bU=mD(pp,(e=>Math.sin(e))),xU={kernelName:pp,backendName:"cpu",kernelFunc:bU},vU=mD(cp,(e=>Math.sinh(e))),wU={kernelName:cp,backendName:"cpu",kernelFunc:vU},kU=Math.log(1.1920928955078125e-7)+2,IU=mD(gp,(e=>{let t,n=e>-kU,r=e<kU,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),SU={kernelName:gp,backendName:"cpu",kernelFunc:IU},NU={kernelName:bp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Vz([a],"spaceToBatchND");let o=uc.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=XB.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=qw.getReshaped(u.shape,s,o,!1),h=qw.getPermuted(d.length,s.length,!1),p=qw.getReshapedPermuted(u.shape,s,o,!1),c=dL({inputs:{x:u},backend:n,attrs:{shape:d}}),f=fP({inputs:{x:c},backend:n,attrs:{perm:h}}),m=dL({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}},TU={kernelName:wp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values[0],[h,p,c,f,m]=CP(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},CU={kernelName:kp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,d,h]=EP(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},EU={kernelName:Ip,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=_P(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}},_U={kernelName:Sp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=_P(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}},RU={kernelName:Np,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=qw.calculateShapes(s,a,o),c=dU(n.bufferSync(a),n.bufferSync(s),o,p,d,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,c.dtype,c.values)}},MU={kernelName:xp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=uc.parseAxisParam(i,a.shape)[0],l=qw.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let r=NP({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},$U={kernelName:Cp,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{x:r}=t,a=n;Vz(r,"square");let s=a.data.get(r.dataId).values,i=new Float32Array(s.length);for(let e=0;e<s.length;++e){let t=s[e];i[e]=t*t}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},FU=mD(Gp,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),OU={kernelName:Gp,backendName:"cpu",kernelFunc:FU},zU={kernelName:Ep,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;Vz(a,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:v}=dg.sliceInfo(a.shape,s,i,o,l,u,d,h,p);if(g)c=dL({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||A){uc.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));let e=dg.computeOutShape(b,x,v),t=NP({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});c=dL({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=DP(f,n.bufferSync(a),v,b);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}},DU={kernelName:_p,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.data.get(d.dataId).values,c=n.data.get(h.dataId).values,[f,m]=PP(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},PU={kernelName:Rp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,d,h]=WP(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},LU={kernelName:Mp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=BP(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},WU=mD(Fp,(e=>Math.tan(e))),BU={kernelName:Fp,backendName:"cpu",kernelFunc:WU},UU=mD(Op,(e=>Math.tanh(e))),VU={kernelName:zp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;Vz(a,"tile");let i=HP(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},GU={kernelName:Dp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;Vz(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=XP(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},jU={kernelName:Pp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[d,h,p,c]=a.shape,[f,m]=null!=u?u:[h,p],g=[d,f,m,c],y=uc.computeStrides(a.shape),A=y[0],b=y[1],x=y[2],v=uc.getTypedArrayFromDType(a.dtype,uc.sizeFromShape(g));v.fill(l);let w=r.data.get(a.dataId).values,k=r.data.get(s.dataId).values;for(let e=0;e<d;++e){let t=1===s.shape[0]?k:k.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<c;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let d=(t[0]*r+t[1]*n+t[2])/u,c=(t[3]*r+t[4]*n+t[5])/u,f=HU(d,p,o),m=HU(c,h,o);switch(i){case"nearest":s=KU(w,h,p,A,b,x,e,m,f,a,l);break;case"bilinear":s=XU(w,h,p,A,b,x,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*A+n*b+r*x+a]=s}return r.makeTensorInfo(g,a.dtype,v)}return{dataId:r.write(v,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function HU(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return uc.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return uc.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return uc.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function qU(e,t,n,r,a,s,i,o,l,u,d){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:d}function KU(e,t,n,r,a,s,i,o,l,u,d){return qU(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,d)}function XU(e,t,n,r,a,s,i,o,l,u,d){let h=Math.floor(o),p=Math.floor(l),c=h+1,f=p+1;return(c-o)*((f-l)*qU(e,t,n,r,a,s,i,h,p,u,d)+(l-p)*qU(e,t,n,r,a,s,i,h,f,u,d))+(o-h)*((f-l)*qU(e,t,n,r,a,s,i,c,p,u,d)+(l-p)*qU(e,t,n,r,a,s,i,c,f,u,d))}var ZU={kernelName:Wp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Vz(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=ZP(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},YU={kernelName:Bp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let d=new Array(i).fill(0),h=a.shape.slice();h[s]=1;let p=new Array(o);for(let e=0;e<p.length;e++){d[s]=e;let t=NP({inputs:{x:a},backend:n,attrs:{begin:d,size:h}});p[e]=dL({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},JU={kernelName:Up,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;Vz(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,d=s;for(let e=0;e<u;++e){let t=OW({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,l.push(t)}for(let e=0;e<i;++e){let t=uc.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=wD({inputs:{a:r,b:d},backend:n}),i=aD({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=iP({inputs:{a:i,b:a},backend:n}),h=kW({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(s),l.push(i),l.push(u),l.push(h)}let h=qB({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},QU=[fL,Xz,gL,AL,hD,bL,xL,vL,wL,kL,SL,TL,EL,ML,FL,PL,LL,WL,BL,cL,UL,VL,GL,jL,sD,bD,qL,Jz,KL,JL,eW,tW,nW,rW,aW,sW,oW,uW,dW,hW,pW,cW,fW,gW,yW,AW,bW,xW,vW,wW,SW,QP,NW,kD,FW,ND,zW,ED,VW,jW,HW,MD,XW,ZW,YW,JW,QW,DD,WD,tD,eB,ZL,nB,aB,iB,tL,VD,HD,oB,ZD,uB,pB,fB,yB,AB,bB,vB,eP,wB,kB,IB,SB,NB,TB,CB,rP,EB,MB,zB,oP,uP,PB,WB,UB,pP,VB,HB,KB,XB,JB,aL,yP,QB,rD,LW,tU,iL,lL,hL,nU,rU,aU,sU,iU,oU,uU,vP,hU,pU,gU,IP,AU,xU,wU,TP,OB,SU,NU,TU,CU,EU,_U,RU,MU,$P,$U,zP,OU,zU,DU,PU,LU,jP,IW,BU,{kernelName:Op,backendName:"cpu",kernelFunc:UU},VU,GU,jU,mP,ZU,YU,JU,jB];for(let e of QU)rc(e);var eV={};gl(eV,{assertNotComplex:()=>aG,bindCanvasToFramebuffer:()=>FV,bindColorTextureToFramebuffer:()=>OV,bindTextureToProgramUniformSampler:()=>$V,bindTextureUnit:()=>EV,bindVertexBufferToProgramAttribute:()=>CV,callAndCheck:()=>uV,canBeRepresented:()=>dV,createFragmentShader:()=>fV,createFramebuffer:()=>TV,createProgram:()=>bV,createStaticIndexBuffer:()=>kV,createStaticVertexBuffer:()=>wV,createTexture:()=>SV,createVertexShader:()=>cV,getBatchDim:()=>BV,getExtensionOrThrow:()=>pV,getFramebufferErrorMessage:()=>PV,getMaxTexturesInShader:()=>ZV,getNumChannels:()=>IV,getProgramUniformLocation:()=>MV,getProgramUniformLocationOrThrow:()=>RV,getRowsCols:()=>UV,getShapeAs3D:()=>VV,getTextureShapeFromLogicalShape:()=>GV,getWebGLDisjointQueryTimerVersion:()=>YV,getWebGLErrorMessage:()=>hV,getWebGLMaxTextureSize:()=>qV,hasExtension:()=>JV,isCapableOfRenderingToFloatTexture:()=>eG,isDownloadFloatTextureEnabled:()=>tG,isReshapeFree:()=>HV,isWebGLFenceEnabled:()=>rG,isWebGLVersionEnabled:()=>QV,linkProgram:()=>xV,logShaderSourceAndInfoLog:()=>AV,resetMaxTextureSize:()=>KV,resetMaxTexturesInShader:()=>XV,unbindColorTextureFromFramebuffer:()=>zV,unbindTextureUnit:()=>_V,validateFramebuffer:()=>DV,validateProgram:()=>vV,validateTextureSize:()=>NV});var tV={},nV={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function rV(e,t){tV[e]=t}function aV(e,t){if(!(e in tV)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete tV[e]}),!1),1===e?n.getContext("webgl",nV)||n.getContext("experimental-webgl",nV):n.getContext("webgl2",nV)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;tV[e]=n}let n=tV[e];return null==n||n.isContextLost()?(delete tV[e],aV(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),tV[e])}function sV(e,t){return[t,e]}function iV(e){let t=uc.sizeFromShape(e),n=Math.ceil(t/4);return uc.sizeToSquarishShape(n)}function oV(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function lV(e,t){let n,r,a,s,i,o,l,u,d,h,p=e;return 2===Lu().getNumber("WEBGL_VERSION")?(n=p.R32F,r=p.R16F,a=p.RGBA16F,s=p.RGBA32F,i=p.RED,l=4,u=1,d=p.HALF_FLOAT,h=p.FLOAT,o=p.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=p.RGBA,i=e.RGBA,l=4,u=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:h}}function uV(e,t){let n=t();return Lu().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+hV(e,t))}(e),n}function dV(e){return!!(Lu().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function hV(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function pV(e,t){return LV(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function cV(e,t){let n=LV(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(uV(e,(()=>e.shaderSource(n,t))),uV(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function fV(e,t){let n=LV(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(uV(e,(()=>e.shaderSource(n,t))),uV(e,(()=>e.compileShader(n))),Lu().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw AV(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var mV,gV,yV=/ERROR: [0-9]+:([0-9]+):/g;function AV(e,t){let n=yV.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>uc.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),d=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${uc.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function bV(e){return LV(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function xV(e,t){if(uV(e,(()=>e.linkProgram(t))),!Lu().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function vV(e,t){if(uV(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function wV(e,t){let n=LV(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return uV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),uV(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function kV(e,t){let n=LV(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return uV(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),uV(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function IV(){return 2===Lu().getNumber("WEBGL_VERSION")?1:4}function SV(e){return LV(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function NV(e,t){let n=Lu().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function TV(e){return LV(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function CV(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(uV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),uV(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),uV(e,(()=>e.enableVertexAttribArray(o))),!0)}function EV(e,t,n){WV(e,n),uV(e,(()=>e.activeTexture(e.TEXTURE0+n))),uV(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function _V(e,t){WV(e,t),uV(e,(()=>e.activeTexture(e.TEXTURE0+t))),uV(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function RV(e,t,n){return LV(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function MV(e,t,n){return e.getUniformLocation(t,n)}function $V(e,t,n,r){uV(e,(()=>EV(e,t,r))),uV(e,(()=>e.uniform1i(n,r)))}function FV(e){uV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),uV(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),uV(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function OV(e,t,n){uV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),uV(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function zV(e,t){uV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),uV(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function DV(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+PV(e,t))}function PV(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function LV(e,t,n){let r=uV(e,(()=>t()));if(null==r)throw new Error(n);return r}function WV(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function BV(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return uc.sizeFromShape(e.slice(0,e.length-t))}function UV(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function VV(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[BV(e),...UV(e)]),t}function GV(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Lu().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?uc.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=uc.squeezeShape(e).newShape);let r=uc.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let t=BV(e),n=2,a=2;return e.length&&([n,a]=UV(e)),r=t*(n/2)*(a/2),uc.sizeToSquarishShape(r).map((e=>2*e))}return uc.sizeToSquarishShape(r)}function jV(e){return e%2==0}function HV(e,t){if(e=e.slice(-2),t=t.slice(-2),uc.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||jV(n)&&jV(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&jV(e[0])&&jV(t[0])}function qV(e){if(null==mV){let t=aV(e);mV=t.getParameter(t.MAX_TEXTURE_SIZE)}return mV}function KV(){mV=null}function XV(){gV=null}function ZV(e){if(null==gV){let t=aV(e);gV=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,gV)}function YV(e){if(0===e)return 0;let t,n=aV(e);return t=JV(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:JV(n,"EXT_disjoint_timer_query")?1:0,t}function JV(e,t){return null!=e.getExtension(t)}function QV(e){try{if(null!=aV(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function eG(e){if(0===e)return!1;let t=aV(e);if(1===e){if(!JV(t,"OES_texture_float"))return!1}else if(!JV(t,"EXT_color_buffer_float"))return!1;return nG(t)}function tG(e){if(0===e)return!1;let t=aV(e);if(1!==e){if(JV(t,"EXT_color_buffer_float"))return nG(t);let e="EXT_color_buffer_half_float";if(JV(t,e)){let n=t.getExtension(e);return function(e,t){let n=lV(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!(!JV(t,"OES_texture_float")||!JV(t,"WEBGL_color_buffer_float"))&&nG(t)}function nG(e){let t=lV(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function rG(e){return 2===e&&null!=aV(e).fenceSync}function aG(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&uc.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var sG=Lu();function iG(){let e,t,n,r,a,s,i,o,l,u;return 2===Lu().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function oG(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",r=uc.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function lG(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",r=uc.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function uG(e,t){let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}function dG(e){let t=uc.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}sG.registerFlag("HAS_WEBGL",(()=>sG.getNumber("WEBGL_VERSION")>0)),sG.registerFlag("WEBGL_VERSION",(()=>QV(2)?2:QV(1)?1:0)),sG.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),sG.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===sG.get("WEBGL_VERSION"))),sG.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),sG.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),sG.registerFlag("WEBGL_PACK",(()=>sG.getBool("HAS_WEBGL"))),sG.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>sG.getBool("WEBGL_PACK"))),sG.registerFlag("WEBGL_PACK_CLIP",(()=>sG.getBool("WEBGL_PACK"))),sG.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>sG.getBool("WEBGL_PACK"))),sG.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>sG.getBool("WEBGL_PACK"))),sG.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>sG.getBool("WEBGL_PACK"))),sG.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>sG.getBool("WEBGL_PACK"))),sG.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>sG.getBool("WEBGL_PACK"))),sG.registerFlag("WEBGL_PACK_REDUCE",(()=>sG.getBool("WEBGL_PACK"))),sG.registerFlag("WEBGL_LAZILY_UNPACK",(()=>sG.getBool("WEBGL_PACK"))),sG.registerFlag("WEBGL_CONV_IM2COL",(()=>sG.getBool("WEBGL_PACK"))),sG.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>qV(sG.getNumber("WEBGL_VERSION")))),sG.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>ZV(sG.getNumber("WEBGL_VERSION")))),sG.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=sG.getNumber("WEBGL_VERSION");return 0===e?0:YV(e)})),sG.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>sG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ff.isMobile())),sG.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>eG(sG.getNumber("WEBGL_VERSION")))),sG.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!sG.getBool("WEBGL_FORCE_F16_TEXTURES")&&sG.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),sG.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>tG(sG.getNumber("WEBGL_VERSION")))),sG.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>rG(sG.getNumber("WEBGL_VERSION")))),sG.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>sG.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),sG.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),sG.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ff.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),sG.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),sG.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),sG.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),sG.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var hG="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:pG}=qw;function cG(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e.shapeInfo.logicalShape;switch(n.length){case 0:return xG(e,t);case 1:return vG(e,t);case 2:return wG(e,t);case 3:return kG(e,t);case 4:return IG(e,t);case 5:return SG(e);case 6:return NG(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function fG(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${iG().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=iG();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=iG();if(null!=s&&uc.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=[1,2],s=["b","row","col"];return`\n        ${fG(MG(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${$G(s,r)});\n        }\n      `}let o=iG();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],d=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d*Math.ceil(n[1]/2)}, ${d}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=iG();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],h=Math.ceil(s[i-1]/2),p=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${c}) {\n      int index = ${f};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var mG="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gG="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",yG="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",AG="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function bG(e){return`offset${e}`}function xG(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=bG(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function vG(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${TG(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=bG(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function wG(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&uc.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=uc.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${cG(MG(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${$G(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${TG(e)}\n      }\n    `;let u=s[0],d=s[1],h=bG(r);return 1===d?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function kG(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=uc.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${cG(MG(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${$G(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${TG(e)}\n      }\n    `;let d=e.shapeInfo.texShape,h=d[0],p=d[1],c=e.shapeInfo.flatOffset;if(p===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=bG(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function IG(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=uc.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${cG(MG(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${$G(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${TG(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(c===s&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=bG(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${c}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}function SG(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=uc.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${cG(MG(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${$G(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${TG(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],c=h[1];return c===o&&null==d?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:c===a&&null==d?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${bG(n)};\n      vec2 uv = uvFromFlat(${p}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function NG(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=uc.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${cG(MG(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${$G(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${TG(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,c=p[0],f=p[1];return f===d&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===i&&null==h?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${bG(n)};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function TG(e){let t=e.name,n=uc.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function CG(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=pG(e.shapeInfo.logicalShape,t.logicalShape),u=_G(o),d=o-i,h=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${h[e+d]} = 0;`)).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+d]}`)).join(", ");let c="return outputValue;",f=1===uc.sizeFromShape(e.shapeInfo.logicalShape),m=1===uc.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${p});\n      ${c}\n    }\n  `}function EG(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&uc.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,d=_G(l),h=pG(e.shapeInfo.logicalShape,t.logicalShape),p=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${c[e+p]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+p]}`)).join(", "),`\n    float ${a}() {\n      ${d} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}function _G(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function RG(e,t,n){let{newShape:r,keptDims:a}=uc.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!uc.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function MG(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function $G(e,t){return t.map((t=>e[t])).join(", ")}function FG(e,t,n){let r,a,s,i={},o={},l={},u=[],d=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===Lu().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(n,"INFINITY",!1));let p=!1;for(let r=0;r<t.variableNames.length;r++){let a=t.variableNames[r];i[a]=e.getUniformLocation(n,a,p),i[`offset${a}`]=e.getUniformLocation(n,`offset${a}`,p),t.enableShapeUniforms&&(o[`${a}Shape`]=e.getUniformLocation(n,`${a}Shape`,p),l[`${a}TexShape`]=e.getUniformLocation(n,`${a}TexShape`,p))}return t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",p),s=e.getUniformLocation(n,"outShapeStrides",p),a=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{u[r]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:i,customUniformLocations:u,infLoc:d,nanLoc:h,inShapesLocations:o,inTexShapesLocations:l,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function OG(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!uc.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!uc.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function zG(e){return Lu().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var DG={};function PG(e){let t=iG();return cV(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function LG(e){return wV(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function WG(e){return kV(e,new Uint16Array([0,1,2,2,1,3]))}function BG(e,t,n,r,a,s){NV(t,n);let i=SV(e),o=e.TEXTURE_2D;return uV(e,(()=>e.bindTexture(o,i))),uV(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),uV(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),uV(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),uV(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Lu().getNumber("WEBGL_VERSION")?uV(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):uV(e,(()=>e.texStorage2D(o,1,r,t,n))),uV(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function UG(e){return e.internalFormatFloat}function VG(e,t,n,r){let[a,s]=sV(t,n);return BG(e,a,s,UG(r),r.textureFormatFloat,e.FLOAT)}function GG(e){return e.internalFormatHalfFloat}function jG(e,t,n,r){let[a,s]=sV(t,n);return BG(e,a,s,GG(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function HG(e){return e.downloadTextureFormat}function qG(e,t,n,r){let[a,s]=sV(t,n);return BG(e,a,s,HG(r),e.RGBA,e.UNSIGNED_BYTE)}function KG(e){return e.internalFormatPackedFloat}function XG(e,t,n,r){let[a,s]=oV(t,n);return BG(e,a,s,KG(r),e.RGBA,e.FLOAT)}function ZG(e){return e.internalFormatPackedHalfFloat}function YG(e,t,n,r){let[a,s]=oV(t,n);return BG(e,a,s,ZG(r),e.RGBA,r.textureTypeHalfFloat)}function JG(e,t,n){return uV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),CV(e,t,"clipSpacePos",n,3,20,0)&&CV(e,t,"uv",n,2,20,12)}function QG(e,t,n,r,a,s){let i,o,l;uV(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Lu().getNumber("WEBGL_VERSION")?uV(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):uV(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),uV(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function ej(e,t,n){uV(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Lu().getNumber("WEBGL_VERSION")?uV(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):uV(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Lu().getNumber("WEBGL_VERSION")?uV(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):uV(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),uV(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function tj(e,t,n,r){let a=e.createBuffer();uV(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return uV(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),uV(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),uV(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function nj(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function rj(e,t,n,r){let[a,s]=sV(t,n),i=new Uint8Array(function(e,t){return 4*e}(t*n));return uV(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function aj(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=oV(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function sj(e,t,n){let r=new Float32Array(t*n*4);return uV(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}gl(DG,{bindVertexProgramAttributeStreams:()=>JG,createBufferFromOutputTexture:()=>tj,createFloat16MatrixTexture:()=>jG,createFloat16PackedMatrixTexture:()=>YG,createFloat32MatrixTexture:()=>VG,createIndexBuffer:()=>WG,createPackedMatrixTexture:()=>XG,createUnsignedBytesMatrixTexture:()=>qG,createVertexBuffer:()=>LG,createVertexShader:()=>PG,downloadByteEncodedFloatMatrixFromOutputTexture:()=>rj,downloadFloat32MatrixFromBuffer:()=>nj,downloadMatrixFromPackedOutputTexture:()=>sj,downloadPackedMatrixFromBuffer:()=>aj,getInternalFormatForFloat16MatrixTexture:()=>GG,getInternalFormatForFloat16PackedMatrixTexture:()=>ZG,getInternalFormatForFloat32MatrixTexture:()=>UG,getInternalFormatForPackedMatrixTexture:()=>KG,getInternalFormatForUnsignedBytesMatrixTexture:()=>HG,uploadDenseMatrixToTexture:()=>QG,uploadPixelDataToTexture:()=>ej});var ij=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Lu().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,rV(t,e)):this.gl=aV(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Lu().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=pV(this.gl,e),JV(this.gl,t))this.textureHalfFloatExtension=pV(this.gl,t);else if(Lu().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),JV(this.gl,r))this.colorBufferHalfFloatExtension=pV(this.gl,r);else if(Lu().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",JV(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!JV(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=LG(this.gl),this.indexBuffer=WG(this.gl),this.framebuffer=TV(this.gl),this.textureConfig=lV(this.gl,this.textureHalfFloatExtension)}get debug(){return Lu().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;uV(e,(()=>e.finish())),uV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),uV(e,(()=>e.deleteFramebuffer(this.framebuffer))),uV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),uV(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),uV(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),VG(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),jG(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),qG(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),ej(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),QG(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),YG(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),XG(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(zV(this.gl,this.framebuffer),this.outputTexture=null),uV(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>rj(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return aj(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return nj(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=tj(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Lu().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>sj(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=PG(t));let n=bV(t);return uV(t,(()=>t.attachShader(n,this.vertexShader))),uV(t,(()=>t.attachShader(n,e))),xV(t,n),this.debug&&vV(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=JG(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&uV(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&vV(this.gl,this.program),uV(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?RV(this.gl,e,t):MV(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),uV(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),$V(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=oV(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&vV(this.gl,this.program),DV(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),uV(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),uV(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=pV(this.gl,2===Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await uc.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&uc.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),OV(this.gl,e,this.framebuffer),this.debug&&DV(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(OV(this.gl,this.outputTexture,this.framebuffer),this.debug&&DV(this.gl)):zV(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;OV(r,e,this.framebuffer),this.debug&&DV(r),this.outputTexture=e,uV(r,(()=>r.viewport(0,0,t,n))),uV(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),uV(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}},{addImpl:oj,bincountImpl:lj,bincountReduceImpl:uj,ceilImpl:dj,concatImpl:hj,equalImpl:pj,expImpl:cj,expm1Impl:fj,floorImpl:mj,gatherNdImpl:gj,gatherV2Impl:yj,greaterImpl:Aj,greaterEqualImpl:bj,lessImpl:xj,lessEqualImpl:vj,linSpaceImpl:wj,logImpl:kj,maxImpl:Ij,maximumImpl:Sj,minimumImpl:Nj,multiplyImpl:Tj,negImpl:Cj,notEqualImpl:Ej,prodImpl:_j,rangeImpl:Rj,rsqrtImpl:Mj,sigmoidImpl:$j,simpleAbsImpl:Fj,sliceImpl:Oj,sparseFillEmptyRowsImpl:zj,sparseReshapeImpl:Dj,sparseSegmentReductionImpl:Pj,sqrtImpl:Lj,stridedSliceImpl:Wj,stringNGramsImpl:Bj,stringSplitImpl:Uj,stringToHashBucketFastImpl:Vj,subImpl:Gj,tileImpl:jj,topKImpl:Hj,transposeImpl:qj,uniqueImpl:Kj}=qz;function Xj(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Zj(e,t){return 1===t?[e]:Xj(e,t)}var Yj=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=zG(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",r=uG(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):oG(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":dG(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function Jj(e,t,n,r,a){let s,i=function(e,t){switch(e){case 3:return KG(t);case 4:return ZG(t);case 1:return UG(t);case 0:return GG(t);case 2:return HG(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=oV(e[0],e[1]);s=t*n}else{let[t,n]=sV(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function Qj(e,t){if(1===e)return 3;if(0===e||null==e)return function(e){return Lu().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}(t);if(3===e||2===e)return 2;throw new Error(`Unknown logical texture type ${e}`)}function eH(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var tH=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=zG(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},nH="if (isnan(x)) return x;",rH="return x;",aH="return abs(x);",sH="return (x >= 0.0) ? x : (exp(x) - 1.0);",iH=nH+"\n  return (x < 0.0) ? 0.0 : x;\n",oH=nH+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",lH="return x;",uH="return 1.0 / (1.0 + exp(-1.0 * x));",dH="return x;",hH="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",pH="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cH="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",fH="return 1.0 / (1.0 + exp(-1.0 * x));",mH=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=zG(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},gH=Hk.whereImpl,yH={},AH=Lu().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),bH=class extends Ll{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Lu().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof ij)t=e;else{let n=aV(Lu().getNumber("WEBGL_VERSION"),e);t=new ij(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=aV(Lu().getNumber("WEBGL_VERSION"));t=new ij(e),this.binaryCache=function(e){return e in yH||(yH[e]={}),yH[e]}(Lu().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=Qj(t,n),a=eH(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=Jj(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return 3===r?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):4===r?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):1===r?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):0===r?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):2===r&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=Qj(n,r),s=eH(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Jj(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Lu().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Lu().global.screen?1024:Lu().global.screen.height*Lu().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Pl(this,Zg())}nextDataId(){return bH.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Lu().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Lu().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:1,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(Lu().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:1,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new mH(i,lH):new tH(i,lH);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,d=null!=this.activeTimers;if(d&&(l=uc.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=qw.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return d&&(this.downloadWaitMs+=uc.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new mH(r,lH):new tH(r,lH);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Lu().getBool("DEBUG")&&!Lu().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Lu().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==s&&Lu().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...iV(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=qw.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{let e=uc.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){let e=this.gpgpu.gl;uV(e,(()=>e.deleteBuffer(d)))}let h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Zg().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new mH(a,lH):new tH(a,lH);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape);return{tensorRef:Zg().makeTensorFromDataId(u.dataId,u.shape,u.dtype),...this.texData.get(u.dataId).texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>uc.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xm(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!dV(n))throw Lu().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=uc.sizeFromShape(t);if(Lu().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...iV(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Lu().getBool("WEBGL_PACK")&&!0===r,i=s?VV(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=iG();this.outputShape=e,this.userCode=`\n      ${hG}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=iG();this.outputShape=e,this.userCode=`\n      ${hG}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=uc.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=uc.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=uc.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:uc.now(),endMs:null}}endTimer(e){return Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=uc.now(),e)}async getQueryTime(e){if(Lu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:AH;return Lu().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&uc.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){qw.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return gH(e.shape,t)}packedUnaryOp(e,t,n){let r=new mH(e.shape,t),a=this.compileAndRun(r,[e],n);return Zg().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=Fj(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Lu().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,aH,e.dtype);let t=new tH(e.shape,aH),n=this.compileAndRun(t,[e]);return Zg().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&uc.isString(n[0])){let a=n.map((e=>uc.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:r}=this.makeTensorInfo(e,t,n);return Zg().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=zG(this.outputShape.length);let t=e.length,n=Zj("rc",t),r=_G(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=zG(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=Zj("rc",this.rank),t=_G(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[BV(e.shape),...UV(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[BV(t),...UV(t)],s=new Yj(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=uc.sizeFromShape(a),n=t[0]*t[1]*4;uc.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=VV(a);i=r?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=iG();this.outputShape=e,this.enableShapeUniforms=zG(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?lG(["r","c","d"],e):oG(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}(o):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=iG();this.outputShape=e,this.enableShapeUniforms=zG(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?lG(["r","c","d"],e):oG(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}(o);let l=[null!=t?t:iV(o)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0,i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),0===e.outPackingScheme){let t=null!=s?s:iV(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===uc.sizeFromShape(i.shape))return o.values=uc.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&uc.sizeFromShape(t.shape)<=Lu().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!HV(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let d,h={shape:i.shape,texData:o,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=RG(e.packedInputs,t.shape,s),u="",d="",h="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=uc.computeStrides(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else d=`${o[0]>1}_${o[1]>1}`;let p=t.shape.length,c=2===o.length&&uc.arraysEqual(t.shape,s),f=1===uc.sizeFromShape(t.shape),m=qw.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&uc.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${d}_${h}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${Lu().getNumber("WEBGL_VERSION")}`,s}(e,u,h),c=this.getAndSaveBinary(p,(()=>function(e,t,n,r){let a=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=function(e,t,n){let r=[];if(e.forEach((e=>{let t=uc.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=RG(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let a,s,i=r.join("\n"),o=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,a="";a+=n?fG(e,r):cG(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?CG(e,t):EG(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=iG(),d=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${mG}\n    ${gG}\n    ${yG}\n  `}(u);return t.isPacked?(a=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(uc.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(a=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return uc.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${lG(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=oG(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${lG(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=oG(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=oG(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=oG(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(h+=AG),[h,d,s,i,a,o,n.userCode].join("\n")}(a,i,t),l=fV(e.gl,o),u=e.createProgram(l);return Lu().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,...FG(e,t,u)}}(this.gpgpu,e,u,h))),f=null!=this.activeTimers;f&&(d=this.startTimer()),Lu().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(OG(t.inShapeInfos,n),OG([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Lu().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(o){let{uniformShape:r}=RG(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(uc.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}}));let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=uc.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{let s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,c,u,h,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let m=Lu().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=uc.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Lu().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Lu().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Qg((()=>{if(!Lu().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Lu().getBool("DEBUG");Lu().set("DEBUG",!1);let t=this.abs(Tx(1e-8)).dataSync()[0];if(Lu().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=uc.now());let d=t.texShape;if(null==d&&(d=GV(n,o),t.texShape=d),null!=a){let e,s=VV(n),i=d[1],h=d[0],p=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!p)&&([i,h]=oV(d[0],d[1])),e=o?new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=iG();this.outputShape=e,this.enableShapeUniforms=zG(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":dG(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}(s,p):new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=iG();this.outputShape=e,this.enableShapeUniforms=zG(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":dG(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}(s,p);let c=p?[h,i]:d,f=this.makeTensorInfo(c,r),m=this.texData.get(f.dataId);m.usage=p?2:1,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);let g=[[h,i]],y=!0,A=this.runWebGLProgram(e,[f],r,g,y),b=this.texData.get(A.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,Lu().get("ENGINE_COMPILE_ONLY")?this.disposeData(A.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(A.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=uc.now()-l)}else{let e=this.acquireTexture(d,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*uc.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Hw(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(AV(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=FG(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}},xH=bH;xH.nextDataId=0;var vH="0.0.0";function wH(){Lu().set("WEBGL_FORCE_F16_TEXTURES",!0)}ff.isBrowser()&&uy("webgl",(()=>new xH),2);var kH={forceHalfFloat:wH},IH=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=qw.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=zG(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},SH=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=qw.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=zG(a);let s="";if(r)if(0===a||1===uc.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${_G(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=Zj("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function NH(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var TH={kernelName:ah,backendName:"webgl",kernelFunc:NH};function CH(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=NH({inputs:{x:r},backend:n}),l=NH({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var EH={kernelName:gd,backendName:"webgl",kernelFunc:CH},_H="return (a < 0.) ? b * a : a;",RH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",MH={kernelName:dh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",uc.createScalarValue(s,"float32")),o=Lu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SH(RH,a.shape,i.shape):new IH(_H,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},$H="return (a < 0.) ? b * a : a;",FH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",OH={kernelName:qh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Lu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SH(FH,r.shape,a.shape):new IH($H,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};function zH(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:a}=e;return e=>{let s,{inputs:i,backend:o}=e,{x:l}=i,u=o,d=a||l.dtype;if(u.shouldExecuteOnCPU([l])&&null!=r){let e=u.texData.get(l.dataId),t=r(e.values,d);return u.makeTensorInfo(l.shape,d,t)}return s=Lu().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new mH(l.shape,n):new tH(l.shape,t),u.runWebGLProgram(s,[l],d)}}function DH(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:a=!1,cpuKernelImpl:s,dtype:i}=e;return e=>{let{inputs:o,backend:l}=e,{a:u,b:d}=o,h=l;if(a&&"complex64"===u.dtype){let e=h.texData.get(u.dataId),n=h.texData.get(d.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{let[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:d.shape},i=new IH(t,u.shape,d.shape);return h.runWebGLProgram(i,[a,s],Jc(n.dtype,r.dtype))})),s=CH({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),s}let p,c=i||Jc(u.dtype,d.dtype);if(("string"===u.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([u,d]))&&null!=s){let e=h.texData.get(u.dataId).values,t=h.texData.get(d.dataId).values,n="string"===u.dtype?qw.fromUint8ToStringArray(e):e,r="string"===u.dtype?qw.fromUint8ToStringArray(t):t,[a,i]=s(u.shape,d.shape,n,r,c),o=h.makeTensorInfo(i,c);return h.texData.get(o.dataId).values=a,o}return p=Lu().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new SH(n,u.shape,d.shape,r):new IH(t,u.shape,d.shape),h.runWebGLProgram(p,[u,d],c)}}function PH(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?dH:rH;if("relu"===e)return t?pH:iH;if("elu"===e)return t?hH:sH;if("relu6"===e)return t?cH:oH;if("prelu"===e)return t?FH:$H;if("leakyrelu"===e)return t?RH:_H;if("sigmoid"===e)return t?fH:uH;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var LH=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=zG(this.outputShape.length);let u=r?e[1]:e[2],d=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let A="rc.x",b="rc.x";e[0]<t[0]?A=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${d}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${d}; i++) {\n          int batchA = ${A};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},WH=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=qw.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},BH="return a * b;";function UH(e){let t,{inputs:n,backend:r}=e,{a,b:s}=n,i=qw.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new WH("return areal * breal - aimag * bimag;",a.shape,s.shape),i=new WH("return areal * bimag + aimag * breal;",a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),d=CH({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),d}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=Tj(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=Lu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SH(BH,a.shape,s.shape):new IH(BH,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var VH={kernelName:Oh,backendName:"webgl",kernelFunc:UH};function GH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=uc.sizeFromShape(a.shape),l=uc.inferFromImplicitShape(s,o),u=uc.sizeFromShape(l);uc.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let d=i.texData.get(a.dataId);return!d.isPacked||HV(a.shape,l)||null!==d.texture&&HV(d.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[BV(e.shape),...UV(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[BV(t),...UV(t)],i=new Yj(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}var jH={kernelName:Qh,backendName:"webgl",kernelFunc:GH},HH=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${uc.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},qH=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),d=n%4,h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}};function KH(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=qw.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:d,outSize:h}=a[i];o="mean"===n?0===i?new HH({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:h},u):new HH({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:h}):new qH({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:h},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}function XH(e,t,n){let r=Lu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=_G(this.rank),a=Xj("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=_G(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function ZH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=uc.parseAxisParam(a,e.shape),o=i,l=qw.getAxesPermutation(o,s),u=null!=l,d=e;u&&(d=XH(e,l,r),o=qw.getInnerMostAxes(o.length,s)),qw.assertAxesAreInnerMostDims("sum",o,s);let[h,p]=qw.computeOutAndReduceShapes(d.shape,o),c=h;n&&(c=qw.expandShapeToKeepDim(h,i));let f=uc.sizeFromShape(p),m=GH({inputs:{x:d},attrs:{shape:[uc.sizeFromShape(e.shape)/f,f]},backend:r}),g=KH(m,Qc(e.dtype),"sum",r),y=GH({inputs:{x:g},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(d),y}(a,s,i,n)}var YH={kernelName:Ap,backendName:"webgl",kernelFunc:ZH};function JH(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=qj(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=XH(s,i,o);return t}var QH={kernelName:Lp,backendName:"webgl",kernelFunc:JH};function eq(e){let{a:t,b:n,transposeA:r,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=t.shape.length,h=n.shape.length,p=r?t.shape[d-2]:t.shape[d-1],c=a?n.shape[h-1]:n.shape[h-2],f=r?t.shape[d-1]:t.shape[d-2],m=a?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),A=uc.sizeFromShape(g),b=uc.sizeFromShape(y),x=Hm.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);uc.assert(p===c,(()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${a} must match.`));let v,w=r?[A,p,f]:[A,f,p],k=a?[b,m,c]:[b,c,m],I=GH({inputs:{x:t},backend:s,attrs:{shape:w}}),S=GH({inputs:{x:n},backend:s,attrs:{shape:k}}),N=[I,S],T=Math.max(A,b),C=r?I.shape[1]:I.shape[2],E=null!=i,_=null!=o,R="leakyrelu"===u,M=null!=u?PH(u,!0):null;if((1===f||1===m)&&C>1e3&&!1===(E||_||R||null!=M)){let e=I,t=S;r&&(e=JH({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),a&&(t=JH({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));let n=1===m,i=e;1!==m&&(i=GH({inputs:{x:e},backend:s,attrs:{shape:[T,C,1]}}),N.push(i));let o=1===m?2:1,l=t;n&&(l=GH({inputs:{x:t},backend:s,attrs:{shape:[T,1,C]}}),N.push(l));let u=UH({inputs:{a:i,b:l},backend:s});v=ZH({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{let e=Jc(t.dtype,n.dtype),u=new LH(w,k,[T,f,m],r,a,E,M,_,R),d=[I,S];if(null!=i&&d.push(i),_&&d.push(o),R){let e=s.makeTensorInfo([],"float32",uc.createScalarValue(l,"float32"));d.push(e),N.push(e)}v=s.runWebGLProgram(u,d,e)}let $=GH({inputs:{x:v},backend:s,attrs:{shape:x}});N.push(v);for(let e of N)s.disposeIntermediateTensorInfo(e);return $}var tq={kernelName:qp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r;return eq({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:d})}},nq="return abs(x);",rq={kernelName:Gu,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=Fj(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Lu().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new mH(a.shape,nq):new tH(a.shape,nq),r.runWebGLProgram(t,[a],a.dtype)}},aq=zH({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),sq={kernelName:ju,backendName:"webgl",kernelFunc:aq},iq=zH({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),oq={kernelName:Hu,backendName:"webgl",kernelFunc:iq},lq="return a + b;",uq=DH({opSnippet:lq,packedOpSnippet:lq,supportsComplex:!0,cpuKernelImpl:oj}),dq={kernelName:qu,backendName:"webgl",kernelFunc:uq},hq={kernelName:Ku,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return NH({inputs:{x:a[0]},backend:r});if(a.length>Lu().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>Jc(e,t))),i=a.map((e=>e.shape)),o=Lu().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},pq={kernelName:Xu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=uc.parseAxisParam(s,a.shape),u=l,d=qw.getAxesPermutation(u,o),h=a;null!=d&&(h=JH({inputs:{x:a},backend:n,attrs:{perm:d}}),u=qw.getInnerMostAxes(u.length,o)),qw.assertAxesAreInnerMostDims("all",u,o);let p,[c,f]=qw.computeOutAndReduceShapes(h.shape,u),m=GH({inputs:{x:h},backend:n,attrs:{shape:[-1,uc.sizeFromShape(f)]}}),g=KH(m,m.dtype,"all",n);return p=GH(i?{inputs:{x:g},backend:n,attrs:{shape:qw.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),p}},cq={kernelName:Zu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=uc.parseAxisParam(s,a.shape),u=l,d=qw.getAxesPermutation(u,o),h=a;null!=d&&(h=JH({inputs:{x:a},backend:n,attrs:{perm:d}}),u=qw.getInnerMostAxes(u.length,o)),qw.assertAxesAreInnerMostDims("any",u,o);let p,[c,f]=qw.computeOutAndReduceShapes(h.shape,u),m=GH({inputs:{x:h},backend:n,attrs:{shape:[-1,uc.sizeFromShape(f)]}}),g=KH(m,m.dtype,"any",n);return p=GH(i?{inputs:{x:g},backend:n,attrs:{shape:qw.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),p}},fq=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},mq=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,uc.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,d=_G(u),h=Zj("coords",u);if(1===s){o=u+1;let e=_G(o);i=`\n        ${e} sourceLocR = ${e}(${h.join()}, 0);\n        ++${h[u-1]};\n        ${e} sourceLocG = ${e}(${h.join()}, 0);\n        ++${h[u-2]};\n        ${e} sourceLocA = ${e}(${h.join()}, 0);\n        --${h[u-1]};\n        ${e} sourceLocB = ${e}(${h.join()}, 0);\n        --${h[u-2]};`}else o=u,i=`\n        ${d} sourceLocR = coords;\n        ++${h[u-1]};\n        ${d} sourceLocG = coords;\n        ++${h[u-2]};\n        ${d} sourceLocA = coords;\n        --${h[u-1]};\n        ${d} sourceLocB = coords;\n        --${h[u-2]};`;let p=["x","y","z","w","u","v"].slice(0,o),c="."+p[o-1],f=p.map((e=>"int "+e)),m=Zj("sourceLocR",o-1).concat("inIdx.r"),g=Zj("sourceLocG",o-1).concat("inIdx.g"),y=Zj("sourceLocB",o-1).concat("inIdx.b"),A=Zj("sourceLocA",o-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${A.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${A.join()}) : 0.)`,w=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${d} coords = getOutputCoords();\n        bool hasNextCol = ${h[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${h[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function gq(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=qw.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new fq(o,n,null==r),u=[t];null!=r&&u.push(r);let d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;let h=gq(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function yq(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=null!=r?r.shape:t.shape,s=a[a.length-1],i=qw.computeOptimalWindowSize(s),o=new mq(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=yq(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function Aq(e,t,n,r){let a=[n];if(qw.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Lu().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=qw.computeOutAndReduceShapes(i.shape,a),u=uc.sizeFromShape(l),d=GH({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(d);let h=gq(e,d,r);n.push(h);let p=GH({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return yq(e,t,r)}var bq={kernelName:Yu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=uc.parseAxisParam(s,a.shape),o=qw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=JH({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=qw.getInnerMostAxes(i.length,l.shape.length)),qw.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=Aq(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},xq={kernelName:Ju,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=uc.parseAxisParam(s,a.shape),o=qw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=JH({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=qw.getInnerMostAxes(i.length,l.shape.length)),qw.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=Aq(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},vq=zH({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),wq={kernelName:Qu,backendName:"webgl",kernelFunc:vq},kq=zH({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Iq={kernelName:ed,backendName:"webgl",kernelFunc:kq},Sq=zH({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Nq={kernelName:td,backendName:"webgl",kernelFunc:Sq},Tq=DH({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Cq={kernelName:rd,backendName:"webgl",kernelFunc:Tq},Eq=zH({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),_q={kernelName:nd,backendName:"webgl",kernelFunc:Eq},Rq=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(A="avgValue / count");let b=4*Math.floor(s/4),x=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${d};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${A});\n      }\n    `}},Mq=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let A="avg"===t,b="0.0";if(A||(b="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${d}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");let v=4*Math.floor(s/4),w=s%4,k=`\n      if (${A}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}},$q={kernelName:ad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;aG(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;uc.assert(qw.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=qw.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&uc.arraysEqual(u.inShape,u.outShape))return NH({inputs:{x:a},backend:n});let d=new Rq(u,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}},Fq={kernelName:id,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=qw.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),h=new Mq(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},Oq={kernelName:od,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=qw.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),p=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=d-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a],i.dtype)}},zq={kernelName:sd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;aG([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=qw.computePool2DInfo(i.shape,o,l,1,u),h=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${d});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(h,[a],i.dtype)}},Dq={kernelName:ld,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return eq({a,b:s,transposeA:i,transposeB:o,backend:n})}},Pq={kernelName:Qd,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,mean:s,variance:i,offset:o,scale:l}=t;uc.assert(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),uc.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),uc.assert(null==l||s.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=r;null==u&&(u=.001);let d=[a,s,i],h=null;null!=o&&(h=o.shape,d.push(o));let p=null;null!=l&&(p=l.shape,d.push(l));let c=Lu().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],qw.assertAndGetBroadcastShape(e,t),qw.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(qw.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(qw.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(a.shape,s.shape,i.shape,h,p,u):new class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],qw.assertAndGetBroadcastShape(e,t),qw.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(qw.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(qw.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(a.shape,s.shape,i.shape,h,p,u);return n.runWebGLProgram(c,d,d[0].dtype)}},Lq=["x","y","z","w","u","v"];function Wq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=dg.parseSliceParams(a,s,i);if(dg.assertParamsValid(a,o,l),0===uc.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=Oj(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),d=dg.isSliceContinous(a.shape,o,l);if(u||!d){let e=Lu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=_G(this.rank),n=Zj("coords",this.rank),r=Zj("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}(l):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=_G(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return Lq.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Lq[t]} = start[${t}] + coords.${Lq[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}}(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=dg.computeFlatOffset(t,uc.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var Bq={kernelName:hp,backendName:"webgl",kernelFunc:Wq},Uq={kernelName:ud,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;uc.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=qw.getReshaped(a.shape,s,o),u=qw.getPermuted(l.length,s.length),d=qw.getReshapedPermuted(a.shape,s,o),h=qw.getSliceBeginCoords(i,s.length),p=qw.getSliceSize(d,i,s.length),c=[],f=GH({inputs:{x:a},backend:n,attrs:{shape:l}}),m=JH({inputs:{x:f},backend:n,attrs:{perm:u}}),g=GH({inputs:{x:m},backend:n,attrs:{shape:d}}),y=Wq({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Vq={kernelName:dd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=lj(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},Gq={kernelName:pd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=qw.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},jq=DH({opSnippet:"return float(a != b);",cpuKernelImpl:Ej,dtype:"bool"}),Hq={kernelName:Dh,backendName:"webgl",kernelFunc:jq};function qq(e){let{inputs:t,backend:n}=e,{input:r}=t;return NH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var Kq={kernelName:Zh,backendName:"webgl",kernelFunc:qq},Xq={kernelName:cd,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return NH({inputs:{x:s},backend:r});let t=Db(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=CH({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=qq({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!uc.hasEncodingLoss(s.dtype,i)){let e=NH({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new tH(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",uc.getTypedArrayFromDType("bool",1)),t=jq({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},Zq="return ceil(x);",Yq=zH({opSnippet:Zq,packedOpSnippet:Zq,cpuKernelImpl:dj}),Jq={kernelName:fd,backendName:"webgl",kernelFunc:Yq},Qq={kernelName:md,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Lu().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(s.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}};function eK(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var tK={kernelName:yd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(r.shape),i=[eK(r,a.complexTensorInfos.real),eK(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function nK(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function rK(e){let{inputs:t,backend:n}=e,{input:r}=t;return NH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var aK={kernelName:ih,backendName:"webgl",kernelFunc:rK};function sK(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>qq({inputs:{input:e},backend:n}))),a=e.map((e=>rK({inputs:{input:e},backend:n}))),s=sK(r,t,n),i=sK(a,t,n),o=CH({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=uc.sizeFromShape(e.shape.slice(t));return GH({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=qw.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=hj(s,i,r,o),u=qw.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}if(e.length>Lu().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let r=Math.floor(e.length/2),a=sK(e.slice(0,r),t,n),s=sK(e.slice(r),t,n),i=sK([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Lu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let a=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=qw.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=_G(r),s=Zj("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),d=i.join(),h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${nK(i,l,t)}),\n            vec2(${nK(u,l,t)}));\n        }`}let p=o.length,c=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${nK(i,l,c)}),\n          vec2(${nK(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}let{tensors2D:s,outShape:i}=function(e,t,n){let r=qw.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>GH({inputs:{x:e},attrs:{shape:[-1,uc.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new class{constructor(e){this.outputShape=[],this.outputShape=qw.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(s.map((e=>e.shape))),l=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));let u=GH({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function iK(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=uc.parseAxisParam(a,t[0].shape)[0],i=qw.computeOutShape(t.map((e=>e.shape)),s);if(0===uc.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>uc.sizeFromShape(e.shape)>0));if(1===o.length)return NH({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return qw.assertParamsConsistent(l,s),sK(o,s,n)}var oK={kernelName:Ad,backendName:"webgl",kernelFunc:iK},lK=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,A=m?3:1,b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${A}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}};function uK(e){let t,{x:n,filter:r,convInfo:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=n.shape,h=s.texData.get(n.dataId),p=a.inChannels,c=d[0]*d[1]*d[2],f=a.outChannels,m="channelsLast"===a.dataFormat,g=[];if((1!==c&&1!==f||!(p>1e3))&&h.isPacked&&m&&null!=h.texture&&d[2]%2!=0&&uc.arraysEqual(h.shape.slice(-3),d.slice(-3))){let e=d[0]*d[1]*(d[2]+1),p={dataId:n.dataId,shape:[1,e,a.inChannels],dtype:n.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,uc.assert(HV(h.shape,p.shape),(()=>`packed reshape ${h.shape} to ${p.shape} isn't free`));let f=GH({inputs:{x:r},backend:s,attrs:{shape:[1,a.inChannels,a.outChannels]}});g.push(f);let m=eq({a:p,b:f,backend:s,transposeA:!1,transposeB:!1,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l}),y=s.texData.get(m.dataId);uc.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),h.shape=c,y.shape=a.outShape,t=NH({inputs:{x:m},backend:s}),t.shape=a.outShape,g.push(m)}else{let e=GH({inputs:{x:n},backend:s,attrs:{shape:[1,m?d[0]*d[1]*d[2]:d[0]*d[2]*d[3],a.inChannels]}}),h=GH({inputs:{x:r},backend:s,attrs:{shape:[1,a.inChannels,a.outChannels]}}),p=eq({a:e,b:h,transposeA:!1,transposeB:!1,backend:s,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l});t=GH({inputs:{x:p},backend:s,attrs:{shape:a.outShape}}),g.push(e),g.push(h),g.push(p)}for(let e of g)s.disposeIntermediateTensorInfo(e);return t}function dK(e){let{x:t,filter:n,convInfo:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e,{filterWidth:u,filterHeight:d,inChannels:h,outWidth:p,outHeight:c,dataFormat:f}=r,m="channelsLast"===f,g=u*d*h,y=c*p,A=[g,y],b=[],x=GH({inputs:{x:t},backend:a,attrs:{shape:t.shape.slice(1)}}),v=GH({inputs:{x:n},backend:a,attrs:{shape:[1,g,uc.sizeFromShape(n.shape)/g]}});b.push(x),b.push(v);let w=new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=zG(this.outputShape.length);let{dataFormat:n}=t,r=iG(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}(A,r),k=[x.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],I=a.runWebGLProgram(w,[x],"float32",k),S=GH({inputs:{x:I},backend:a,attrs:{shape:[1,A[0],A[1]]}});b.push(I),b.push(S);let N=null!=s,T=null!=i,C="leakyrelu"===l,E=l?PH(l,!0):null,_=new LH(S.shape,v.shape,[1,y,r.outChannels],!0,!1,N,E,T,C),R=[S,v];if(s&&R.push(s),T&&R.push(i),C){let e=a.makeTensorInfo([],"float32",uc.createScalarValue(o,"float32"));R.push(e),b.push(e)}let M=a.runWebGLProgram(_,R,"float32"),$=GH({inputs:{x:M},backend:a,attrs:{shape:m?[1,c,p,r.outChannels]:[1,r.outChannels,c,p]}});b.push(M);for(let e of b)a.disposeIntermediateTensorInfo(e);return $}var hK={kernelName:bd,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}=a,p=qw.convertConv2DDataFormat(u),c=qw.computeConv2DInfo(s.shape,i.shape,o,d,l,h,!1,p);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(Lu().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=dK({x:s,filter:i,convInfo:c,backend:r});else{let e=new lK(c);t=r.runWebGLProgram(e,[s,i],"float32")}else t=uK({x:s,filter:i,convInfo:c,backend:r});let f=GH({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}},pK={kernelName:xd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r,h=qw.convertConv2DDataFormat(l),p=qw.computeConv2DInfo(a.shape,d,i,1,o,u,!1,h),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(c,[a,s],"float32")}},cK={kernelName:vd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,h=qw.convertConv2DDataFormat(u),p=qw.computeConv2DInfo(i,s.shape,o,1,l,d,!1,h),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,d=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${d}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(c,[a,s],"float32")}},fK={kernelName:wd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=qw.computeConv3DInfo(a.shape,s.shape,i,l,o),d=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${d}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(d,[a,s],"float32")}},mK={kernelName:kd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=qw.computeConv3DInfo(a.shape,l,i,1,o),d=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(d,[a,s],"float32")}},gK={kernelName:Id,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=qw.computeConv3DInfo(l,s.shape,o,1,i),d=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(d,[a,s],"float32")}},yK=zH({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),AK={kernelName:Sd,backendName:"webgl",kernelFunc:yK},bK=zH({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),xK={kernelName:Nd,backendName:"webgl",kernelFunc:bK},vK={kernelName:Ed,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[d,h]=n;this.outputShape=[u,d,h,l];let p="bilinear"===r?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=d>1?[""+(i-1)/(d-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[A,b,x]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${A});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(a.shape,s.shape,o,l,u);return n.runWebGLProgram(d,[a,s,i],"float32")}},wK=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,a=t?"1.0":`getX(${kK(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${_G(r)} coords = getOutputCoords();\n        int end = ${IK(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${IK(r,"coords")} = idx;\n          val *= getX(${kK(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function kK(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function IK(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}var SK={kernelName:Td,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=qw.getAxesPermutation([s],l),d=a;null!=u&&(d=JH({inputs:{x:a},backend:n,attrs:{perm:u}}));let h=qw.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);let p=d.shape[h],c=NH({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){let t=new wK(d.shape,!1,o),r=[[e]],a=c;c=n.runWebGLProgram(t,[c],c.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){let e=new wK(d.shape,i,o),t=c;c=n.runWebGLProgram(e,[c],c.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){let e=JH({inputs:{x:c},backend:n,attrs:{perm:qw.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),e}return c}},NK=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,a=t?"0.0":`getX(${TK(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${_G(r)} coords = getOutputCoords();\n        int end = ${CK(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${CK(r,"coords")} = idx;\n          val += getX(${TK(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function TK(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function CK(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var EK={kernelName:Cd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=qw.getAxesPermutation([s],l),d=a;null!=u&&(d=JH({inputs:{x:a},backend:n,attrs:{perm:u}}));let h=qw.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);let p=d.shape[h],c=NH({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){let t=new NK(d.shape,!1,o),r=[[e]],a=c;c=n.runWebGLProgram(t,[c],c.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){let e=new NK(d.shape,i,o),t=c;c=n.runWebGLProgram(e,[c],c.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){let e=JH({inputs:{x:c},backend:n,attrs:{perm:qw.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),e}return c}},_K={kernelName:_d,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=lj(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=uj(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},RK={kernelName:Rd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(h,s,i);return n.runWebGLProgram(p,[a],a.dtype)}},MK=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=zG(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${d}\n        ${u}\n        setOutput(result);\n      }\n    `}},$K=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=zG(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d,p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<d;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){let t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<d&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){let e=i%2==0?uc.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let c="",f="";n&&(c=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}},FK={kernelName:Md,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;null==d&&(d=[1,1]),uc.assert(qw.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let h,p=qw.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0);h=Lu().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new $K(p):new MK(p);let c=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(h,[a,s],"float32",c)}},OK={kernelName:$d,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r,h=qw.computeConv2DInfo(a.shape,d,i,o,l,u,!0),p=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a,s],"float32")}},zK={kernelName:Fd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r,h=qw.computeConv2DInfo(d,s.shape,i,o,l,u,!0),p=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h);return n.runWebGLProgram(p,[a,s],"float32")}},DK={kernelName:Od,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=uc.sizeFromShape(r.shape),i=GH({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),l=n.runWebGLProgram(o,[i],i.dtype),u=GH({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},PK={kernelName:zd,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,d=qw.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),h=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${d}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(d);t=r.runWebGLProgram(h,[s,i],"float32");let p=GH({inputs:{x:t},backend:r,attrs:{shape:d.outShape}});return r.disposeIntermediateTensorInfo(t),p}},LK={kernelName:Wd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=qw.decodeEinsumEquation(a,s.length);qw.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=qw.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,f=[];for(let e=0;e<h;++e){for(let t of d[e]){let e,{permutationIndices:r,expandDims:a}=qw.getEinsumPermutation(c,l[t]);qw.isIdentityPermutation(r)?e=s[t]:(e=JH({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);uc.arraysEqual(e.shape,i)||(e=GH({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===p?p=e:(p=UH({inputs:{a:e,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=ZH({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},WK=zH({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),BK={kernelName:Bd,backendName:"webgl",kernelFunc:WK},UK={kernelName:Ud,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Lu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new SH("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new IH("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},VK=DH({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:pj}),GK={kernelName:Gd,backendName:"webgl",kernelFunc:VK},jK=zH({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${qw.ERF_P};\n  float a1 = ${qw.ERF_A1};\n  float a2 = ${qw.ERF_A2};\n  float a3 = ${qw.ERF_A3};\n  float a4 = ${qw.ERF_A4};\n  float a5 = ${qw.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),HK={kernelName:Vd,backendName:"webgl",kernelFunc:jK},qK=zH({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:cj,dtype:"float32"}),KK={kernelName:jd,backendName:"webgl",kernelFunc:qK};function XK(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(uc.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),GH({inputs:{x:s},backend:r,attrs:{shape:o}})}var ZK={kernelName:Hd,backendName:"webgl",kernelFunc:XK},YK="return exp(x) - 1.0;",JK=zH({opSnippet:YK,packedOpSnippet:YK,cpuKernelImpl:fj}),QK={kernelName:qd,backendName:"webgl",kernelFunc:JK},eX=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function tX(e,t,n){let r=n.texData.get(e.dataId),a=uc.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=GH({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new eX("real",o,t),u=new eX("imag",o,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),c=CH({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);let f=GH({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}var nX={kernelName:Kd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return tX(r,!1,n)}};function rX(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||uc.inferDtype(a),"string"===s){let e=uc.getArrayFromDType(s,uc.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var aX,sX={kernelName:Xd,backendName:"webgl",kernelFunc:rX},iX={kernelName:Zd,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{image:r}=t,a=n,s=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(r.shape);return a.runWebGLProgram(s,[r],r.dtype)}},oX="return floor(x);",lX=zH({opSnippet:oX,packedOpSnippet:oX,cpuKernelImpl:mj}),uX={kernelName:Yd,backendName:"webgl",kernelFunc:lX},dX=DH({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),hX={kernelName:Jd,backendName:"webgl",kernelFunc:dX},pX={kernelName:jp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[u,l],h=[u,l,s];(o||i)&&(null==aX&&(aX=document.createElement("canvas").getContext("2d")),aX.canvas.width=l,aX.canvas.height=u,aX.drawImage(a,0,0,l,u),a=aX.canvas);let p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=2,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);let c=Lu().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=iG(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(h):new class{constructor(e){this.variableNames=["A"];let t=iG(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(h),f=n.runWebGLProgram(c,[p],"int32");return n.disposeData(p.dataId),f}},cX={kernelName:Kp,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:d,dataFormat:h,dilations:p,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=qw.convertConv2DDataFormat(h),y=qw.computeConv2DInfo(s.shape,i.shape,u,p,d,c,!1,g),A=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(Lu().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=dK({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=null!=o,n=null!=l,a="leakyrelu"===f,u=f?PH(f,!1):null,d=new lK(y,e,u,n,a),h=[s,i];if(o&&h.push(o),l&&h.push(l),a){let e=r.makeTensorInfo([],"float32",uc.createScalarValue(m,"float32"));h.push(e),A.push(e)}t=r.runWebGLProgram(d,h,"float32")}else t=uK({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let b=GH({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return A.push(t),A.forEach((e=>r.disposeIntermediateTensorInfo(e))),b}},fX={kernelName:Xp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:c}=r,f=[],m=d;null==m&&(m=[1,1]),uc.assert(qw.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=qw.computeConv2DInfo(a.shape,s.shape,l,m,u,h,!0),A=Lu().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,b=p?PH(p,A):null,x=[a,s],v=null!=i,w=null!=o,k="leakyrelu"===p;if(v&&x.push(i),w&&x.push(o),k){let e=n.makeTensorInfo([],"float32",uc.createScalarValue(c,"float32"));x.push(e),f.push(e)}g=A?new $K(y,v,b,w,k):new MK(y,v,b,w,k);let I=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],S=n.runWebGLProgram(g,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}},mX={kernelName:th,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=uc.sizeFromShape(r.shape),[l,u,d,h]=qw.prepareAndValidate(r,a),p=GH({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=GH({inputs:{x:r},backend:n,attrs:{shape:[uc.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=gj(e,t,r.dtype,u,i,d,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let r=_G(t.length),a=_G(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,h,[u,d]),m=n.runWebGLProgram(f,[c,p],c.dtype),g=GH({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}};function gX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=uc.parseAxisParam(i,a.shape)[0];if(Lu().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];uc.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}let u=qw.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=uc.sizeFromShape(s.shape),h=[],p=GH({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=GH({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=n.bufferSync(p),r=yj(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=_G(this.rank),r=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}(p.shape,f),g=n.runWebGLProgram(m,[p,c],p.dtype);h.push(g);let y=GH({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var yX={kernelName:eh,backendName:"webgl",kernelFunc:gX},AX=DH({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Aj,dtype:"bool"}),bX={kernelName:nh,backendName:"webgl",kernelFunc:AX},xX=DH({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:bj}),vX={kernelName:rh,backendName:"webgl",kernelFunc:xX},wX={kernelName:sh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return tX(r,!0,n)}},kX=zH({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),IX={kernelName:oh,backendName:"webgl",kernelFunc:kX},SX=zH({opSnippet:"return float(isinf(x));",dtype:"bool"}),NX={kernelName:lh,backendName:"webgl",kernelFunc:SX},TX=zH({opSnippet:"return float(isnan(x));",dtype:"bool"}),CX={kernelName:uh,backendName:"webgl",kernelFunc:TX},EX=DH({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:xj,dtype:"bool"}),_X={kernelName:hh,backendName:"webgl",kernelFunc:EX},RX=DH({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:vj,dtype:"bool"}),MX={kernelName:ph,backendName:"webgl",kernelFunc:RX},$X={kernelName:ch,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=wj(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},FX=zH({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:kj}),OX={kernelName:fh,backendName:"webgl",kernelFunc:FX},zX=zH({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),DX={kernelName:mh,backendName:"webgl",kernelFunc:zX},PX=DH({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),LX={kernelName:gh,backendName:"webgl",kernelFunc:PX},WX=zH({opSnippet:"return float(!(x >= 1.0));"}),BX={kernelName:yh,backendName:"webgl",kernelFunc:WX},UX=DH({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),VX={kernelName:Ah,backendName:"webgl",kernelFunc:UX},GX={kernelName:xh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Lu().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(a.shape,s,i,o,l):new class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},jX={kernelName:vh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r,h=new class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(a.shape,o,l,u,d);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function HX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=uc.parseAxisParam(s,a.shape),u=l,d=qw.getAxesPermutation(u,o),h=null!=d,p=n.shouldExecuteOnCPU([a]),c=a;if(h){if(p){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];let r=qj(e,a.shape,a.dtype,d,t);c=n.makeTensorInfo(t,a.dtype),n.texData.get(c.dataId).values=r}else c=XH(a,d,n);u=qw.getInnerMostAxes(u.length,o)}qw.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=qw.computeOutAndReduceShapes(c.shape,u),y=m;if(i&&(y=qw.expandShapeToKeepDim(m,l)),p){let e=n.texData.get(c.dataId).values,t=Ij(e,uc.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=uc.sizeFromShape(t),s=GH({inputs:{x:e},attrs:{shape:[uc.sizeFromShape(e.shape)/a,a]},backend:r}),i=KH(s,e.dtype,"max",r),o=GH({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(c,g,y,n);return h&&n.disposeIntermediateTensorInfo(c),f}var qX={kernelName:wh,backendName:"webgl",kernelFunc:HX},KX=DH({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Sj}),XX={kernelName:kh,backendName:"webgl",kernelFunc:KX},ZX={kernelName:Ih,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;aG(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;uc.assert(qw.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=qw.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&uc.arraysEqual(u.inShape,u.outShape))return NH({inputs:{x:a},backend:n});let d=new Rq(u,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}},YX={kernelName:Nh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,d=qw.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),h=new Mq(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},JX={kernelName:Th,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=qw.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),p=new Mq(h,"max",!0),c=n.runWebGLProgram(p,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(h),m=n.runWebGLProgram(f,[a,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}},QX={kernelName:Sh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;aG([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,p=qw.computePool2DInfo(o.shape,l,u,1,d,h),c=new Rq(p,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},eZ={kernelName:Ch,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:l}=n,u=r;uc.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));let d=[1,1];uc.assert(qw.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let h=qw.computePool2DInfo(a.shape,s,i,d,o),[p,c]=function(e,t,n,r){let a=new Rq(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new Rq(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,l,h,u);return[p,c]}},tZ={kernelName:Eh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{keepDims:s,axis:i}=n,o=r,l=a.shape.length,u=uc.parseAxisParam(i,a.shape),d=u,h=qw.getAxesPermutation(d,l),p=null!=h,c=o.shouldExecuteOnCPU([a]),f=[],m=a;if(p){if(c){let e=o.texData.get(m.dataId).values,t=new Array(l);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];let n=qj(e,a.shape,a.dtype,h,t);m=o.makeTensorInfo(t,a.dtype),o.texData.get(m.dataId).values=n}else m=XH(a,h,o);f.push(m),d=qw.getInnerMostAxes(d.length,l)}qw.assertAxesAreInnerMostDims("sum",d,l);let[g,y]=qw.computeOutAndReduceShapes(m.shape,d),A=g;s&&(A=qw.expandShapeToKeepDim(g,u));let b=function(e,t,n,r){let a=uc.sizeFromShape(t),s=GH({inputs:{x:e},attrs:{shape:[uc.sizeFromShape(e.shape)/a,a]},backend:r}),i=KH(s,"float32","mean",r),o=GH({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(m,y,A,o);for(let e of f)o.disposeIntermediateTensorInfo(e);return b}},nZ={kernelName:_h,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=uc.parseAxisParam(s,a.shape),u=l,d=qw.getAxesPermutation(u,o),h=a;null!=d&&(h=JH({inputs:{x:a},backend:n,attrs:{perm:d}}),u=qw.getInnerMostAxes(u.length,a.shape.length)),qw.assertAxesAreInnerMostDims("min",u,o);let p,[c,f]=qw.computeOutAndReduceShapes(h.shape,u),m=GH({inputs:{x:h},backend:n,attrs:{shape:[-1,uc.sizeFromShape(f)]}}),g=KH(m,m.dtype,"min",n);return p=GH(i?{inputs:{x:g},backend:n,attrs:{shape:qw.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),p}},rZ=DH({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Nj}),aZ={kernelName:Rh,backendName:"webgl",kernelFunc:rZ},sZ={kernelName:Mh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r,o=Lu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=_G(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Zj("rc",r),l=Zj("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1,p="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${d});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${d});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=_G(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(a.shape,s,i);return n.runWebGLProgram(o,[a],a.dtype)}},iZ=DH({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),oZ={kernelName:$h,backendName:"webgl",kernelFunc:iZ},lZ=DH({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),uZ={kernelName:Ld,backendName:"webgl",kernelFunc:lZ},dZ="return a - b;",hZ=DH({opSnippet:dZ,packedOpSnippet:dZ,supportsComplex:!0,cpuKernelImpl:Gj}),pZ={kernelName:$p,backendName:"webgl",kernelFunc:hZ};function cZ(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=uc.parseAxisParam([s],a.shape),o=HX({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=qw.expandShapeToKeepDim(o.shape,i),u=GH({inputs:{x:o},backend:n,attrs:{shape:l}}),d=hZ({inputs:{a,b:u},backend:n}),h=qK({inputs:{x:d},backend:n}),p=ZH({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=GH({inputs:{x:p},backend:n,attrs:{shape:l}}),f=lZ({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),f}var fZ={kernelName:vp,backendName:"webgl",kernelFunc:cZ},mZ={kernelName:Fh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:cZ({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],d=l.shape[1],h=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(u,d,s),p=[[i]],c=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),c}},gZ={kernelName:zh,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=Cj(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Lu().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new mH(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new tH(a.shape,"if (isnan(x)) return x;\n  return -x;\n"),r.runWebGLProgram(t,[a],a.dtype)}},yZ=Hk.nonMaxSuppressionV3Impl,AZ={kernelName:Ph,backendName:"webgl",kernelFunc:function(e){qw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=yZ(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},bZ=Hk.nonMaxSuppressionV4Impl,xZ={kernelName:Lh,backendName:"webgl",kernelFunc:function(e){qw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:c}=bZ(d,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},vZ=Hk.nonMaxSuppressionV5Impl,wZ={kernelName:Wh,backendName:"webgl",kernelFunc:function(e){qw.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=vZ(d,h,p,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},kZ={kernelName:Uh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=uc.sizeFromShape(a.shape),u=new class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(l,s,i,o),d=GH({inputs:{x:a},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[d],a.dtype);n.disposeIntermediateTensorInfo(d);let p=GH({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),p}};function IZ(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=qq({inputs:{input:r},backend:n}),t=IZ({inputs:{x:e},backend:n}),a=rK({inputs:{input:r},backend:n}),s=IZ({inputs:{x:a},backend:n}),i=CH({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return rX({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var SZ={kernelName:Vp,backendName:"webgl",kernelFunc:IZ},NZ={kernelName:Bh,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=qq({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=rK({inputs:{input:a},backend:r}),i=IZ({inputs:{x:s},backend:r}),o=CH({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return rX({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},TZ={kernelName:Vh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return XK({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{uc.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),uc.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=iK({inputs:t.map((e=>{let t=XK({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},CZ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===uc.sizeFromShape(a.shape))return rX({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}});let o=Lu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=_G(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Zj("rc",r),l=Zj("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${d});\n        }\n      `;c+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}}(a.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=_G(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},EZ={kernelName:Gh,backendName:"webgl",kernelFunc:CZ},_Z=DH({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),RZ={kernelName:Hh,backendName:"webgl",kernelFunc:_Z},MZ={kernelName:Kh,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],d=uc.parseAxisParam(i,s.shape),h=d,p=qw.getAxesPermutation(h,l),c=s;if(null!=p&&(c=JH({inputs:{x:s},backend:r,attrs:{perm:p}}),h=qw.getInnerMostAxes(h.length,l),u.push(c)),qw.assertAxesAreInnerMostDims("prod",h,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=_j(c.shape,c.dtype,e,h);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=qw.computeOutAndReduceShapes(c.shape,h),a=uc.sizeFromShape(n),i=GH({inputs:{x:c},backend:r,attrs:{shape:[-1,a]}}),o=KH(i,Qc(s.dtype),"prod",r);t=GH({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=qw.expandShapeToKeepDim(t.shape,d);t=GH({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}},$Z=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Rj(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},FZ={kernelName:Xh,backendName:"webgl",kernelFunc:$Z},OZ=zH({opSnippet:"return 1.0 / x;"}),zZ={kernelName:Yh,backendName:"webgl",kernelFunc:OZ},DZ=zH({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),PZ={kernelName:Jh,backendName:"webgl",kernelFunc:DZ},LZ=zH({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),WZ={kernelName:ap,backendName:"webgl",kernelFunc:LZ},BZ={kernelName:np,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=Lu().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]},\n          ${d[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],"float32")}},UZ={kernelName:rp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],h=1/u,p=1/d,c=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},VZ={kernelName:ep,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=Lu().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]},\n          ${d[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i):new class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/h[0]},\n          ${d[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],a.dtype)}},GZ={kernelName:tp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],h=1/u,p=1/d,c=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},jZ={kernelName:sp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=uc.parseAxisParam(s,a.shape);if(0===i)return NH({inputs:{x:a},backend:n});let l=Lu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=Zj("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=_G(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(a.shape,o):new class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=_G(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},HZ={kernelName:Hp,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=n,l=r,u=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(a.shape,i),[d,h]=qw.getImageCenter(o,a.shape[1],a.shape[2]),p=[[d,h,Math.sin(s),Math.cos(s)]];return l.runWebGLProgram(u,[a],a.dtype,p)}},qZ=zH({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),KZ={kernelName:ip,backendName:"webgl",kernelFunc:qZ},XZ=zH({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Mj}),ZZ={kernelName:op,backendName:"webgl",kernelFunc:XZ},YZ=class{constructor(e,t,n,r,a,s){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let i=_G(a.length),o=_G(s.length),l="";1===n?l="i":2===n&&(l="i, j");let u=`getIndices(${l})`,d="";1===r?d="i":2===r&&(d="i, coords[1]");let h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${o} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${u});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}},JZ={kernelName:lp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=qw.calculateShapes(s,a,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,a.dtype);let c=GH({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=GH({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new YZ(l,o,c.shape.length,f.shape.length,d,p),y=n.runWebGLProgram(g,[f,c,m],f.dtype),A=GH({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),A}},QZ={kernelName:up,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=_G(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Jc(a.dtype,s.dtype))}},eY=zH({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${qw.SELU_SCALEALPHA};\n  float scale = ${qw.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),tY={kernelName:dp,backendName:"webgl",kernelFunc:eY},nY=zH({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:$j}),rY={kernelName:mp,backendName:"webgl",kernelFunc:nY},aY=zH({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),sY={kernelName:fp,backendName:"webgl",kernelFunc:aY},iY=zH({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),oY={kernelName:pp,backendName:"webgl",kernelFunc:iY},lY=zH({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),uY={kernelName:cp,backendName:"webgl",kernelFunc:lY},dY=zH({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),hY={kernelName:gp,backendName:"webgl",kernelFunc:dY},pY={kernelName:bp,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;uc.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],d=CZ({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=qw.getReshaped(d.shape,s,o,!1),p=qw.getPermuted(h.length,s.length,!1),c=qw.getReshapedPermuted(d.shape,s,o,!1),f=GH({inputs:{x:d},backend:n,attrs:{shape:h}}),m=JH({inputs:{x:f},backend:n,attrs:{perm:p}}),g=GH({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},cY={kernelName:wp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),d=n.readSync(i.dataId)[0],[h,p,c,f,m]=zj(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},fY={kernelName:kp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,d,h]=Dj(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},mY={kernelName:Ip,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=Pj(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}},gY={kernelName:Sp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=Pj(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}},yY={kernelName:Np,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:d,outputSize:h}=qw.calculateShapes(s,a,o),p=new YZ(u,l,a.shape.length,s.shape.length,d,[h,1],!1),c=n.runWebGLProgram(p,[s,a,i],s.dtype),f=GH({inputs:{x:c},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(c),f}},AY={kernelName:xp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=uc.parseAxisParam(i,a.shape)[0],l=qw.prepareSplitSize(a,s,o),u=a.shape.length,d=new Array(u).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=Wq({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,r}))}},bY="return sqrt(x);",xY=zH({opSnippet:bY,packedOpSnippet:bY,cpuKernelImpl:Lj}),vY={kernelName:yp,backendName:"webgl",kernelFunc:xY},wY=zH({opSnippet:"return x * x;"}),kY={kernelName:Cp,backendName:"webgl",kernelFunc:wY},IY="return (a - b) * (a - b);",SY=DH({opSnippet:IY,packedOpSnippet:IY}),NY={kernelName:Tp,backendName:"webgl",kernelFunc:SY},TY={kernelName:Gp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,i=new tH(a.shape,s);return r.runWebGLProgram(i,[a],a.dtype)}},CY={kernelName:Ep,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:v}=dg.sliceInfo(s.shape,i,o,l,u,d,h,p,c);if(g)t=GH({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||A){uc.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=dg.computeOutShape(b,x,v),n=Wq({inputs:{x:s},backend:r,attrs:{begin:b,size:e}});t=GH({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=xm(s.shape,s.dtype,e),a=Wj(f,n,v,b);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=_G(n.length),s=_G(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(b,v,f);t=r.runWebGLProgram(e,[s],s.dtype)}let w=GH({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),w}},EY={kernelName:_p,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.readSync(d.dataId),c=n.readSync(h.dataId),[f,m]=Bj(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},_Y={kernelName:Rp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,d,h]=Uj(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},RY={kernelName:Mp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=Vj(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},MY=zH({opSnippet:"return tan(x);"}),$Y={kernelName:Fp,backendName:"webgl",kernelFunc:MY},FY=zH({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),OY={kernelName:Op,backendName:"webgl",kernelFunc:FY};function zY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>uc.decodeString(e))):e,r=xm(a.shape,a.dtype,t),i=jj(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=_G(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var DY={kernelName:zp,backendName:"webgl",kernelFunc:zY},PY=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function LY(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function WY(e){let t=1;for(;t<e;)t*=2;return t}var BY={kernelName:Dp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Lu().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Lu().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([a])||d<o||s>l){let e=n.readSync(a.dataId),[t,r]=Hj(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[a,rX({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(a.dataId),p=null!==h&&h.isPacked,c=p?n.unpackTensor(a):a,f=uc.sizeFromShape(u)/d,m=GH({inputs:{x:c},attrs:{shape:[f,d]},backend:n});p&&LY(n,c);let g=WY(s),y=WY(d),A=null,b=()=>null===A?[m,m]:[m,A],x=(e,t,r)=>{let a=b(),s=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(r),i=[[d],[null===A?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=A;A=n.runWebGLProgram(s,a,"int32",i),LY(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)x(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=b(),r=new PY([f,e/2]),a=[[d],[null===A?1:0],[g]],s=A;A=n.runWebGLProgram(r,t,"int32",a),LY(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)x(o,e,A.shape)}let v=A;A=Wq({inputs:{x:A},backend:n,attrs:{begin:0,size:[f,s]}}),LY(n,v);let w=gX({inputs:{x:m,indices:A},backend:n,attrs:{axis:1,batchDims:1}});LY(n,m);let k=u.slice(0,-1);k.push(s),v=A,A=GH({inputs:{x:A},attrs:{shape:k},backend:n}),LY(n,v);let I=w;return w=GH({inputs:{x:w},attrs:{shape:k},backend:n}),LY(n,I),[w,A]}},UY={kernelName:Pp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,h,p,c]=a.shape,[f,m]=null!=u?u:[h,p],g=[d,f,m,c],y=new class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(h,p,i,o,l,g);return n.runWebGLProgram(y,[a,s],"float32")}},VY={kernelName:Wp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;aG(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=Kj(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},GY={kernelName:Bp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==s&&(u[d++]=i.shape[e]);let h=[],p=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){p[s]=e;let t=Wq({inputs:{x:i},backend:n,attrs:{begin:p,size:c}}),r=GH({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},jY={kernelName:Up,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,d=qw.getAxesPermutation([u],o),h=a;null!=d&&(h=JH({inputs:{x:a},backend:n,attrs:{perm:d}}),l.push(h),u=qw.getInnerMostAxes(1,o)[0]);let p=qw.segment_util.computeOutShape(h.shape,u,i),c=uc.sizeFromShape([h.shape[u]]),f=GH({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=Qc(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=qw.segment_util.segOpComputeOptimalWindowSize(o,s),d={windowSize:u,inSize:o,batchSize:i,numSegments:s},h=new class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}(d,t),p=n.compileAndRun(h,[e,r],a);if(l.push(p),p.shape[1]===s)return p;let c=$Z({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=zY({inputs:{x:c},backend:n,attrs:{reps:[o/u]}});return l.push(c),l.push(f),g(p,t,f,a,s)},y=GH({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}}),A=y;if(null!=d){l.push(y);let e=qw.getUndoAxesPermutation(d);A=JH({inputs:{x:A},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}},HY=[tq,rq,sq,oq,dq,hq,pq,cq,bq,xq,wq,Iq,Nq,Cq,_q,$q,Fq,Oq,zq,Dq,Pq,Uq,Vq,Gq,Xq,Jq,Qq,EH,tK,oK,hK,pK,cK,fK,mK,gK,AK,xK,vK,SK,EK,_K,RK,FK,OK,zK,DK,PK,LK,BK,UK,GK,HK,KK,ZK,QK,nX,sX,iX,uX,hX,pX,cX,fX,mX,yX,bX,vX,TH,wX,aK,IX,NX,CX,MH,_X,MX,$X,OX,DX,LX,BX,VX,GX,jX,qX,XX,ZX,YX,JX,QX,eZ,tZ,nZ,aZ,sZ,oZ,mZ,VH,gZ,AZ,xZ,wZ,Hq,kZ,NZ,TZ,EZ,RZ,OH,MZ,FZ,Kq,uZ,zZ,PZ,WZ,jH,BZ,UZ,VZ,GZ,jZ,HZ,KZ,ZZ,JZ,QZ,tY,rY,sY,oY,uY,Bq,fZ,hY,pY,cY,fY,mY,gY,yY,AY,vY,kY,NY,TY,CY,EY,_Y,RY,pZ,YH,$Y,OY,DY,BY,UY,QH,VY,GY,jY,SZ];for(let e of HY)rc(e);var qY=Lu();qY.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),qY.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),qY.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",(()=>4)),qY.registerFlag("WEBGPU_USE_NAIVE_CONV2D",(()=>!1)),qY.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!1)),qY.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),qY.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),qY.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),qY.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),qY.registerFlag("WEBGPU_USE_IMPORT",(()=>!1));var KY="\n  if (isNaN.r) {\n    resultTemp.r = uniforms.NAN;\n  }\n  if (isNaN.g) {\n    resultTemp.g = uniforms.NAN;\n  }\n  if (isNaN.b) {\n    resultTemp.b = uniforms.NAN;\n  }\n  if (isNaN.a) {\n    resultTemp.a = uniforms.NAN;\n  }\n  ",XY=`\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;\n  ${KY}\n  return resultTemp;\n  `;function ZY(e,t){let n=t?KY:"\n  if (isnan(a)) { return a; }\n  if (isnan(b)) { return b; }\n  ";return t?`\n    var resultTemp = vec4<f32>(${e}(a, b));\n    let isNaN = isnanVec4(a) | isnanVec4(b);\n    `+n+"\n    return resultTemp;\n  ":n+`\n    return ${e}(a, b);\n  `}function YY(e,t){switch(e){case 0:return"return a * b;";case 1:return"return a + b;";case 2:return"return a - b;";case 3:return"return a / b;";case 4:return t?"return vec4<f32>(a == b);":"return f32(a == b);";case 5:return t?"return vec4<f32>(a > b);":"return f32(a > b);";case 6:return t?"return vec4<f32>(a >= b);":"return f32(a >= b);";case 7:return t?"return vec4<f32>(a < b);":"return f32(a < b);";case 8:return t?"return vec4<f32>(a <= b);":"return f32(a <= b);";case 9:return t?"return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));":"return f32(f32(a) >= 1.0 && f32(b) >= 1.0);";case 10:return t?"return vec4<f32>(a != b);":"return f32(a != b);";case 11:return"return (a - b) * (a - b);";case 12:return t?"\n  let ia = vec4<i32>(round(a));\n  let ib = vec4<i32>(round(b));\n  let cond = ib != vec4<i32>(0);\n  var resultTemp = vec4<i32>(0);\n  let s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    resultTemp[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    resultTemp[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    resultTemp[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    resultTemp[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4<f32>(resultTemp);\n  ":"\n  let s = sign(a) * sign(b);\n  let ia = i32(round(a));\n  let ib = i32(round(b));\n  return f32(idiv(ia, ib, s));\n  ";case 14:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n  ":"if (a < 0.0) { return b * a; }  return a;";case 15:return ZY("max",t);case 16:return ZY("min",t);case 13:return t?XY:"\n  if(a < 0.0 && floor(b) < b) {\n    return uniforms.NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  if (round(abs(b) % 2.0) != 1.0) {\n    return pow(abs(a), b);\n  }\n  return sign(a) * pow(abs(a), b);\n  ";case 17:return"return areal * breal - aimag * bimag;";case 18:return"return areal * bimag + aimag * breal;";default:throw new Error(`BinaryType ${e} is not implemented!`)}}function JY(e,t){switch(e){case 0:return"return abs(a);";case 2:return"return cos(a);";case 3:return"\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n";case 1:return"return ceil(a);";case 4:return t?"\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case 5:return"return exp(a);";case 6:return"return exp(a) - 1.0;";case 7:return"return floor(a);";case 8:return"return a;";case 9:return"if (a < 0.0) { return 1.0/0.0; }\n  return log(a);";case 10:return"return f32(!(a >= 1.0));";case 11:return"return -a;";case 14:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return uniforms.alpha * a; } return a;";case 12:return t?"\n  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));\n  let isNaN = isnanVec4(a);\n\n  if (isNaN.r) {\n    resFloat.r = a.r;\n  }\n  if (isNaN.g) {\n    resFloat.g = a.g;\n  }\n  if (isNaN.b) {\n    resFloat.b = a.b;\n  }\n  if (isNaN.a) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if(a < 0.0) { return 0.0; } return a;";case 13:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case 15:return"return 1.0/sqrt(a);";case 18:return"return 1.0 / (1.0 + exp(-1.0 * a));";case 16:return"return sin(a);";case 17:return"\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n";case 19:return"return sqrt(a);";case 20:return"return a * a;";case 21:return"\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n";case 22:return"return f32(i32((a)));";default:throw new Error(`BinaryType ${e} is not implemented!`)}}function QY(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(null===e)return null;if("linear"===e)return JY(8);if("relu"===e)return JY(12,t);if("elu"===e)return JY(4,t);if("relu6"===e)return JY(13,t);if("prelu"===e)return YY(14,t);if("sigmoid"===e)return JY(18,t);if("leakyrelu"===e)return JY(14,t);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function eJ(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}function tJ(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function nJ(e,t){return"float32"===e?t?"vec4<f32>":"f32":"int32"===e||"bool"===e?t?"vec4<i32>":"i32":e}function rJ(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=[];if(a.push(`\n    let workGroupSizeX = ${n.workGroupSize[0]}u;\n    let workGroupSizeY = ${n.workGroupSize[1]}u;\n    let workGroupSizeZ = ${n.workGroupSize[2]}u;\n\n    var<private> localId: vec3<u32>;\n    var<private> globalId: vec3<u32>;\n    var<private> numWorkgroups: vec3<u32>;\n\n    // Only used when the y/z dimension of workgroup size is 1.\n    fn getGlobalIndex() -> i32 {\n      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {\n        return i32(globalId.x);\n      }\n\n      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +\n          localId.y * workGroupSizeX + localId.x;\n      let workGroupID = (globalId - localId)/vec3<u32>(\n          workGroupSizeX, workGroupSizeY, workGroupSizeZ);\n\n      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +\n        workGroupID.y * numWorkgroups.x + workGroupID.x) *\n        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +\n        localInvocationIndex);\n    }\n  `),!0===r)return a.push(`\n      struct Uniform {\n        size            : i32,\n        numChannels     : i32,\n        outShapeStrides : vec2<i32>,\n        dispatchSize    : vec3<u32>,\n      };\n\n      @group(0) @binding(0) var<storage, write> result: array<${nJ(t.dtype,n.isVec4)}>;\n      @group(0) @binding(2) var<uniform> uniforms: Uniform;\n    `),[aJ,a.join("\n"),uJ(t.shape),n.getUserCode()].join("\n");let s="struct Uniforms { NAN : f32, ";n.variableNames.forEach(((t,n)=>{s+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${tJ(e[n].shape.length)}, `})),s+=`outShape : ${tJ(t.shape.length)}, `;let i=t.shape.length-1;s+=`\n       outShapeStrides: ${tJ(i)}, `,n.size&&(s+="size : i32, "),n.uniforms&&(s+=n.uniforms),s+="};",a.push(s),n.atomic?a.push("\n    @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n  "):a.push(`\n    @group(0) @binding(0) var<storage, write> result: array<${nJ(t.dtype,n.isVec4)}>;\n  `),n.variableNames.forEach(((t,r)=>{a.push(`\n    @group(0) @binding(${1+r}) var<storage, read> ${t}: array<${nJ(e[r].dtype,n.isVec4)}>;\n    `)})),""!==s&&a.push(`\n    @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;\n    `);let[o,l]=lJ(t.shape,n.dispatchLayout),u=[aJ,a.join("\n"),uJ(t.shape),o,sJ(t.shape.length)];if(n.atomic||u.push(iJ(t.shape,t.dtype,n.isVec4)),l===t.shape.length){let r=e.map((e=>oJ(e,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length))).join("\n");u.push(r)}return u.push(n.getUserCode()),u.join("\n")}var aJ="\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n\n  fn idiv(a: i32, b: i32, sign: f32) -> i32 {\n    var res: i32 = a / b;\n    let mod: i32 = a % b;\n    if (sign < 0. && mod != 0) {\n      res = res - 1;\n    }\n    return res;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));\n  }\n";function sJ(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;default:uc.assert(!1,(()=>`Unsupported ${e}D shape`))}return t}function iJ(e,t,n){let r,a=e.length,s=nJ(t,n);if(r=n?`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {\n      result[flatIndex] = ${s}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {\n      result[flatIndex] = ${s}(value);\n    }`:`fn setOutputAtIndex(flatIndex : i32, value : f32) {\n      result[flatIndex] = ${s}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {\n      result[flatIndex] = ${s}(value);\n    }`,a>=2){let e=["d0","d1","d2","d3"].slice(0,a),t=tJ(a);r+=n?`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<f32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex / 4, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<i32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex / 4, value);\n      }\n    `:`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : f32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : i32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex, value);\n      }\n    `}return r}function oJ(e,t,n,r){let a=function(e,t){let n=e.name,r=e.shape.length,a=tJ(r),s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3"].slice(0,r),o=i.map((e=>`${e} : i32`)).join(", ");if(r<1)return t?`\n        fn ${s}() -> vec4<f32> {\n          return vec4<f32>(${n}[0]);\n        }\n      `:`\n      fn ${s}() ->f32 {\n        return f32(${n}[0]);\n      }\n    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,u=`${r}D`;return 0===r&&(u="1D"),t?`\n      fn ${s}(${o}) -> vec4<f32> {\n        return vec4<f32>(${n}[getIndexFromCoords${u}(${a}(${i.join(",")}),\n          ${l}) / 4]);\n      }\n      `:`\n    fn ${s}(${o}) -> f32 {\n      return f32(${n}[getIndexFromCoords${u}(${a}(${i.join(",")}),\n        ${l})]);\n    }\n   `}(e,n);return e.shape.length<=t.length&&(a+=function(e,t,n,r){let a=e.name,s=a.charAt(0).toUpperCase()+a.slice(1),i="get"+s+"ByOutput",o=e.shape.length,l=t.length,u=tJ(l);if(uc.arraysEqual(e.shape,t)&&r)return n?`\n        fn ${i}Index(globalIndex : i32) -> vec4<f32> {\n          return vec4<f32>(${a}[globalIndex]);\n        }\n\n        fn ${i}Coords(coords : ${u}) -> vec4<f32> {\n          return vec4<f32>(${a}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);\n        }\n        `:`\n      fn ${i}Index(globalIndex : i32) -> f32 {\n        return f32(${a}[globalIndex]);\n      }\n\n      fn ${i}Coords(coords : ${u}) -> f32 {\n        return f32(${a}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);\n      }\n      `;let d=qw.getBroadcastDims(e.shape,t),h=l-o,p="";if(0===o)return n?`\n      fn ${i}Index(globalIndex : i32) -> vec4<f32> {\n        return get${s}();\n      }\n\n      fn ${i}Coords(coords : ${u}) -> vec4<f32> {\n        return get${s}();\n      }\n    `:`\n      fn ${i}Index(globalIndex : i32) -> f32{\n        return get${s}();\n      }\n\n      fn ${i}Coords(coords : ${u}) -> f32{\n        return get${s}();\n      }\n    `;p=l<2&&d.length>=1?"coords = 0;":d.map((e=>`coords[${e+h}] = 0;`)).join("\n");let c="";c=l<2&&o>0?"coords":l>1?`${tJ(o)}(${e.shape.map(((e,t)=>`coords[${t+h}]`)).join(", ")})`:"coords";let f=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,m=`${o}D`;return n?`\n      fn ${i}Index(globalIndex : i32) -> vec4<f32> {\n        var coords = getCoordsFromIndex(globalIndex);\n        ${p}\n        return ${a}[getIndexFromCoords${m}(${c}, ${f}) / 4];\n      }\n\n      fn ${i}Coords(coordsIn : ${u}) -> vec4<f32> {\n        var coords = coordsIn;\n        ${p}\n        return ${a}[getIndexFromCoords${m}(${c}, ${f}) / 4];\n      }\n    `:`\n    fn ${i}Index(globalIndex : i32) -> f32 {\n      var coords = getCoordsFromIndex(globalIndex);\n      ${p}\n      return f32(${a}[getIndexFromCoords${m}(${c}, ${f})]);\n    }\n\n    fn ${i}Coords(coordsIn : ${u}) -> f32 {\n      var coords = coordsIn;\n      ${p}\n      return f32(${a}[getIndexFromCoords${m}(${c}, ${f})]);\n    }\n  `}(e,t,n,r)),a}function lJ(e,t){let{x:n,y:r=[],z:a=[]}=t,s=e.length;if(n.length===s)return[`fn getOutputCoords() -> ${tJ(s)}{\n      let globalIndex = getGlobalIndex();\n      return getCoordsFromIndex(globalIndex);\n    }\n    `,s];let i="",o=[n,r,a],l=0;for(let e=0;e<o.length;e++){let t=o[e];if(0!==t.length)if(l+=t.length,1===t.length)i+=`let d${t[0]} = i32(globalId[${e}]);`;else{let n=eJ(t,"uniforms.outShape");i+=`var index${e} = i32(globalId[${e}]);`;for(let r=0;r<n.length;r++)i+=`let d${t[r]} = index${e} / ${n[r]};`,r===n.length-1?i+=`let d${t[r+1]} = index${e} - d${t[r]} * ${n[r]};`:i+=`index${e} = index${e} - d${t[r]} * ${n[r]};`}}let u=[];for(let e=0;e<l;e++)u.push(`d${e}`);let d=tJ(l),h=`fn getOutputCoords() -> ${d} {\n    ${i}\n  `;return 0===u.length?h+=`return ${d}(0); }`:h+=`return ${d}(${u.join(",")}); }`,[h,l]}function uJ(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=uc.computeStrides(e),r=tJ(t),a=[];for(let e=0;e<t;e++)a.push(`d${e}`);return 1===n.length?"    fn getCoordsFromIndex(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;\n      return vec2<i32>(d0, d1);\n    }":`\n    fn getCoordsFromIndex(index : i32) -> ${r} {\n      ${"var index2 = index;"+n.map(((e,t)=>`let ${a[t]} = index2 / uniforms.outShapeStrides[${t}]; ${t===n.length-1?`let ${a[t+1]} = index2 - ${a[t]} * uniforms.outShapeStrides[${t}]`:`index2 = index2 - ${a[t]} * uniforms.outShapeStrides[${t}]`};`)).join("")}\n      return ${r}(${a.join(",")});\n    }\n  `}var dJ={};gl(dJ,{ArrayBufferToTypedArray:()=>bJ,GPUBytesPerElement:()=>AJ,computeDispatch:()=>cJ,computeWorkGroupSizeForConv2d:()=>fJ,computeWorkGroupSizeForMatMul:()=>mJ,computeWorkPerThreadForConv2d:()=>gJ,flatDispatchLayout:()=>yJ,isWebGPUSupported:()=>xJ,tilesFitEvenlyIntoShape:()=>pJ});var hJ=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function pJ(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every(((t,n)=>t%e[n]==0))}function cJ(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],[a,s,i]=[Math.ceil(hJ(e.x.map((e=>t[e])))/(n[0]*r[0])),e.y?Math.ceil(hJ(e.y.map((e=>t[e])))/(n[1]*r[1])):1,e.z?Math.ceil(hJ(e.z.map((e=>t[e])))/(n[2]*r[2])):1];return[a,s,i]}function fJ(e,t){let n=hJ(e.x.map((e=>t[e]))),r=hJ(e.y.map((e=>t[e])));return n<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function mJ(e,t,n){return 1===e?[32,1,1]:1===n?[1,32,1]:[8,8,1]}function gJ(e,t){let n=hJ(e.x.map((e=>t[e]))),r=hJ(e.y.map((e=>t[e])));return n<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function yJ(e){return{x:e.map(((e,t)=>t))}}function AJ(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}function bJ(e,t){if("float32"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function xJ(){return("undefined"!=typeof window||"undefined"!=typeof WorkerGlobalScope)&&!!navigator.gpu}function vJ(e,t,n,r){return uc.assert(r%4==0&&4===e[0],(()=>"tileInner must be divisible by 4. And ColPerThread must be 4")),`\n  var<workgroup> mm_Asub : array<array<vec4<f32>, ${r/e[0]}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${r}>;\n\n  let RowPerThread = ${e[1]};\n  let ColPerThread = ${e[0]};\n  let TileInner = ${r};\n\n  \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n\n    let tileRow = ${1===t?"0":"i32(localId.y) * RowPerThread"};\n    let tileCol = i32(localId.x);\n\n    let globalRow = ${1===t?"0":"i32(globalId.y) * RowPerThread"};\n    let globalCol = i32(globalId.x);\n    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;\n\n    var acc: array<vec4<f32>, RowPerThread>;\n    var ACached : vec4<f32>;\n    var BCached : array<vec4<f32>, 4>;\n\n    // Loop over shared dimension.\n    var globalColA = tileCol;\n    let RowPerThreadB = TileInner / i32(workGroupSizeY);\n    let tileRowB = i32(localId.y) * RowPerThreadB;\n    for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);\n        }\n        globalColA = globalColA + TileInner / ColPerThread;\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {\n            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];\n            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];\n            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];\n            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];\n\n            for (var i = 0; i < RowPerThread; i = i + 1) {\n                ACached = mm_Asub[tileRow + i][k];\n                acc[i] = BCached[0] * ACached.x + acc[i];\n                acc[i] = BCached[1] * ACached.y + acc[i];\n                acc[i] = BCached[2] * ACached.z + acc[i];\n                acc[i] = BCached[3] * ACached.w + acc[i];\n            }\n        }\n\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n        mm_write(globalRow + innerRow,\n                 globalCol,\n                 acc[innerRow], globalId);\n    }\n  }`}function wJ(e,t){let n=t[1]*e[1],r=t[0]*e[0],a=n>r?n:r;return`\n    var<workgroup> mm_Asub : array<array<f32, ${a}>, ${n}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${r}>, ${a}>;\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let tileRow = i32(localId.y) * ${e[1]};\n      let tileCol = i32(localId.x) * ${e[0]};\n\n      let globalRow = i32(globalId.y) * ${e[1]};\n      let globalCol = i32(globalId.x) * ${e[0]};\n\n      let numTiles = (uniforms.dimInner - 1) / ${a} + 1;\n\n      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;\n      var ACached : f32;\n      var BCached : array<f32, ${e[0]}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n\n      let ColPerThreadA = ${a} / ${t[0]};\n      let tileColA = i32(localId.x) * ColPerThreadA;\n      let RowPerThreadB = ${a} / ${t[1]};\n      let tileRowB = i32(localId.y) * RowPerThreadB;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileColA + innerCol;\n\n            mm_Asub[inputRow][inputCol] = mm_readA(\n                globalRow + innerRow,\n                t * ${a} + inputCol, globalId);\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol + innerCol;\n\n            mm_Bsub[inputRow][inputCol] = mm_readB(\n              t * ${a} + inputRow,\n              globalCol + innerCol, globalId);\n          }\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${a}; k = k + 1) {\n          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {\n            BCached[inner] = mm_Bsub[k][tileCol + inner];\n          }\n\n          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n            ACached = mm_Asub[tileRow + innerRow][k];\n            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n            }\n          }\n        }\n\n        workgroupBarrier();\n      }\n\n      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n\n          if ((globalCol + innerCol) < uniforms.dimBOuter &&\n              (globalRow + innerRow) < uniforms.dimAOuter) {\n            mm_write(globalRow + innerRow,\n                     globalCol + innerCol,\n                     acc[innerRow][innerCol], globalId);\n          }\n        }\n      }\n    }\n  `}var kJ=class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=r?e[1]:e[2];this.workGroupSize=mJ(t[1],0,t[2]),(1===t[1]||1===t[2])&&(n=1),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),uc.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let u=null!=s,d=null!=o;u&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=r,this.transposeB=a,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=d;let h=this.outputShape[2],p=this.transposeB?[this.outputShape[0],h,l]:[this.outputShape[0],l,h];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${r}_${a}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,r=t>n?t:n;1===this.outputShape[1]&&(r*=4),uc.assert(r%this.workGroupSize[0]==0&&r%this.workGroupSize[1]==0,(()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y"));let a=[r,n];return[pJ([t,r],this.aShape.slice(1)),pJ(a,e.slice(1))]}getUserCode(){let e,t;e=!1===this.transposeA?this.fitA?"return A[batch * batchASize + row * uniforms.dimInner + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n             return A[batch * batchASize + row * uniforms.dimInner + col];\n           }\n           return 0.0;":this.fitA?"return A[batch * batchASize + col * uniforms.dimAOuter + row];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n             return A[batch* batchASize + col * uniforms.dimAOuter + row];\n           }\n           return 0.0;",t=!1===this.transposeB?this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B[batch * batchBSize + row * uniforms.dimBOuter + col];\n           }\n           return 0.0;":this.fitB?"return B[batch * batchBSize + col * uniforms.dimInner + row];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B[batch * batchBSize + col * uniforms.dimInner + row];\n           }\n           return 0.0;";let n="",r="";if(this.activation){let e=QY(this.activation,!1);n=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${e}\n            }`:`\n              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n                ${e}\n              }\n            `,r="value = activation(value, outCoord);"}return`\n      ${n}\n\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        let batch = i32(globalId.z);\n        ${e}\n      }\n\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batch = i32(globalId.z);\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        ${t}\n      }\n\n      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {\n        var value = valueIn;\n        let batch = i32(globalId.z);\n        let outCoord = vec3<i32>(batch, row, col);\n        ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n        ${r}\n        setOutputAtCoords(batch, row, col, value);\n      }\n      ${this.outputShape[1]>1?wJ([this.workPerThread,this.workPerThread,1],this.workGroupSize):function(e){return`\n    let TileSize = ${4*e[0]};\n    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;\n\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;\n\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        let colA = t * TileSize + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),\n                                mm_readA(globalRow, colA + 1, globalId),\n                                mm_readA(globalRow, colA + 2, globalId),\n                                mm_readA(globalRow, colA + 3, globalId));\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileSize / 4; k = k + 1) {\n          let rowB = t * TileSize + k * 4;\n          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),\n                              mm_readB(rowB + 1, globalCol, globalId),\n                              mm_readB(rowB + 2, globalCol, globalId),\n                              mm_readB(rowB + 3, globalCol, globalId));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {\n        mm_write(globalRow, globalCol, acc, globalId);\n      }\n    }\n  `}(this.workGroupSize)}\n    `}};function IJ(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=uc.sizeFromShape(r.shape),i=uc.inferFromImplicitShape(a,s),o=uc.sizeFromShape(i);return uc.assert(s===o,(()=>`The new shape (${i}) has ${o} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var SJ={kernelName:Qh,backendName:"webgpu",kernelFunc:IJ};function NJ(e){let{a:t,b:n,transposeA:r,transposeB:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=t.shape.length,h=n.shape.length,p=r?t.shape[d-2]:t.shape[d-1],c=a?n.shape[h-1]:n.shape[h-2],f=r?t.shape[d-1]:t.shape[d-2],m=a?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),A=uc.sizeFromShape(g),b=uc.sizeFromShape(y),x=Hm.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);uc.assert(p===c,(()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${a} must match.`));let v,w=r?[A,p,f]:[A,f,p],k=a?[b,m,c]:[b,c,m],I=IJ({inputs:{x:t},backend:s,attrs:{shape:w}}),S=IJ({inputs:{x:n},backend:s,attrs:{shape:k}}),N=[I,S],T=Math.max(A,b),C=p%4==0&&m%4==0&&!r&&!a&&m>=32;v=f*m<=32?new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize);let i=null!=r,o=null!=s;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e,t;e=!1===this.transposeA?"return A[batch * batchASize + row * uniforms.dimInner + col];":"return A[batch * batchASize + col * uniforms.dimAOuter + row];",t=!1===this.transposeB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":"return B[batch * batchBSize + col * uniforms.dimInner + row];";let n="",r="";if(this.activation){let e=QY(this.activation,!1);n=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${e}\n            }`:`\n              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n                ${e}\n              }\n            `,r="value = activation(value, outCoord);"}return`\n      ${n}\n\n      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        ${e}\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        ${t}\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {\n        var value = valueIn;\n        let outCoord = vec3<i32>(batch, row, col);\n        ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n        ${r}\n        setOutputAtCoords(batch, row, col, value);\n      }\n      \n    var<workgroup> sumValues : array<f32, workGroupSizeX>;\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {\n        let dataA = mm_readA(batch, row, k);\n        let dataB = mm_readB(batch, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  \n    `}}([T,f,m],r,a,i,u,o):r||a||!(f<=16&&(m<=512||c>=2*m)||m<=16&&(f<=512||p>=2*f))?C?new class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},1===t[1]?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let i=null!=r,o=null!=s;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=1===t[1]?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],r=[this.tileAOuter,this.tileInner],a=[this.tileInner,this.tileBOuter];return[pJ(r,this.aShape.slice(1)),pJ(a,n.slice(1))]}getUserCode(){let e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner / 4 + col]":"if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n            return A[batch * batchASize + row * uniforms.dimInner / 4 + col];\n        }\n        return vec4<f32>(0.0)",t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":"if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];\n        }\n        return vec4<f32>(0.0)",n="",r="";if(this.activation){let e=QY(this.activation,this.isVec4);n=this.hasPreluActivationWeights?`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {\n                  let b = getPreluActivationWeightsByOutputCoords(outCoord);\n                  ${e}\n                }`:`\n            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {\n              ${e}\n            }`,r="value = activation(value, outCoord);"}return`\n      ${n}\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;\n        let batch = i32(globalId.z);\n        ${e};\n      }\n\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;\n        let batch = i32(globalId.z);\n        ${t};\n      }\n\n      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {\n        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])\n        {\n          var value = valueIn;\n          let batch = i32(globalId.z);\n          let outCoord = vec3<i32>(batch, row, col * 4);\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${r}\n          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);\n        }\n      }\n      ${vJ(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}\n    `}}(w,[T,f,m],Lu().get("WEBGPU_MATMUL_WORK_PER_THREAD"),i,u,o):new kJ(w,[T,f,m],Lu().get("WEBGPU_MATMUL_WORK_PER_THREAD"),r,a,i,u,o):new class{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,16,1],uc.assert(e[1]<=16||t[2]<=16,(()=>"This program can be only used when A width or B Height are small")),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(2*n[1]/this.workGroupSize[1]),n[0]];let i=null!=r;i&&this.variableNames.push("bias");let o=null!=s;o&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let n=QY(this.activation,!1);e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n            let b = getPreluActivationWeightsByOutputCoords(outCoord);\n            ${n}\n            }`:`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n            ${n}\n        }`,t="value = activation(value, outCoord);"}return`\n      ${e}\n\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        let batch = i32(globalId.z);\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n          return A[batch * batchASize + row * uniforms.dimInner + col];\n        }\n        return 0.0;\n      }\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batch = i32(globalId.z);\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return B[batch * batchBSize + row * uniforms.dimBOuter + col];\n         }\n         return 0.0;\n      }\n      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {\n          let batch = i32(globalId.z);\n          let outCoord = vec3<i32>(batch, row, col);\n          var value = valueIn;\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${t}\n          setOutputAtCoords(batch, row, col, value);\n        }\n      }\n      ${function(e){let t=e[1]/2,n=e[0],r=t>n?t:n;return`\n  var<workgroup> mm_Asub1 : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${r}>;\n  var<workgroup> mm_Asub2 : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${r}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Introduces two shared memory buffers, some logical threads could handle\n  // arithmetic operations and others handle IO operations between barrier api,\n  // makes ALUs and load/store units work simultaneously, could improves\n  // the performance.\n  \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = tileRow;\n    for (var t = 0; t < numTiles; t = t + 1) {\n      if (t == 0) {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub1[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        }\n      } else {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub1[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        } else {\n          // Compute acc values for a single thread.\n          for (var k = 0; k < ${r}; k = k + 1) {\n            let subRow = tileRow - ${t};\n            if (subRow < 0) {\n              continue;\n            }\n            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];\n          }\n        }\n      }\n      workgroupBarrier();\n      if (t != 0) {\n        t = t + 1;\n      }\n\n      if (t < numTiles) {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub2[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        } else {\n          // Compute acc values for a single thread.\n          for (var k = 0; k < ${r}; k = k + 1) {\n            let subRow = tileRow - ${t};\n            if (subRow < 0) {\n              continue;\n            }\n            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};\n    if (tileRow >= ${t} && writeCol >= 0) {\n      mm_write(writeCol, globalCol, acc, globalId);\n    }\n  }\n  `}(this.workGroupSize)}\n    `}}(w,k,[T,f,m],i,u,o);let E=[I,S];i&&E.push(i),o&&E.push(o);let _=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[p]}];"leakyrelu"===u&&(_.push({type:"float32",data:[l]}),v.uniforms+=" alpha : f32,");let R=s.runWebGPUProgram(v,E,t.dtype,_),M=IJ({inputs:{x:R},backend:s,attrs:{shape:x}});N.push(R);for(let e of N)s.disposeData(e.dataId);return M}var TJ={kernelName:qp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r;return NJ({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:d})}},CJ=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=qw.assertAndGetBroadcastShape(t,n),this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${YY(this.op,!1)}\n      }\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}},EJ=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0,this.workGroupSize=[128,1,1],this.outputShape=qw.assertAndGetBroadcastShape(t,n),this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOperation(a : f32, b : f32) -> f32 {\n        ${YY(this.op,!1)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          let b = getBByOutputIndex(index);\n          setOutputAtIndex(index, binaryOperation(a, b));\n        }\n      }\n      `}};function _J(e,t,n){if(uc.arraysEqual(t,n)&&uc.sizeFromShape(t)%4==0)return new class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0,this.workGroupSize=[128,1,1],this.outputShape=qw.assertAndGetBroadcastShape(t,n),this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`\n      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n        ${YY(this.op,this.isVec4)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          let b = getBByOutputIndex(index);\n          setOutputAtIndex(index, binaryOperation(a, b));\n        }\n      }\n    `}}(e,t,n);let r=1===t.length&&n.length>1&&t[0]<1024,a=1===n.length&&t.length>1&&n[0]<1024;return r||a?new class{constructor(e,t,n,r){this.variableNames=["A","B"],this.size=!0,this.workGroupSize=[256,1,1],this.outputShape=qw.assertAndGetBroadcastShape(t,n),this.dispatchLayout=yJ(this.outputShape),this.lastDimensionSize=r?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=r,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);\n         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];\n         let b = getBByOutputCoords(coords);`;return`\n        fn binaryOperation(a : f32, b : f32) -> f32 {\n          ${YY(this.op,!1)}\n        }\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n          // Fill in the shared memory buffer. Here we need a loop to make sure\n          // that all data in A|B are uploaded when |sharedMemorySize| is larger\n          // than work group size.\n          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);\n          }\n          workgroupBarrier();\n\n          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n            let flatIndex = index * ${this.workPerThread} + i;\n            if(flatIndex < uniforms.size) {\n              let coords = getCoordsFromIndex(flatIndex);\n\n              ${t}\n              setOutputAtIndex(flatIndex, binaryOperation(a, b));\n            }\n          }\n        }\n        `}}(e,t,n,a):new EJ(e,t,n)}function RJ(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var MJ={kernelName:ah,backendName:"webgpu",kernelFunc:RJ};function $J(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.tensorMap.get(s.dataId),o=RJ({inputs:{x:r},backend:n}),l=RJ({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var FJ={kernelName:gd,backendName:"webgpu",kernelFunc:$J},OJ=class{constructor(e,t){this.variableNames=["A"],this.size=!0,this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${JY(this.op,!1)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}};function zJ(e){let{opType:t,cpuKernelImpl:n,dtype:r}=e;return e=>{let{inputs:a,backend:s}=e,{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){let e=o.tensorMap.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u=new OJ(i.shape,t);return o.runWebGPUProgram(u,[i],l)}}function DJ(e){let{opSnippet:t,cpuKernelImpl:n,supportsComplex:r=!1,dtype:a}=e;return e=>{let{inputs:s,backend:i}=e,{a:o,b:l}=s,u=i;if(r&&"complex64"===o.dtype){let e,n,r=u.tensorMap.get(o.dataId),a=u.tensorMap.get(l.dataId);if(0!==t)[e,n]=[[r.complexTensorInfos.real,a.complexTensorInfos.real],[r.complexTensorInfos.imag,a.complexTensorInfos.imag]].map((e=>{let[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:o.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=_J(t,o.shape,l.shape);return u.runWebGPUProgram(i,[a,s],Jc(n.dtype,r.dtype))}));else{let t=new CJ(17,o.shape,l.shape),s=new CJ(18,o.shape,l.shape),i=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o.shape},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:l.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:l.shape}];e=u.runWebGPUProgram(t,i,"float32"),n=u.runWebGPUProgram(s,i,"float32")}let s=$J({inputs:{real:e,imag:n},backend:u});return u.disposeData(e.dataId),u.disposeData(n.dataId),s}let d=a||Jc(o.dtype,l.dtype);if(("string"===o.dtype||"string"===l.dtype||u.shouldExecuteOnCPU([o,l]))&&null!=n){let e=u.tensorMap.get(o.dataId).values,t=u.tensorMap.get(l.dataId).values,r="string"===o.dtype?qw.fromUint8ToStringArray(e):e,a="string"===o.dtype?qw.fromUint8ToStringArray(t):t,[s,i]=n(o.shape,l.shape,r,a,d);return u.makeTensorInfo(i,d,s)}let h=_J(t,o.shape,l.shape);return u.runWebGPUProgram(h,[o,l],d)}}var{addImpl:PJ,ceilImpl:LJ,concatImpl:WJ,equalImpl:BJ,expImpl:UJ,expm1Impl:VJ,floorImpl:GJ,gatherNdImpl:jJ,gatherV2Impl:HJ,greaterEqualImpl:qJ,greaterImpl:KJ,lessEqualImpl:XJ,lessImpl:ZJ,logImpl:YJ,maxImpl:JJ,maximumImpl:QJ,minimumImpl:eQ,multiplyImpl:tQ,negImpl:nQ,notEqualImpl:rQ,prodImpl:aQ,rangeImpl:sQ,rsqrtImpl:iQ,simpleAbsImpl:oQ,sliceImpl:lQ,stridedSliceImpl:uQ,stringNGramsImpl:dQ,subImpl:hQ,tileImpl:pQ,topKImpl:cQ,transposeImpl:fQ,uniqueImpl:mQ}=qz,gQ=zJ({opType:0,cpuKernelImpl:oQ}),yQ={kernelName:Gu,backendName:"webgpu",kernelFunc:gQ},AQ=DJ({opSnippet:1,cpuKernelImpl:PJ,supportsComplex:!0}),bQ={kernelName:qu,backendName:"webgpu",kernelFunc:AQ},xQ={kernelName:Ku,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;if(1===r.length)return RJ({inputs:{x:r[0]},backend:n});let a=r.map((e=>e.dtype)).reduce(((e,t)=>Jc(e,t))),s=r.map((e=>e.shape)),i=new class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)}));let t=this.variableNames.map((e=>`v${e}`)).join(" + ");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}}(s);return n.runWebGPUProgram(i,r,a)}},vQ=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32, infinityValue : f32,",this.size=!0;let r=[t];qw.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.length),this.op="min"===n?"<":">";let[a]=qw.computeOutAndReduceShapes(e,r);this.outputShape=0===a.length?[1]:a,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=e=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape[${e}]`;return`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      \n      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;\n      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n    \n\n      // In order to get a flattened index into the input tensor, we need to\n      // add back the index along the reduced dimension to |outputCoords|.\n      // This function outputs the offset to the first value along\n      // |axis| and the stride to get the next value of the input along |axis|.\n      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        var i = ${this.outputShape.length-1};\n\n        var stride = 1;\n        var inputStride = 1;\n        var offset = 0;\n\n        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {\n          let length = ${e(`${this.inputShape.length} - r`)};\n          if (${this.inputShape.length} - r == uniforms.axis) {\n            inputStride = stride;\n          } else {\n            offset = offset + ${((e,t)=>1===this.outputShape.length?e:`${e}[i]`)("outputCoords")} * stride;\n            i = i - 1;\n          }\n          stride = stride * length;\n        }\n\n        return vec2<i32>(offset, inputStride);\n      }\n\n      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{\n        return coordInfo[0] + coordInfo[1] * index;\n      }\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        let outputIndex = index / i32(workGroupSizeX);\n        let coordInfo = getInputCoordInfo(outputIndex);\n        let Length = ${e("uniforms.axis")};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n\n        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n            k = k + i32(workGroupSizeX)) {\n          let candidate = f32(x[getInputIndex(coordInfo, k)]);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(Length), workGroupSizeX);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `}};function wQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=a.shape[s[e]];if(n.shouldExecuteOnCPU([a])){let e=i.tensorMap.get(a.dataId).values,t=fQ(e,a.shape,a.dtype,s,l);return n.makeTensorInfo(l,a.dtype,t)}if(2===a.shape.length&&uc.arraysEqual(s,[1,0])){let e=new class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`\n      let TILE_DIM = ${this.workGroupSize[0]};\n      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;\n      \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(local_invocation_id) localId : vec3<u32>,\n              @builtin(workgroup_id) workgroupId : vec3<u32>) {\n        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);\n        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = A[y * width + x];\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);\n        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}}(a.shape,s);return i.runWebGPUProgram(e,[a],a.dtype)}let u=new class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=tJ(this.outputShape.length),t=function(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let t=0;t<e.length;t++)n[e[t]]=`resRC[${t}]`;return n.join()}(this.newDim);return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let resRC = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}}(a.shape,s);return i.runWebGPUProgram(u,[a],a.dtype)}var kQ={kernelName:Lp,backendName:"webgpu",kernelFunc:wQ},IQ={kernelName:Yu,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=uc.parseAxisParam(s,a.shape),o=qw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=wQ({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=qw.getInnerMostAxes(i.length,l.shape.length)),qw.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=new vQ(l.shape,i[0],"max"),h=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(d,[l],"int32",h);return u.forEach((e=>n.disposeData(e.dataId))),p}},SQ={kernelName:Ju,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=uc.parseAxisParam(s,a.shape),o=qw.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=wQ({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=qw.getInnerMostAxes(i.length,l.shape.length)),qw.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=new vQ(l.shape,i[0],"min"),h=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(d,[l],"int32",h);return u.forEach((e=>n.disposeData(e.dataId))),p}},NQ=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";"avg"===this.poolType&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return"avg"===this.poolType&&(t="resultValue / count"),`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};\n          var count = 0.0;\n\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, coords[3]);\n              ${e}\n            }\n          }\n\n          setOutputAtIndex(index, ${t});\n        }\n      }\n    `}},TQ=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.stride;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    "}},CQ={kernelName:ad,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=qw.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&uc.arraysEqual(u.inShape,u.outShape))return RJ({inputs:{x:a},backend:n});let d,h=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return 1===u.filterHeight&&1===u.filterWidth?d=new TQ(u):(d=new NQ(u,"avg"),h.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(d,[a],a.dtype,h)}},EQ={kernelName:ld,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return NJ({a,b:s,transposeA:i,transposeB:o,backend:n})}},_Q=["x","y","z","w","u","v"];function RQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=dg.parseSliceParams(a,s,i);if(dg.assertParamsValid(a,o,l),n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.tensorMap.get(a.dataId),t=lQ(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}if(0===uc.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);let u=new class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${tJ(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e,t=tJ(this.rank),n=function(e){if(1===e)return"sourceLoc";if(e<=6)return _Q.slice(0,e).map((e=>`sourceLoc.${e}`)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);return e=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${_Q[t]} = uniforms.start[${t}] + coords.${_Q[t]};`)),`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          var sourceLoc : ${t};\n          let coords = getCoordsFromIndex(index);\n          ${e.join("\n")}\n          setOutputAtIndex(index, getSource(${n}));\n        }\n      }\n    `}}(o,l),d=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[a],a.dtype,d)}var MQ={kernelName:hp,backendName:"webgpu",kernelFunc:RQ},$Q={kernelName:ud,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;uc.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=qw.getReshaped(a.shape,s,o),u=qw.getPermuted(l.length,s.length),d=qw.getReshapedPermuted(a.shape,s,o),h=qw.getSliceBeginCoords(i,s.length),p=qw.getSliceSize(d,i,s.length),c=[],f=IJ({inputs:{x:a},backend:n,attrs:{shape:l}}),m=wQ({inputs:{x:f},backend:n,attrs:{perm:u}}),g=IJ({inputs:{x:m},backend:n,attrs:{shape:d}}),y=RQ({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeData(e.dataId))),y}},FQ=DJ({opSnippet:10,dtype:"bool",cpuKernelImpl:rQ}),OQ={kernelName:Dh,backendName:"webgpu",kernelFunc:FQ};function zQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return RJ({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.real},backend:n})}var DQ={kernelName:Zh,backendName:"webgpu",kernelFunc:zQ},PQ={kernelName:cd,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return RJ({inputs:{x:s},backend:r});let t=Db(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=$J({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeData(n.dataId),a}if("complex64"===s.dtype){let t=zQ({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeData(t.dataId),n}if(!uc.hasEncodingLoss(s.dtype,i)){let e=RJ({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new OJ(e.shape,22),r=t.runWebGPUProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",uc.getTypedArrayFromDType("bool",1)),t=FQ({inputs:{a:s,b:e},backend:r});return r.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},LQ=zJ({opType:1,cpuKernelImpl:LJ}),WQ={kernelName:fd,backendName:"webgpu",kernelFunc:LQ},BQ={kernelName:md,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a,l=[{type:"float32",data:[i]},{type:"float32",data:[o]}];return t=uc.sizeFromShape(s.shape)%4==0?new class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue : vec4<f32>;\n          for (var i = 0; i < 4; i = i + 1) {\n            if (isnan(value[i])) {\n              clampedValue[i] = value[i];\n            } else {\n              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);\n            }\n          }\n\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    "}}(s.shape):new class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    "}}(s.shape),r.runWebGPUProgram(t,[s],s.dtype,l)}};function UQ(e){let{inputs:t,backend:n}=e,{input:r}=t;return RJ({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.imag},backend:n})}var VQ={kernelName:ih,backendName:"webgpu",kernelFunc:UQ};function GQ(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>zQ({inputs:{input:e},backend:n}))),a=e.map((e=>UQ({inputs:{input:e},backend:n}))),s=GQ(r,t,n),i=GQ(a,t,n),o=$J({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeData(e.dataId))),a.forEach((e=>n.disposeData(e.dataId))),n.disposeData(s.dataId),n.disposeData(i.dataId),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=uc.sizeFromShape(e.shape.slice(t));return IJ({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=qw.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=WJ(s,i,r,o),u=qw.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeData(e.dataId))),d}let{tensors2D:s,outShape:i}=function(e,t,n){let r=qw.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>IJ({inputs:{x:e},backend:n,attrs:{shape:[uc.sizeFromShape(e.shape.slice(0,t)),uc.sizeFromShape(e.shape.slice(t))]}}))),outShape:r}}(e,t,n),o=s.map((e=>e.shape)),l=new class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=qw.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);let t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}}(o),u=[],d=new Array(o.length-1);if(d.length>0){d[0]=o[0][1],u.push({type:"int32",data:[d[0]]});for(let e=1;e<d.length;e++)d[e]=d[e-1]+o[e][1],u.push({type:"int32",data:[d[e]]})}let h=n.runWebGPUProgram(l,s,s[0].dtype,u);s.forEach((e=>n.disposeData(e.dataId)));let p=IJ({inputs:{x:h},backend:n,attrs:{shape:i}});return n.disposeData(h.dataId),p}function jQ(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=uc.parseAxisParam(a,t[0].shape)[0],i=qw.computeOutShape(t.map((e=>e.shape)),s);if(0===uc.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>uc.sizeFromShape(e.shape)>0));if(1===o.length)return RJ({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return qw.assertParamsConsistent(l,s),GQ(o,s,n)}var HQ={kernelName:Ad,backendName:"webgpu",kernelFunc:jQ};function qQ(e){let t,{x:n,filter:r,convInfo:a,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=null!=i,h=null!=o;if(a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type||1===a.filterHeight&&1===a.filterWidth&&1===a.dilationHeight&&1===a.dilationWidth&&1===a.strideHeight&&1===a.strideWidth&&("SAME"===a.padInfo.type||"VALID"===a.padInfo.type))return function(e){let t,n,{x:r,filter:a,convInfo:s,backend:i,bias:o=null,preluActivationWeights:l=null,leakyreluAlpha:u=0,activation:d=null}=e,h=r.shape,p="channelsLast"===s.dataFormat;if(s.filterHeight===s.inHeight&&s.filterWidth===s.inWidth&&"VALID"===s.padInfo.type){let e=s.inHeight*s.inWidth*s.inChannels;t=IJ({inputs:{x:r},backend:i,attrs:{shape:[1,s.batchSize,e]}}),n=IJ({inputs:{x:a},backend:i,attrs:{shape:[1,e,s.outChannels]}})}else t=IJ({inputs:{x:r},backend:i,attrs:{shape:[1,p?h[0]*h[1]*h[2]:h[0]*h[2]*h[3],s.inChannels]}}),n=IJ({inputs:{x:a},backend:i,attrs:{shape:[1,s.inChannels,s.outChannels]}});let c=NJ({a:t,b:n,transposeA:!1,transposeB:!1,backend:i,bias:o,activation:d,preluActivationWeights:l,leakyreluAlpha:u}),f=IJ({inputs:{x:c},backend:i,attrs:{shape:s.outShape}});return i.disposeData(t.dataId),i.disposeData(n.dataId),i.disposeData(c.dataId),f}({x:n,filter:r,convInfo:a,backend:s,bias:i,activation:u,preluActivationWeights:o,leakyreluAlpha:l});if(Lu().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&1===n.shape[0])return function(e){let{x:t,filter:n,convInfo:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}=e,{filterWidth:u,filterHeight:d,inChannels:h,strideWidth:p,strideHeight:c,padInfo:f,outWidth:m,outHeight:g,dilationWidth:y,dilationHeight:A,dataFormat:b}=r,x="channelsLast"===b,v=u*d*h,w=g*m,k=[w,v],I=[],S=IJ({inputs:{x:t},backend:a,attrs:{shape:t.shape.slice(1)}}),N=IJ({inputs:{x:n},backend:a,attrs:{shape:[1,v,-1]}});I.push(S),I.push(N);let T=new class{constructor(e,t){this.variableNames=["A"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n      inChannels : i32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n      for(var i = 0; i<${this.workPerThread}; i = i + 1) {\n        let flatIndex = index * ${this.workPerThread} + i;\n\n        let rc = getCoordsFromIndex(flatIndex);\n\n        if(flatIndex < uniforms.size) {\n          let blockIndex = rc[0];\n          let pos = rc[1];\n\n          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];\n          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;\n          var value = 0.0;\n          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {\n            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -\n              uniforms.pad[0];\n            let d1 = offsetX + uniforms.dilation[0] * ((pos %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n            let ch = pos % uniforms.inChannels;\n            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {\n              value = getA(d0, d1, ch);\n            }\n          }\n          setOutputAtIndex(flatIndex, value);\n        }\n      }\n    }\n  `}}(k,x),C=[{type:"int32",data:[f.left,f.top]},{type:"int32",data:[p,c]},{type:"int32",data:[y,A]},{type:"int32",data:[m]},{type:"int32",data:[h*u]},{type:"int32",data:[h]}],E=a.runWebGPUProgram(T,[S],S.dtype,C),_=IJ({inputs:{x:E},backend:a,attrs:{shape:[1,k[0],k[1]]}});I.push(E),I.push(_);let R=[1,k[0],k[1]],M=new kJ(R,[1,w,r.outChannels],Lu().get("WEBGPU_MATMUL_WORK_PER_THREAD"),!1,!1,s,l,i),$=R[2],F=[{type:"int32",data:[R[1]]},{type:"int32",data:[r.outChannels]},{type:"int32",data:[$]}],O=[_,N];s&&O.push(s),i&&O.push(i),"leakyrelu"===l&&(C.push({type:"float32",data:[o]}),M.uniforms+=" alpha : f32,");let z=a.runWebGPUProgram(M,O,_.dtype,F),D=IJ({inputs:{x:z},backend:a,attrs:{shape:x?[1,g,m,r.outChannels]:[1,r.outChannels,g,m]}});I.push(z);for(let e of I)a.disposeData(e.dataId);return D}({x:n,filter:r,convInfo:a,backend:s,bias:i,preluActivationWeights:o,leakyreluAlpha:l,activation:u});let p=Lu().getBool("WEBGPU_USE_NAIVE_CONV2D"),c=(a.inChannels%4==0||3===a.inChannels&&"VALID"===a.padInfo.type)&&a.outChannels%4==0,f=[a.padInfo.top,a.padInfo.left],m=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];if(p)t=new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),uc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let n=QY(this.activation);e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec4<i32>) -> f32{\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${n}\n             }`:`\n                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{\n                    ${n}\n                  }\n                `,t="value = activation(value, outCoord);"}return`\n      ${e}\n      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if(coordsInBounds4D(coord, uniforms.xShape)) {\n          return getX(batch, row, col, chan);\n        }\n        return 0.0;\n      }\n\n      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n        let coord = vec4<i32>(row, col, xChannel, outChannel);\n        if(coordsInBounds4D(coord, uniforms.wShape)) {\n          return getW(row, col, xChannel, outChannel);\n        }\n        return 0.0;\n      }\n\n      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if (coordsInBounds4D(coord, uniforms.outShape)) {\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${t}\n          setOutputAtCoords(batch, row, col, chan, value);\n        }\n      }\n\n      \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let outChannel = coords[3];\n\n        var acc = 0.0;\n\n        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {\n              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];\n              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];\n              let v = readInp(batch, coordRow, coordCol, xChannel);\n              let f = readFilt(row, col, xChannel, outChannel);\n              acc = acc + v * f;\n            }\n          }\n        }\n\n        writeResult(batch, coords[1], coords[2], outChannel, acc);\n      }\n    `}}(a,d,u,h);else{t=c?new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,\n      dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,uc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},1===this.outputShape[1]?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,this.hasLeakyreluAlpha=a,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=1===this.outputShape[1]?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],r=this.outputShape[3],a=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[pJ(e,[n,a]),pJ(t,[a,r])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);\n    let divBy4Remainder${e} = flatIndex${e} % 4;\n    let divBy4Index${e} = flatIndex${e} / 4;\n    let curData${e} = x[divBy4Index${e}];\n    if (divBy4Remainder${e} == 0) {\n      temp = curData${e};\n    } else {\n      // TODO: This could end up being a redundant load with another one in\n      // the same shader invocation. Perhaps there's an opportunity for\n      // optimization\n      let nextData${e} = x[divBy4Index${e} + 1];\n      if (divBy4Remainder${e} == 1) {\n        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);\n      } else if (divBy4Remainder${e} == 2) {\n        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);\n      } else if (divBy4Remainder${e} == 3) {\n        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);\n      }\n    }\n    `}getUserCode(){let e=vJ(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),t=`let outRow = r / uniforms.outShape[2];\n        let outCol = r % uniforms.outShape[2];\n        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);\n        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];\n        let inChCoord = c % uniforms.xShape[3];\n        var coord = vec4<i32>(\n            batch,\n            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],\n            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],\n            inChCoord);\n        var resData = vec4<f32>(0.0);\n        ${this.convInfo.inChannels%4==0?"// The bounds checking is always needed since we use it to pad zero for\n          // the 'same' padding type.\n          if (coordsInBounds4D(coord, uniforms.xShape)) {\n            resData = x[getIndexFromCoords4D(coord, uniforms.xShape) / 4];\n          } else {\n            resData = vec4<f32>(0.0); }":`var temp = vec4<f32>(0.0);\n          ${this.getSampleAWithRemainder(1)}\n          resData = temp;\n          if (WCol == (uniforms.filterDims[1] - 1)) {\n            coord = vec4<i32>(\n              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);\n              ${this.getSampleAWithRemainder(2)}\n            if (inChCoord == 0) {\n              resData = vec4<f32>(resData.xyz, temp.x);\n            } else if (inChCoord == 1) {\n              resData = vec4<f32>(resData.xy, temp.xy);\n            } else {\n              resData = vec4<f32>(resData.x, temp.xyz);\n            }\n          }\n          `}\n        return resData;`,n=this.fitA?`${t}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {\n          ${t}\n         }\n         return vec4<f32>(0.0);\n        `,r=this.fitB?"return W[row * uniforms.dimBOuter / 4 + col];":"if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return W[row * uniforms.dimBOuter / 4 + col];\n         }\n         return vec4<f32>(0.0);\n        ",a="",s="";if(this.activation){let e=QY(this.activation,this.isVec4);if(this.hasPreluActivationWeights)a=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${e}\n        }`;else{if(this.hasLeakyreluAlpha)throw a=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {\n          let b = getLeakyreluAlphaByOutputCoords(outCoord);\n          ${e}\n        }`,new Error("Leakyrelu is not supported.");a=`\n        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          ${e}\n        }`}s="value = activation(value, outCoord);"}return`\n        ${a}\n        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {\n          let r = row;\n          let c = col * 4;\n          var batch = i32(globalId.z);\n          ${n}\n        }\n\n        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {\n          ${r}\n        }\n\n        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {\n          var batch = i32(globalId.z);\n          var value = valueInput;\n          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)\n          {\n            let outCoord = vec4<i32>(\n              batch,\n              row / uniforms.outShape[2],\n              row % uniforms.outShape[2],\n              col * 4);\n            ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n            ${s}\n            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],\n              value);\n          }\n        }\n        ${e}\n      `}}(a,d,u,h):new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,uc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=fJ(this.dispatchLayout,this.outputShape),this.elementsPerThread=gJ(this.dispatchLayout,this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;uc.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,(()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y"));let r=[e,n],a=[n,t],s=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],o=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[pJ(r,[s,o]),pJ(a,[o,i])]}getUserCode(){let e=wJ(this.elementsPerThread,this.workGroupSize),t="\n    let outRow = row / uniforms.outShape[2];\n    let outCol = row % uniforms.outShape[2];\n\n    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);\n    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];\n    let coord = vec4<i32>(\n        batch,\n        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],\n        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],\n        col % uniforms.xShape[3]);\n    // The bounds checking is always needed since we use it to pad zero for the\n    // 'same' padding type.\n    if(coordsInBounds4D(coord, uniforms.xShape)) {\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)];\n    }\n    return 0.0;",n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      ${t}\n    }\n    return 0.0;\n    `,r=this.fitB?"return W[row * uniforms.dimBOuter + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return W[row * uniforms.dimBOuter + col];\n\t }\n\t return 0.0;\n\t ",a="",s="";if(this.activation){let e=QY(this.activation,!1);a=this.hasPreluActivationWeights?`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {\n                  let b = getPreluActivationWeightsByOutputCoords(outCoord);\n                  ${e}\n                }`:`\n                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n                    ${e}\n                  }\n                `,s="value = activation(value, outCoord);"}return`\n    ${a}\n    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      var batch = i32(globalId.z);\n      ${n}\n    }\n\n    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      ${r}\n    }\n\n    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {\n      var batch = i32(globalId.z);\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n      ${s}\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;\n    }\n    ${e}\n  `}}(a,d,u,h);let e=a.outShape[1]*a.outShape[2],n=a.outShape[3],r=a.filterHeight*a.filterWidth*a.inShape[3];m.push({type:"int32",data:[e]},{type:"int32",data:[n]},{type:"int32",data:[r]})}let g=[n,r];return d&&g.push(i),h&&g.push(o),"leakyrelu"===u&&(m.push({type:"float32",data:[l]}),t.uniforms+=" alpha : f32,"),s.runWebGPUProgram(t,g,n.dtype,m)}var KQ={kernelName:bd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=n,h=qw.convertConv2DDataFormat(l);return qQ({x:a,filter:s,convInfo:qw.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,h),backend:r})}},XQ={kernelName:vd,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{dy:s,filter:i}=n,{inputShape:o,strides:l,pad:u,dataFormat:d,dimRoundingMode:h}=a,p=qw.convertConv2DDataFormat(d),c=qw.computeConv2DInfo(o,i.shape,l,1,u,h,!1,p),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}];if(Lu().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))t=new class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3;return`\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${this.isChannelsLast?3:1}];\n\n        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = dyR;\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = dyC;\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              if (${this.isChannelsLast}) {\n                let xValue = getDy(batch, idyR, idyC, d2);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              } else {\n                let xValue = getDy(batch, d2, idyR, idyC);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}}(c);else{t=new class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,uc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=fJ(this.dispatchLayout,this.outputShape),this.elementsPerThread=gJ(this.dispatchLayout,this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`\n    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      var batch = i32(globalId.z);\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      \n    let outRow = row / uniforms.outShape[2];\n    let outCol = row % uniforms.outShape[2];\n\n    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);\n    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);\n    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n      return 0.0;\n    }\n    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n      return 0.0;\n    }\n    let coord = vec4<i32>(\n        batch,\n        i32(xR),\n        i32(xC),\n        col % uniforms.outBackprop[3]);\n    return x[getIndexFromCoords4D(coord, uniforms.xShape)];\n    }\n    return 0.0;\n    }\n\n    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      let coordX = uniforms.filterDims.x - 1 -\n          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let coordY = uniforms.filterDims.y - 1 -\n          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n          coordX >= 0 && coordY >= 0) {\n        let coord = vec4<i32>(coordX, coordY, col,\n            row % uniforms.outBackprop[3]);\n        return W[getIndexFromCoords4D(coord, uniforms.wShape)];\n      }\n      return 0.0;\n    }\n\n    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {\n      var batch = i32(globalId.z);\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;\n    }\n\n    ${wJ(this.elementsPerThread,this.workGroupSize)}\n  `}}(c);let e=c.inShape[1]*c.inShape[2],n=c.inShape[3],r=c.filterHeight*c.filterWidth*c.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[n]},{type:"uint32",data:[r]})}return r.runWebGPUProgram(t,[s,i],"float32",f)}},ZQ=zJ({opType:2}),YQ={kernelName:Sd,backendName:"webgpu",kernelFunc:ZQ},JQ=zJ({opType:3}),QQ={kernelName:Nd,backendName:"webgpu",kernelFunc:JQ},e1={kernelName:Ed,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new class{constructor(e,t,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[a]=t;this.outputShape=[a,n[0],n[1],e],this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId="bilinear"===r?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,r,a]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${s});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${r};\n        let width_scale = ${i};\n        let in_y = ${a};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${o};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}}(a.shape[3],s.shape,o,l),h=[{type:"float32",data:[u]}];return n.runWebGPUProgram(d,[a,s,i],"float32",h)}},t1={kernelName:Rd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=[{type:"int32",data:[s]}],c=new class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(h,i);return n.runWebGPUProgram(c,[a],a.dtype,p)}},n1=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),uc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let n=QY(this.activation,this.isVec4);e=this.hasPreluActivation?`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${n}\n        }`:`\n        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n            ${n}\n          }\n        `,t="dotProd[i] = activation(dotProd[i], coords);"}return`\n      ${e}\n\n      \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {\n        let batch = 0;\n        let r = i32(globalId.x);\n        let c = i32(globalId.y) * 4;\n        let d2 = i32(globalId.z) * 4;\n        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;\n        let d1 = d2;\n        let q = 0;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n\n        var wVals : array<vec4<f32>, 9>;\n        wVals[0] = getW(0, 0, d1, q);\n        wVals[1] = getW(0, 1, d1, q);\n        wVals[2] = getW(0, 2, d1, q);\n        wVals[3] = getW(1, 0, d1, q);\n        wVals[4] = getW(1, 1, d1, q);\n        wVals[5] = getW(1, 2, d1, q);\n        wVals[6] = getW(2, 0, d1, q);\n        wVals[7] = getW(2, 1, d1, q);\n        wVals[8] = getW(2, 2, d1, q);\n\n        var xVals : array<array<vec4<f32>, 6>, 3>;\n        for (var wR = 0; wR < 3; wR = wR + 1) {\n          let xR = xRCorner + wR * uniforms.dilation[0];\n          for (var wC = 0; wC < 6; wC = wC + 1) {\n            let xC = xCCorner + wC * uniforms.dilation[1];\n            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {\n              xVals[wR][wC] = vec4<f32>(0.0);\n            } else {\n              xVals[wR][wC] = getX(batch, xR, xC, d1);\n            }\n          }\n        }\n\n        var dotProd : array<vec4<f32>, 4>;\n        dotProd[0] = vec4<f32>(0.0);\n        dotProd[1] = vec4<f32>(0.0);\n        dotProd[2] = vec4<f32>(0.0);\n        dotProd[3] = vec4<f32>(0.0);\n\n        for (var wR = 0; wR < 3; wR = wR + 1) {\n          for (var wC = 0; wC < 3; wC = wC + 1) {\n            let indexW = wR * 3 + wC;\n            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];\n            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];\n            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];\n            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];\n          }\n        }\n\n        for (var i = 0; i < 4; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d2);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            ${this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":""}\n            ${t}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n          }\n        }\n      }\n    `}},r1=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,\n      inDims : vec2<i32>, filterHeight : i32, filterWidth : i32,\n      channelMul : i32,",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),uc.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let n=QY(this.activation,!1);e=this.hasPreluActivation?`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${n}\n        }`:`\n          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n            ${n}\n          }\n        `,t="dotProd = activation(dotProd, coords);"}return`\n      ${e}\n\n      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,\n          value : f32) {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if (coordsInBounds4D(coord, uniforms.outShape)) {\n          setOutputAtCoords(batch, row, col, chan, value);\n        }\n      }\n\n      \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n        let d2 = coords[3];\n        let d1 = d2 / uniforms.channelMul;\n        let q = d2 - d1 * uniforms.channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n        let inputRowEnd = inputRowStart + uniforms.filterHeight *\n            uniforms.dilation[0];\n        let inputColEnd = inputColStart + uniforms.filterWidth *\n            uniforms.dilation[1];\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n\n        // Extract if checking out of for loop for performance.\n        if (inputRowStart >= 0 && inputColStart >= 0 &&\n          inputRowEnd < uniforms.inDims[0] &&\n              inputColEnd < uniforms.inDims[1]) {\n            // Here using a constant value |this.convInfo.filterHeight| instead\n            // of uniform value is in order to loop unrolling.\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                let xVal = getX(batch, xR, xC, d1);\n                let wVal = getW(wR, wC, d1, q);\n                dotProd = dotProd + xVal * wVal;\n              }\n            }\n          } else {\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              if (xR < 0 || xR >= uniforms.inDims[0]) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                if (xC < 0 || xC >= uniforms.inDims[1]) {\n                  continue;\n                }\n\n                let xVal = getX(batch, xR, xC, d1);\n                let wVal = getW(wR, wC, d1, q);\n                dotProd = dotProd + xVal * wVal;\n              }\n            }\n          }\n\n        ${this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":""}\n        ${t}\n        writeResult(batch, coords[1], coords[2], d2, dotProd);\n      }\n    `}},a1={kernelName:Md,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;null==d&&(d=[1,1]);let h,p=qw.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),c=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]}];return 1===p.batchSize&&p.inHeight===p.outHeight&&p.inWidth===p.outWidth&&1===p.strideHeight&&1===p.strideWidth&&p.filterHeight===p.filterWidth&&p.inChannels===p.outChannels&&1===p.dilationHeight&&1===p.dilationWidth&&3===p.filterHeight&&p.inChannels%4==0?h=new n1(p):(h=new r1(p),c.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.outChannels/p.inChannels]})),n.runWebGPUProgram(h,[a,s],a.dtype,c)}},s1=DJ({opSnippet:0,cpuKernelImpl:tQ,supportsComplex:!0}),i1={kernelName:Oh,backendName:"webgpu",kernelFunc:s1};function o1(e,t,n,r,a){let s=e.shape.length,i=[],o=uc.parseAxisParam(t,e.shape),l=o,u=qw.getAxesPermutation(l,s),d=e;null!=u&&(d=wQ({inputs:{x:e},attrs:{perm:u},backend:a}),l=qw.getInnerMostAxes(l.length,s),i.push(d)),qw.assertAxesAreInnerMostDims(r,l,s);let h,[p,c]=qw.computeOutAndReduceShapes(d.shape,l),f=p;if(n&&(f=qw.expandShapeToKeepDim(p,o)),"max"!==r&&"prod"!==r||!a.shouldExecuteOnCPU([d])){let t=uc.sizeFromShape(c),n={windowSize:t,inSize:t,batchSize:uc.sizeFromShape(d.shape)/t,outSize:1},s="mean"===r?"float32":Qc(e.dtype),o=[{type:"int32",data:[t]}],l=new class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=qw.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===n.length?[1]:n,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       \n         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n       \n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n         let outputIndex = index / i32(workGroupSizeX);\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + i32(workGroupSizeX)) {\n           let candidate = f32(x[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), workGroupSizeX);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${n}\n        }\n       }\n     `}}(n,r),u=a.runWebGPUProgram(l,[d],s,o);i.push(u),h=IJ({inputs:{x:u},attrs:{shape:f},backend:a})}else{let t=a.tensorMap.get(d.dataId).values;switch(r){case"max":let n=JJ(t,uc.sizeFromShape(c),f,e.dtype);h=a.makeTensorInfo(f,e.dtype,n);break;case"prod":let{outVals:s,outShape:i,outDtype:o}=aQ(d.shape,d.dtype,t,l);h=a.makeTensorInfo(i,o,s);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}return i.forEach((e=>a.disposeData(e.dataId))),h}function l1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return o1(a,s,i,"sum",n)}var u1={kernelName:Ap,backendName:"webgpu",kernelFunc:l1},d1={kernelName:Wd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=qw.decodeEinsumEquation(a,s.length);qw.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=qw.getEinsumComputePath(o,l),h=d.length,p=null,c=i.length,f=[];for(let e=0;e<h;++e){for(let t of d[e]){let e,{permutationIndices:r,expandDims:a}=qw.getEinsumPermutation(c,l[t]);qw.isIdentityPermutation(r)?e=s[t]:(e=wQ({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);uc.arraysEqual(e.shape,i)||(e=IJ({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===p?p=e:(p=s1({inputs:{a:e,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=l1({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(p)),c--)}for(let e of f)e!==p&&n.disposeData(e.dataId);return p}},h1=zJ({opType:4}),p1={kernelName:Bd,backendName:"webgpu",kernelFunc:h1},c1=DJ({opSnippet:4,dtype:"bool",cpuKernelImpl:BJ}),f1={kernelName:Gd,backendName:"webgpu",kernelFunc:c1},m1=zJ({opType:5,cpuKernelImpl:UJ,dtype:"float32"}),g1={kernelName:jd,backendName:"webgpu",kernelFunc:m1};function y1(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(uc.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),IJ({inputs:{x:s},backend:r,attrs:{shape:o}})}var A1={kernelName:Hd,backendName:"webgpu",kernelFunc:y1},b1=zJ({opType:6,cpuKernelImpl:VJ}),x1={kernelName:qd,backendName:"webgpu",kernelFunc:b1};function v1(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||uc.inferDtype(a),"string"===s){let e=uc.getArrayFromDType(s,uc.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return"\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  "}}(r),n=[{type:"float32",data:[a]}];return t.runWebGPUProgram(e,[],s,n)}}var w1={kernelName:Xd,backendName:"webgpu",kernelFunc:v1},k1={kernelName:Zd,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{image:r}=t,a=n,s=new class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    "}}(r.shape);return a.runWebGPUProgram(s,[r],r.dtype)}},I1=zJ({opType:7,cpuKernelImpl:GJ}),S1={kernelName:Yd,backendName:"webgpu",kernelFunc:I1},N1=DJ({opSnippet:12,dtype:"int32"}),T1={kernelName:Jd,backendName:"webgpu",kernelFunc:N1},C1=function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i={dtype:a.dtype,shape:a.shape},o=rJ(r,i,t,s),l=e.createShaderModule({code:o,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:l,entryPoint:"main"},label:t.constructor.name})};function E1(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map((e=>e.length)).join(",")+n.join(",")+e.variableNames.join(",")+r+a}function _1(e){let{externalImage:t,backend:n,attrs:r,outShape:a,useImport:s}=e,{numChannels:i}=r,o=uc.sizeFromShape(a),l=uc.computeStrides(a),u=n.makeTensorInfo(a,"int32"),d=n.getFromPixelsProgram(s?"import":"copyExternal");d.updateOutputShape(a);let h=[u.shape],p=[u.dtype,s?"import":"copyExternal"],c=E1(d,h,p),f=d.getLayout(n.device),m=n.getAndSavePipeline(c,(()=>C1(n.device,d,f.pipelineLayout,[],u,!0)));d.setPipeline(m),s||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:d.makeInputTexture(n.device,a[1],a[0])},[a[1],a[0]]);let g=n.tensorMap.get(u.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let y,A=[o,i,...l,...d.dispatch];if(d.setUniform(n.device,A),s){let e={source:t};y=n.device.importExternalTexture(e)}else y=d.inputTexture.createView();return n.runFromPixelsProgram(d,g.bufferInfo.buffer,f,y,u.dataId),u}var R1,M1={kernelName:jp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r;if(null==a)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,l="undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&a instanceof OffscreenCanvas,u="undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap,[d,h]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[h,d,s];if(Lu().getBool("WEBGPU_USE_IMPORT")&&i)return _1({externalImage:a,backend:n,attrs:r,outShape:p,useImport:!0});if((i||o)&&(null==R1&&(R1=document.createElement("canvas").getContext("2d")),R1.canvas.width=d,R1.canvas.height=h,R1.drawImage(a,0,0,d,h),a=R1.canvas),u||l||i||o)return _1({externalImage:a,backend:n,attrs:r,outShape:p,useImport:!1});let c=a.data,f=c;if(null!=s&&4!==s){f=new Uint8Array(a.width*a.height*s);let e=c.length,t=0;for(let n=0;n<e;n++)n%4<s&&(f[t++]=c[n])}let m=n.makeTensorInfo(p,"int32");return n.tensorMap.get(m.dataId).values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}},$1={kernelName:Qd,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t,{varianceEpsilon:u}=n,d=r,h=[a,o,l],p=null;null!=i&&(p=i.shape,h.push(i));let c=null;null!=s&&(c=s.shape,h.push(s));let f=new class{constructor(e,t,n,r,a){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],qw.assertAndGetBroadcastShape(e,t),qw.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),null!=r&&(qw.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset")),null!=a&&(qw.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=a,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}}(a.shape,o.shape,l.shape,p,c),m=[{type:"float32",data:[u]}];return d.runWebGPUProgram(f,h,a.dtype,m)}},F1={kernelName:Kp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=r,m=qw.convertConv2DDataFormat(d);return qQ({x:a,filter:s,convInfo:qw.computeConv2DInfo(a.shape,s.shape,l,h,u,p,!1,m),backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:c})}},O1={kernelName:Xp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:c}=r,f=d;null==f&&(f=[1,1]),uc.assert(qw.eitherStridesOrDilationsAreOne(l,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`));let m=qw.computeConv2DInfo(a.shape,s.shape,l,f,u,h,!0),g=[a,s],y=null!=i,A=null!=o;y&&g.push(i),A&&g.push(o);let b,x=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}];return 1===m.batchSize&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&1===m.strideHeight&&1===m.strideWidth&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&3===m.filterHeight&&m.inChannels%4==0?b=new n1(m,y,p,A):(b=new r1(m,y,p,A),x.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),"leakyrelu"===p&&(x.push({type:"float32",data:[c]}),b.uniforms+=" alpha : f32,"),n.runWebGPUProgram(b,g,"float32",x)}},z1={kernelName:th,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=uc.sizeFromShape(r.shape),[l,u,d,h]=qw.prepareAndValidate(r,a),p=IJ({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=IJ({inputs:{x:r},backend:n,attrs:{shape:[uc.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=jJ(e,t,r.dtype,u,i,d,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${tJ(e)},`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}}(i,[u,d]),m=[{type:"int32",data:[i]},{type:"int32",data:h}],g=n.runWebGPUProgram(f,[c,p],c.dtype,m),y=IJ({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(c.dataId),n.disposeData(g.dataId),y}};function D1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=uc.parseAxisParam(i,a.shape)[0],u=qw.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=uc.sizeFromShape(s.shape),h=[],p=IJ({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=IJ({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])){let e=n.tensorMap.get(c.dataId).values,t=xm(c.shape,c.dtype,e),r=n.tensorMap.get(p.dataId).values,a=xm(p.shape,p.dtype,r),s=HJ(a,t,f);return h.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}let m=new class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("indexZ"):n.push(`${t[r]}`);return n.join()}(this.aShape)}));\n        }\n      }\n    `}}(p.shape,f),g=n.runWebGPUProgram(m,[p,c],p.dtype);h.push(g);let y=IJ({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeData(e.dataId))),y}var P1={kernelName:eh,backendName:"webgpu",kernelFunc:D1},L1=DJ({opSnippet:5,cpuKernelImpl:KJ,dtype:"bool"}),W1={kernelName:nh,backendName:"webgpu",kernelFunc:L1},B1=DJ({opSnippet:6,dtype:"bool",cpuKernelImpl:qJ}),U1={kernelName:rh,backendName:"webgpu",kernelFunc:B1},V1={kernelName:dh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=[{type:"float32",data:[s]}],o=new OJ(a.shape,14);return o.uniforms="alpha : f32,",n.runWebGPUProgram(o,[a],"float32",i)}},G1=DJ({opSnippet:7,dtype:"bool",cpuKernelImpl:ZJ}),j1={kernelName:hh,backendName:"webgpu",kernelFunc:G1},H1=DJ({opSnippet:8,dtype:"bool",cpuKernelImpl:XJ}),q1={kernelName:ph,backendName:"webgpu",kernelFunc:H1},K1=zJ({opType:9,cpuKernelImpl:YJ}),X1={kernelName:fh,backendName:"webgpu",kernelFunc:K1},Z1=DJ({opSnippet:9,dtype:"bool"}),Y1={kernelName:gh,backendName:"webgpu",kernelFunc:Z1},J1=zJ({opType:10}),Q1={kernelName:yh,backendName:"webgpu",kernelFunc:J1};function e0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r;return o1(a,s,i,"max",n)}var t0={kernelName:wh,backendName:"webgpu",kernelFunc:e0},n0=DJ({opSnippet:15,cpuKernelImpl:QJ}),r0={kernelName:kh,backendName:"webgpu",kernelFunc:n0},a0={kernelName:Ih,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=qw.computePool2DInfo(s.shape,i,o,1,l,u),h=[];if(1===d.filterHeight&&1===d.filterWidth){if(uc.arraysEqual(d.inShape,d.outShape))return RJ({inputs:{x:s},backend:r});t=new TQ(d),h.push({type:"int32",data:[d.strideHeight,d.strideWidth]})}else t=new NQ(d,"max"),h.push({type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]});return r.runWebGPUProgram(t,[s],s.dtype,h)}},s0={kernelName:Eh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{keepDims:s,axis:i}=r;return o1(a,i,s,"mean",n)}},i0={kernelName:_h,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return o1(a,s,i,"min",n)}},o0=DJ({opSnippet:16,cpuKernelImpl:eQ}),l0={kernelName:Rh,backendName:"webgpu",kernelFunc:o0},u0={kernelName:Mh,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{paddings:s,mode:i}=n,o=r,l=s.map((e=>({type:"int32",data:[e[0],e[1]]}))),u=new class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.offset="reflect"===n?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),r=1===e?"start":"start[i]",a=1===e?"end":"end[i]",s=1===e?"outC":"outC[i]",i=tJ(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let start = ${i}(${t});\n          let end = ${i}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${s} < ${r}) {\n              ${s} = ${r} * 2 - ${s} - ${this.offset};\n            } else if(${s} >= ${a}) {\n              ${s} = (${a} - 1) * 2 - ${s} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${o}));\n        }\n      }\n    `}}(a.shape,s,i);return o.runWebGPUProgram(u,[a],a.dtype,l)}},d0={kernelName:zh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let e=n.tensorMap.get(r.dataId),[t,a]=nQ(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a=new OJ(r.shape,11);return n.runWebGPUProgram(a,[r],r.dtype)}},h0={kernelName:Ph,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=Hk.nonMaxSuppressionV3Impl(u,d,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},p0={kernelName:Wh,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Hk.nonMaxSuppressionV5Impl(d,h,p,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};function c0(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=zQ({inputs:{input:r},backend:n}),t=c0({inputs:{x:e},backend:n}),a=UQ({inputs:{input:r},backend:n}),s=c0({inputs:{x:a},backend:n}),i=$J({inputs:{real:t,imag:s},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(a.dataId),n.disposeData(s.dataId),i}return v1({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var f0={kernelName:Vp,backendName:"webgpu",kernelFunc:c0},m0={kernelName:Bh,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=zQ({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=UQ({inputs:{input:a},backend:r}),i=c0({inputs:{x:s},backend:r}),o=$J({inputs:{real:n,imag:i},backend:r});return r.disposeData(t.dataId),r.disposeData(n.dataId),r.disposeData(s.dataId),r.disposeData(i.dataId),o}return v1({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},g0={kernelName:Vh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return y1({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{uc.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),uc.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=jQ({inputs:t.map((e=>{let t=y1({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}},y0=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(s.every((e=>uc.arraysEqual(e,[0,0]))))return RJ({inputs:{x:a},backend:n});if(0===uc.sizeFromShape(a.shape))return v1({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}});let o=[{type:"float32",data:[i]}];s.map((e=>o.push({type:"int32",data:[e[0],e[1]]})));let l=new class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=tJ(e),n=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),r=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(",");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let start = ${e>1?`${t}(${n})`:`${n}`};\n          let end = ${e>1?`${t}(${r})`:`${r}`};\n          let outC = getCoordsFromIndex(index);\n\n          if (${e>1?"any(outC < start)":"outC < start"} || ${e>1?"any(outC >= end)":"outC >= end"}) {\n            setOutputAtIndex(index, uniforms.constantValue);\n          } else {\n            let coords = outC - start;\n            setOutputAtIndex(index, getX(${e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords"}));\n          }\n        }\n      }\n    `}}(a.shape,s);return n.runWebGPUProgram(l,[a],a.dtype,o)},A0={kernelName:Gh,backendName:"webgpu",kernelFunc:y0},b0=DJ({opSnippet:13}),x0={kernelName:Hh,backendName:"webgpu",kernelFunc:b0},v0={kernelName:qh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=new EJ(14,r.shape,a.shape);return n.runWebGPUProgram(s,[r,a],"float32")}},w0={kernelName:Kh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return o1(a,s,i,"prod",n)}},k0={kernelName:Xh,backendName:"webgpu",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=sQ(r,a,s,i);return t.makeTensorInfo([o.length],i,o)}},I0=DJ({opSnippet:3}),S0={kernelName:Ld,backendName:"webgpu",kernelFunc:I0},N0=zJ({opType:12}),T0={kernelName:Jh,backendName:"webgpu",kernelFunc:N0},C0=zJ({opType:13}),E0={kernelName:ap,backendName:"webgpu",kernelFunc:C0},_0={kernelName:np,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,size:i,halfPixelCenters:o}=r,[l,u]=i,d=[{type:"float32",data:[s&&l>1?1:0,s&&u>1?1:0]},{type:"float32",data:[o?.5:0]}],h=new class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    "}}(a.shape,l,u);return n.runWebGPUProgram(h,[a],"float32",d)}},R0={kernelName:ep,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=[{type:"float32",data:[s&&l>1?1:0,s&&u>1?1:0]},{type:"float32",data:[s?.5:0]}],h=new class{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}}(a.shape,l,u,i);return n.runWebGPUProgram(h,[a],a.dtype,d)}},M0={kernelName:Hp,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=n,l=r,u=new class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}}(a.shape,i),[d,h]=qw.getImageCenter(o,a.shape[1],a.shape[2]),p=[{type:"float32",data:[d]},{type:"float32",data:[h]},{type:"float32",data:[Math.sin(s)]},{type:"float32",data:[Math.cos(s)]}];return"number"==typeof i?p.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):p.push({type:"float32",data:i}),l.runWebGPUProgram(u,[a],a.dtype,p)}},$0=zJ({opType:15,cpuKernelImpl:iQ}),F0={kernelName:op,backendName:"webgpu",kernelFunc:$0},O0={kernelName:lp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=qw.calculateShapes(s,a,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,a.dtype);let c=IJ({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=IJ({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=v1({backend:n,attrs:{shape:p,value:0,dtype:m}}),y=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[uc.sizeFromShape(f.shape)]}],A=new class{constructor(e,t,n,r,a,s,i){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.dispatchLayout=yJ(e),this.dispatch=cJ(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${r}_${this.sliceDimGreaterThanOne}_${i}`;let o=tJ(a.length);this.uniforms=`sliceDim : i32, strides: ${o}, size: i32,`,this.updatesRank=r,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",r="",a="",s="";return 1===this.updatesRank?(r="coords[0]",a="flattenedIndex",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.updatesRank&&(r="coords[0], coords[1]",a="vec2<i32>(flattenedIndex, coords[1])",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        let d0 = index / uniforms.updatesShape[1];\n        let d1 = index - d0 * uniforms.updatesShape[1];\n        return vec2<i32>(d0, d1);\n      }\n      "),`\n    ${s}\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        if (index < uniforms.size) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue = getUpdates(${r});\n          let flatIndex = getOutputIndexFromCoords(${a});\n\n         ${"int32"===this.type?"atomicAdd(&(result[flatIndex]), i32(updateValue));":"\n     var assumed = atomicLoad(&(result[flatIndex]));\n     var success = 0;\n     for (; success == 0;) {\n       let new = bitcast<f32>(assumed) + updateValue;\n       let newI32 = bitcast<i32>(new);\n       let resValue = atomicCompareExchangeWeak(&(result[flatIndex]), assumed, newI32);\n       assumed = resValue[0];\n       success = resValue[1];\n     }\n     "}\n        }\n      }`}}(f.shape,o,c.shape.length,f.shape.length,d,p,m),b=n.runWebGPUProgram(A,[f,c],m,y,g),x=IJ({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),x}},z0={kernelName:up,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let e=0;e<this.outputShape.length;e++)a.push(`${n[e]}`),e<this.cRank&&r.push(`${n[e]}`);e=r.join(),t=a.join()}return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}}(r.shape.length,a.shape,a.shape.length);return n.runWebGPUProgram(i,[r,a,s],Jc(a.dtype,s.dtype))}},D0=zJ({opType:18}),P0={kernelName:mp,backendName:"webgpu",kernelFunc:D0},L0=zJ({opType:16}),W0={kernelName:pp,backendName:"webgpu",kernelFunc:L0},B0=zJ({opType:17}),U0={kernelName:cp,backendName:"webgpu",kernelFunc:B0},V0=DJ({opSnippet:2,cpuKernelImpl:hQ,supportsComplex:!0}),G0={kernelName:$p,backendName:"webgpu",kernelFunc:V0},j0={kernelName:vp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=uc.parseAxisParam([s],a.shape),o=e0({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=qw.expandShapeToKeepDim(o.shape,i),u=IJ({inputs:{x:o},backend:n,attrs:{shape:l}}),d=V0({inputs:{a,b:u},backend:n}),h=m1({inputs:{x:d},backend:n}),p=l1({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=IJ({inputs:{x:p},backend:n,attrs:{shape:l}}),f=I0({inputs:{a:h,b:c},backend:n});return n.disposeData(o.dataId),n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),n.disposeData(p.dataId),n.disposeData(c.dataId),f}},H0={kernelName:bp,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;uc.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],d=y0({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=qw.getReshaped(d.shape,s,o,!1),p=qw.getPermuted(h.length,s.length,!1),c=qw.getReshapedPermuted(d.shape,s,o,!1),f=IJ({inputs:{x:d},backend:n,attrs:{shape:h}}),m=wQ({inputs:{x:f},backend:n,attrs:{perm:p}}),g=IJ({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach((e=>n.disposeData(e.dataId))),g}},q0={kernelName:Np,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:d,outputSize:h}=qw.calculateShapes(s,a,o),p=[{type:"int32",data:[u]},{type:"int32",data:[l]},{type:"int32",data:d}],c=new class{constructor(e,t,n,r,a,s){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=s,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let i=t>1;this.shaderKey=`scatter_${n}_${r}_${i}`;let o=tJ(a.length);this.uniforms=`updateSize : i32, sliceDim : i32, strides: ${o},`;let l="";1===n?l="i":2===n&&(l="i, j"),this.indicesSnippet=`getIndices(${l})`;let u="";1===r?u="i":2===r&&(u="i, coords[1]"),this.updatesSnippet=`getUpdates(${u})`,this.strideString=i?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        let globalIndex = index * ${this.workPerThread};\n        if (globalIndex < uniforms.size) {\n          var sum = vec4<f32>(0.0);\n          var found = vec4<bool>(false);\n          for (var i = 0; i < uniforms.updateSize; i = i + 1) {\n            var flattenedIndex = 0;\n            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n              let indexInside = i32(round(${this.indicesSnippet}));\n              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};\n            }\n            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {\n              let curIndex = globalIndex + innerIndex;\n              let coords = getCoordsFromIndex(curIndex);\n              if (flattenedIndex == coords[0]) {\n                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};\n                found[innerIndex] = true;\n              }\n            }\n          }\n          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {\n            let curIndex = globalIndex + innerIndex;\n            if (curIndex < uniforms.size)\n            {\n              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));\n            }\n          }\n        }\n      }`}}(u,l,a.shape.length,s.shape.length,d,[h,1],!1),f=n.runWebGPUProgram(c,[s,a,i],s.dtype,p),m=IJ({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),m}},K0={kernelName:xp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=uc.parseAxisParam(i,a.shape)[0],l=qw.prepareSplitSize(a,s,o),u=a.shape.length,d=new Array(u).fill(0),h=a.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let r=RQ({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,r}))}},X0=zJ({opType:19}),Z0={kernelName:yp,backendName:"webgpu",kernelFunc:X0},Y0={kernelName:Cp,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{x:r}=t,a=n,s=new OJ(r.shape,20);return a.runWebGPUProgram(s,[r],r.dtype)}},J0=DJ({opSnippet:11}),Q0={kernelName:Tp,backendName:"webgpu",kernelFunc:J0},e2={kernelName:Ep,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:v}=dg.sliceInfo(s.shape,i,o,l,u,d,h,p,c);if(g)t=IJ({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||A){uc.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=dg.computeOutShape(b,x,v),n=RQ({inputs:{x:s},backend:r,attrs:{begin:b,size:e}});t=IJ({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeData(n.dataId)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=xm(s.shape,s.dtype,e),a=uQ(f,n,v,b);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=tJ(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}}(f),n=[{type:"int32",data:b},{type:"int32",data:v}],a=r.runWebGPUProgram(e,[s],s.dtype,n);t=IJ({inputs:{x:a},backend:r,attrs:{shape:m}}),r.disposeData(a.dataId)}return t}},t2={kernelName:_p,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=t,p=n.readSync(d.dataId),c=n.readSync(h.dataId),[f,m]=dQ(p,c,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},n2=zJ({opType:21}),r2={kernelName:Op,backendName:"webgpu",kernelFunc:n2},a2={kernelName:zp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if(n.shouldExecuteOnCPU([a])||"string"===a.dtype||a.shape.length>=5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>uc.decodeString(e))):e,r=xm(a.shape,a.dtype,t),i=pQ(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e;a++)r.push(`(${n[a]} % ${t}aShape[${a}])`);return r.join()}(this.rank,"uniforms.");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${e}));\n        }\n      }\n    `}}(a.shape,s);return n.runWebGPUProgram(i,[a],a.dtype)}},s2=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return"\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      "}};function i2(e,t){null!==t&&e.disposeData(t.dataId)}function o2(e){let t=1;for(;t<e;)t*=2;return t}var l2={kernelName:Dp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=a.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([a])){let e=n.readSync(a.dataId),[t,r]=cQ(e,o,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return o[o.length-1]=0,[n.makeTensorInfo(o,a.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(1===l)return[a,v1({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let u=uc.sizeFromShape(o)/l,d=IJ({inputs:{x:a},attrs:{shape:[u,l]},backend:n}),h=o2(s),p=o2(l),c=null,f=()=>null===c?[d,d]:[d,c],m=(e,t,r)=>{let a=f(),s=new class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return"\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      "}}(r),i=[{type:"int32",data:[l]},{type:"int32",data:[null===c?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],o=c;c=n.runWebGPUProgram(s,a,"int32",i),i2(n,o)};for(let e=1;e<h;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)m(t,n,[u,p])}for(let e=p;e>h;e/=2){let t=f(),r=new s2([u,e/2]),a=[{type:"int32",data:[l]},{type:"int32",data:[null===c?1:0]},{type:"int32",data:[h]}],s=c;c=n.runWebGPUProgram(r,t,"int32",a),i2(n,s);let i=h/2,o=2*i;for(let e=i;e>=1;e/=2)m(o,e,c.shape)}let g=c;c=RQ({inputs:{x:c},backend:n,attrs:{begin:0,size:[u,s]}}),i2(n,g);let y=D1({inputs:{x:d,indices:c},backend:n,attrs:{axis:1,batchDims:1}});i2(n,d);let A=o.slice(0,-1);A.push(s),g=c,c=IJ({inputs:{x:c},attrs:{shape:A},backend:n}),i2(n,g);let b=y;return y=IJ({inputs:{x:y},attrs:{shape:A},backend:n}),i2(n,b),[y,c]}},u2={kernelName:Pp,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{image:s,transforms:i}=n,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=a,[h,p,c,f]=s.shape,[m,g]=null!=d?d:[p,c],y=[h,m,g,f],A=new class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return"\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        "}}(y),b="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}let x=[{type:"int32",data:[b]},{type:"int32",data:[t]},{type:"float32",data:[u]}];return r.runWebGPUProgram(A,[s,i],"float32",x)}},d2={kernelName:Bp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==s&&(u[d++]=i.shape[e]);let h=[],p=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){p[s]=e;let t=RQ({inputs:{x:i},backend:n,attrs:{begin:p,size:c}}),r=IJ({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeData(e.dataId))),f}},h2=[TJ,yQ,bQ,xQ,IQ,SQ,CQ,EQ,$Q,PQ,WQ,BQ,FJ,HQ,KQ,XQ,YQ,QQ,e1,t1,a1,d1,p1,f1,g1,A1,x1,w1,k1,M1,S1,T1,$1,F1,O1,z1,P1,W1,U1,MJ,VQ,V1,j1,q1,X1,Y1,Q1,t0,r0,a0,s0,i0,l0,u0,i1,d0,h0,p0,OQ,m0,g0,A0,x0,v0,w0,k0,DQ,S0,T0,E0,SJ,_0,R0,M0,F0,O0,z0,P0,W0,U0,MQ,e2,t2,j0,H0,q0,K0,Z0,Y0,Q0,G0,u1,r2,a2,l2,u2,kQ,d2,f0];for(let e of h2)rc(e);function p2(e,t){return`${e}_${t}`}var c2=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){uc.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=yJ(this.outputShape),this.dispatch=cJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        let flatIndexBase = index * uniforms.numChannels;\n        for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n          let flatIndex = flatIndexBase + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndexBase);\n            let values = ${e};\n            result[flatIndex] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:4*t.length,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every(((e,t)=>e===this.lastUniformData[t]))||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return null===this.layout&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[n]})}}},f2=class extends c2{constructor(){super(...arguments),this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return null===this.layout&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[n]})}}},m2=Lu().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),g2=(e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,r=t.dispatchLayout,a=t.dispatch;if(a.every((e=>e<=n)))return a;uc.assert(a[0]>n&&void 0===r.y&&void 0===r.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let s=Math.ceil(Math.sqrt(a[0]));return s>n?(s=Math.ceil(Math.cbrt(a[0])),uc.assert(s<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[s,s,s]):[s,s,1]},y2=class extends Ll{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(super(),this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!xJ())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=p2(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(r).length>0){this.numFreeBuffers--;let e=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(e),e}this.numBytesAllocated+=e;let a=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(r).push(a),a}releaseBuffer(e,t,n){if(0===this.freeBuffers.size)return;let r=p2(t,n);this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.freeBuffers.get(r).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let a=this.usedBuffers.get(r),s=a.indexOf(e);if(s<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");a.splice(s,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then((()=>{this.releaseBuffer(e,t,n)}),(e=>{}))}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}(this.device),this.tensorMap=new Pl(this,Zg()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Lu().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return y2.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach((e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)})),this.uniformDisposalQueue.forEach((e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage))),this.stagingDisposalQueue.forEach((e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage))),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:r}=this.tensorMap.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.defaultGpuBufferUsage();return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);null!=t&&null!=t.bufferInfo.buffer&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){this.tensorMap.has(e)&&this.tensorMap.get(e).refCount--}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()},a=uc.sizeFromShape(t)*AJ(n);return this.tensorMap.set(r,{dtype:n,values:e,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:1}),r}move(e,t,n,r,a){if("complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s=uc.sizeFromShape(n)*AJ(r);this.tensorMap.set(e,{dtype:r,values:t,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:a})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new c2),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new f2),this.fromPixelImportProgram;default:return void uc.assert(!1,(()=>"Unsupported fromPixels shape"))}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(null!=e.values)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),null!=t&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Lu().getBool("WEBGPU_USE_PROFILE_TOOL")&&(uc.assert(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(null==n)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t,n=this.tensorMap.get(e),{values:r}=n;if(null!=r)return this.convertAndCacheOnCPU(e,r);if("complex64"===n.dtype){let e=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),r=e[0],a=e[1];t=qw.mergeRealAndImagArrays(r,a)}else t=bJ(await this.getBufferData(n),n.dtype);return this.convertAndCacheOnCPU(e,t),t}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>uc.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xm(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=uc.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=uc.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(a);return i.kernelMs=uc.sum(o),i.getExtraProfileInfo=()=>o.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&uc.isString(n[0])){let a=n.map((e=>uc.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(null==t.bufferInfo.buffer&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let e=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),n=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(n).set(t.values):new Float32Array(n).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let r={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:e};this.stagingDisposalQueue.push(r)}}makeUniforms(e){let t=0,n=[];e.forEach((e=>{let r;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:r=4;break;case 2:r=8;break;case 3:case 4:r=16;break;default:uc.assert(!1,(()=>`Unsupported ${e.data.length}D shape`))}t=Math.ceil(t/r)*r,n.push(t),t+=4*e.data.length}));let r=new ArrayBuffer(t);e.forEach(((e,t)=>{let a=n[t];"int32"===e.type?new Int32Array(r,a,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(r,a,e.data.length).set(e.data):new Float32Array(r,a,e.data.length).set(e.data)}));let a=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,r,0,t),{offset:0,size:t,buffer:a}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let n=0;n<e;n++)t.push({binding:n+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:this.device.createPipelineLayout({bindGroupLayouts:[n]})}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,r,a){if(!a){if(a=this.makeTensorInfo(e.outputShape,n),0===uc.sizeFromShape(a.shape))return this.tensorMap.get(a.dataId).values=uc.getTypedArrayFromDType(a.dtype,0),a;this.uploadToGPU(a.dataId)}e.dispatch=g2(this.device,e);let s=[{type:"float32",data:[NaN]}],i=t.concat(a).map((e=>e.shape)),o="int32";i.map((e=>{s.push({type:o,data:e})}));let l=uc.computeStrides(a.shape);if(s.push({type:o,data:l}),e.size){let t=uc.sizeFromShape(e.outputShape);s.push({type:o,data:[e.isVec4?t/4:t]})}r&&(s=[...s,...r]);let u=this.makeUniforms(s),d=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}})),h=d.map((e=>e.dtype)).concat(a.dtype),p=d.map((e=>qw.getBroadcastDims(e.shape,a.shape))),c=d.map((e=>uc.arraysEqual(e.shape,a.shape))).join("_"),f=p.map((e=>e.join("_"))).join(";"),m=E1(e,i,h,f,c),{bindGroupLayout:g,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),A=this.getAndSavePipeline(m,(()=>C1(this.device,e,y,d,a))),b=null!=this.activeTimers,x=((e,t,n,r,a)=>{let s=[r,...n];return a&&s.push(a),e.createBindGroup({layout:t,entries:s.map(((e,t)=>({binding:t,resource:e})))})})(this.device,g,t.map((e=>this.tensorToBinding(e))),this.tensorToBinding(a),u);this.ensureCommandEncoderReady();let v=this.getComputePass();b&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,0),v.setPipeline(A),v.setBindGroup(0,x),v.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),b&&this.supportTimeQuery&&v.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(a.dataId);let w={byteSize:u.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:u.buffer};return this.uniformDisposalQueue.push(w),Lu().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),b&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}runFromPixelsProgram(e,t,n,r,a){e.dispatch=g2(this.device,e);let s=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:r},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let i=this.getComputePass(),o=null!=this.activeTimers;o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,0),i.setPipeline(e.pipeline),i.setBindGroup(0,s),i.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(a),this.submitQueue(),o&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let r=new BigUint64Array(n.getMappedRange()),a=Number(r[1]-r[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a/1e6}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:m2;return Lu().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).bufferInfo.buffer&&uc.sizeFromShape(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},A2=y2;A2.nextDataId=0;var b2={};gl(b2,{WebGPUBackend:()=>A2,webgpu_util:()=>dJ}),xJ()&&uy("webgpu",(async()=>{Lu().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Lu().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,r={},a=t.features.has("timestamp-query");r.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension},a?r.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let s=await t.requestDevice(r);return new A2(s,a)}),3);var x2,v2=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(v2||{}),w2=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(w2||{}),k2={kernelName:qp,backendName:"wasm",setupFunc:function(e){x2=e.wasm.cwrap(qp,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r,p=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=w2[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],A=u?s.shape[1]:s.shape[2],b=Hm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),x=n.makeOutput([...b,y,A],a.dtype),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(a.shape).buffer),k=new Uint8Array(new Int32Array(s.shape).buffer);return x2(p,w,a.shape.length,c,k,s.shape.length,l,u,g,f,m,h||0,v),x}};function I2(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===uc.sizeFromShape(i.shape)||n(s,v2[a.dtype],o),i}}}var S2=I2(Gu);function N2(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,d=qw.assertAndGetBroadcastShape(s.shape,i.shape),h=t.makeOutput(d,u);if(0===uc.sizeFromShape(d))return h;let p=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(h.dataId).id;return r(o,p,s.shape.length,l,c,i.shape.length,v2[s.dtype],f),h}}}var T2,C2=N2(qu),E2={kernelName:Ku,backendName:"wasm",setupFunc:function(e){T2=e.wasm.cwrap(Ku,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===uc.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return T2(s,a.length,v2[r.dtype],i),r}};function _2(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var R2,M2={kernelName:ah,backendName:"wasm",kernelFunc:_2};function $2(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=_2({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return R2(d,c,l.shape.length,v2[l.dtype],h,p,s.length),u}var F2,O2={kernelName:Lp,backendName:"wasm",kernelFunc:$2,setupFunc:function(e){R2=e.wasm.cwrap(Lp,null,["number","array","number","number","number","array","number"])}};function z2(e,t,n){let r=e.shape,a=e.shape.length,s=uc.parseAxisParam(t,r),i=s,o=qw.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=qw.getInnerMostAxes(i.length,a),l=$2({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var D2,P2,L2,W2={kernelName:Xu,backendName:"wasm",setupFunc:function(e){F2=e.wasm.cwrap(Xu,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=z2(i,a,t);p&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;qw.assertAxesAreInnerMostDims("all",d,c);let[f,m]=qw.computeOutAndReduceShapes(l.shape,d),g=uc.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==uc.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;F2(o,g,e)}if(p&&t.disposeData(u.dataId),s){let e=qw.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},B2={kernelName:Zu,backendName:"wasm",setupFunc:function(e){D2=e.wasm.cwrap(Zu,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=z2(i,a,t);p&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;qw.assertAxesAreInnerMostDims("any",d,c);let[f,m]=qw.computeOutAndReduceShapes(l.shape,d),g=uc.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==uc.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;D2(o,g,e)}if(p&&t.disposeData(u.dataId),s){let e=qw.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},U2={kernelName:Yu,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:d,inputWasTransposed:h}=z2(s,a,t);if(h){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let p=l.shape.slice(0,-1),c=t.makeOutput(p,"int32"),f=t.dataIdMap.get(c.dataId).id,m=uc.sizeFromShape(c.shape),g=l.shape[d[0]];return P2(o,v2[l.dtype],m,g,f),h&&t.disposeData(u.dataId),c},setupFunc:function(e){P2=e.wasm.cwrap(Yu,null,["number","number","number","number","number"])}},V2={kernelName:ad,backendName:"wasm",setupFunc:function(e){L2=e.wasm.cwrap(ad,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=qw.computePool2DInfo(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,A=d.strideWidth,b=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let x=r.makeOutput(d.outShape,"float32"),v=r.dataIdMap.get(x.dataId).id;return L2(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,f,m,g,y,A,b,v),x}};function G2(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=uc.sizeFromShape(r.shape),i=uc.inferFromImplicitShape(a,s);return uc.assert(s===uc.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var j2,H2={kernelName:Qh,backendName:"wasm",kernelFunc:G2},q2={kernelName:ld,backendName:"wasm",setupFunc:function(e){j2=e.wasm.cwrap(ld,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=uc.sizeFromShape(f),y=uc.sizeFromShape(m),A=Hm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,c]);uc.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let b=o?[y,c,h]:[y,h,c],x=G2({inputs:{x:a},backend:n,attrs:{shape:i?[g,d,p]:[g,p,d]}}),v=G2({inputs:{x:s},backend:n,attrs:{shape:b}}),w=n.dataIdMap.get(x.dataId).id,k=n.dataIdMap.get(v.dataId).id,I=i?x.shape[2]:x.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.makeOutput([N,I,S],x.dtype),C=n.dataIdMap.get(T.dataId).id,E=new Uint8Array(new Int32Array(x.shape).buffer),_=new Uint8Array(new Int32Array(v.shape).buffer);return j2(w,E,x.shape.length,k,_,v.shape.length,i,o,C),n.disposeData(x.dataId),n.disposeData(v.dataId),T.shape=A,T}};function K2(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=dg.parseSliceParams(t,n,r),o=dg.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),d=uc.computeStrides(t.shape),h=a.dataIdMap.get(u.dataId);if(o){let e=dg.computeFlatOffset(s,d);return"string"===t.dtype?h.stringBytes=l.slice(e,e+uc.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+uc.sizeFromShape(i))),u}if("string"===t.dtype){let e=SP(l,s,i,t.shape,t.dtype);return h.stringBytes=e,u}let p=a.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,d[0],p,s,i);else if(3===c)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],d=o+s[0],h=l+s[1];for(let a=o;a<d;a++)for(let o=l;o<h;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,d[0],d[1],p,s,i);else if(4===c)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],d=s[2],h=l+i[0],p=u+i[1],c=d+i[2],f=s[3];for(let s=l;s<h;s++)for(let l=u;l<p;l++)for(let u=d;u<c;u++){let d=s*t+l*n+u*r+f;a.set(e.subarray(d,d+i[3]),o),o+=i[3]}}(l,d[0],d[1],d[2],p,s,i);else{let e=SP(l,s,i,t.shape,t.dtype);p.set(e)}return u}var X2={kernelName:hp,backendName:"wasm",kernelFunc:K2},Z2={kernelName:ud,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=qw.getReshaped(a.shape,s,o),u=qw.getPermuted(l.length,s.length),d=qw.getReshapedPermuted(a.shape,s,o),h=qw.getSliceBeginCoords(i,s.length),p=qw.getSliceSize(d,i,s.length),c=G2({inputs:{x:a},backend:n,attrs:{shape:l}}),f=$2({inputs:{x:c},backend:n,attrs:{perm:u}}),m=K2({inputs:{x:G2({inputs:{x:f},backend:n,attrs:{shape:d}})},backend:n,attrs:{begin:h,size:p}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),m}};function Y2(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var J2,Q2={kernelName:cd,backendName:"wasm",kernelFunc:Y2},e5=I2(fd),t5={kernelName:md,backendName:"wasm",setupFunc:function(e){J2=e.wasm.cwrap(md,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return J2(o,s,i,u),l}};function n5(e){let{inputs:t,backend:n}=e,r=uc.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=qw.computeOutShape(t.map((e=>e.shape)),r),s=t.filter((e=>uc.sizeFromShape(e.shape)>0));if(1===s.length)return _2({inputs:{x:s[0]},backend:n});let i=n.makeOutput(a,t[0].dtype);if(0===uc.sizeFromShape(a))return i;let o=s.map((e=>e.shape));if(qw.assertParamsConsistent(o,r),"string"===s[0].dtype){let e=s.map((e=>{let t=uc.sizeFromShape(e.shape.slice(r));return G2({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=qw.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=xD(o,a,t[0].dtype,l),d=qw.computeOutShape(s.map((e=>e.shape)),r);return i.shape=d,n.dataIdMap.get(i.dataId).stringBytes=qw.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),i}let l=uc.sizeFromShape(s[0].shape.slice(0,r)),u=0,d=s.map((e=>{let t=uc.sizeFromShape(e.shape.slice(r));return u+=t,t})),h=s.map((e=>n.typedArrayFromHeap(e))),p=n.typedArrayFromHeap(i);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<h.length;n++){let r=d[n],a=e*r,s=h[n].subarray(a,a+r);p.set(s,t),t+=r}}return i}var r5,a5,s5,i5,o5,l5,u5,d5={kernelName:Ad,backendName:"wasm",kernelFunc:n5},h5={kernelName:bd,backendName:"wasm",setupFunc:function(e){r5=e.wasm.cwrap(bd,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h,dataFormat:p}=n,c=qw.convertConv2DDataFormat(p),f=qw.computeConv2DInfo(a.shape,s.shape,l,u,d,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,b=f.padInfo.bottom,x=f.padInfo.left,v=f.dilationHeight,w=f.dilationWidth,k=f.strideHeight,I=f.strideWidth,S=f.inChannels,N=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return r5(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,A,b,x,T,v,w,k,I,S,N,E),C}},p5={kernelName:vd,backendName:"wasm",setupFunc:function(e){a5=e.wasm.cwrap(vd,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,h=qw.convertConv2DDataFormat(l),p=qw.computeConv2DInfo(d,s.shape,i,1,o,u,!1,h),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:A,outChannels:b,outHeight:x,outWidth:v,strideHeight:w,strideWidth:k}=p,I=f-1-p.padInfo.top,S=m-1-p.padInfo.left,N="channelsLast"===p.dataFormat,T=uc.computeStrides(p.inShape),C=uc.computeStrides(a.shape),[E,_,R]=uc.computeStrides(s.shape),M=T[0],$=N?T[1]:T[2],F=N?T[2]:1,O=N?1:T[1],z=C[0],D=N?C[1]:C[2],P=N?C[2]:1,L=N?1:C[1],W=t.makeOutput(p.inShape,"float32"),B=t.dataIdMap.get(W.dataId).id,U=t.dataIdMap.get(a.dataId).id,V=t.dataIdMap.get(s.dataId).id;return a5(U,V,c,f,m,y,A,g,x,v,b,w,k,I,S,E,_,R,M,$,F,O,z,D,P,L,B),W}},c5=I2(Sd),f5=I2(Nd),m5=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(m5||{}),g5={kernelName:Ed,backendName:"wasm",setupFunc:function(e){s5=e.wasm.cwrap(Ed,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:d}=r,h=u.shape[0],[p,c]=o,f=[h,p,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=Y2({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,A=n.dataIdMap.get(d.dataId).id,b=n.makeOutput(f,"float32"),x=n.dataIdMap.get(b.dataId).id,v=new Uint8Array(new Int32Array(l.shape).buffer);return s5(g,y,A,h,v,p,c,m5[s],i,x),null!=t&&n.disposeData(t.dataId),b}},y5={kernelName:Td,backendName:"wasm",setupFunc:function(e){i5=e.wasm.cwrap(Td,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;uc.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`));let u=qw.getAxesPermutation([s],l),d=a;null!==u&&(d=$2({inputs:{x:a},attrs:{perm:u},backend:n}));let h=qw.getInnerMostAxes(1,l)[0];qw.assertAxesAreInnerMostDims("cumprod",[h],l);let p=n.makeOutput(d.shape,d.dtype),c=d.shape[h],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(p.dataId).id;i5(f,i?1:0,o?1:0,c,m,v2[a.dtype]);let g=p;return null!==u&&(g=$2({inputs:{x:p},attrs:{perm:qw.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)),g}},A5={kernelName:Cd,backendName:"wasm",setupFunc:function(e){o5=e.wasm.cwrap(Cd,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;uc.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=qw.getAxesPermutation([s],l),d=a;null!==u&&(d=$2({inputs:{x:a},attrs:{perm:u},backend:n}));let h=qw.getInnerMostAxes(1,l)[0];qw.assertAxesAreInnerMostDims("cumsum",[h],l);let p=n.makeOutput(d.shape,d.dtype),c=d.shape[h],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(p.dataId).id;o5(f,i?1:0,o?1:0,c,m,v2[a.dtype]);let g=p;return null!==u&&(g=$2({inputs:{x:p},attrs:{perm:qw.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)),g}},b5={kernelName:Rd,backendName:"wasm",setupFunc:function(e){l5=e.wasm.cwrap(Rd,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=t.makeOutput(h,"float32"),c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(uc.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(uc.computeStrides(h)).buffer),y=t.dataIdMap.get(p.dataId).id;return l5(c,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,h.length,y),p}},x5={kernelName:Md,backendName:"wasm",setupFunc:function(e){u5=e.wasm.cwrap(Md,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:h}=n,p=null==u?[1,1]:u,c=qw.computeConv2DInfo(a.shape,s.shape,l,p,d,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,A=c.padInfo.bottom,b=c.padInfo.left,x=c.dilationHeight,v=c.dilationWidth,w=c.strideHeight,k=c.strideWidth,I=c.inChannels,S=c.outChannels,N="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let T=r.makeOutput(c.outShape,"float32"),C=r.dataIdMap.get(T.dataId).id;return u5(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,A,b,N,x,v,w,k,I,S,C),T}},v5=I2(Bd),w5=N2(Gd,0,"bool"),k5=I2(jd,"float32");function I5(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(uc.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),G2({inputs:{x:a},backend:r,attrs:{shape:o}})}var S5={kernelName:Hd,backendName:"wasm",kernelFunc:I5};function N5(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var T5,C5,E5,_5,R5,M5,$5,F5,O5,z5,D5,P5,L5,W5={kernelName:Xd,backendName:"wasm",kernelFunc:N5},B5={kernelName:Zd,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,d]=r.shape;return T5(s,o,l,u,d,i),a},setupFunc:function(e){T5=e.wasm.cwrap(Zd,null,["number","number","number","number","number","number"])}},U5=I2(Yd),V5=N2(Jd),G5={kernelName:Qd,backendName:"wasm",setupFunc:function(e){C5=e.wasm.cwrap(Qd,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,d=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===uc.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return C5(d,h,p,c,f,a,g),m}},j5={kernelName:Kp,backendName:"wasm",setupFunc:function(e){E5=e.wasm.cwrap(Kp,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=qw.computeConv2DInfo(a.shape,s.shape,l,d,u,p),g=w2[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels,x=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}let v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return E5(y,$,F,O,A,v,w,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}},H5={kernelName:Xp,backendName:"wasm",setupFunc:function(e){_5=e.wasm.cwrap(Xp,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=qw.computeConv2DInfo(a.shape,s.shape,l,d,u,p,!0),g=w2[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels,x=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}let v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return _5(y,$,F,O,A,v,w,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}},q5={kernelName:th,backendName:"wasm",setupFunc:function(e){R5=e.wasm.cwrap(th,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=ag.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let d=a.shape,h=d[d.length-1],p=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return R5(p,v2[r.dtype],c,i,h,o,f,m),u}},K5={kernelName:eh,backendName:"wasm",setupFunc:function(e){M5=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=uc.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),d=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];uc.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let h=qw.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=G2({inputs:{x:a},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=uc.sizeFromShape(s.shape),f=G2({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(m,a.dtype);if(0===uc.sizeFromShape(a.shape))return g;let y=p.shape.length-1,A=t.dataIdMap.get(p.dataId).id,b=t.dataIdMap.get(f.dataId).id,x=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(uc.computeStrides(p.shape)).buffer),w=new Uint8Array(new Int32Array(uc.computeStrides(m)).buffer);return M5(A,v2[a.dtype],v,y,b,h.batchSize,w,x),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}},X5=N2(nh,0,"bool"),Z5=N2(rh,0,"bool"),Y5={kernelName:dh,backendName:"wasm",setupFunc:function(e){$5=e.wasm.cwrap(dh,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==uc.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;$5(a,v2[t.dtype],n,e)}return s}},J5=N2(hh,0,"bool"),Q5=N2(ph,0,"bool"),e3=I2(fh),t3=N2(gh,0,"bool"),n3={kernelName:wh,backendName:"wasm",setupFunc:function(e){F5=e.wasm.cwrap(wh,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=z2(i,a,t);p&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;qw.assertAxesAreInnerMostDims("max",d,c);let[f,m]=qw.computeOutAndReduceShapes(l.shape,d),g=uc.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==uc.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;F5(o,v2[i.dtype],g,e)}if(p&&t.disposeData(u.dataId),s){let e=qw.expandShapeToKeepDim(y.shape,h);y.shape=e}return y}},r3=N2(kh),a3={kernelName:Ih,backendName:"wasm",setupFunc:function(e){O5=e.wasm.cwrap(Ih,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;uc.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=qw.computePool2DInfo(a.shape,i,o,1,l,u),h=d.filterHeight,p=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.dilationHeight,A=d.dilationWidth,b=d.strideHeight,x=d.strideWidth,v=d.inChannels,w=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let k=r.makeOutput(d.outShape,"float32"),I=r.dataIdMap.get(k.dataId).id;return O5(s,a.shape[0],a.shape[1],a.shape[2],h,p,c,f,m,g,y,A,b,x,v,w,I),k}},s3={kernelName:Eh,backendName:"wasm",setupFunc:function(e){z5=e.wasm.cwrap(Eh,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=z2(i,a,t),f=h;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=qw.getInnerMostAxes(f.length,u.shape.length))}qw.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=qw.computeOutAndReduceShapes(u.shape,f),y=uc.sizeFromShape(g),A=u;"float32"!==u.dtype&&(A=Y2({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(A.dataId).id);let b=t.makeOutput(m,"float32");if(0!==uc.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;z5(l,y,e)}if(c&&t.disposeData(d.dataId),s){let e=qw.expandShapeToKeepDim(b.shape,p);b.shape=e}return"float32"!==u.dtype&&t.disposeData(A.dataId),b}},i3={kernelName:_h,backendName:"wasm",setupFunc:function(e){D5=e.wasm.cwrap(_h,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=z2(i,a,t);if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let f=u.shape.length;qw.assertAxesAreInnerMostDims("min",h,f);let[m,g]=qw.computeOutAndReduceShapes(u.shape,h),y=uc.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==uc.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;D5(l,v2[i.dtype],y,e)}if(c&&t.disposeData(d.dataId),s){let e=qw.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},o3=N2(Rh),l3=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(l3||{}),u3={kernelName:Mh,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return P5(i,u,t.shape.length,v2[t.dtype],p,c,l3[a],l),o},setupFunc:function(e){P5=e.wasm.cwrap(Mh,null,["number","array","number","number","array","array","number","number"])}},d3=N2(Oh),h3=I2(zh);function p3(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var c3,f3,m3,g3,y3,A3,b3,x3,v3,w3,k3,I3,S3,N3,T3,C3,E3={kernelName:Ph,backendName:"wasm",setupFunc:function(e){L5=e.wasm.cwrap(Ph,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=L5(u,d,s,a,i),{pSelectedIndices:p,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=p3(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",p)}},_3={kernelName:Lh,backendName:"wasm",setupFunc:function(e){c3=e.wasm.cwrap(Lh,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=c3(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=p3(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}},R3={kernelName:Wh,backendName:"wasm",setupFunc:function(e){f3=e.wasm.cwrap(Wh,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,p=f3(d,h,s,a,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=p3(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},M3=N2(Dh,0,"bool"),$3={kernelName:Uh,backendName:"wasm",setupFunc:function(e){m3=e.wasm.cwrap(Uh,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(a.dataId).id;return m3(d,s,i,o,u),l}},F3={kernelName:Bh,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},O3={kernelName:Vh,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return I5({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{uc.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),uc.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=n5({inputs:t.map((e=>{let t=I5({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}},z3={kernelName:Gh,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===uc.sizeFromShape(t.shape))return N5({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),h=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(h).buffer);return g3(i,u,t.shape.length,v2[t.dtype],p,c,a,l),o},setupFunc:function(e){g3=e.wasm.cwrap(Gh,null,["number","array","number","number","array","array","number","number"])}},D3=N2(Hh),P3={kernelName:qh,backendName:"wasm",setupFunc:function(e){y3=e.wasm.cwrap(qh,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=Y2({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let d=n.makeOutput(r.shape,"float32"),h=n.dataIdMap.get(d.dataId).id;return y3(o,i,h),"float32"!==l.dtype&&n.disposeData(u.dataId),d}},L3={kernelName:Kh,backendName:"wasm",setupFunc:function(e){A3=e.wasm.cwrap(Kh,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=z2(i,a,t),f=h;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=qw.getInnerMostAxes(f.length,u.shape.length))}qw.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=qw.computeOutAndReduceShapes(u.shape,f),y=uc.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==uc.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;A3(l,y,v2[A.dtype],e)}if(c&&t.disposeData(d.dataId),s){let e=qw.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},W3={kernelName:Xh,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=AP(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},B3=N2(Ld),U3=I2(Jh),V3=I2(ap),G3={kernelName:np,backendName:"wasm",setupFunc:function(e){b3=e.wasm.cwrap(np,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,d]=l,[h,p,c,f]=s.shape,m=[h,u,d,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=Y2({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,A=n.makeOutput(m,"float32");if(0===uc.sizeFromShape(s.shape))return A;let b=n.dataIdMap.get(A.dataId).id;return b3(y,h,p,c,f,u,d,i?1:0,o?1:0,b),null!=t&&n.disposeData(t.dataId),A}},j3={kernelName:sp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=uc.parseAxisParam(s,a.shape);if(0===a.shape.length)return _2({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);x3(l,d,i.length,h,a.shape.length,u);let p=G2({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),p},setupFunc:function(e){x3=e.wasm.cwrap(sp,null,["number","array","number","array","number","number"])}},H3={kernelName:Hp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[h,p,c,f]=a.shape,[m,g]=qw.getImageCenter(o,p,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],A=new Uint8Array(new Int32Array(y).buffer);return v3(u,h,p,c,f,s,m,g,A,y.length,d),l},setupFunc:function(e){v3=e.wasm.cwrap(Hp,null,["number","number","number","number","number","number","number","number","array","number","number"])}},q3=I2(ip),K3=I2(op),X3={kernelName:lp,backendName:"wasm",setupFunc:function(e){w3=e.wasm.cwrap(lp,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===uc.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=ig.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return w3(c,f,v2[s.dtype],l,u,d,m,p,g),o}},Z3={kernelName:up,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(u.dataId).id,h=r.shape.length,p=a.shape.length,c=0===h||h>1||1===p?1:uc.sizeFromShape(a.shape.slice(1));return k3(i,o,l,c,d),u},setupFunc:function(e){k3=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},Y3={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){I3=e.wasm.cwrap(mp,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===uc.sizeFromShape(a.shape)||I3(r,s),a}},J3=I2(pp),Q3={kernelName:vp,backendName:"wasm",setupFunc:function(e){S3=e.wasm.cwrap(vp,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=uc.sizeFromShape(n.shape)/o;return 0===uc.sizeFromShape(s.shape)||S3(a,i,o,l),s}},e7={kernelName:bp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=uc.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=z3.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=qw.getReshaped(u.shape,s,o,!1),h=qw.getPermuted(d.length,s.length,!1),p=qw.getReshapedPermuted(u.shape,s,o,!1),c=G2({inputs:{x:u},backend:n,attrs:{shape:d}}),f=$2({inputs:{x:c},backend:n,attrs:{perm:h}}),m=G2({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}},t7={kernelName:wp,backendName:"wasm",setupFunc:function(e){N3=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],d=n.readSync(i.dataId)[0],h=[l+d,u],p=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(h,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(h.slice(0,1),s.dtype),A=n.dataIdMap.get(y.dataId).id,b=n.makeOutput([d],"bool"),x=n.dataIdMap.get(b.dataId).id,v=n.makeOutput([l],a.dtype),w=n.dataIdMap.get(v.dataId).id,k=n.makeOutput([4],"int32"),I=n.dataIdMap.get(k.dataId).id,S=N3(p,c,v2[s.dtype],l,d,u,f,g,A,x,w,I),N=n.readSync(k.dataId);switch(N[0]){case 1:t=qw.getSparseFillEmptyRowsIndicesDenseShapeMismatch(N[1]);break;case 2:t=qw.getSparseFillEmptyRowsNegativeIndexErrorMessage(N[1],N[2]);break;case 3:t=qw.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(N[1],N[2],N[3]);break;default:t=""}if(n.disposeData(k.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(b.dataId),n.disposeData(v.dataId),new Error(t);let T=m,C=y;return S!==h[0]&&(T=K2({inputs:{x:m},attrs:{begin:0,size:[S,u]},backend:n}),C=K2({inputs:{x:y},attrs:{begin:0,size:S},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[T,C,b,v]}},n7={kernelName:kp,backendName:"wasm",setupFunc:function(e){T3=e.wasm.cwrap(kp,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],d=uc.sizeFromShape(s.shape),h=t.makeOutput([u,d],r.dtype),p=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([d],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;T3(i,o,l,u,p,f,g);let y,A=t.readSync(m.dataId);switch(A[0]){case 0:y=qw.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(A[1],A[2]);break;case 1:y=qw.getSparseReshapeNegativeOutputDimErrorMessage(A[1],A[2]);break;case 2:y=qw.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=qw.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(c.dataId));y=qw.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(y);return[h,c]}};function r7(e){C3=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function a7(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(qw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=a.shape.slice();d[0]=u;let h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(d,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;C3(h,v2[a.dtype],a.shape[0],p,c,m,y,t,0);let A,b=n.readSync(g.dataId);switch(b[0]){case 0:A=qw.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:A=qw.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:A=qw.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:A=qw.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:A=""}if(n.disposeData(g.dataId),A)throw n.disposeData(f.dataId),new Error(A);return f}var s7,i7,o7,l7,u7,d7,h7={kernelName:Ip,backendName:"wasm",setupFunc:r7,kernelFunc:function(e){return a7(e,!0)}},p7={kernelName:Sp,backendName:"wasm",setupFunc:r7,kernelFunc:function(e){return a7(e,!1)}},c7={kernelName:xp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=uc.parseAxisParam(i,a.shape)[0],l=qw.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let n=K2({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},f7=I2(yp),m7=I2(Cp),g7=N2(Tp),y7={kernelName:Gp,backendName:"wasm",setupFunc:function(e){s7=e.wasm.cwrap(Gp,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return s7(i,a,v2[s.dtype],l),o}},A7={kernelName:Ep,backendName:"wasm",setupFunc:function(e){i7=e.wasm.cwrap(Ep,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:v}=dg.sliceInfo(s.shape,i,o,l,u,d,h,p,c);if(g)t=G2({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||A){uc.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=dg.computeOutShape(b,x,v),r=K2({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});t=G2({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(uc.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(b).buffer),o=new Uint8Array(new Int32Array(x).buffer),l=new Uint8Array(new Int32Array(v).buffer),u=new Uint8Array(new Int32Array(f).buffer),d=new Uint8Array(new Int32Array(uc.computeStrides(f)).buffer),h=n.dataIdMap.get(e.dataId).id;i7(r,a,s.shape.length,i,o,l,u,d,f.length,h),t=G2({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}},b7=N2($p),x7={kernelName:Ap,backendName:"wasm",setupFunc:function(e){o7=e.wasm.cwrap(Ap,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:h,originalAxes:p,inputWasTransposed:c}=z2(i,a,t),f=h;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=qw.getInnerMostAxes(f.length,u.shape.length))}qw.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=qw.computeOutAndReduceShapes(u.shape,f),y=uc.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==uc.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;o7(l,y,v2[A.dtype],e)}if(c&&t.disposeData(d.dataId),s){let e=qw.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},v7=I2(Fp),w7=I2(Op),k7={kernelName:zp,backendName:"wasm",setupFunc:function(e){l7=e.wasm.cwrap(zp,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,a.dtype),h=n.dataIdMap.get(d.dataId).id;return l7(s,l,a.shape.length,u,o.length,v2[d.dtype],h),d}},I7={kernelName:Dp,backendName:"wasm",setupFunc:function(e){u7=e.wasm.cwrap(Dp,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(a.shape).buffer),u=a.shape.slice();u[u.length-1]=s;let d=n.makeOutput(u,a.dtype),h=n.dataIdMap.get(d.dataId).id,p=n.makeOutput(u,"int32"),c=n.dataIdMap.get(p.dataId).id;return u7(o,l,a.shape.length,v2[a.dtype],s,i,h,c),[d,p]}},S7={kernelName:Pp,backendName:"wasm",setupFunc:function(e){d7=e.wasm.cwrap(Pp,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=a,[h,p,c,f]=s.shape,[m,g]=null!=d?d:[p,c],y=[h,m,g,f],A=new Uint8Array(new Int32Array(uc.computeStrides(s.shape)).buffer),b=n.makeOutput(y,s.dtype),x=n.dataIdMap.get(b.dataId).id,v=n.dataIdMap.get(s.dataId).id,w=n.dataIdMap.get(i.dataId).id,k="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return d7(v,w,i.shape[0]>1,h,m,g,f,c,p,A,s.shape.length-1,k,t,u,x),b}},N7={kernelName:Bp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let d=new Array(i),h=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<d.length;e++)h[s]=e,d[e]=K2({inputs:{x:a},attrs:{begin:h,size:p},backend:n});return d.map((e=>{let{dataId:t,dtype:n}=e;return{dataId:t,dtype:n,shape:l}}))}},T7={kernelName:Vp,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},C7=[k2,S2,C2,E2,W2,B2,U2,V2,q2,Z2,Q2,e5,t5,d5,h5,p5,c5,f5,g5,y5,A5,b5,x5,v5,w5,k5,S5,W5,B5,U5,V5,G5,j5,H5,q5,K5,X5,Z5,M2,Y5,J5,Q5,e3,t3,n3,r3,a3,s3,i3,o3,u3,d3,h3,E3,_3,R3,M3,$3,F3,O3,z3,D3,P3,L3,W3,B3,U3,V3,H2,G3,j3,H3,q3,K3,X3,Z3,Y3,J3,X2,Q3,e7,t7,n7,h7,p7,c7,f7,m7,g7,y7,A7,b7,x7,v7,w7,k7,I7,S7,O2,N7,T7];for(let e of C7)rc(e);var E7=Lu();E7.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),E7.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(E7.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var _7=yl(zl()),R7=yl(Dl()),M7=class extends Ll{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(U7),V7=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Pl(this,Zg())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=uc.now();return e(),{kernelMs:uc.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=uc.sizeFromShape(n),o=i*uc.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||uc.sizeFromShape(s);let o=uc.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=uc.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap(e){let{shape:t,dtype:n,dataId:r}=e,a=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(r),i=uc.sizeFromShape(t);switch(n){case"float32":return new Float32Array(a,s,i);case"int32":return new Int32Array(a,s,i);case"bool":return new Uint8Array(a,s,i);default:throw new Error(`Unknown dtype ${n}`)}}};function $7(e,t,n){if(null!=O7)return O7;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=D7&&null!=D7[r]?D7[r]:n+r}var F7=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],O7=null,z7=null,D7={},P7=!1,L7=!1;function W7(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Kg("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),P7)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");O7=e,L7=t}function B7(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(P7)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)z7=e;else{D7=e;let t=F7.filter((e=>null==D7[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}L7=t}var U7=-1,V7=-1;function G7(e){U7=e}function j7(){if(-1===V7)throw new Error("WASM backend not initialized.");return V7}var H7="0.0.0";uy("wasm",(async()=>{let{wasm:e}=await async function(){let[e,t]=await Promise.all([Lu().getAsync("WASM_HAS_SIMD_SUPPORT"),Lu().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});'.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?$7(e,t,null!=z7?z7:r):r+n}};L7&&(a.instantiateWasm=function(e){return(t,n)=>(uc.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}($7(e,t,null!=z7?z7:"")));let s,i=!1;a.onAbort=()=>{i||P7||(P7=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==O7?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+_7.default.toString()],{type:"text/javascript"}),s=(0,_7.default)(a)):s=(0,R7.default)(a),s.then((e=>{i=!0,P7=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new M7(e)}),2);var q7="3.15.0-20220405",K7={tfjs:q7,"tfjs-core":q7,"tfjs-data":q7,"tfjs-layers":q7,"tfjs-converter":q7,"tfjs-backend-cpu":q7,"tfjs-backend-webgl":q7,"tfjs-backend-wasm":q7},X7=(e,t,n)=>{const r=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(r,((e,t)=>(n[t]=0,e)))};function Z7(){let e=0,t=null,n=!1,r=-1,a=[null,null],s=[],i=null,o=null;const l=a4(100,100),u={},d=l.getContext("webgl");if(this.gl=d,!d)return void rl("filter: cannot get webgl context");function h(e){return a[e]=a[e]||function(e,t){const n=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,n);const r=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,r);const a=d.createTexture();return d.bindTexture(d.TEXTURE_2D,a),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,e,t,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,a,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:n,texture:a}}(l.width,l.height),a[e]}function p(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!o)return;let s=null,i=null,l=!1;s=0===e?t:h(r).texture||null,e++,!n||1&a?(r=(r+1)%2,i=h(r).fbo||null):(i=null,l=e%2==0),d.bindTexture(d.TEXTURE_2D,s),d.bindFramebuffer(d.FRAMEBUFFER,i),d.uniform1f(o.uniform.flipY,l?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function c(e){if(u[e])return o=u[e],d.useProgram((o?o.id:null)||null),o;if(o=new class{constructor(e,t,n){Jo(this,"uniform",{}),Jo(this,"attribute",{}),Jo(this,"gl"),Jo(this,"id"),Jo(this,"compile",((e,t)=>{const n=this.gl.createShader(t);return n?(this.gl.shaderSource(n,e),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS)?n:(rl(`filter: gl compile failed: ${this.gl.getShaderInfoLog(n)}`),null)):(rl("filter: could not create shader"),null)})),this.gl=e;const r=this.compile(t,this.gl.VERTEX_SHADER),a=this.compile(n,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),r&&a)if(this.id)if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){this.gl.useProgram(this.id),X7(t,"attribute",this.attribute);for(const e in this.attribute)this.attribute[e]=this.gl.getAttribLocation(this.id,e);X7(t,"uniform",this.uniform),X7(n,"uniform",this.uniform);for(const e in this.uniform)this.uniform[e]=this.gl.getUniformLocation(this.id,e)}else rl(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);else rl("filter: could not create webgl program")}}(d,"\n  precision highp float;\n  attribute vec2 pos;\n  attribute vec2 uv;\n  varying vec2 vUv;\n  uniform float flipY;\n  void main(void) {\n    vUv = uv;\n    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);\n  }\n",e),!o)return rl("filter: could not get webgl program"),null;const t=Float32Array.BYTES_PER_ELEMENT,n=4*t;return d.enableVertexAttribArray(o.attribute.pos),d.vertexAttribPointer(o.attribute.pos,2,d.FLOAT,!1,n,0*t),d.enableVertexAttribArray(o.attribute.uv),d.vertexAttribPointer(o.attribute.uv,2,d.FLOAT,!1,n,2*t),u[e]=o,o}const f={colorMatrix:e=>{const t=new Float32Array(e);t[4]/=255,t[9]/=255,t[14]/=255,t[19]/=255;const n=c(1===t[18]&&0===t[3]&&0===t[8]&&0===t[13]&&0===t[15]&&0===t[16]&&0===t[17]&&0===t[19]?"\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];\n    gl_FragColor.a = c.a;\n  }\n":"\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];\n    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];\n  }\n");n&&(d.uniform1fv(n.uniform.m,t),p())},brightness:e=>{const t=(e||0)+1;f.colorMatrix([t,0,0,0,0,0,t,0,0,0,0,0,t,0,0,0,0,0,1,0])},saturation:e=>{const t=2*(e||0)/3+1,n=-.5*(t-1);f.colorMatrix([t,n,n,0,0,n,t,n,0,0,n,n,t,0,0,0,0,0,1,0])},desaturate:()=>{f.saturation(-1)},contrast:e=>{const t=(e||0)+1,n=-128*(t-1);f.colorMatrix([t,0,0,0,n,0,t,0,0,n,0,0,t,0,n,0,0,0,1,0])},negative:()=>{f.contrast(-2)},hue:e=>{e=(e||0)/180*Math.PI;const t=Math.cos(e),n=Math.sin(e),r=.213,a=.715,s=.072;f.colorMatrix([r+.787*t+n*-r,a+t*-a+n*-a,s+t*-s+.928*n,0,0,r+t*-r+.143*n,a+t*(1-a)+.14*n,s+t*-s+-.283*n,0,0,r+t*-r+-.787*n,a+t*-a+n*a,s+.928*t+n*s,0,0,0,0,0,1,0])},desaturateLuminance:()=>{f.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{f.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{f.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{f.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{f.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{f.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{f.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{f.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:e=>{const t=new Float32Array(e),n=1/l.width,r=1/l.height,a=c("\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  uniform float m[9];\n  void main(void) {\n    vec4 c11 = texture2D(texture, vUv - px); // top left\n    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center\n    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right\n    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left\n    vec4 c22 = texture2D(texture, vUv); // mid center\n    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right\n    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left\n    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center\n    vec4 c33 = texture2D(texture, vUv + px ); // bottom right\n    gl_FragColor = \n    c11 * m[0] + c12 * m[1] + c22 * m[2] +\n    c21 * m[3] + c22 * m[4] + c23 * m[5] +\n    c31 * m[6] + c32 * m[7] + c33 * m[8];\n    gl_FragColor.a = c22.a;\n  }\n");a&&(d.uniform1fv(a.uniform.m,t),d.uniform2f(a.uniform.px,n,r),p())},detectEdges:()=>{f.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{f.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{f.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:e=>{const t=e||1;f.convolution.call(this,[0,-1*t,0,-1*t,1+4*t,-1*t,0,-1*t,0])},emboss:e=>{const t=e||1;f.convolution.call(this,[-2*t,-1*t,0,-1*t,1,1*t,0,1*t,2*t])},blur:e=>{const t=e/7/l.width,n=e/7/l.height,r=c("\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;\n    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;\n    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;\n  }\n");r&&(d.uniform2f(r.uniform.px,0,n),p(1),d.uniform2f(r.uniform.px,t,0),p())},pixelate:e=>{const t=e/l.width,n=e/l.height,r=c("\n  precision highp float;\n  varying vec2 vUv;\n  uniform vec2 size;\n  uniform sampler2D texture;\n  vec2 pixelate(vec2 coord, vec2 size) {\n    return floor( coord / size ) * size;\n  }\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    vec2 coord = pixelate(vUv, size);\n    gl_FragColor += texture2D(texture, coord);\n  }\n");r&&(d.uniform2f(r.uniform.size,t,n),p())}};this.add=function(e){const t=Array.prototype.slice.call(arguments,1),n=f[e];s.push({func:n,args:t})},this.reset=function(){s=[]},this.get=function(){return s},this.apply=function(r){!function(e,t){if(e!==l.width||t!==l.height){if(l.width=e,l.height=t,!i){const e=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);i=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,i),d.bufferData(d.ARRAY_BUFFER,e,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),a=[null,null]}}(r.width,r.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,r);for(let e=0;e<s.length;e++){n=e===s.length-1;const t=s[e];t.func.apply(this,t.args||[])}return l},this.draw=function(e){return this.add("brightness",0),this.apply(e)}}async function Y7(e){const t=4===e.shape.length?Hx(e):e,n=Ux(t,3,2),r=[Wb(n[0]),Wb(n[1]),Wb(n[2])],a=[mb(n[0]),mb(n[1]),mb(n[2])],s=await Promise.all(a.map((e=>e.data()))),i=.99*Math.max(s[0][0],s[1][0],s[2][0]),o=[gb(n[0],r[0]),gb(n[1],r[1]),gb(n[2],r[2])],l=[gb(a[0],r[0]),gb(a[1],r[1]),gb(a[2],r[2])],u=[fy(i,l[0]),fy(i,l[1]),fy(i,l[2])],d=[my(o[0],u[0]),my(o[1],u[1]),my(o[2],u[2])],h=qx([d[0],d[1],d[2]],2),p=jy(h,[1,t.shape[0],t.shape[1],3]);return ey([...n,...r,...a,...o,...l,...u,...d,h,t]),p}var J7,Q7=2048,e4=null,t4=null,n4=null,r4={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function a4(e,t){let n;if(o4.browser)if(o4.worker){if("undefined"==typeof OffscreenCanvas)throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if("undefined"==typeof document)throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else void 0!==o4.Canvas?n=new o4.Canvas(e,t):void 0!==globalThis.Canvas&&(n=new globalThis.Canvas(e,t));return n}function s4(e,t){const n=t||a4(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function i4(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e)return t.debug&&rl("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof Uc||"undefined"!=typeof Image&&e instanceof Image||void 0!==o4.Canvas&&e instanceof o4.Canvas||void 0!==globalThis.Canvas&&e instanceof globalThis.Canvas||"undefined"!=typeof ImageData&&e instanceof ImageData||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLMediaElement&&e instanceof HTMLMediaElement||"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof Uc){let n=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(3===e.shape.length){if(3===e.shape[2])n=LA(e,0);else if(4===e.shape[2]){const t=zx(e,[0,0,0],[-1,-1,3]);n=LA(t,0),ey(t)}}else 4===e.shape.length&&(3===e.shape[3]?n=wm(e):4===e.shape[3]&&(n=Dx(e,[0,0,0,0],[-1,-1,-1,3])));if(null==n||4!==n.shape.length||1!==n.shape[0]||3!==n.shape[3])throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if("int32"===n.dtype){const e=vm(n,"float32");ey(n),n=e}return{tensor:n,canvas:t.filter.return?t4:null}}{if(void 0!==e.readyState&&e.readyState<=2)return t.debug&&rl("input stream is not ready"),{tensor:null,canvas:e4};const r=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,a=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!r||!a)return t.debug&&rl("cannot determine input dimensions"),{tensor:null,canvas:e4};let s=r,i=a;if(s>Q7&&(s=Q7,i=Math.trunc(s*a/r)),i>Q7&&(i=Q7,s=Math.trunc(i*r/a)),(t.filter.width||0)>0?s=t.filter.width:(t.filter.height||0)>0&&(s=r*((t.filter.height||0)/a)),(t.filter.height||0)>0?i=t.filter.height:(t.filter.width||0)>0&&(i=a*((t.filter.width||0)/r)),!s||!i)throw new Error("input error: cannot determine dimension");e4&&(null==e4?void 0:e4.width)===s&&(null==e4?void 0:e4.height)===i||(e4=a4(s,i));const o=e4.getContext("2d");if("undefined"!=typeof ImageData&&e instanceof ImageData?o.putImageData(e,0,0):t.filter.flip&&void 0!==o.translate?(o.translate(r,0),o.scale(-1,1),o.drawImage(e,0,0,r,a,0,0,null==e4?void 0:e4.width,null==e4?void 0:e4.height),o.setTransform(1,0,0,1,0,0)):o.drawImage(e,0,0,r,a,0,0,null==e4?void 0:e4.width,null==e4?void 0:e4.height),t4&&e4.width===t4.width&&(null==e4?void 0:e4.height)===(null==t4?void 0:t4.height)||(t4=a4(e4.width,e4.height)),t.filter.enabled&&o4.webgl.supported){if(J7||(J7=o4.browser?new Z7:null),o4.filter=!!J7,!J7||!J7.add)return t.debug&&rl("input process error: cannot initialize filters"),{tensor:null,canvas:e4};J7.reset(),0!==t.filter.brightness&&J7.add("brightness",t.filter.brightness),0!==t.filter.contrast&&J7.add("contrast",t.filter.contrast),0!==t.filter.sharpness&&J7.add("sharpen",t.filter.sharpness),0!==t.filter.blur&&J7.add("blur",t.filter.blur),0!==t.filter.saturation&&J7.add("saturation",t.filter.saturation),0!==t.filter.hue&&J7.add("hue",t.filter.hue),t.filter.negative&&J7.add("negative"),t.filter.sepia&&J7.add("sepia"),t.filter.vintage&&J7.add("brownie"),t.filter.sepia&&J7.add("sepia"),t.filter.kodachrome&&J7.add("kodachrome"),t.filter.technicolor&&J7.add("technicolor"),t.filter.polaroid&&J7.add("polaroid"),0!==t.filter.pixelate&&J7.add("pixelate",t.filter.pixelate),t4=J7.get()>0?J7.apply(e4):J7.draw(e4)}else s4(e4,t4),J7&&(J7=null),o4.filter=!!J7;if(!n)return{tensor:null,canvas:t4};if(!t4)throw new Error("canvas error: cannot create output");let l,u=3;if("undefined"!=typeof ImageData&&e instanceof ImageData||e.data&&e.width&&e.height)o4.browser&&Ym?l=Ym?Ym.fromPixels(e):null:(u=e.data.length/e.height/e.width,l=Cf(new Uint8Array(e.data.buffer),[e.height,e.width,u],"int32"));else if(n4&&t4.width===n4.width&&t4.height===n4.height||(n4=a4(t4.width,t4.height)),Ym&&o4.browser)"webgl"===t.backend||"humangl"===t.backend||"webgpu"===t.backend?l=Ym.fromPixels(t4):(n4=s4(t4),l=Ym.fromPixels(n4));else{const e=s4(t4).getContext("2d").getImageData(0,0,s,i);u=e.data.length/s/i,l=Cf(new Uint8Array(e.data.buffer),[s,i,u])}if(4===u){const e=zx(l,[0,0,0],[-1,-1,3]);ey(l),l=e}if(!l)throw new Error("input error: cannot create tensor");const d=vm(l,"float32"),h=t.filter.equalization?await Y7(d):LA(d,0);return ey([l,d]),{tensor:h,canvas:t.filter.return?t4:null}}}var o4=new class{constructor(){if(Jo(this,"browser"),Jo(this,"node"),Jo(this,"worker"),Jo(this,"platform",""),Jo(this,"agent",""),Jo(this,"backends",[]),Jo(this,"initial"),Jo(this,"filter"),Jo(this,"tfjs"),Jo(this,"offscreen"),Jo(this,"perfadd",!1),Jo(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),Jo(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0}),Jo(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),Jo(this,"cpu",{model:void 0,flags:[]}),Jo(this,"kernels",[]),Jo(this,"Canvas"),Jo(this,"Image"),Jo(this,"ImageData"),this.browser="undefined"!=typeof navigator,this.node="undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node,this.tfjs={version:K7["tfjs-core"]},this.offscreen="undefined"!=typeof OffscreenCanvas,this.initial=!0,this.worker=this.browser&&this.offscreen?"undefined"!=typeof WorkerGlobalScope:void 0,"undefined"!=typeof navigator){const e=navigator.userAgent.match(/\(([^()]+)\)/g);if(e&&e[0]){const t=e[0].match(/\(([^()]+)\)/g);this.platform=t&&t[0]?t[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(e[0],""),this.platform[1]&&(this.agent=this.agent.replace(e[1],"")),this.agent=this.agent.replace(/  /g," ")}}else"undefined"!=typeof process&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(Zg().registryFactory),this.wasm.supported="undefined"!=typeof WebAssembly,this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&"wasm"===sy()&&(this.wasm.simd=await Lu().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Lu().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));const e=a4(100,100),t=e?e.getContext("webgl2"):void 0;if(this.webgl.supported=void 0!==t,this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&("webgl"===sy()||"humangl"===sy())){const e="undefined"!==dy().gpgpu?await dy().getGPGPUContext().gl:null;e&&(this.webgl.version=e.getParameter(e.VERSION),this.webgl.renderer=e.getParameter(e.RENDERER))}this.webgpu.supported=this.browser&&void 0!==navigator.gpu,this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(e){this.webgpu.supported=!1}try{this.kernels=nc(sy()).map((e=>e.kernelName.toLowerCase()))}catch(e){}}async updateCPU(){const e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},l4={cacheModels:!1,verbose:!0,debug:!1,modelBasePath:""};async function u4(e){const t=function(e,t){const n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}(l4.modelBasePath,e||""),n=t.split("/"),r="indexeddb://"+n[n.length-1].replace(".json",""),a=await Im.listModels(),s=l4.cacheModels&&Object.keys(a).includes(r),i="undefined"==typeof fetch?{}:{fetchFunc:(e,t)=>async function(e,t){return l4.debug&&rl("load model fetch:",e,t),fetch(e,t)}(e,t)},o=new TO(s?r:t,i);let l=!1;try{o.findIOHandler(),l4.debug&&rl("model load handler:",o.handler);const e=await o.handler.load();o.loadSync(e),l4.verbose&&rl("load model:",o.modelUrl),l=!0}catch(e){rl("error loading model:",t,e)}if(l&&l4.cacheModels&&!s)try{rl("model saved:",r,await o.save(r))}catch(e){rl("error saving model:",t,e)}return o}var d4,h4="2.6.5";Yo({},{Models:()=>Pee,load:()=>Wee,reset:()=>Lee,validate:()=>Bee});var p4=[],c4=["white","black","asian","indian","other"],f4=[15,23,28,35.5,45.5,55.5,65],m4=0,g4=0,y4=Number.MAX_SAFE_INTEGER;async function A4(e,t,n,r){var a,s;if(!d4)return{age:0,gender:"unknown",genderScore:0,race:[]};const i=y4<((null==(a=t.face.gear)?void 0:a.skipFrames)||0),o=((null==(s=t.face.gear)?void 0:s.skipTime)||0)>al()-g4;return t.skipAllowed&&o&&i&&m4===r&&p4[n]?(y4++,p4[n]):(y4=0,new Promise((async a=>{var s,i;if(!(null==d4?void 0:d4.inputs[0].shape))return;const o={};o.resize=_w.cropAndResize(e,[[0,.1,.9,.9]],[0],[d4.inputs[0].shape[2],d4.inputs[0].shape[1]]);const l={age:0,gender:"unknown",genderScore:0,race:[]};(null==(s=t.face.gear)?void 0:s.enabled)&&([o.age,o.gender,o.race]=d4.execute(o.resize,["age_output","gender_output","race_output"]));const u=await o.gender.data();l.gender=u[0]>u[1]?"male":"female",l.genderScore=Math.round(100*(u[0]>u[1]?u[0]:u[1]))/100;const d=await o.race.data();for(let e=0;e<d.length;e++)d[e]>((null==(i=t.face.gear)?void 0:i.minConfidence)||.2)&&l.race.push({score:Math.round(100*d[e])/100,race:c4[e]});l.race.sort(((e,t)=>t.score-e.score));const h=Array.from(await o.age.data()).map(((e,t)=>[f4[t],e])).sort(((e,t)=>t[1]-e[1]));let p=h[0][0];for(let e=1;e<h.length;e++)p+=h[e][1]*(h[e][0]-p);l.age=Math.round(10*p)/10,Object.keys(o).forEach((e=>ey(o[e]))),p4[n]=l,m4=r,g4=al(),a(l)})))}var b4,x4={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function v4(){x4.tf255=Tx(255,"float32"),x4.tf1=Tx(1,"float32"),x4.tf2=Tx(2,"float32"),x4.tf05=Tx(.5,"float32"),x4.tf127=Tx(127.5,"float32"),x4.rgb=Yx([.2989,.587,.114],"float32")}var w4,k4=[],I4=0,S4=0,N4=Number.MAX_SAFE_INTEGER;async function T4(e,t,n,r){var a,s,i,o;if(!b4)return{age:0};const l=N4<((null==(a=t.face.ssrnet)?void 0:a.skipFrames)||0),u=((null==(s=t.face.ssrnet)?void 0:s.skipTime)||0)>al()-S4;return t.skipAllowed&&l&&u&&I4===r&&(null==(i=k4[n])?void 0:i.age)&&(null==(o=k4[n])?void 0:o.age)>0?(N4++,k4[n]):(N4=0,new Promise((async a=>{if(!(null==b4?void 0:b4.inputs)||!b4.inputs[0]||!b4.inputs[0].shape)return;const s={};s.resize=_w.resizeBilinear(e,[b4.inputs[0].shape[2],b4.inputs[0].shape[1]],!1),s.enhance=my(s.resize,x4.tf255);const i={age:0};if(t.face.ssrnet.enabled&&(s.age=b4.execute(s.enhance)),s.age){const e=await s.age.data();i.age=Math.trunc(10*e[0])/10}Object.keys(s).forEach((e=>ey(s[e]))),k4[n]=i,I4=r,S4=al(),a(i)})))}var C4,E4=[],_4=0,R4=0,M4=Number.MAX_SAFE_INTEGER,$4=[.2989,.587,.114];async function F4(e,t,n,r){var a,s,i,o;if(!w4)return{gender:"unknown",genderScore:0};const l=M4<((null==(a=t.face.ssrnet)?void 0:a.skipFrames)||0),u=((null==(s=t.face.ssrnet)?void 0:s.skipTime)||0)>al()-R4;return t.skipAllowed&&l&&u&&_4===r&&(null==(i=E4[n])?void 0:i.gender)&&(null==(o=E4[n])?void 0:o.genderScore)>0?(M4++,E4[n]):(M4=0,new Promise((async a=>{if(!(null==w4?void 0:w4.inputs[0].shape))return;const s={};s.resize=_w.resizeBilinear(e,[w4.inputs[0].shape[2],w4.inputs[0].shape[1]],!1),s.enhance=Qg((()=>{const[e,t,n]=Ux(s.resize,3,3),r=my(e,$4[0]),a=my(t,$4[1]),i=my(n,$4[2]),o=by([r,a,i]);return my(gb(o,x4.tf05),2)}));const i={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(s.gender=w4.execute(s.enhance));const o=await s.gender.data();i.gender=o[0]>o[1]?"female":"male",i.genderScore=o[0]>o[1]?Math.trunc(100*o[0])/100:Math.trunc(100*o[1])/100,Object.keys(s).forEach((e=>ey(s[e]))),E4[n]=i,_4=r,R4=al(),a(i)})))}var O4=[],z4=Number.MAX_SAFE_INTEGER,D4=0,P4=0;async function L4(e,t,n,r){var a,s;if(!C4)return 0;const i=((null==(a=t.face.antispoof)?void 0:a.skipTime)||0)>al()-P4,o=z4<((null==(s=t.face.antispoof)?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&D4===r&&O4[n]?(z4++,O4[n]):(z4=0,new Promise((async t=>{const a=_w.resizeBilinear(e,[(null==C4?void 0:C4.inputs[0].shape)?C4.inputs[0].shape[2]:0,(null==C4?void 0:C4.inputs[0].shape)?C4.inputs[0].shape[1]:0],!1),s=null==C4?void 0:C4.execute(a),i=(await s.data())[0];O4[n]=Math.round(100*i)/100,D4=r,P4=al(),ey([a,s]),t(O4[n])})))}var W4={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},B4={count:468,mouth:13,symmetryLine:[13,W4.midwayBetweenEyes[0]]},U4={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},V4=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],G4=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],j4=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],H4=([127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178].map((e=>G4[e])),[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152].map((e=>G4[e])),[33,133,362,263,1,78,308].map((e=>G4[e])),e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]),q4=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],K4=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],X4=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],Z4=(e,t,n)=>{const r=t.shape[1],a=t.shape[2],s=[e.startPoint[1]/r,e.startPoint[0]/a,e.endPoint[1]/r,e.endPoint[0]/a],i=_w.cropAndResize(t,[s],[0],n),o=fy(i,x4.tf255);return ey(i),o},Y4=(e,t)=>{const n=q4(e),r=H4(e),a=[t*r[0]/2,t*r[1]/2];return{startPoint:[n[0]-a[0],n[1]-a[1]],endPoint:[n[0]+a[0],n[1]+a[1]],landmarks:e.landmarks,confidence:e.confidence}},J4=e=>{const t=q4(e),n=H4(e),r=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-r),Math.round(t[1]-r)],endPoint:[Math.round(t[0]+r),Math.round(t[1]+r)],landmarks:e.landmarks,confidence:e.confidence}},Q4=e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},e6=[[1,0,0],[0,1,0],[0,0,1]],t6=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],n6=(e,t)=>{let n=0;for(let r=0;r<e.length;r++)n+=e[r]*t[r];return n},r6=(e,t)=>{const n=[];for(let r=0;r<e.length;r++)n.push(e[r][t]);return n},a6=(e,t)=>{const n=[],r=e.length;for(let a=0;a<r;a++){n.push([]);for(let s=0;s<r;s++)n[a].push(n6(e[a],r6(t,s)))}return n},s6=(e,t)=>{const n=Math.cos(e),r=Math.sin(e),a=[[n,-r,0],[r,n,0],[0,0,1]],s=t6(t[0],t[1]),i=a6(s,a),o=t6(-t[0],-t[1]);return a6(i,o)},i6=(e,t)=>[n6(e,t[0]),n6(e,t[1])];function o6(e,t,n,r,a){const s=H4(t),i=e.map((e=>[s[0]/a*(e[0]-a/2),s[1]/a*(e[1]-a/2),e[2]||0])),o=n&&0!==n&&Math.abs(n)>.2,l=o?s6(n,[0,0]):e6,u=o?i.map((e=>[...i6(e,l),e[2]])):i,d=o?(e=>{const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],r=[-n6(t[0],n),-n6(t[1],n)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]})(r):e6,h=q4(t),p=[n6(h,d[0]),n6(h,d[1])];return u.map((e=>[Math.trunc(e[0]+p[0]),Math.trunc(e[1]+p[1]),Math.trunc(e[2]||0)]))}function l6(e,t,n,r){const a=t.landmarks.length>=B4.count?B4.symmetryLine:U4.symmetryLine;let s,i=0,o=e6;if(e&&o4.kernels.includes("rotatewithoffset"))if(i=((e,t)=>{return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n})(t.landmarks[a[0]],t.landmarks[a[1]]),i&&0!==i&&Math.abs(i)>.2){const e=q4(t),a=[e[0]/n.shape[2],e[1]/n.shape[1]],l=_w.rotateWithOffset(n,i,0,a);o=s6(-i,e),s=Z4(t,l,[r,r]),ey(l)}else s=Z4(t,n,[r,r]);else s=Z4(t,n,[r,r]);return[i,o,s]}var u6,d6=(e,t)=>{const n=(e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]})(e),r=H4(t);return{startPoint:[n[0]-r[0]/2,n[1]-r[1]/2],endPoint:[n[0]+r[0]/2,n[1]+r[1]/2]}},h6=null,p6=0,c6=null,f6=()=>p6;var m6={};Yo(m6,{connected:()=>y6,kpt:()=>g6});var g6=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],y6={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},A6=[8,16,32,32,32];function b6(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1];const n=[e.map((e=>e[0])),e.map((e=>e[1]))],r=[Math.min(...n[0]),Math.min(...n[1])],a=[Math.max(...n[0]),Math.max(...n[1])],s=[r[0],r[1],a[0]-r[0],a[1]-r[1]],i=[s[0]/t[0],s[1]/t[1],s[2]/t[0],s[3]/t[1]];return{box:s,boxRaw:i}}function x6(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1];const n=[e.map((e=>e[0])),e.map((e=>e[1]))],r=[Math.min(...n[0]),Math.min(...n[1])],a=[Math.max(...n[0]),Math.max(...n[1])],s=[(r[0]+a[0])/2,(r[1]+a[1])/2],i=Math.max(s[0]-r[0],s[1]-r[1],-s[0]+a[0],-s[1]+a[1]),o=[Math.trunc(s[0]-i),Math.trunc(s[1]-i),Math.trunc(2*i),Math.trunc(2*i)],l=[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]];return{box:o,boxRaw:l}}function v6(e,t){const n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var w6={detector:null,landmarks:null},k6={detector:[224,224],landmarks:[256,256]},I6=Number.MAX_SAFE_INTEGER,S6=["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],N6=null,T6=[[0,0],[0,0],[0,0],[0,0]],C6=0,E6=e=>1-1/(1+Math.exp(e));async function _6(e,t){const n=[e.shape[2]||0,e.shape[1]||0],r=(t.body.skipTime||0)>al()-C6,a=I6<(t.body.skipFrames||0);if(t.skipAllowed&&r&&a&&null!==N6)I6++;else{const r={};r.landmarks=await async function(e,t){const n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let r;if(e.shape[1]!==e.shape[2]){const a=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],s=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];T6=[[0,0],a,s,[0,0]],n.pad=Yb(n.cropped||e,T6),n.resize=_w.resizeBilinear(n.pad,[t,t]),r=fy(n.resize,x4.tf255)}else e.shape[1]!==t?(n.resize=_w.resizeBilinear(n.cropped||e,[t,t]),r=fy(n.resize,x4.tf255)):r=fy(n.cropped||e,x4.tf255);return Object.keys(n).forEach((e=>ey(n[e]))),r}(e,256),N6=await async function(e,t,n){var r;const a={};[a.ld,a.segmentation,a.heatmap,a.world,a.poseflag]=null==(r=w6.landmarks)?void 0:r.execute(e,S6);const s=(await a.poseflag.data())[0],i=await a.ld.data(),o=await a.world.data();Object.keys(a).forEach((e=>ey(a[e])));const l=[];for(let e=0;e<i.length/5;e++){const t=E6(i[5*e+3]),r=E6(i[5*e+4]),a=Math.trunc(100*t*r*s)/100,u=[i[5*e+0]/k6.landmarks[0],i[5*e+1]/k6.landmarks[1],i[5*e+2]+0],d=[Math.trunc(n[0]*u[0]),Math.trunc(n[1]*u[1]),u[2]],h=[o[5*e+0],o[5*e+1],o[5*e+2]+0];l.push({part:g6[e],positionRaw:u,position:d,distance:h,score:a})}if(s<(t.body.minConfidence||0))return null;!async function(e){const t=e.find((e=>"leftPalm"===e.part)),n=e.find((e=>"leftWrist"===e.part)),r=e.find((e=>"leftIndex"===e.part));t.position[2]=((n.position[2]||0)+(r.position[2]||0))/2;const a=e.find((e=>"rightPalm"===e.part)),s=e.find((e=>"rightWrist"===e.part)),i=e.find((e=>"rightIndex"===e.part));a.position[2]=((s.position[2]||0)+(i.position[2]||0))/2}(l);const u=function(e,t){for(const n of e)n.position=[Math.trunc(n.position[0]*(t[0]+T6[2][0]+T6[2][1])/t[0]-T6[2][0]),Math.trunc(n.position[1]*(t[1]+T6[1][0]+T6[1][1])/t[1]-T6[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];return e}(l,n),d=b6(u.map((e=>e.position)),[n[0],n[1]]),h={};for(const[e,t]of Object.entries(y6)){const n=[];for(let e=0;e<t.length-1;e++){const r=u.find((n=>n.part===t[e])),a=u.find((n=>n.part===t[e+1]));r&&a&&n.push([r.position,a.position])}h[e]=n}return{id:0,score:Math.trunc(100*s)/100,box:d.box,boxRaw:d.boxRaw,keypoints:u,annotations:h}}(r.landmarks,t,n),Object.keys(r).forEach((e=>ey(r[e]))),C6=al(),I6=0}return N6?[N6]:[]}var R6,M6=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],$6=0,F6=[],O6=0,z6=Number.MAX_SAFE_INTEGER;async function D6(e,t){const n=(t.object.skipTime||0)>al()-O6,r=z6<(t.object.skipFrames||0);return t.skipAllowed&&n&&r&&F6.length>0?(z6++,F6):(z6=0,new Promise((async n=>{const r=[e.shape[2]||0,e.shape[1]||0],a=_w.resizeBilinear(e,[$6,$6]),s=t.object.enabled?null==R6?void 0:R6.execute(a,["tower_0/detections"]):null;O6=al(),ey(a);const i=await async function(e,t,n){if(!e)return[];const r={},a=[],s=await e.array();r.squeeze=Hx(e);const i=Ux(r.squeeze,6,1);r.stack=qx([i[1],i[0],i[3],i[2]],1),r.boxes=Hx(r.stack),r.scores=Hx(i[4]),r.classes=Hx(i[5]),ey([e,...i]),r.nms=await _w.nonMaxSuppressionAsync(r.boxes,r.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);const o=await r.nms.data();let l=0;for(const e of Array.from(o)){const n=Math.trunc(100*s[0][e][4])/100,r=s[0][e][5],i=M6[r].label,[o,u]=[s[0][e][0]/$6,s[0][e][1]/$6],d=[o,u,s[0][e][2]/$6-o,s[0][e][3]/$6-u],h=[Math.trunc(d[0]*t[0]),Math.trunc(d[1]*t[1]),Math.trunc(d[2]*t[0]),Math.trunc(d[3]*t[1])];a.push({id:l++,score:n,class:r,label:i,box:h,boxRaw:d})}return Object.keys(r).forEach((e=>ey(r[e]))),a}(s,r,t);F6=i,n(i)})))}var P6={};Yo(P6,{connected:()=>B6,kpt:()=>W6});var L6,W6=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],B6={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},U6=0,V6={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},G6=Number.MAX_SAFE_INTEGER;async function j6(e,t){const[n,r]=e.shape,a=jy(e,[r*n]),s=mb(a,0),i=(await s.data())[0];if(ey([a,s]),i>t){const e=wy(a,0),t=Vb(e,n),r=(await t.data())[0],s=fy(e,Tx(n,"int32")),o=(await s.data())[0];return ey([t,s]),[r,o,i]}return[0,0,i]}async function H6(e,t){const n=(t.body.skipTime||0)>al()-U6,r=G6<(t.body.skipFrames||0);return t.skipAllowed&&n&&r&&Object.keys(V6.keypoints).length>0?(G6++,[V6]):(G6=0,new Promise((async n=>{var r;const a=Qg((()=>{if(!(null==L6?void 0:L6.inputs[0].shape))return null;const t=_w.resizeBilinear(e,[L6.inputs[0].shape[2],L6.inputs[0].shape[1]],!1),n=my(t,x4.tf2);return gb(n,x4.tf1)}));let s;if(t.body.enabled&&(s=null==L6?void 0:L6.execute(a)),U6=al(),ey(a),s){V6.keypoints.length=0;const n=s.squeeze();ey(s);const a=n.unstack(2);ey(n);for(let n=0;n<a.length;n++){const[s,i,o]=await j6(a[n],t.body.minConfidence);o>((null==(r=t.body)?void 0:r.minConfidence)||0)&&V6.keypoints.push({score:Math.round(100*o)/100,part:W6[n],positionRaw:[s/L6.inputs[0].shape[2],i/L6.inputs[0].shape[1]],position:[Math.round(e.shape[2]*s/L6.inputs[0].shape[2]),Math.round(e.shape[1]*i/L6.inputs[0].shape[1])]})}a.forEach((e=>ey(e)))}V6.score=V6.keypoints.reduce(((e,t)=>t.score>e?t.score:e),0);const i=V6.keypoints.map((e=>e.position[0])),o=V6.keypoints.map((e=>e.position[1]));V6.box=[Math.min(...i),Math.min(...o),Math.max(...i)-Math.min(...i),Math.max(...o)-Math.min(...o)];const l=V6.keypoints.map((e=>e.positionRaw[0])),u=V6.keypoints.map((e=>e.positionRaw[1]));V6.boxRaw=[Math.min(...l),Math.min(...u),Math.max(...l)-Math.min(...l),Math.max(...u)-Math.min(...u)];for(const[e,n]of Object.entries(B6)){const r=[];for(let e=0;e<n.length-1;e++){const a=V6.keypoints.find((t=>t.part===n[e])),s=V6.keypoints.find((t=>t.part===n[e+1]));a&&s&&a.score>(t.body.minConfidence||0)&&s.score>(t.body.minConfidence||0)&&r.push([a.position,s.position])}V6.annotations[e]=r}n([V6])})))}var q6,K6,X6=["angry","disgust","fear","happy","sad","surprise","neutral"],Z6=[],Y6=0,J6=0,Q6=Number.MAX_SAFE_INTEGER;async function e8(e,t,n,r){var a,s;if(!q6)return[];const i=Q6<((null==(a=t.face.emotion)?void 0:a.skipFrames)||0),o=((null==(s=t.face.emotion)?void 0:s.skipTime)||0)>al()-J6;return t.skipAllowed&&o&&i&&Y6===r&&Z6[n]&&Z6[n].length>0?(Q6++,Z6[n]):(Q6=0,new Promise((async a=>{var s,i;const o=[];if(null==(s=t.face.emotion)?void 0:s.enabled){const n={},r=(null==q6?void 0:q6.inputs[0].shape)?q6.inputs[0].shape[2]:0;n.resize=_w.resizeBilinear(e,[r,r],!1),n.channels=my(n.resize,x4.rgb),n.grayscale=yb(n.channels,3,!0),n.grayscaleSub=gb(n.grayscale,x4.tf05),n.grayscaleMul=my(n.grayscaleSub,x4.tf2),n.emotion=null==q6?void 0:q6.execute(n.grayscaleMul),J6=al();const a=await n.emotion.data();for(let e=0;e<a.length;e++)a[e]>((null==(i=t.face.emotion)?void 0:i.minConfidence)||0)&&o.push({score:Math.min(.99,Math.trunc(100*a[e])/100),emotion:X6[e]});o.sort(((e,t)=>t.score-e.score)),Object.keys(n).forEach((e=>ey(n[e])))}Z6[n]=o,Y6=r,a(o)})))}var t8,n8=[],r8=0,a8=0,s8=Number.MAX_SAFE_INTEGER;async function i8(e,t,n,r){var a,s;if(!K6)return[];const i=s8<((null==(a=t.face.embedding)?void 0:a.skipFrames)||0),o=((null==(s=t.face.embedding)?void 0:s.skipTime)||0)>al()-a8;return t.skipAllowed&&o&&i&&r8===r&&n8[n]?(s8++,n8[n]):new Promise((async a=>{var s;let i=[];if((null==(s=t.face.embedding)?void 0:s.enabled)&&(null==K6?void 0:K6.inputs[0].shape)){const t={};t.crop=_w.resizeBilinear(e,[K6.inputs[0].shape[2],K6.inputs[0].shape[1]],!1),t.data=null==K6?void 0:K6.execute(t.crop);const n=await t.data.data();i=Array.from(n)}n8[n]=i,r8=r,a8=al(),a(i)}))}var o8=0,l8=W4.leftEyeLower0,u8=W4.rightEyeLower0,d8={leftBounds:[l8[0],l8[l8.length-1]],rightBounds:[u8[0],u8[u8.length-1]]};function h8(e,t,n,r){for(let a=0;a<V4.length;a++){const{key:s,indices:i}=V4[a],o=W4[`${n}${s}`];if(!r||r.includes(s))for(let n=0;n<i.length;n++){const r=i[n];e[o[n]]=[t[r][0],t[r][1],(t[r][2]+e[o[n]][2])/2]}}}var p8=function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=J4(Y4(Q4([e[n],e[r]]),2.3)),o=H4(i);let l=_w.cropAndResize(t,[[i.startPoint[1]/a,i.startPoint[0]/a,i.endPoint[1]/a,i.endPoint[0]/a]],[0],[o8,o8]);if(s&&o4.kernels.includes("flipleftright")){const e=_w.flipLeftRight(l);ey(l),l=e}return{box:i,boxSize:o,crop:l}},c8=function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=[];for(let s=0;s<76;s++){const i=e[3*s],o=e[3*s+1],l=e[3*s+2];a.push([(r?1-i/o8:i/o8)*n[0]+t.startPoint[0],o/o8*n[1]+t.startPoint[1],l])}return{rawCoords:a,iris:a.slice(71)}},f8=(e,t,n)=>{const r=e[W4[`${n}EyeUpper0`][3]][2],a=e[W4[`${n}EyeLower0`][4]][2],s=(r+a)/2;return t.map(((e,t)=>{let n=s;return 2===t?n=r:4===t&&(n=a),[e[0],e[1],n]}))};async function m8(e,t,n,r){if(!t8)return n.debug&&rl("face mesh iris detection requested, but model is not loaded"),e;const{box:a,boxSize:s,crop:i}=p8(e,t,d8.leftBounds[0],d8.leftBounds[1],r,!0),{box:o,boxSize:l,crop:u}=p8(e,t,d8.rightBounds[0],d8.rightBounds[1],r,!0),d=Ky([i,u]);ey(i),ey(u);const h=t8.execute(d);ey(d);const p=await h.data();ey(h);const c=p.slice(0,228),{rawCoords:f,iris:m}=c8(c,a,s,!0),g=p.slice(228),{rawCoords:y,iris:A}=c8(g,o,l),b=(e=>e[d8.leftBounds[0]][2]-e[d8.rightBounds[0]][2])(e);Math.abs(b)<30?(h8(e,f,"left",null),h8(e,y,"right",null)):b<1?h8(e,f,"left",["EyeUpper0","EyeLower0"]):h8(e,y,"right",["EyeUpper0","EyeLower0"]);const x=f8(e,m,"left"),v=f8(e,A,"right");return e.concat(x).concat(v)}var g8,y8={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},A8=null,b8=0,x8=j4,v8=G4,w8=[],k8=0,I8=0,S8=Number.MAX_SAFE_INTEGER;function N8(e){const t=e.image||e.tensor||e;if(!(null==g8?void 0:g8.inputs[0].shape))return t;const n=_w.resizeBilinear(t,[g8.inputs[0].shape[2],g8.inputs[0].shape[1]],!1),r=my(n,x4.tf255);return ey(n),r}async function T8(e,t,n,r){var a,s,i,o;if(!g8)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};const l=S8<((null==(a=t.face.description)?void 0:a.skipFrames)||0),u=((null==(s=t.face.description)?void 0:s.skipTime)||0)>al()-k8;return t.skipAllowed&&l&&u&&I8===r&&(null==(i=w8[n])?void 0:i.age)&&(null==(o=w8[n])?void 0:o.age)>0?(S8++,w8[n]):(S8=0,new Promise((async a=>{var s,i;const o={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(null==(s=t.face.description)?void 0:s.enabled){const n=N8(e),r=null==g8?void 0:g8.execute(n);k8=al(),ey(n);const a=await r.find((e=>1===e.shape[1])),s=await a.data(),l=Math.trunc(200*Math.abs(s[0]-.5))/100;l>((null==(i=t.face.description)?void 0:i.minConfidence)||0)&&(o.gender=s[0]<=.5?"female":"male",o.genderScore=Math.min(.99,l));const u=wy(r.find((e=>100===e.shape[1])),1),d=(await u.data())[0];ey(u);const h=r.find((e=>100===e.shape[1])),p=await h.data();o.age=Math.round(p[d-1]>p[d+1]?10*d-100*p[d-1]:10*d+100*p[d+1])/10;const c=r.find((e=>1024===e.shape[1])),f=c?await c.data():[];o.descriptor=Array.from(f),r.forEach((e=>ey(e)))}w8[n]=o,I8=r,a(o)})))}function C8(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function E8(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function _8(e,t,n){const r=t.shape[1],a=t.shape[2],s=[[e.startPoint[1]/r,e.startPoint[0]/a,e.endPoint[1]/r,e.endPoint[0]/a]];return _w.cropAndResize(t,s,[0],n)}function R8(e,t){return{startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],palmLandmarks:e.palmLandmarks.map((e=>[e[0]*t[0],e[1]*t[1]])),confidence:e.confidence}}function M8(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1.5;const n=E8(e),r=C8(e),a=[t*r[0]/2,t*r[1]/2],s=[n[0]-a[0],n[1]-a[1]],i=[n[0]+a[0],n[1]+a[1]];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function $8(e){const t=E8(e),n=C8(e),r=Math.max(...n)/2;return{startPoint:[t[0]-r,t[1]-r],endPoint:[t[0]+r,t[1]+r],palmLandmarks:e.palmLandmarks}}function F8(e,t){return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n}var O8=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function z8(e,t){let n=0;for(let r=0;r<e.length;r++)n+=e[r]*t[r];return n}function D8(e,t){const n=[];for(let r=0;r<e.length;r++)n.push(e[r][t]);return n}function P8(e,t){const n=[],r=e.length;for(let a=0;a<r;a++){n.push([]);for(let s=0;s<r;s++)n[a].push(z8(e[a],D8(t,s)))}return n}function L8(e,t){const n=Math.cos(e),r=Math.sin(e),a=[[n,-r,0],[r,n,0],[0,0,1]],s=P8(O8(t[0],t[1]),a);return P8(s,O8(-t[0],-t[1]))}function W8(e,t){return[z8(e,t[0]),z8(e,t[1])]}var B8=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],U8=[0,5,9,13,17,1,2],V8=0,G8={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>G8.nameMapping[e],getPoints:e=>G8.pointsMapping[e]},j8={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>j8.nameMapping[e]},H8={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>H8.nameMapping[e]},q8=class{constructor(e){Jo(this,"name"),Jo(this,"curls"),Jo(this,"directions"),Jo(this,"weights"),Jo(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,n){void 0===this.curls[e]&&(this.curls[e]=[]),this.curls[e].push([t,n])}direction(e,t,n){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,n])}weight(e,t){this.weights[e]=t;const n=this.weights.reduce(((e,t)=>e+t),0);this.weightsRelative=this.weights.map((e=>5*e/n))}matchAgainst(e,t){let n=0;for(const t in e){const r=e[t],a=this.curls[t];if(void 0!==a){for(const[e,s]of a)if(r===e){n+=s*this.weightsRelative[t];break}}else n+=this.weightsRelative[t]}for(const e in t){const r=t[e],a=this.directions[e];if(void 0!==a){for(const[t,s]of a)if(r===t){n+=s*this.weightsRelative[e];break}}else n+=this.weightsRelative[e]}return n/10}},{thumb:K8,index:X8,middle:Z8,ring:Y8,pinky:J8}=G8,{none:Q8,half:e9,full:t9}=j8,{verticalUp:n9,verticalDown:r9,horizontalLeft:a9,horizontalRight:s9,diagonalUpRight:i9,diagonalUpLeft:o9,diagonalDownRight:l9,diagonalDownLeft:u9}=H8,d9=new q8("thumbs up");d9.curl(K8,Q8,1),d9.direction(K8,n9,1),d9.direction(K8,o9,.25),d9.direction(K8,i9,.25);for(const e of[G8.index,G8.middle,G8.ring,G8.pinky])d9.curl(e,t9,1),d9.direction(e,a9,1),d9.direction(e,s9,1);var h9=new q8("victory");h9.curl(K8,e9,.5),h9.curl(K8,Q8,.5),h9.direction(K8,n9,1),h9.direction(K8,o9,1),h9.curl(X8,Q8,1),h9.direction(X8,n9,.75),h9.direction(X8,o9,1),h9.curl(Z8,Q8,1),h9.direction(Z8,n9,1),h9.direction(Z8,o9,.75),h9.curl(Y8,t9,1),h9.direction(Y8,n9,.2),h9.direction(Y8,o9,1),h9.direction(Y8,a9,.2),h9.curl(J8,t9,1),h9.direction(J8,n9,.2),h9.direction(J8,o9,1),h9.direction(J8,a9,.2),h9.weight(X8,2),h9.weight(Z8,2);var p9=new q8("point");p9.curl(K8,t9,1),p9.curl(X8,Q8,.5),p9.curl(Z8,t9,.5),p9.curl(Y8,t9,.5),p9.curl(J8,t9,.5),p9.weight(X8,2),p9.weight(Z8,2);var c9=new q8("middle finger");c9.curl(K8,Q8,1),c9.curl(X8,t9,.5),c9.curl(Z8,t9,.5),c9.curl(Y8,t9,.5),c9.curl(J8,t9,.5),c9.weight(X8,2),c9.weight(Z8,2);var f9=new q8("open palm");f9.curl(K8,Q8,.75),f9.curl(X8,Q8,.75),f9.curl(Z8,Q8,.75),f9.curl(Y8,Q8,.75),f9.curl(J8,Q8,.75);var m9=[d9,h9,p9,c9,f9];function g9(e,t,n,r){const a=(t-r)/(e-n);let s=180*Math.atan(a)/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}function y9(e,t){if(!e||!t)return[0,0];const n=g9(e[0],e[1],t[0],t[1]);return 2===e.length?n:[n,g9(e[1],e[2],t[1],t[2])]}function A9(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=0,r=0,a=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?r=1*t:a=1*t,[n,r,a]}function b9(e,t,n){const r=e[0]-t[0],a=e[0]-n[0],s=t[0]-n[0],i=e[1]-t[1],o=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],d=e[2]-n[2],h=t[2]-n[2],p=Math.sqrt(r*r+i*i+u*u),c=Math.sqrt(a*a+o*o+d*d),f=Math.sqrt(s*s+l*l+h*h);let m=(f*f+p*p-c*c)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g,y=Math.acos(m);return y=57.2958*y%180,g=y>130?j8.none:y>60?j8.half:j8.full,g}function x9(e,t,n,r){let a;return a=r===Math.abs(e)?e>0?H8.horizontalLeft:H8.horizontalRight:r===Math.abs(t)?t>0?H8.horizontalLeft:H8.horizontalRight:n>0?H8.horizontalLeft:H8.horizontalRight,a}function v9(e,t,n,r){let a;return a=r===Math.abs(e)?e<0?H8.verticalDown:H8.verticalUp:r===Math.abs(t)?t<0?H8.verticalDown:H8.verticalUp:n<0?H8.verticalDown:H8.verticalUp,a}function w9(e,t,n,r){const a=e[0]-t[0],s=e[0]-n[0],i=t[0]-n[0],o=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],d=Math.max(Math.abs(a),Math.abs(s),Math.abs(i)),h=Math.max(Math.abs(o),Math.abs(l),Math.abs(u));let p=0,c=0,f=0;const m=h/(d+1e-5);m>1.5?p+=1.1:m>.66?c+=1.1:f+=1.1;const g=Math.sqrt(a*a+o*o),y=Math.sqrt(s*s+l*l),A=Math.sqrt(i*i+u*u),b=Math.max(g,y,A);let x=e[0],v=e[1],w=n[0],k=n[1];b===g?(w=n[0],k=n[1]):b===A&&(x=t[0],v=t[1]);const I=A9(y9([x,v],[w,k]),1.6);p+=I[0],c+=I[1],f+=I[2];for(const e of r){const t=A9(e,.9);p+=t[0],c+=t[1],f+=t[2]}let S;return S=p===Math.max(p,c,f)?v9(l,o,u,h):f===Math.max(c,f)?x9(s,a,i,d):function(e,t,n,r,a,s,i,o){let l;const u=v9(e,t,n,r),d=x9(a,s,i,o);return l=u===H8.verticalUp?d===H8.horizontalLeft?H8.diagonalUpLeft:H8.diagonalUpRight:d===H8.horizontalLeft?H8.diagonalDownLeft:H8.diagonalDownRight,l}(l,o,u,h,s,a,i,d),S}function k9(e){const t=[],n=[],r=[],a=[];if(!e)return{curls:r,directions:a};for(const r of G8.all){const a=G8.getPoints(r),s=[],i=[];for(const t of a){const n=y9(e[t[0]],e[t[1]]),r=n[0],a=n[1];s.push(r),i.push(a)}t.push(s),n.push(i)}for(const n of G8.all){const s=n===G8.thumb?1:0,i=G8.getPoints(n),o=e[i[s][0]],l=e[i[s+1][1]],u=e[i[3][1]],d=b9(o,l,u),h=w9(o,l,u,t[n].slice(s));r[n]=d,a[n]=h}return{curls:r,directions:a}}function I9(e){if(!e||0===e.length)return null;const t=k9(e),n={};for(const e of G8.all)n[G8.getName(e)]={curl:j8.getName(t.curls[e]),direction:H8.getName(t.directions[e])};return n}function S9(e){const t=[];if(!e||0===e.length)return t;const n=k9(e);for(const e of m9){const r=e.matchAgainst(n.curls,n.directions);r>=.7&&t.push({name:e.name,confidence:r})}return t}var N9,T9,C9,E9={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function _9(e,t){const n=await C9.estimateHands(e,t);if(!n)return[];const r=[];for(let t=0;t<n.length;t++){const a={};if(n[t].landmarks)for(const e of Object.keys(E9))a[e]=E9[e].map((e=>n[t].landmarks[e]));const s=n[t].landmarks;let i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],o=[0,0,0,0];if(s&&s.length>0){for(const e of s)e[0]<i[0]&&(i[0]=e[0]),e[1]<i[1]&&(i[1]=e[1]),e[0]>i[2]&&(i[2]=e[0]),e[1]>i[3]&&(i[3]=e[1]);i[2]-=i[0],i[3]-=i[1],o=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[t].box?[Math.trunc(Math.max(0,n[t].box.topLeft[0])),Math.trunc(Math.max(0,n[t].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[t].box.bottomRight[0])-Math.max(0,n[t].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[t].box.bottomRight[1])-Math.max(0,n[t].box.topLeft[1]))]:[0,0,0,0],o=[n[t].box.topLeft[0]/(e.shape[2]||0),n[t].box.topLeft[1]/(e.shape[1]||0),(n[t].box.bottomRight[0]-n[t].box.topLeft[0])/(e.shape[2]||0),(n[t].box.bottomRight[1]-n[t].box.topLeft[1])/(e.shape[1]||0)];const l=I9(s);r.push({id:t,score:Math.round(100*n[t].confidence)/100,boxScore:Math.round(100*n[t].boxConfidence)/100,fingerScore:Math.round(100*n[t].fingerConfidence)/100,label:"hand",box:i,boxRaw:o,keypoints:s,annotations:a,landmarks:l})}return r}async function R9(e){var t,n;o4.initial&&(N9=null,T9=null),N9&&T9?(e.debug&&rl("cached model:",N9.modelUrl),e.debug&&rl("cached model:",T9.modelUrl)):[N9,T9]=await Promise.all([e.hand.enabled?u4(null==(t=e.hand.detector)?void 0:t.modelPath):null,e.hand.landmarks?u4(null==(n=e.hand.skeleton)?void 0:n.modelPath):null]);const r=new class{constructor(e){Jo(this,"model"),Jo(this,"anchors"),Jo(this,"anchorsTensor"),Jo(this,"inputSize"),Jo(this,"inputSizeTensor"),Jo(this,"doubleInputSizeTensor"),this.model=e,this.anchors=B8.map((e=>[e.x,e.y])),this.anchorsTensor=Jx(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=Yx([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Yx([2*this.inputSize,2*this.inputSize])}normalizeBoxes(e){const t={};t.boxOffsets=Zy(e,[0,0],[-1,2]),t.boxSizes=Zy(e,[0,2],[-1,2]),t.div=fy(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=py(t.div,this.anchorsTensor),t.halfBoxSizes=fy(t.boxSizes,this.doubleInputSizeTensor),t.sub=gb(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=my(t.sub,this.inputSizeTensor),t.add=py(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=my(t.add,this.inputSizeTensor);const n=hA([t.startPoints,t.endPoints],1);return Object.keys(t).forEach((e=>ey(t[e]))),n}normalizeLandmarks(e,t){const n={};n.reshape=jy(e,[-1,7,2]),n.div=fy(n.reshape,this.inputSizeTensor),n.landmarks=py(n.div,this.anchors[t]);const r=my(n.landmarks,this.inputSizeTensor);return Object.keys(n).forEach((e=>ey(n[e]))),r}async predict(e,t){const n={};n.resize=_w.resizeBilinear(e,[this.inputSize,this.inputSize]),n.div=fy(n.resize,x4.tf127),n.image=gb(n.div,x4.tf1),n.batched=this.model.execute(n.image),n.predictions=Hx(n.batched),n.slice=Zy(n.predictions,[0,0],[-1,1]),n.sigmoid=Xy(n.slice),n.scores=Hx(n.sigmoid);const r=await n.scores.data();n.boxes=Zy(n.predictions,[0,1],[-1,4]),n.norm=this.normalizeBoxes(n.boxes),n.nms=await _w.nonMaxSuppressionAsync(n.norm,n.scores,3*t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);const a=await n.nms.array(),s=[];for(const t of a){const a={};a.box=Zy(n.norm,[t,0],[1,-1]),a.slice=Zy(n.predictions,[t,5],[1,14]),a.norm=this.normalizeLandmarks(a.slice,t),a.palmLandmarks=jy(a.norm,[-1,2]);const i=await a.box.data(),o=R8({startPoint:i.slice(0,2),endPoint:i.slice(2,4),palmLandmarks:await a.palmLandmarks.array(),confidence:r[t]},[e.shape[2]/this.inputSize,e.shape[1]/this.inputSize]);s.push(o),Object.keys(a).forEach((e=>ey(a[e])))}return Object.keys(n).forEach((e=>ey(n[e]))),s}}(N9);return C9=new class{constructor(e,t){Jo(this,"handDetector"),Jo(this,"handPoseModel"),Jo(this,"inputSize"),Jo(this,"storedBoxes"),Jo(this,"skipped"),Jo(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)]}}getBoxForPalmLandmarks(e,t){const n=e.map((e=>W8([...e,1],t)));return M8($8(this.calculateLandmarksBoundingBox(n)),5)}getBoxForHandLandmarks(e){const t=M8($8(this.calculateLandmarksBoundingBox(e)),1.65);t.palmLandmarks=[];for(let n=0;n<U8.length;n++)t.palmLandmarks.push(e[U8[n]].slice(0,2));return t}transformRawCoords(e,t,n,r){const a=C8(t),s=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=e.map((e=>[s[0]*(e[0]-this.inputSize/2),s[1]*(e[1]-this.inputSize/2),s[2]*e[2]])),o=L8(n,[0,0]),l=i.map((e=>[...W8(e,o),e[2]])),u=function(e){const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],r=[-z8(t[0],n),-z8(t[1],n)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]}(r),d=[...E8(t),1],h=[z8(d,u[0]),z8(d,u[1])];return l.map((e=>[Math.trunc(e[0]+h[0]),Math.trunc(e[1]+h[1]),Math.trunc(e[2])]))}async estimateHands(e,t){let n,r=!1;const a=(t.hand.skipTime||0)>al()-V8,s=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&a&&s&&(n=await this.handDetector.predict(e,t),this.skipped=0),t.skipAllowed&&this.skipped++,n&&n.length>0&&(n.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...n],this.storedBoxes.length>0&&(r=!0));const i=[];for(let n=0;n<this.storedBoxes.length;n++){const a=this.storedBoxes[n];if(a)if(t.hand.landmarks){const s=t.hand.rotation?F8(a.palmLandmarks[0],a.palmLandmarks[2]):0,o=E8(a),l=[o[0]/e.shape[2],o[1]/e.shape[1]],u=t.hand.rotation&&o4.kernels.includes("rotatewithoffset")?_w.rotateWithOffset(e,s,0,l):e.clone(),d=L8(-s,o),h=r?this.getBoxForPalmLandmarks(a.palmLandmarks,d):a,p=_8(h,u,[this.inputSize,this.inputSize]),c=fy(p,x4.tf255);ey(p),ey(u);const[f,m]=this.handPoseModel.execute(c);V8=al(),ey(c);const g=(await f.data())[0];if(ey(f),g>=t.hand.minConfidence/4){const e=jy(m,[-1,3]),t=await e.array();ey(m),ey(e);const r=this.transformRawCoords(t,h,s,d),o=this.getBoxForHandLandmarks(r);this.storedBoxes[n]={...o,confidence:g};const l={landmarks:r,confidence:g,boxConfidence:a.confidence,fingerConfidence:g,box:{topLeft:o.startPoint,bottomRight:o.endPoint}};i.push(l)}else this.storedBoxes[n]=null;ey(m)}else{const e=M8($8(a),1.65),t={confidence:a.confidence,boxConfidence:a.confidence,fingerConfidence:0,box:{topLeft:e.startPoint,bottomRight:e.endPoint},landmarks:[]};i.push(t)}}return this.storedBoxes=this.storedBoxes.filter((e=>null!==e)),this.detectedHands=i.length,i.length>t.hand.maxDetected&&(i.length=t.hand.maxDetected),i}}(r,T9),[N9,T9]}var M9,$9=[null,null],F9=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],O9=[[0,0],[0,0]],z9=["hand","fist","pinch","point","face","tip","pinchtip"],D9=Number.MAX_SAFE_INTEGER,P9=0,L9=[0,0],W9={boxes:[],hands:[]},B9={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function U9(e,t,n){const r={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&$9[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){const a={},s=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];a.crop=_w.cropAndResize(e,[s],[0],[O9[1][0],O9[1][1]],"bilinear"),a.div=fy(a.crop,x4.tf255),[a.score,a.keypoints]=$9[1].execute(a.div,["Identity_1","Identity"]);const i=(await a.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(i))))/100;if(o>=(n.hand.minConfidence||0)){r.fingerScore=o,a.reshaped=jy(a.keypoints,[-1,3]);const e=(await a.reshaped.array()).map((e=>[e[0]/O9[1][1],e[1]/O9[1][0],e[2]||0])).map((e=>[e[0]*t.boxRaw[2],e[1]*t.boxRaw[3],e[2]||0]));r.keypoints=e.map((e=>[L9[0]*(e[0]+t.boxRaw[0]),L9[1]*(e[1]+t.boxRaw[1]),e[2]||0])),r.landmarks=I9(r.keypoints);for(const e of Object.keys(B9))r.annotations[e]=B9[e].map((e=>r.landmarks&&r.keypoints[e]?r.keypoints[e]:null))}Object.keys(a).forEach((e=>ey(a[e])))}return r}async function V9(e,t){var n,r;if(!($9[0]&&$9[1]&&(null==(n=$9[0])?void 0:n.inputs[0].shape)&&(null==(r=$9[1])?void 0:r.inputs[0].shape)))return[];L9=[e.shape[2]||0,e.shape[1]||0],D9++;const a=(t.hand.skipTime||0)>al()-P9,s=D9<(t.hand.skipFrames||0);return t.skipAllowed&&a&&s?W9.hands:new Promise((async n=>{const r=3*(t.hand.skipTime||0)>al()-P9,a=D9<3*(t.hand.skipFrames||0);t.skipAllowed&&W9.hands.length===t.hand.maxDetected||t.skipAllowed&&r&&a&&W9.hands.length>0?W9.hands=await Promise.all(W9.boxes.map((n=>U9(e,n,t)))):(W9.boxes=await async function(e,t){const n=[];if(!e||!$9[0])return n;const r={},a=(e.shape[2]||1)/(e.shape[1]||1),s=Math.min(8*Math.round((e.shape[1]||0)/8),512),i=8*Math.round(s*a/8);r.resize=_w.resizeBilinear(e,[s,i]),r.cast=vm(r.resize,"int32"),[r.rawScores,r.rawBoxes]=await $9[0].executeAsync(r.cast,F9),r.boxes=Hx(r.rawBoxes,[0,2]),r.scores=Hx(r.rawScores,[0]);const o=iv(r.scores,1);ey(o[4]),o.splice(4,1),r.filtered=qx(o,1),ey(o),r.max=mb(r.filtered,1),r.argmax=wy(r.filtered,1);let l=0;r.nms=await _w.nonMaxSuppressionAsync(r.boxes,r.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);const u=await r.nms.data(),d=await r.max.data(),h=await r.argmax.data();for(const e of Array.from(u)){const t=Zy(r.boxes,e,1),a=await t.data();ey(t);const s=[a[1],a[0],a[3]-a[1],a[2]-a[0]],i=v6(s,1.4),o=[Math.trunc(s[0]*L9[0]),Math.trunc(s[1]*L9[1]),Math.trunc(s[2]*L9[0]),Math.trunc(s[3]*L9[1])],u={id:l++,score:d[e],box:o,boxRaw:i,label:z9[h[e]]};n.push(u)}return Object.keys(r).forEach((e=>ey(r[e]))),n.sort(((e,t)=>t.score-e.score)),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}(e,t),P9=al(),W9.hands=await Promise.all(W9.boxes.map((n=>U9(e,n,t)))),D9=0);const s=[...W9.boxes];if(W9.boxes.length=0,t.cacheSensitivity>0)for(let n=0;n<W9.hands.length;n++){const r=x6(W9.hands[n].keypoints,L9);if(r.box[2]/(e.shape[2]||1)>.05&&r.box[3]/(e.shape[1]||1)>.05&&W9.hands[n].fingerScore&&W9.hands[n].fingerScore>(t.hand.minConfidence||0)){const e=v6(r.box,1.6),t=v6(r.boxRaw,1.6);W9.boxes.push({...s[n],box:e,boxRaw:t})}}for(let e=0;e<W9.hands.length;e++){const t=b6(W9.hands[e].keypoints,L9);W9.hands[e].box=t.box,W9.hands[e].boxRaw=t.boxRaw}n(W9.hands)}))}var G9=[],j9=Number.MAX_SAFE_INTEGER,H9=0,q9=0;async function K9(e,t,n,r){var a,s;if(!M9)return 0;const i=((null==(a=t.face.liveness)?void 0:a.skipTime)||0)>al()-q9,o=j9<((null==(s=t.face.liveness)?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&H9===r&&G9[n]?(j9++,G9[n]):(j9=0,new Promise((async t=>{const a=_w.resizeBilinear(e,[(null==M9?void 0:M9.inputs[0].shape)?M9.inputs[0].shape[2]:0,(null==M9?void 0:M9.inputs[0].shape)?M9.inputs[0].shape[1]:0],!1),s=null==M9?void 0:M9.execute(a),i=(await s.data())[0];G9[n]=Math.round(100*i)/100,H9=r,q9=al(),ey([a,s]),t(G9[n])})))}var X9={};Yo(X9,{connected:()=>tee,horizontal:()=>J9,kpt:()=>Y9,relative:()=>eee,vertical:()=>Q9});var Z9,Y9=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],J9=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],Q9=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],eee=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],tee={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},nee={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function ree(e){for(const t of J9){const n=e.keypoints.findIndex((e=>e.part===t[0])),r=e.keypoints.findIndex((e=>e.part===t[1]));if(e.keypoints[n]&&e.keypoints[r]&&e.keypoints[n].position[0]<e.keypoints[r].position[0]){const t=e.keypoints[n];e.keypoints[n]=e.keypoints[r],e.keypoints[r]=t}}for(const t of Q9){const n=e.keypoints.findIndex((e=>e&&e.part===t[0])),r=e.keypoints.findIndex((e=>e&&e.part===t[1]));e.keypoints[n]&&e.keypoints[r]&&e.keypoints[n].position[1]<e.keypoints[r].position[1]&&e.keypoints.splice(n,1)}for(const[t,n]of eee){const r=e.keypoints.findIndex((e=>e&&e.part===t[0])),a=e.keypoints.findIndex((e=>e&&e.part===t[1])),s=e.keypoints.findIndex((e=>e&&e.part===n[0])),i=e.keypoints.findIndex((e=>e&&e.part===n[1]));if(!e.keypoints[s]||!e.keypoints[i])continue;const o=e.keypoints[r]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0])]:[0,0],l=e.keypoints[a]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[a].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[a].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){const t=e.keypoints[r];e.keypoints[r]=e.keypoints[a],e.keypoints[a]=t}}}function aee(e){for(let t=0;t<e.length;t++)if(e[t]&&nee.keypoints[t]){const n=[Math.abs(e[t].positionRaw[0]-nee.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-nee.keypoints[t].positionRaw[1])];n[0]<.005&&n[1]<.005?e[t]=nee.keypoints[t]:nee.keypoints[t]=e[t]}else nee.keypoints[t]=e[t];return e}function see(e,t){e.keypoints=e.keypoints.filter((e=>e&&e.position));for(const n of e.keypoints)n.position=[n.position[0]*(t[0]+nee.padding[2][0]+nee.padding[2][1])/t[0]-nee.padding[2][0],n.position[1]*(t[1]+nee.padding[1][0]+nee.padding[1][1])/t[1]-nee.padding[1][0]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1]];const n=b6(e.keypoints.map((e=>e.position)),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var iee,oee=0,lee=Number.MAX_SAFE_INTEGER,uee={boxes:[],bodies:[],last:0};async function dee(e,t){if(!Z9||!(null==Z9?void 0:Z9.inputs[0].shape))return[];t.skipAllowed||(uee.boxes.length=0),lee++;const n=(t.body.skipTime||0)>al()-uee.last,r=lee<(t.body.skipFrames||0);return t.skipAllowed&&n&&r?uee.bodies:new Promise((async n=>{const r={};lee=0,r.input=function(e,t){const n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;nee.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=Yb(e,nee.padding),n.resize=_w.resizeBilinear(n.pad,[t,t]);const r=vm(n.resize,"int32");return Object.keys(n).forEach((e=>ey(n[e]))),r}(e,oee),r.res=null==Z9?void 0:Z9.execute(r.input),uee.last=al();const a=await r.res.array();uee.bodies=17===r.res.shape[2]?await async function(e,t,n){const r=e[0][0],a=[];let s=0;for(let e=0;e<r.length;e++)if(s=r[e][2],s>t.body.minConfidence){const t=[r[e][1],r[e][0]];a.push({score:Math.round(100*s)/100,part:Y9[e],positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}s=a.reduce(((e,t)=>t.score>e?t.score:e),0);const i=[],o=b6(a.map((e=>e.position)),[n.shape[2],n.shape[1]]),l={};for(const[e,n]of Object.entries(tee)){const r=[];for(let e=0;e<n.length-1;e++){const s=a.find((t=>t.part===n[e])),i=a.find((t=>t.part===n[e+1]));s&&i&&s.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&r.push([s.position,i.position])}l[e]=r}const u={id:0,score:s,box:o.box,boxRaw:o.boxRaw,keypoints:a,annotations:l};return ree(u),i.push(u),i}(a,t,e):await async function(e,t,n){const r=[];for(let a=0;a<e[0].length;a++){const s=e[0][a],i=Math.round(100*s[55])/100;if(i>t.body.minConfidence){const e=[];for(let r=0;r<17;r++){const a=s[3*r+2];if(a>t.body.minConfidence){const t=[s[3*r+1],s[3*r+0]];e.push({part:Y9[r],score:Math.round(100*a)/100,positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}}const o=b6(e.map((e=>e.position)),[n.shape[2],n.shape[1]]),l={};for(const[n,r]of Object.entries(tee)){const a=[];for(let n=0;n<r.length-1;n++){const s=e.find((e=>e.part===r[n])),i=e.find((e=>e.part===r[n+1]));s&&i&&s.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&a.push([s.position,i.position])}l[n]=a}const u={id:a,score:i,box:o.box,boxRaw:o.boxRaw,keypoints:[...e],annotations:l};ree(u),r.push(u)}}return r.sort(((e,t)=>t.score-e.score)),r.length>t.body.maxDetected&&(r.length=t.body.maxDetected),r}(a,t,e);for(const t of uee.bodies)see(t,[e.shape[2]||1,e.shape[1]||1]),aee(t.keypoints);Object.keys(r).forEach((e=>ey(r[e]))),n(uee.bodies)}))}var hee=[],pee=0,cee=Number.MAX_SAFE_INTEGER,fee=0,mee=2.5;async function gee(e,t){const n=(t.object.skipTime||0)>al()-pee,r=cee<(t.object.skipFrames||0);return t.skipAllowed&&n&&r&&hee.length>0?(cee++,hee):(cee=0,o4.kernels.includes("mod")&&o4.kernels.includes("sparsetodense")?new Promise((async n=>{const r=[e.shape[2]||0,e.shape[1]||0],a=_w.resizeBilinear(e,[fee,fee],!1),s=fy(a,x4.tf255),i=s.transpose([0,3,1,2]);let o;ey(s),ey(a),t.object.enabled&&(o=iee.execute(i)),pee=al(),ey(i);const l=await async function(e,t,n){let r=0,a=[];for(const s of[1,2,4])Qg((async()=>{const i=13*s,o=Hx(e.find((e=>e.shape[1]===i**2&&(e.shape[2]||0)===M6.length))),l=Hx(e.find((e=>e.shape[1]===i**2&&(e.shape[2]||0)<M6.length))),u=l.reshape([-1,4,l.shape[1]/4]),d=await u.argMax(2).array(),h=await o.array();for(let e=0;e<o.shape[0];e++)for(let l=0;l<o.shape[1];l++){const o=h[e][l];if(o>(n.object.minConfidence||0)&&61!==l){const n=(.5+Math.trunc(e%i))/i,u=(.5+Math.trunc(e/i))/i,h=d[e].map((e=>e*(i/s/fee))),[p,c]=[n-mee/s*h[0],u-mee/s*h[1]],[f,m]=[n+mee/s*h[2]-p,u+mee/s*h[3]-c];let g=[p,c,f,m];g=g.map((e=>Math.max(0,Math.min(e,1))));const y=[g[0]*t[0],g[1]*t[1],g[2]*t[0],g[3]*t[1]],A={id:r++,score:Math.round(100*o)/100,class:l+1,label:M6[l].label,box:y.map((e=>Math.trunc(e))),boxRaw:g};a.push(A)}}}));e.forEach((e=>ey(e)));const s=a.map((e=>[e.boxRaw[1],e.boxRaw[0],e.boxRaw[3],e.boxRaw[2]])),i=a.map((e=>e.score));let o=[];if(s&&s.length>0){const e=await _w.nonMaxSuppressionAsync(s,i,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);o=await e.data(),ey(e)}return a=a.filter(((e,t)=>o.includes(t))).sort(((e,t)=>t.score-e.score)),a}(o,r,t);hee=l,n(l)})):hee)}var yee,Aee=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],bee=Aee.length,xee=Aee.reduce(((e,t,n)=>(e[t]=n,e)),{}),vee=([["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((e=>{let[t,n]=e;return[xee[t],xee[n]]})),[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]]);function wee(e){const t=e.reduce(((e,t)=>{let{maxX:n,maxY:r,minX:a,minY:s}=e,{position:{x:i,y:o}}=t;return{maxX:Math.max(n,i),maxY:Math.max(r,o),minX:Math.min(a,i),minY:Math.min(s,o)}}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function kee(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+bee)}}function Iee(e,t,n){const{heatmapY:r,heatmapX:a,id:s}=e,{y:i,x:o}=kee(r,a,s,n);return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function See(e,t,n){return e<t?t:e>n?n:e}function Nee(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Tee,Cee=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],Eee=16;function _ee(e,t,n,r,a,s){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2;const o=t=>({y:s.get(t.y,t.x,e),x:s.get(t.y,t.x,s.shape[2]/2+e)}),l=(e,t,n)=>({y:See(Math.round(e.y/Eee),0,t-1),x:See(Math.round(e.x/Eee),0,n-1)}),[u,d]=r.shape,h=l(t.position,u,d),p=o(h),c=Nee(t.position,p);let f=c;for(let e=0;e<i;e++){const e=l(f,u,d),t=kee(e.y,e.x,n,a);f=Nee({x:e.x*Eee,y:e.y*Eee},{x:t.x,y:t.y})}const m=l(f,u,d),g=r.get(m.y,m.x,n);return{position:f,part:Aee[n],score:g}}function Ree(e,t,n,r,a){const s=vee.map((e=>{let[t,n]=e;return[xee[t],xee[n]]})),i=s.map((e=>{let[,t]=e;return t})),o=s.map((e=>{let[t]=e;return t})),l=t.shape[2],u=i.length,d=new Array(l),h=Iee(e.part,Eee,n);d[e.part.id]={score:e.score,part:Aee[e.part.id],position:h};for(let e=u-1;e>=0;--e){const r=i[e],s=o[e];d[r]&&!d[s]&&(d[s]=_ee(e,d[r],s,t,n,a))}for(let e=0;e<u;++e){const a=o[e],s=i[e];d[a]&&!d[s]&&(d[s]=_ee(e,d[a],s,t,n,r))}return d}function Mee(e,t,n,r,a){const[s,i]=a.shape;let o=!0;const l=Math.max(n-1,0),u=Math.min(n+1+1,s);for(let n=l;n<u;++n){const s=Math.max(r-1,0),l=Math.min(r+1+1,i);for(let r=s;r<l;++r)if(a.get(n,r,e)>t){o=!1;break}if(!o)break}return o}function $ee(e,t,n){let{x:r,y:a}=t;return e.some((e=>{let{keypoints:t}=e;var s;const i=null==(s=t[n])?void 0:s.position;return!!i&&function(e,t,n,r){const a=n-e,s=r-t;return a*a+s*s}(a,r,i.y,i.x)<=2500}))}function Fee(e,t){return t.reduce(((t,n,r)=>{let{position:a,score:s}=n;return $ee(e,a,r)||(t+=s),t}),0)/t.length}async function Oee(e,t){const n=Qg((()=>{if(!yee.inputs[0].shape)return[];const t=_w.resizeBilinear(e,[yee.inputs[0].shape[2],yee.inputs[0].shape[1]]),n=gb(fy(vm(t,"float32"),127.5),1),r=yee.execute(n,Cee).map((e=>Hx(e,[0])));return r[1]=Xy(r[1]),r})),r=await Promise.all(n.map((e=>e.buffer())));for(const e of n)ey(e);const a=await function(e,t,n,r,a,s){const i=[],o=function(e,t){const[n,r,a]=t.shape,s=new class{constructor(e,t){Jo(this,"priorityQueue"),Jo(this,"numberOfElements"),Jo(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){const e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return-1===this.numberOfElements}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){const n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n}}(n*r*a,(e=>{let{score:t}=e;return t}));for(let i=0;i<n;++i)for(let n=0;n<r;++n)for(let r=0;r<a;++r){const a=t.get(i,n,r);a<e||Mee(r,a,i,n,t)&&s.enqueue({score:a,part:{heatmapY:i,heatmapX:n,id:r}})}return s}(s,t);for(;i.length<a&&!o.empty();){const a=o.dequeue();if($ee(i,Iee(a.part,Eee,e),a.part.id))continue;let l=Ree(a,t,e,n,r);l=l.filter((e=>e.score>s));const u=Fee(i,l),d=wee(l);u>s&&i.push({keypoints:l,box:d,score:Math.round(100*u)/100})}return i}(r[0],r[1],r[2],r[3],t.body.maxDetected,t.body.minConfidence);return yee.inputs[0].shape?function(e,t,n){let[r,a]=t,[s,i]=n;const o=r/s,l=a/i;return e.map(((e,t)=>((e,t)=>({id:t,score:e.score,boxRaw:[e.box[0]/i,e.box[1]/s,e.box[2]/i,e.box[3]/s],box:[Math.trunc(e.box[0]*l),Math.trunc(e.box[1]*o),Math.trunc(e.box[2]*l),Math.trunc(e.box[3]*o)],keypoints:e.keypoints.map((e=>{let{score:t,part:n,position:r}=e;return{score:t,part:n,position:[Math.trunc(r.x*l),Math.trunc(r.y*o)],positionRaw:[r.x/s,r.y/s]}})),annotations:{}}))(e,t)))}(a,[e.shape[1],e.shape[2]],[yee.inputs[0].shape[2],yee.inputs[0].shape[1]]):[]}var zee=!1;async function Dee(e){return!Tee||o4.initial?Tee=await u4(e.segmentation.modelPath):e.debug&&rl("cached model:",Tee.modelUrl),Tee}var Pee=class{constructor(){Jo(this,"ssrnetage",null),Jo(this,"gear",null),Jo(this,"blazeposedetect",null),Jo(this,"blazepose",null),Jo(this,"centernet",null),Jo(this,"efficientpose",null),Jo(this,"mobilefacenet",null),Jo(this,"emotion",null),Jo(this,"facedetect",null),Jo(this,"faceiris",null),Jo(this,"facemesh",null),Jo(this,"faceres",null),Jo(this,"ssrnetgender",null),Jo(this,"handpose",null),Jo(this,"handskeleton",null),Jo(this,"handtrack",null),Jo(this,"liveness",null),Jo(this,"movenet",null),Jo(this,"nanodet",null),Jo(this,"posenet",null),Jo(this,"segmentation",null),Jo(this,"antispoof",null)}};function Lee(e){for(const t of Object.keys(e.models))e.models[t]=null}async function Wee(e){var t,n,r,a,s,i,o,l,u,d,h,p,c,f,m,g,y,A,b,x,v,w,k,I,S,N,T,C,E,_;o4.initial&&Lee(e),e.config.hand.enabled&&(!e.models.handpose&&(null==(n=null==(t=e.config.hand.detector)?void 0:t.modelPath)?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await R9(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&(null==(a=null==(r=e.config.hand.detector)?void 0:r.modelPath)?void 0:a.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await R9(e.config))),e.config.body.enabled&&!e.models.blazepose&&(null==(i=null==(s=e.config.body)?void 0:s.modelPath)?void 0:i.includes("blazepose"))&&(e.models.blazepose=async function(e){if(w6.landmarks=null,w6.landmarks)e.debug&&rl("cached model:",w6.landmarks.modelUrl);else{w6.landmarks=await u4(e.body.modelPath);const t=Object.values(w6.landmarks.modelSignature.inputs);k6.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,k6.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return w6.landmarks}(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=async function(e){if(w6.detector=null,!w6.detector&&e.body.detector&&e.body.detector.modelPath){w6.detector=await u4(e.body.detector.modelPath);const t=Object.values(w6.detector.modelSignature.inputs);k6.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,k6.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&w6.detector&&rl("cached model:",w6.detector.modelUrl);return await async function(){const e=[];let t=0;for(;t<5;){let n=0,r=t;for(;r<A6.length&&A6[r]===A6[t];)n+=2,r++;const a=A6[t],s=Math.ceil(224/a),i=Math.ceil(224/a);for(let t=0;t<s;++t)for(let r=0;r<i;++r)for(let a=0;a<n;++a)e.push({x:(r+.5)/i,y:(t+.5)/s});t=r}Yx(e.map((e=>e.x))),Yx(e.map((e=>e.y)))}(),w6.detector}(e.config)),e.config.body.enabled&&!e.models.efficientpose&&(null==(l=null==(o=e.config.body)?void 0:o.modelPath)?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=async function(e){return o4.initial&&(L6=null),L6?e.debug&&rl("cached model:",L6.modelUrl):L6=await u4(e.body.modelPath),L6}(e.config)),e.config.body.enabled&&!e.models.movenet&&(null==(d=null==(u=e.config.body)?void 0:u.modelPath)?void 0:d.includes("movenet"))&&(e.models.movenet=async function(e){return o4.initial&&(Z9=null),Z9?e.debug&&rl("cached model:",Z9.modelUrl):(Hee(["size"],e),Z9=await u4(e.body.modelPath)),(oee=Z9.inputs[0].shape?Z9.inputs[0].shape[2]:0)<64&&(oee=256),Z9}(e.config)),e.config.body.enabled&&!e.models.posenet&&(null==(p=null==(h=e.config.body)?void 0:h.modelPath)?void 0:p.includes("posenet"))&&(e.models.posenet=async function(e){return!yee||o4.initial?yee=await u4(e.body.modelPath):e.debug&&rl("cached model:",yee.modelUrl),yee}(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=async function(e){var t;return o4.initial&&(u6=null),u6?e.debug&&rl("cached model:",u6.modelUrl):u6=await u4(null==(t=e.face.detector)?void 0:t.modelPath),p6=u6.inputs[0].shape?u6.inputs[0].shape[2]:0,c6=Tx(p6,"int32"),h6=Jx(function(e){const t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let r=0;r<t.strides.length;r++){const a=t.strides[r],s=Math.floor((e+a-1)/a),i=Math.floor((e+a-1)/a),o=t.anchors[r];for(let e=0;e<s;e++){const t=a*(e+.5);for(let e=0;e<i;e++){const r=a*(e+.5);for(let e=0;e<o;e++)n.push([r,t])}}}return n}(p6)),u6}(e.config)),e.config.face.enabled&&(null==(c=e.config.face.antispoof)?void 0:c.enabled)&&!e.models.antispoof&&(e.models.antispoof=async function(e){var t;return o4.initial&&(C4=null),C4?e.debug&&rl("cached model:",C4.modelUrl):C4=await u4(null==(t=e.face.antispoof)?void 0:t.modelPath),C4}(e.config)),e.config.face.enabled&&(null==(f=e.config.face.liveness)?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=async function(e){var t;return o4.initial&&(M9=null),M9?e.debug&&rl("cached model:",M9.modelUrl):M9=await u4(null==(t=e.face.liveness)?void 0:t.modelPath),M9}(e.config)),e.config.face.enabled&&(null==(m=e.config.face.description)?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=async function(e){var t;return o4.initial&&(g8=null),g8?e.debug&&rl("cached model:",g8.modelUrl):g8=await u4(null==(t=e.face.description)?void 0:t.modelPath),g8}(e.config)),e.config.face.enabled&&(null==(g=e.config.face.emotion)?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=async function(e){var t;return o4.initial&&(q6=null),q6?e.debug&&rl("cached model:",q6.modelUrl):q6=await u4(null==(t=e.face.emotion)?void 0:t.modelPath),q6}(e.config)),e.config.face.enabled&&(null==(y=e.config.face.iris)?void 0:y.enabled)&&!e.models.faceiris&&(e.models.faceiris=async function(e){var t;return o4.initial&&(t8=null),t8?e.debug&&rl("cached model:",t8.modelUrl):t8=await u4(null==(t=e.face.iris)?void 0:t.modelPath),-1===(o8=t8.inputs[0].shape?t8.inputs[0].shape[2]:0)&&(o8=64),t8}(e.config)),e.config.face.enabled&&(null==(A=e.config.face.mesh)?void 0:A.enabled)&&!e.models.facemesh&&(e.models.facemesh=async function(e){var t;return o4.initial&&(A8=null),A8?e.debug&&rl("cached model:",A8.modelUrl):A8=await u4(null==(t=e.face.mesh)?void 0:t.modelPath),b8=A8.inputs[0].shape?A8.inputs[0].shape[2]:0,A8}(e.config)),e.config.face.enabled&&(null==(b=e.config.face.gear)?void 0:b.enabled)&&!e.models.gear&&(e.models.gear=async function(e){return o4.initial&&(d4=null),d4?e.debug&&rl("cached model:",d4.modelUrl):d4=await u4(e.face.gear),d4}(e.config)),e.config.face.enabled&&(null==(x=e.config.face.ssrnet)?void 0:x.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=async function(e){return o4.initial&&(b4=null),b4?e.debug&&rl("cached model:",b4.modelUrl):b4=await u4(e.face.ssrnet.modelPathAge),b4}(e.config)),e.config.face.enabled&&(null==(v=e.config.face.ssrnet)?void 0:v.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=async function(e){return o4.initial&&(w4=null),w4?e.debug&&rl("cached model:",w4.modelUrl):w4=await u4(e.face.ssrnet.modelPathGender),w4}(e.config)),e.config.face.enabled&&(null==(w=e.config.face.mobilefacenet)?void 0:w.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=async function(e){return o4.initial&&(K6=null),K6?e.debug&&rl("cached model:",K6.modelUrl):K6=await u4(e.face.mobilefacenet.modelPath),K6}(e.config)),e.config.hand.enabled&&!e.models.handtrack&&(null==(I=null==(k=e.config.hand.detector)?void 0:k.modelPath)?void 0:I.includes("handtrack"))&&(e.models.handtrack=async function(e){var t;if(o4.initial&&($9[0]=null),$9[0])e.debug&&rl("cached model:",$9[0].modelUrl);else{Hee(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),$9[0]=await u4(null==(t=e.hand.detector)?void 0:t.modelPath);const n=Object.values($9[0].modelSignature.inputs);O9[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,O9[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return $9[0]}(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&(null==(N=null==(S=e.config.hand.detector)?void 0:S.modelPath)?void 0:N.includes("handtrack"))&&(e.models.handskeleton=async function(e){var t;if(o4.initial&&($9[1]=null),$9[1])e.debug&&rl("cached model:",$9[1].modelUrl);else{$9[1]=await u4(null==(t=e.hand.skeleton)?void 0:t.modelPath);const n=Object.values($9[1].modelSignature.inputs);O9[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,O9[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return $9[1]}(e.config)),e.config.object.enabled&&!e.models.centernet&&(null==(C=null==(T=e.config.object)?void 0:T.modelPath)?void 0:C.includes("centernet"))&&(e.models.centernet=async function(e){if(o4.initial&&(R6=null),R6)e.debug&&rl("cached model:",R6.modelUrl);else{R6=await u4(e.object.modelPath);const t=Object.values(R6.modelSignature.inputs);$6=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return R6}(e.config)),e.config.object.enabled&&!e.models.nanodet&&(null==(_=null==(E=e.config.object)?void 0:E.modelPath)?void 0:_.includes("nanodet"))&&(e.models.nanodet=async function(e){if(!iee||o4.initial){iee=await u4(e.object.modelPath);const t=Object.values(iee.modelSignature.inputs);fee=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&rl("cached model:",iee.modelUrl);return iee}(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=Dee(e.config));for await(const t of Object.keys(e.models))e.models[t]&&void 0!==e.models[t]&&(e.models[t]=await e.models[t])}async function Bee(e){const t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(const n of Object.keys(e.models)){const r=e.models[n];if(!r)continue;const a=[],s=null==r?void 0:r.executor;if(s&&s.graph.nodes)for(const e of Object.values(s.graph.nodes)){const t=e.op.toLowerCase();a.includes(t)||a.push(t)}else!s&&e.config.debug&&rl("model signature not determined:",n);const i=[];for(const n of a)t.includes(n)||e.env.kernels.includes(n)||e.env.kernels.includes(n.replace("_",""))||e.env.kernels.includes(n.replace("native",""))||e.env.kernels.includes(n.replace("v2",""))||i.push(n);e.config.debug&&i.length>0&&rl("model validation failed:",n,i)}}var Uee={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};async function Vee(e){var t;if("humangl"===e.config.backend&&(!(Uee.name in Zg().registry)||Uee.gl&&Uee.gl.getParameter(Uee.gl.VERSION)||(rl("error: humangl backend invalid context"),Lee(e)),!oy(Uee.name))){try{Uee.canvas=await a4(100,100)}catch(e){return void rl("error: cannot create canvas:",e)}try{if(Uee.gl=null==(t=Uee.canvas)?void 0:t.getContext("webgl2",Uee.webGLattr),!Uee.gl.getParameter(Uee.gl.VERSION).includes("2.0"))return rl("override: using fallback webgl backend as webgl 2.0 is not detected"),void(e.config.backend="webgl");Uee.canvas&&(Uee.canvas.addEventListener("webglcontextlost",(async t=>{throw rl("error: humangl:",t.type),rl("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")})),Uee.canvas.addEventListener("webglcontextrestored",(e=>{rl("error: humangl context restored:",e)})),Uee.canvas.addEventListener("webglcontextcreationerror",(e=>{rl("error: humangl context create:",e)})))}catch(e){return void rl("error: cannot get WebGL context:",e)}try{rV(2,Uee.gl)}catch(e){return void rl("error: cannot set WebGL context:",e)}try{const e=new ij(Uee.gl);uy(Uee.name,(()=>new xH(e)),Uee.priority)}catch(e){return void rl("error: cannot register WebGL backend:",e)}try{nc("webgl").forEach((e=>{rc({...e,backendName:Uee.name})}))}catch(e){return void rl("error: cannot update WebGL backend registration:",e)}const n=dy().getGPGPUContext?dy().getGPGPUContext().gl:null;if(!n)return void rl("error: no current gl context:",n,Uee.gl);rl(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);try{Bu.set("WEBGL_VERSION",2)}catch(e){return void rl("error: cannot set WebGL backend flags:",e)}!function(){const e=Uee.gl;e&&(Uee.extensions=e.getSupportedExtensions())}(),rl("backend registered:",Uee.name)}}function Gee(){o4.kernels.includes("mod")||(rc({kernelName:"Mod",backendName:sy(),kernelFunc:e=>Qg((()=>gb(e.inputs.a,my(fy(e.inputs.a,e.inputs.b),e.inputs.b))))}),o4.kernels.push("mod")),o4.kernels.includes("floormod")||(rc({kernelName:"FloorMod",backendName:sy(),kernelFunc:e=>Qg((()=>cy(e.inputs.a/e.inputs.b)*e.inputs.b+Vb(e.inputs.a,e.inputs.b)))}),o4.kernels.push("floormod"))}async function jee(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(e.state="backend",t||o4.initial||e.config.backend&&e.config.backend.length>0&&sy()!==e.config.backend){const t=al();if(e.config.backend&&e.config.backend.length>0){if("undefined"==typeof window&&"undefined"!=typeof WorkerGlobalScope&&e.config.debug&&e.config.debug&&rl("running inside web worker"),o4.browser&&"tensorflow"===e.config.backend&&(e.config.debug&&rl("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),!o4.node||"webgl"!==e.config.backend&&"humangl"!==e.config.backend||(e.config.debug&&rl(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),o4.browser&&"webgpu"===e.config.backend)if("undefined"==typeof navigator||void 0===navigator.gpu)rl("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{const t=await navigator.gpu.requestAdapter();e.config.debug&&rl("enumerated webgpu adapter:",t)}"humangl"===e.config.backend&&await Vee(e);const t=Object.keys(Zg().registryFactory);if(e.config.debug&&rl("available backends:",t),t.includes(e.config.backend)||(rl(`error: backend ${e.config.backend} not found in registry`),e.config.backend=o4.node?"tensorflow":"webgl",e.config.debug&&rl(`override: setting backend ${e.config.backend}`)),e.config.debug&&rl("setting backend:",e.config.backend),"wasm"===e.config.backend){if(e.config.debug&&rl("wasm path:",e.config.wasmPath),void 0===(null==ll?void 0:ll.setWasmPaths))throw new Error("backend error: attempting to use wasm backend but wasm path is not set");await B7(e.config.wasmPath,e.config.wasmPlatformFetch);const t=await Lu().getAsync("WASM_HAS_SIMD_SUPPORT"),n=await Lu().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&rl(`wasm execution: ${t?"SIMD":"no SIMD"} ${n?"multithreaded":"singlethreaded"}`),e.config.debug&&!t&&rl("warning: wasm simd support is not enabled")}try{await ry(e.config.backend),await ay(),v4()}catch(t){return rl("error: cannot set backend:",e.config.backend,t),!1}}if("humangl"===sy()&&(Bu.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Bu.set("WEBGL_CPU_FORWARD",!0),Bu.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Bu.set("CPU_HANDOFF_SIZE_THRESHOLD",256),void 0!==e.config.deallocate&&e.config.deallocate&&(rl("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Bu.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),dy().getGPGPUContext)){const t=await dy().getGPGPUContext().gl;e.config.debug&&rl(`gl version:${t.getParameter(t.VERSION)} renderer:${t.getParameter(t.RENDERER)}`)}sy(),jg(),await ay(),e.performance.initBackend=Math.trunc(al()-t),e.config.backend=sy(),await o4.updateBackend(),Gee()}return!0}function Hee(e,t){for(const n of e)rc({kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&rl("kernelFunc",n,t.backend)}});o4.kernels=nc(sy()).map((e=>e.kernelName.toLowerCase()))}Yo({},{all:()=>ute,body:()=>ate,canvas:()=>lte,face:()=>rte,gesture:()=>nte,hand:()=>ste,object:()=>ite,options:()=>qee,person:()=>ote});var qee={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},Kee=0,Xee=e=>{if(e)if(e.getContext){const t=e.getContext("2d");if(t)return t;rl("draw error: cannot get canvas context")}else rl("draw error: canvas context not defined");else rl("draw error: invalid canvas");return null},Zee=e=>Math.round(180*e/Math.PI);function Yee(e,t,n,r,a){r=r||0,e.fillStyle=a.useDepth&&r?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:a.color,e.beginPath(),e.arc(t,n,a.pointSize,0,2*Math.PI),e.fill()}function Jee(e,t,n,r,a,s){if(e.beginPath(),e.lineWidth=s.lineWidth,s.useCurves){const s=(t+t+r)/2,i=(n+n+a)/2;e.ellipse(s,i,r/2,a/2,0,0,2*Math.PI)}else e.moveTo(t+s.roundRect,n),e.lineTo(t+r-s.roundRect,n),e.quadraticCurveTo(t+r,n,t+r,n+s.roundRect),e.lineTo(t+r,n+a-s.roundRect),e.quadraticCurveTo(t+r,n+a,t+r-s.roundRect,n+a),e.lineTo(t+s.roundRect,n+a),e.quadraticCurveTo(t,n+a,t,n+a-s.roundRect),e.lineTo(t,n+s.roundRect),e.quadraticCurveTo(t,n,t+s.roundRect,n),e.closePath();e.stroke()}function Qee(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(const r of t){const t=r[2]||0;e.strokeStyle=n.useDepth&&0!==t?`rgba(${127.5+2*t}, ${127.5-2*t}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&0!==t?`rgba(${127.5+2*t}, ${127.5-2*t}, 255, 0.3)`:n.color,e.lineTo(r[0],Math.round(r[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function ete(e,t,n){if(!(t.length<2))if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2)Qee(e,t,n);else{e.moveTo(t[0][0],t[0][1]);for(let n=0;n<t.length-2;n++){const r=(t[n][0]+t[n+1][0])/2,a=(t[n][1]+t[n+1][1])/2;e.quadraticCurveTo(t[n][0],t[n][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function tte(e,t,n){let r,a,s,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),a=i*Math.cos(r)+n[0],s=i*Math.sin(r)+n[1],e.moveTo(a,s),r+=1/3*(2*Math.PI),a=i*Math.cos(r)+n[0],s=i*Math.sin(r)+n[1],e.lineTo(a,s),r+=1/3*(2*Math.PI),a=i*Math.cos(r)+n[0],s=i*Math.sin(r)+n[1],e.lineTo(a,s),e.closePath(),e.stroke(),e.fill()}async function nte(e,t,n){const r=il(qee,n);if(t&&e&&r.drawGestures){const n=Xee(e);if(!n)return;n.font=r.font,n.fillStyle=r.color;let a=1;for(let e=0;e<t.length;e++){let s=[],i=[];if([s,i]=Object.entries(t[e]),i.length>1&&i[1].length>0){const e=s[1]>0?`#${s[1]}`:"",t=`${s[0]} ${e}: ${i[1]}`;r.shadowColor&&""!==r.shadowColor&&(n.fillStyle=r.shadowColor,n.fillText(t,8,2+a*r.lineHeight)),n.fillStyle=r.labelColor,n.fillText(t,6,0+a*r.lineHeight),a+=1}}}}async function rte(e,t,n){var r,a,s,i,o;const l=il(qee,n);if(!t||!e)return;const u=Xee(e);if(u)for(const e of t){if(u.font=l.font,u.strokeStyle=l.color,u.fillStyle=l.color,l.drawBoxes&&Jee(u,e.box[0],e.box[1],e.box[2],e.box[3],l),l.drawLabels){const t=[];if(t.push(`face: ${Math.trunc(100*e.score)}%`),e.genderScore&&t.push(`${e.gender||""} ${Math.trunc(100*e.genderScore)}%`),e.age&&t.push(`age: ${e.age||""}`),e.iris&&t.push(`distance: ${e.iris}`),e.real&&t.push(`real: ${Math.trunc(100*e.real)}%`),e.live&&t.push(`live: ${Math.trunc(100*e.live)}%`),e.emotion&&e.emotion.length>0){const n=e.emotion.map((e=>`${Math.trunc(100*e.score)}% ${e.emotion}`));n.length>3&&(n.length=3),t.push(n.join(" "))}e.rotation&&e.rotation.angle&&e.rotation.gaze&&(e.rotation.angle.roll&&t.push(`roll: ${Zee(e.rotation.angle.roll)}° yaw:${Zee(e.rotation.angle.yaw)}° pitch:${Zee(e.rotation.angle.pitch)}°`),e.rotation.gaze.bearing&&t.push(`gaze: ${Zee(e.rotation.gaze.bearing)}°`)),0===t.length&&t.push("face"),u.fillStyle=l.color;for(let n=t.length-1;n>=0;n--){const r=Math.max(e.box[0],0),a=n*l.lineHeight+e.box[1];l.shadowColor&&""!==l.shadowColor&&(u.fillStyle=l.shadowColor,u.fillText(t[n],r+5,a+16)),u.fillStyle=l.labelColor,u.fillText(t[n],r+4,a+15)}}if(u.lineWidth=2,e.mesh&&e.mesh.length>0){if(l.drawPoints)for(const t of e.mesh)Yee(u,t[0],t[1],t[2],l);if(l.drawPolygons){if(e.mesh.length>450)for(let t=0;t<j4.length/3;t++)Qee(u,[j4[3*t+0],j4[3*t+1],j4[3*t+2]].map((t=>e.mesh[t])),l);if(e.annotations&&e.annotations.leftEyeIris&&e.annotations.leftEyeIris[0]){u.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,u.beginPath();const t=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,n=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;u.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],t,n,0,0,2*Math.PI),u.stroke(),l.fillPolygons&&(u.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,u.fill())}if(e.annotations&&e.annotations.rightEyeIris&&e.annotations.rightEyeIris[0]){u.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,u.beginPath();const t=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,n=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;u.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],t,n,0,0,2*Math.PI),u.stroke(),l.fillPolygons&&(u.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,u.fill())}if(l.drawGaze&&(null==(r=e.rotation)?void 0:r.angle)&&"undefined"!=typeof Path2D){u.strokeStyle="pink";const t=e.box[0]+e.box[2]/2-e.box[3]*Zee(e.rotation.angle.yaw)/90,n=e.box[1]+e.box[3]/2+e.box[2]*Zee(e.rotation.angle.pitch)/90,r=new Path2D(`\n            M ${e.box[0]+e.box[2]/2} ${e.box[1]}\n            C\n              ${t} ${e.box[1]},\n              ${t} ${e.box[1]+e.box[3]},\n              ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}\n          `),a=new Path2D(`\n            M ${e.box[0]} ${e.box[1]+e.box[3]/2}\n            C \n              ${e.box[0]} ${n},\n              ${e.box[0]+e.box[2]} ${n},\n              ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}\n          `);u.stroke(a),u.stroke(r)}if(l.drawGaze&&(null==(s=null==(a=e.rotation)?void 0:a.gaze)?void 0:s.strength)&&(null==(o=null==(i=e.rotation)?void 0:i.gaze)?void 0:o.bearing)&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){u.strokeStyle="pink",u.fillStyle="pink";const t=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];tte(u,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[t[0],t[1]],4);const n=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];tte(u,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[n[0],n[1]],4)}}}}}async function ate(e,t,n){var r;const a=il(qee,n);if(!t||!e)return;const s=Xee(e);if(s){s.lineJoin="round";for(let e=0;e<t.length;e++){if(s.strokeStyle=a.color,s.fillStyle=a.color,s.lineWidth=a.lineWidth,s.font=a.font,a.drawBoxes&&t[e].box&&4===(null==(r=t[e].box)?void 0:r.length)&&(Jee(s,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],a),a.drawLabels&&(a.shadowColor&&""!==a.shadowColor&&(s.fillStyle=a.shadowColor,s.fillText(`body ${100*t[e].score}%`,t[e].box[0]+3,1+t[e].box[1]+a.lineHeight,t[e].box[2])),s.fillStyle=a.labelColor,s.fillText(`body ${100*t[e].score}%`,t[e].box[0]+2,0+t[e].box[1]+a.lineHeight,t[e].box[2]))),a.drawPoints&&t[e].keypoints)for(let n=0;n<t[e].keypoints.length;n++)t[e].keypoints[n].score&&0!==t[e].keypoints[n].score&&(s.fillStyle=a.useDepth&&t[e].keypoints[n].position[2]?`rgba(${127.5+2*(t[e].keypoints[n].position[2]||0)}, ${127.5-2*(t[e].keypoints[n].position[2]||0)}, 255, 0.5)`:a.color,Yee(s,t[e].keypoints[n].position[0],t[e].keypoints[n].position[1],0,a));if(a.drawLabels&&t[e].keypoints){s.font=a.font;for(const n of t[e].keypoints)n.score&&0!==n.score&&(s.fillStyle=a.useDepth&&n.position[2]?`rgba(${127.5+2*n.position[2]}, ${127.5-2*n.position[2]}, 255, 0.5)`:a.color,s.fillText(`${n.part} ${Math.trunc(100*n.score)}%`,n.position[0]+4,n.position[1]+4))}if(a.drawPolygons&&t[e].keypoints&&t[e].annotations)for(const n of Object.values(t[e].annotations))for(const e of n)ete(s,e,a)}}}async function ste(e,t,n){const r=il(qee,n);if(!t||!e)return;const a=Xee(e);if(a){a.lineJoin="round",a.font=r.font;for(const e of t){if(r.drawBoxes&&(a.strokeStyle=r.color,a.fillStyle=r.color,Jee(a,e.box[0],e.box[1],e.box[2],e.box[3],r),r.drawLabels&&(r.shadowColor&&""!==r.shadowColor&&(a.fillStyle=r.shadowColor,a.fillText(`hand:${Math.trunc(100*e.score)}%`,e.box[0]+3,1+e.box[1]+r.lineHeight,e.box[2])),a.fillStyle=r.labelColor,a.fillText(`hand:${Math.trunc(100*e.score)}%`,e.box[0]+2,0+e.box[1]+r.lineHeight,e.box[2])),a.stroke()),r.drawPoints&&e.keypoints&&e.keypoints.length>0)for(const t of e.keypoints)a.fillStyle=r.useDepth?`rgba(${127.5+2*(t[2]||0)}, ${127.5-2*(t[2]||0)}, 255, 0.5)`:r.color,Yee(a,t[0],t[1],0,r);if(r.drawLabels&&e.annotations){const t=(e,t)=>{if(!e||0===e.length||!e[0])return;const n=e[e.length-1][2]||0;a.fillStyle=r.useDepth?`rgba(${127.5+2*n}, ${127.5-2*n}, 255, 0.5)`:r.color,a.fillText(t,e[e.length-1][0]+4,e[e.length-1][1]+4)};a.font=r.font,t(e.annotations.index,"index"),t(e.annotations.middle,"middle"),t(e.annotations.ring,"ring"),t(e.annotations.pinky,"pinky"),t(e.annotations.thumb,"thumb"),t(e.annotations.palm,"palm")}if(r.drawPolygons&&e.annotations){const t=e=>{if(e&&0!==e.length&&e[0])for(let t=0;t<e.length;t++){a.beginPath();const n=e[t][2]||0;a.strokeStyle=r.useDepth?`rgba(${127.5+t*n}, ${127.5-t*n}, 255, 0.5)`:r.color,a.moveTo(e[t>0?t-1:0][0],e[t>0?t-1:0][1]),a.lineTo(e[t][0],e[t][1]),a.stroke()}};a.lineWidth=r.lineWidth,t(e.annotations.index),t(e.annotations.middle),t(e.annotations.ring),t(e.annotations.pinky),t(e.annotations.thumb)}}}}async function ite(e,t,n){const r=il(qee,n);if(!t||!e)return;const a=Xee(e);if(a){a.lineJoin="round",a.font=r.font;for(const e of t)if(r.drawBoxes){if(a.strokeStyle=r.color,a.fillStyle=r.color,Jee(a,e.box[0],e.box[1],e.box[2],e.box[3],r),r.drawLabels){const t=`${e.label} ${Math.round(100*e.score)}%`;r.shadowColor&&""!==r.shadowColor&&(a.fillStyle=r.shadowColor,a.fillText(t,e.box[0]+3,1+e.box[1]+r.lineHeight,e.box[2])),a.fillStyle=r.labelColor,a.fillText(t,e.box[0]+2,0+e.box[1]+r.lineHeight,e.box[2])}a.stroke()}}}async function ote(e,t,n){const r=il(qee,n);if(!t||!e)return;const a=Xee(e);if(a){a.lineJoin="round",a.font=r.font;for(let e=0;e<t.length;e++)if(r.drawBoxes){if(a.strokeStyle=r.color,a.fillStyle=r.color,Jee(a,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],r),r.drawLabels){const n=`person #${e}`;r.shadowColor&&""!==r.shadowColor&&(a.fillStyle=r.shadowColor,a.fillText(n,t[e].box[0]+3,1+t[e].box[1]+r.lineHeight,t[e].box[2])),a.fillStyle=r.labelColor,a.fillText(n,t[e].box[0]+2,0+t[e].box[1]+r.lineHeight,t[e].box[2])}a.stroke()}}}async function lte(e,t){if(!e||!t)return;const n=Xee(t);n&&n.drawImage(e,0,0)}async function ute(e,t,n){if(!(t&&t.performance&&t&&e))return null;const r=al(),a=il(qee,n),s=Promise.all([rte(e,t.face,a),ate(e,t.body,a),ste(e,t.hand,a),ite(e,t.object,a),nte(e,t.gesture,a)]);return Kee=o4.perfadd?Kee+Math.round(al()-r):Math.round(al()-r),t.performance.draw=Kee,s}var dte=.1;function hte(e,t,n){let r=!1,a=n.length-1;for(let s=0;s<n.length;a=s++)n[s].y>t!=n[a].y>t&&e<(n[a].x-n[s].x)*(t-n[s].y)/(n[a].y-n[s].y)+n[s].x&&(r=!r);return r}async function pte(e){if(!e.tensor)return e.tensor;if(!e.mesh||e.mesh.length<100)return e.tensor;const t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,r=await e.tensor.buffer();let a=[];for(const t of W4.silhouette)a.push({x:(e.mesh[t][0]-e.box[0])/e.box[2],y:(e.mesh[t][1]-e.box[1])/e.box[3]});a=a.map((e=>({x:e.x>.5?e.x+dte:e.x-dte,y:e.y>.5?e.y+dte:e.y-dte})));for(let e=0;e<t;e++)for(let s=0;s<n;s++)hte(e/t,s/t,a)||(r.set(.5*r.get(0,s,e,0),0,s,e,0),r.set(.5*r.get(0,s,e,1),0,s,e,1),r.set(.5*r.get(0,s,e,2),0,s,e,2));const s=r.toTensor();return ey(r),s}var cte=(e,t)=>{const n=e=>{const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return e[0]/=t,e[1]/=t,e[2]/=t,e},r=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]],a=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],s=e.meshRaw;if(!s||s.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};const i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,o=[s[10],s[152],s[234],s[454]].map((e=>[e[0]*t[0]/i,e[1]*t[1]/i,e[2]])),l=n(r(o[1],o[0]));let u=n(r(o[3],o[2]));const d=n(a(u,l));u=a(l,d);const h=[u[0],u[1],u[2],l[0],l[1],l[2],d[0],d[1],d[2]],p=(e=>{const[t,n,r,a,s,i,o,l,u]=e;let d,h,p;return a<1?a>-1?(p=Math.asin(a),h=Math.atan2(-o,t),d=Math.atan2(-i,s)):(p=-Math.PI/2,h=-Math.atan2(l,u),d=0):(p=Math.PI/2,h=Math.atan2(l,u),d=0),isNaN(d)&&(d=0),isNaN(h)&&(h=0),isNaN(p)&&(p=0),{pitch:2*-d,yaw:2*-h,roll:2*-p}})(h),c=478===s.length?(e=>{if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};const t=[0,-.1],n=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),r=n?e.mesh[473]:e.mesh[468],a=n?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],s=n?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],i=[(a[0]-r[0])/s[0]-t[0],1*(r[1]-a[1])/s[1]-t[1]];let o=Math.sqrt(i[0]*i[0]+i[1]*i[1]);var l,u;return o=Math.min(o,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(l=[0,0],u=i,(Math.atan2(l[1]-u[1],l[0]-u[0])+Math.PI/2)%Math.PI),strength:o}})(e):{bearing:0,strength:0};return{angle:p,matrix:h,gaze:c}},fte=async(e,t)=>{var n,r,a,s,i,o,l,u,d,h,p,c,f,m,g,y,A,b,x,v,w,k;let I,S,N,T,C,E,_,R,M=al();const $=[];e.state="run:face";const F=await async function(e,t){var n,r,a,s,i,o,l,u,d;const h=((null==(n=t.face.detector)?void 0:n.skipTime)||0)>al()-y8.timestamp,p=y8.skipped<((null==(r=t.face.detector)?void 0:r.skipFrames)||0);t.skipAllowed&&h&&p&&0!==y8.boxes.length?y8.skipped++:(y8.boxes=await async function(e,t){var n,r,a,s;if(!e||e.isDisposedInternal||4!==e.shape.length||e.shape[1]<1||e.shape[2]<1)return[];const i={};i.resized=_w.resizeBilinear(e,[p6,p6]),i.div=fy(i.resized,x4.tf127),i.normalized=gb(i.div,x4.tf05);const o=null==u6?void 0:u6.execute(i.normalized);if(Array.isArray(o)){const e=o.sort(((e,t)=>e.size-t.size));i.concat384=Ky([e[0],e[2]],2),i.concat512=Ky([e[1],e[3]],2),i.concat=Ky([i.concat512,i.concat384],1),i.batch=Hx(i.concat,0)}else i.batch=Hx(o);ey(o),i.boxes=function(e){const t={};t.boxStarts=Zy(e,[0,1],[-1,2]),t.centers=py(t.boxStarts,h6),t.boxSizes=Zy(e,[0,3],[-1,2]),t.boxSizesNormalized=fy(t.boxSizes,c6),t.centersNormalized=fy(t.centers,c6),t.halfBoxSize=fy(t.boxSizesNormalized,x4.tf2),t.starts=gb(t.centersNormalized,t.halfBoxSize),t.ends=py(t.centersNormalized,t.halfBoxSize),t.startNormalized=my(t.starts,c6),t.endNormalized=my(t.ends,c6);const n=hA([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach((e=>ey(t[e]))),n}(i.batch),i.logits=Zy(i.batch,[0,0],[-1,1]),i.sigmoid=Xy(i.logits),i.scores=Hx(i.sigmoid),i.nms=await _w.nonMaxSuppressionAsync(i.boxes,i.scores,(null==(n=t.face.detector)?void 0:n.maxDetected)||0,(null==(r=t.face.detector)?void 0:r.iouThreshold)||0,(null==(a=t.face.detector)?void 0:a.minConfidence)||0);const l=await i.nms.array(),u=[],d=await i.scores.data();for(let n=0;n<l.length;n++){const r=d[l[n]];if(r>((null==(s=t.face.detector)?void 0:s.minConfidence)||0)){const a={};a.bbox=Zy(i.boxes,[l[n],0],[1,-1]),a.slice=Zy(i.batch,[l[n],5],[1,-1]),a.squeeze=Hx(a.slice),a.landmarks=jy(a.squeeze,[6,-1]);const s=await a.bbox.data(),o=(h={startPoint:[s[0],s[1]],endPoint:[s[2],s[3]],landmarks:await a.landmarks.array(),confidence:r},p=[(e.shape[2]||0)/p6,(e.shape[1]||0)/p6],{startPoint:[h.startPoint[0]*p[0],h.startPoint[1]*p[1]],endPoint:[h.endPoint[0]*p[0],h.endPoint[1]*p[1]],landmarks:h.landmarks,confidence:h.confidence}),d=Y4(o,t.face.scale||1.2),c=J4(d);u.push(c),Object.keys(a).forEach((e=>ey(a[e])))}}var h,p;return Object.keys(i).forEach((e=>ey(i[e]))),u}(e,t),y8.timestamp=al(),y8.skipped=0);const c=[],f=[];let m=0;for(let n=0;n<y8.boxes.length;n++){const r=y8.boxes[n];let h,p=0;const g={id:m++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([p,h,g.tensor]=l6(null==(a=t.face.detector)?void 0:a.rotation,r,e,(null==(s=t.face.mesh)?void 0:s.enabled)?b8:f6()),null==(i=null==t?void 0:t.filter)?void 0:i.equalization){const e=await Y7(g.tensor);ey(g.tensor),g.tensor=e}if(g.boxScore=Math.round(100*r.confidence)/100,null==(o=t.face.mesh)?void 0:o.enabled)if(A8){const[n,a,s]=A8.execute(g.tensor),i=await a.data();g.faceScore=Math.round(100*i[0])/100;const o=jy(s,[-1,3]);let d=await o.array();if(ey([s,o,a,n]),g.faceScore<((null==(l=t.face.detector)?void 0:l.minConfidence)||1))r.confidence=g.faceScore;else{(null==(u=t.face.iris)?void 0:u.enabled)&&(d=await m8(d,g.tensor,t,b8)),g.mesh=o6(d,r,p,h,b8),g.meshRaw=g.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/b8]));for(const e of Object.keys(W4))g.annotations[e]=W4[e].map((e=>g.mesh[e]));g.score=g.faceScore;const n={...d6(g.mesh,r),confidence:r.confidence,landmarks:r.landmarks};g.box=K4(n,e),g.boxRaw=X4(n,e),f.push(n)}}else t.debug&&rl("face mesh detection requested, but model is not loaded");else{g.box=K4(r,e),g.boxRaw=X4(r,e),g.score=g.boxScore,g.mesh=r.landmarks.map((e=>[(r.startPoint[0]+r.endPoint[0])/2+(r.endPoint[0]+r.startPoint[0])*e[0]/f6(),(r.startPoint[1]+r.endPoint[1])/2+(r.endPoint[1]+r.startPoint[1])*e[1]/f6()])),g.meshRaw=g.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/b8]));for(const e of Object.keys(U4))g.annotations[e]=[g.mesh[U4[e]]]}g.score>((null==(d=t.face.detector)?void 0:d.minConfidence)||1)?c.push(g):ey(g.tensor)}return y8.boxes=f,c}(t,e.config);if(e.performance.face=o4.perfadd?(e.performance.face||0)+Math.trunc(al()-M):Math.trunc(al()-M),!t.shape||4!==t.shape.length)return[];if(!F)return[];for(let O=0;O<F.length;O++){if(e.analyze("Get Face"),!F[O].tensor||F[O].tensor.isDisposedInternal){rl("Face object is disposed:",F[O].tensor);continue}if(null==(n=e.config.face.detector)?void 0:n.mask){const e=await pte(F[O]);ey(F[O].tensor),F[O].tensor=e}const z=F[O].mesh&&F[O].mesh.length>200?cte(F[O],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?T=(null==(r=e.config.face.emotion)?void 0:r.enabled)?e8(F[O].tensor||Cf([]),e.config,O,F.length):[]:(e.state="run:emotion",M=al(),T=(null==(a=e.config.face.emotion)?void 0:a.enabled)?await e8(F[O].tensor||Cf([]),e.config,O,F.length):[],e.performance.emotion=o4.perfadd?(e.performance.emotion||0)+Math.trunc(al()-M):Math.trunc(al()-M)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?E=(null==(s=e.config.face.antispoof)?void 0:s.enabled)?L4(F[O].tensor||Cf([]),e.config,O,F.length):0:(e.state="run:antispoof",M=al(),E=(null==(i=e.config.face.antispoof)?void 0:i.enabled)?await L4(F[O].tensor||Cf([]),e.config,O,F.length):0,e.performance.antispoof=o4.perfadd?(e.performance.antispoof||0)+Math.trunc(al()-M):Math.trunc(al()-M)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?_=(null==(o=e.config.face.liveness)?void 0:o.enabled)?K9(F[O].tensor||Cf([]),e.config,O,F.length):0:(e.state="run:liveness",M=al(),_=(null==(l=e.config.face.liveness)?void 0:l.enabled)?await K9(F[O].tensor||Cf([]),e.config,O,F.length):0,e.performance.liveness=o4.perfadd?(e.performance.antispoof||0)+Math.trunc(al()-M):Math.trunc(al()-M)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?S=(null==(u=e.config.face.gear)?void 0:u.enabled)?A4(F[O].tensor||Cf([]),e.config,O,F.length):null:(e.state="run:gear",M=al(),S=(null==(d=e.config.face.gear)?void 0:d.enabled)?await A4(F[O].tensor||Cf([]),e.config,O,F.length):null,e.performance.gear=Math.trunc(al()-M)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(I=(null==(h=e.config.face.ssrnet)?void 0:h.enabled)?T4(F[O].tensor||Cf([]),e.config,O,F.length):null,N=(null==(p=e.config.face.ssrnet)?void 0:p.enabled)?F4(F[O].tensor||Cf([]),e.config,O,F.length):null):(e.state="run:ssrnet",M=al(),I=(null==(c=e.config.face.ssrnet)?void 0:c.enabled)?await T4(F[O].tensor||Cf([]),e.config,O,F.length):null,N=(null==(f=e.config.face.ssrnet)?void 0:f.enabled)?await F4(F[O].tensor||Cf([]),e.config,O,F.length):null,e.performance.ssrnet=Math.trunc(al()-M)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?C=(null==(m=e.config.face.mobilefacenet)?void 0:m.enabled)?i8(F[O].tensor||Cf([]),e.config,O,F.length):null:(e.state="run:mobilefacenet",M=al(),C=(null==(g=e.config.face.mobilefacenet)?void 0:g.enabled)?await i8(F[O].tensor||Cf([]),e.config,O,F.length):null,e.performance.mobilefacenet=Math.trunc(al()-M)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?R=(null==(y=e.config.face.description)?void 0:y.enabled)?T8(F[O].tensor||Cf([]),e.config,O,F.length):null:(e.state="run:description",M=al(),R=(null==(A=e.config.face.description)?void 0:A.enabled)?await T8(F[O].tensor||Cf([]),e.config,O,F.length):null,e.performance.description=o4.perfadd?(e.performance.description||0)+Math.trunc(al()-M):Math.trunc(al()-M)),e.analyze("End Description:"),e.config.async&&([I,N,T,C,R,S,E,_]=await Promise.all([I,N,T,C,R,S,E,_])),e.analyze("Finish Face:"),(null==(b=e.config.face.ssrnet)?void 0:b.enabled)&&I&&N&&(R={...R,age:I.age,gender:N.gender,genderScore:N.genderScore}),(null==(x=e.config.face.gear)?void 0:x.enabled)&&S&&(R={...R,age:S.age,gender:S.gender,genderScore:S.genderScore,race:S.race}),(null==(v=e.config.face.mobilefacenet)?void 0:v.enabled)&&C&&(R.descriptor=C),null==(w=e.config.face.iris)||w.enabled;const D=F[O].annotations&&F[O].annotations.leftEyeIris&&F[O].annotations.leftEyeIris[0]&&F[O].annotations.rightEyeIris&&F[O].annotations.rightEyeIris[0]&&F[O].annotations.leftEyeIris.length>0&&F[O].annotations.rightEyeIris.length>0&&null!==F[O].annotations.leftEyeIris[0]&&null!==F[O].annotations.rightEyeIris[0]?Math.max(Math.abs(F[O].annotations.leftEyeIris[3][0]-F[O].annotations.leftEyeIris[1][0]),Math.abs(F[O].annotations.rightEyeIris[4][1]-F[O].annotations.rightEyeIris[2][1]))/t.shape[2]:0,P=(null==(k=e.config.face.detector)?void 0:k.return)?Hx(F[O].tensor):null;ey(F[O].tensor),F[O].tensor&&delete F[O].tensor;const L={...F[O],id:O};(null==R?void 0:R.age)&&(L.age=R.age),(null==R?void 0:R.gender)&&(L.gender=R.gender),(null==R?void 0:R.genderScore)&&(L.genderScore=null==R?void 0:R.genderScore),(null==R?void 0:R.descriptor)&&(L.embedding=null==R?void 0:R.descriptor),(null==R?void 0:R.race)&&(L.race=null==R?void 0:R.race),T&&(L.emotion=T),E&&(L.real=E),_&&(L.live=_),D&&0!==D&&(L.iris=Math.trunc(500/D/11.7)/100),z&&(L.rotation=z),P&&(L.tensor=P),$.push(L),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),$},mte=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const r=e[n].keypoints.find((e=>"leftWrist"===e.part)),a=e[n].keypoints.find((e=>"rightWrist"===e.part)),s=e[n].keypoints.find((e=>"nose"===e.part));s&&r&&a&&r.position[1]<s.position[1]&&a.position[1]<s.position[1]?t.push({body:n,gesture:"i give up"}):s&&r&&r.position[1]<s.position[1]?t.push({body:n,gesture:"raise left hand"}):s&&a&&a.position[1]<s.position[1]&&t.push({body:n,gesture:"raise right hand"});const i=e[n].keypoints.find((e=>"leftShoulder"===e.part)),o=e[n].keypoints.find((e=>"rightShoulder"===e.part));i&&o&&Math.abs(i.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:n,gesture:"leaning "+(i.position[1]>o.position[1]?"left":"right")})}return t},gte=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){const r=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),a=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(r/a)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:"facing "+(r<0?"left":"right")}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});const s=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));s>10&&t.push({face:n,gesture:`mouth ${Math.trunc(s)}% open`});const i=e[n].mesh[152][2]||0;Math.abs(i)>10&&t.push({face:n,gesture:"head "+(i<0?"up":"down")})}return t},yte=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){if(!(e[n].annotations&&e[n].annotations.leftEyeIris&&e[n].annotations.leftEyeIris[0]&&e[n].annotations.rightEyeIris&&e[n].annotations.rightEyeIris[0]))continue;const r=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],a=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],s=Math.abs(r*a),i=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],o=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(i*o);let u=!1;Math.abs(s-l)/Math.max(s,l)<.25&&(u=!0,t.push({iris:n,gesture:"facing center"}));const d=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],h=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(d>.06||h>.06)&&(u=!1),d>h?d>.05&&t.push({iris:n,gesture:"looking right"}):h>.05&&t.push({iris:n,gesture:"looking left"});const p=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],c=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(c<.01||p<.01||c>.022||p>.022)&&(u=!1),(c<.01||p<.01)&&t.push({iris:n,gesture:"looking down"}),(c>.022||p>.022)&&t.push({iris:n,gesture:"looking up"}),u&&t.push({iris:n,gesture:"looking center"})}return t},Ate=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const r=[];if(e[n].annotations)for(const[t,a]of Object.entries(e[n].annotations))"palmBase"!==t&&Array.isArray(a)&&a[0]&&r.push({name:t.toLowerCase(),position:a[0]});if(r&&r.length>0){const e=r.reduce(((e,t)=>(e.position[2]||0)<(t.position[2]||0)?e:t));t.push({hand:n,gesture:`${e.name} forward`});const a=r.reduce(((e,t)=>e.position[1]<t.position[1]?e:t));t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){const r=S9(e[n].keypoints);for(const e of r)t.push({hand:n,gesture:e.name})}}return t},bte={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},xte=0;function vte(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{order:2,multiplier:25},r=0;for(let a=0;a<e.length;a++){const s=n.order&&2!==n.order?Math.abs(e[a]-t[a]):e[a]-t[a];r+=n.order&&2!==n.order?s**n.order:s*s}return(n.multiplier||20)*r}Yo({},{distance:()=>vte,match:()=>Ite,similarity:()=>kte});var wte=(e,t,n,r)=>{if(0===e)return 1;const a=(1-(2===t?Math.sqrt(e):e**(1/t))/100-n)/(r-n);return Math.max(Math.min(a,1),0)};function kte(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{order:2,multiplier:25,min:.2,max:.8};const r=vte(e,t,n);return wte(r,n.order||2,n.min||0,n.max||1)}function Ite(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{order:2,multiplier:25,threshold:0,min:.2,max:.8};if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||0===t.length||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let r=Number.MAX_SAFE_INTEGER,a=-1;for(let s=0;s<t.length;s++){const i=vte(e,t[s],n);if(i<r&&(r=i,a=s),r<(n.threshold||0))break}const s=wte(r,n.order||2,n.min||0,n.max||1);return{index:a,distance:r,similarity:s}}var Ste,Nte,Tte,Cte,Ete="\n/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA\nAAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu\nbmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob\nIxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo\nKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E\nAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE\nEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH\nSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1\ntre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB\nAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET\nIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla\nY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG\nx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML\nXp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF\nPUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/\nAJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z\n5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9\nzZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO\ntHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6\n8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W\nwA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk\nEtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6\nGhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT\nA7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep\nrBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb\nLCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ\nih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K\nKAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l\npBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x\nUqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4\nHaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr\nxL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS\nNO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD\n1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX\n+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3\nGBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K\nq4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0\nnhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm\nuic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH\nArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV\nwF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8\n87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P\nFQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD\nYNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv\nJmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ\nQmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el\nUJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681\nly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly\nCK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc\nUDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF\n63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x\nXY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2\nZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk\nXb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK\ncBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef\neNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4\n/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5\nrl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru\n/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A\nzviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO\nI4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1\njfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ\nGRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG\ncZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb\nWmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis\nZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH\nckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi\nlbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO\nxuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK\nJtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX\nPaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c\nW0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t\nC6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk\n4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn\nxHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW\nvHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi\nqr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV\nhamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F\nj4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6\nwqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm\noy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ\nk7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg\nnQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP\n1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1\nH1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ\n1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx\nzSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt\nfFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp\nOxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj\nVtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy\nrFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe\n5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D\nd/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69\nMlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ\nFbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ\nMA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP\nByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn\n0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU\nyOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is\npNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz\nTSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu\nuCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem\ngGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk\nHvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy\ns9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu\nm6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb\n0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz\n9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN\nDNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n\nR6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk\nnmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu\n6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd\n9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb\nSms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S\nMSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz\nFEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8\nVSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx\nY0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ\nmupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+\n5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh\n05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd\nua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ\n5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR\nMqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8\n1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4\nB9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag\nBc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA\n3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn\n3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx\n1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU\ntzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6\nf3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA\nbvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ\nzyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup\n6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM\n350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0\n/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a\nYfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ\nagBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO\nmAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl\nmOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR\nnqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo\nEPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt\n4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ\nScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p\niMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj\nPQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l\nc6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1\n8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3\nylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY\neuPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==",_te="\n/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk\nJyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF\nRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA\nAhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA\nAQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA\nAAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA\nAhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj\n+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt\nFh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR\nPLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl\nmZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp\n+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa\nzhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D\nh1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2\nex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67\nd4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y\nRv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP\nLd3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC\nvy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi\neSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/\nMx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+\nr3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO\nO0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s\ntfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN\nTmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc\n0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj\nq83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w\n+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s\nd8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t\ncI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4\nYibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe\nbzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi\nKxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6\nrNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ\n9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf\nJvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V\nbxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q\nVbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM\nlorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/\n/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme\nE4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv\nfauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6\njkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN\n+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk\nRvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK\ncGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop\nyW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn\nE8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX\n12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW\niI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS\nRWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf\n0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx\nDS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL\nG8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK\nxC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ\na9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4\nZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6\ntvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+\nfJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE\nerk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR\nMd5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9\nlcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD\nj8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV\n5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt\nCu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/\n+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c\nvUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p\njrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0\n77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP\nSel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8\n5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe\nY0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R\nHwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV\nrWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU\nz7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8\nto6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X\ny8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt\nstcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/\nw9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT\nDpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l\nXV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t\nydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS\n34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX\ne09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn\n26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf\n3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q\n6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P\nNbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO\nyZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN\n3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8\n2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h\ndqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx\nkr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t\nDHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb\neFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc\n1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka\nc258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE\nxEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu\ns5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK\n0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9\ndM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt\nPXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T\nMd/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T\nadq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b\nSVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt\npdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm\nvfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr\nEejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N\nvwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh\nZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I\ntkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW\nd43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe\nN4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218\n8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG\nPNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY\nV1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw\nw18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT\nEx5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1\naxqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/\ntDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I\nmbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe\nXRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1\nizjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2\ncrFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4\nOadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2\nr8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx\nzc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz\n+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v\nMevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu\nryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095\nYZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE\n9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8\nmNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O\nuSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O\nfft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6\nOlty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT\nuTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3\n6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1\nMb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF\nfeH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq\nxVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v\ned7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ\nmtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz\nmWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP\nB39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0\n5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1\nmkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt\nmxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO\n1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq\nZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q\nky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7\nROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK\nGEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i\ntMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T\n+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+\nO8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO\nesd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es\nvPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz\nXV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1\n+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY\n36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL\nq555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY\n3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz\np7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr\n1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV\nxUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt\npCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS\nfP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH\nmMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z\n1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+\nn3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d\nMRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df\nzXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl\nJ2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs\nzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH\nDpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ\ndHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR\ntER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j\nadmFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC\nb2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X\nqdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh\nydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O\n8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L\nT7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0\nZa1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr\nvNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer\nrWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL\noNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq\nj/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh\nodZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8\n8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1\nlNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+\noza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL\nknU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK\nEtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N\nmtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm\n9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N\nIpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W\nMYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2\n+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql\no+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37\nO99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE\nTE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1\nL7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4\nizsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt\n1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb\nV5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum\nL37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12\nCvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE\nebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo\nGvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu\nL8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh\n5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3\n6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9\nXO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM\nfeKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj\nSZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF\nXaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr\n79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h\nyeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT\nOC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223\n2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt\nadohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y\ncnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX\nDpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p\n7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso\nS24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l\nbPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe\nvVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG\nH6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7\nx3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz\n5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY\nq+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn\nvLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2\nIjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK\nz0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ\nYYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON\nZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW\nekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf\ncjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c\nbiuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO\nCkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw\ny1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi\nQXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E\nbL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r\ntv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t\nLRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP\nRqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm\ns7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el\nXX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1\nvK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq\nqrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v\nVYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0\nZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q\nmT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm\n6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG\nf63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo\ndPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22\ngtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M\nMoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb\nc2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX\n6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn\n1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK\nfOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ\nEqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u\n7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT\nqPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa\nS2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf\nLp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU\nIiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O\n8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c\nvU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx\n5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V\nKTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm\n2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu\nj8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB\nTTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9\nRUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL\nCWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA\nAAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8\ncTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj\nqKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF\n0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK\nZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK\n66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu\nXT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9\nXOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN\nM2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv\nVrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK\n7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI\n3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m\nXY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m\n1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A\nJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC\nEgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9\n8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL\nOrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H\nM+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA\nTsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8\nelpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp\nBjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS\nCRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r\nrcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY\njbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW\nUsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB\nKUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb\nSz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL\n+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v\nT471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM\nsfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj\nFontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl\n5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q\n7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv\n6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa\n0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/\nAOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM\nd8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5\n6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP\nbFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu\nLJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy\nwt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX\n0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK\n3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn\nKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0\nvobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t\nzya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps\nuOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi\nFdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2\nO3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z\naK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz\n0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb\nT/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l\nqMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t\ntrJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn\nmvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa\neq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe\nPwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of\nTdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O\n1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG\nf/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi\n0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY\n5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc\nV2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L\n/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM\nt/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd\nVknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD\nKLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R\nfwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3\nVxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ\nDJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ\n3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv\nx7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD\nweqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI\n6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew\nPnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk\nj3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm\nOqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/\nAKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez\nN9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ\n92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp\n+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue\nV9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv\navHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0\nvQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP\n8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt\nn1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw\nnUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3\n7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P\n0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U\nx8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG\n0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L\nfaQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ\nQKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA\nBAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A\ntLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv\n9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr\njn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm\nb7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB\nACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk\ndEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1\nrMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+\nx+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA\nAAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr\nYvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4\n5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V\nkK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg\nBIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA\nAAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g\nWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx\nOEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2\nH/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF\n+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V\nh6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA\nEgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu\nZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml\nHMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl\nn0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN\n3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi\n/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00\n+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC\nUACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2\nM2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp\n5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn\nN1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS\nOjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL\n/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo\nstLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3\nGyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA\nAAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4\nqmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy\nWEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a\nfJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI\nrTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2\nrz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc\n3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3\nTur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA\nAAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx\nskA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F\no7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx\nNO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h\n2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te\npSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7\ncvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7\nmZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA\nAAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA\nhGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J\nqx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI\nXRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy\nRHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX\nqNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX\nkaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P\nya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC\nExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA\nlAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA\nAAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o\nb9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP\ny6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae\nkzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu\n9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ\nk7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1\n8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp\nDXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh\nnyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ\nAAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA\nAAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO\nyvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5\nPM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii\nIpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r\nO3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE\nyTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX\n6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2\nJgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS\nAAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA\nAAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx\nWa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI\n6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5\nK2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7\nVv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id\nPW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ\n2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4\neF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7\npiVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR\nACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ\nJQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i\nUiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61\nrZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq\nZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2\nf0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO\nIjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts\nbAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA\nAAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA\nBAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2\nSbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T\nlBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/\n2Q==";Ste=new WeakMap,Nte=new WeakMap,Tte=new WeakMap,Cte=new WeakMap;const Rte={happy:"happy",neutral:"neutral",surprise:"surprised",angry:"angry",fear:"fearful",disgust:"disgusted",sad:"sad"},Mte="face-box",$te="face-expressions";var Fte=function(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{l(r.next(e))}catch(e){s(e)}}function o(e){try{l(r.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((r=r.apply(e,t||[])).next())}))};class Ote{constructor({baseUrl:e,detectionTypes:t}){this.detectionInProgress=!1,this.config={backend:"humangl",async:!0,warmup:"none",cacheModels:!0,cacheSensitivity:0,debug:!1,deallocate:!0,filter:{enabled:!1},face:{enabled:!1,detector:{enabled:!1,rotation:!1,modelPath:"blazeface-front.json",maxDetected:20},mesh:{enabled:!1},iris:{enabled:!1},emotion:{enabled:!1,modelPath:"emotion.json"},description:{enabled:!1}},hand:{enabled:!1},gesture:{enabled:!1},body:{enabled:!1},segmentation:{enabled:!1}},this.faceDetectionTypes=t,this.baseUrl=e,this.init()}init(){var e,t;return Fte(this,void 0,void 0,(function*(){if(!this.human){this.config.modelBasePath=this.baseUrl,self.OffscreenCanvas||(this.config.backend="wasm",this.config.wasmPath=this.baseUrl,function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(jo)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)Vo=e;else{Go=e;const t=Bo.filter((e=>null==Go[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Ho=t}(this.baseUrl)),this.faceDetectionTypes.length>0&&this.config.face&&(this.config.face.enabled=!0),this.faceDetectionTypes.includes(Mte)&&(null===(e=this.config.face)||void 0===e?void 0:e.detector)&&(this.config.face.detector.enabled=!0),this.faceDetectionTypes.includes($te)&&(null===(t=this.config.face)||void 0===t?void 0:t.emotion)&&(this.config.face.emotion.enabled=!0);const n=new class{constructor(e){var t,n=this;Jo(this,"version"),Jo(this,"config"),Jo(this,"result"),Jo(this,"state"),Jo(this,"process"),Jo(this,"tf"),Jo(this,"env"),Jo(this,"draw"),Jo(this,"models"),Jo(this,"events"),Jo(this,"faceTriangulation"),Jo(this,"faceUVMap"),Jo(this,"performance"),tl(this,Ste,void 0),tl(this,Nte,void 0),tl(this,Tte,void 0),Jo(this,"gl"),Jo(this,"analyze",(function(){if(!el(n,Nte))return;const e=n.tf.engine().state.numTensors,t=el(n,Ste);nl(n,Ste,e);const r=e-t;for(var a=arguments.length,s=new Array(a),i=0;i<a;i++)s[i]=arguments[i];0!==r&&rl(...s,r)})),tl(this,Cte,(e=>{if(!el(this,Tte))return null;if(!e)return"input is not defined";if(this.env.node&&!(e instanceof Uc))return"input must be a tensor";try{this.tf.getBackend()}catch(e){return"backend not loaded"}return null})),Jo(this,"similarity",kte),Jo(this,"distance",vte),Jo(this,"match",Ite),Jo(this,"emit",(e=>{var t;this.events&&this.events.dispatchEvent&&(null==(t=this.events)||t.dispatchEvent(new Event(e)))})),this.env=o4,ol.wasmPath=K7["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${Gg}/dist/`,ol.modelBasePath=o4.browser?"../models/":"file://models/",ol.backend=o4.browser?"humangl":"tensorflow",this.version=h4,Object.defineProperty(this,"version",{value:h4}),this.config=JSON.parse(JSON.stringify(ol)),Object.seal(this.config),this.config.cacheModels="undefined"!=typeof indexedDB,e&&(this.config=il(this.config,e)),t=this.config,l4.cacheModels=t.cacheModels,l4.verbose=t.debug,l4.modelBasePath=t.modelBasePath,this.tf=ll,this.state="idle",nl(this,Ste,0),nl(this,Nte,!1),nl(this,Tte,!1),this.performance={},this.events="undefined"!=typeof EventTarget?new EventTarget:void 0,this.models=new Pee,this.draw={options:qee,canvas:(e,t)=>lte(e,t),face:(e,t,n)=>rte(e,t,n),body:(e,t,n)=>ate(e,t,n),hand:(e,t,n)=>ste(e,t,n),gesture:(e,t,n)=>nte(e,t,n),object:(e,t,n)=>ite(e,t,n),person:(e,t,n)=>ote(e,t,n),all:(e,t,n)=>ute(e,t,n)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=x8,this.faceUVMap=v8,this.gl=Uee,this.emit("create")}reset(){const e=this.config.backend;this.config=JSON.parse(JSON.stringify(ol)),this.config.backend=e}validate(e){return sl(ol,e||this.config)}now(){return al()}image(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return i4(e,this.config,t)}async segmentation(e,t){return async function(e,t,n){var r,a;if(zee)return{data:[],canvas:null,alpha:null};zee=!0,Tee||await Dee(n);const s=await i4(e,n),i=(null==(r=s.tensor)?void 0:r.shape[2])||0,o=(null==(a=s.tensor)?void 0:a.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};const l={};l.resize=_w.resizeBilinear(s.tensor,[Tee.inputs[0].shape?Tee.inputs[0].shape[1]:0,Tee.inputs[0].shape?Tee.inputs[0].shape[2]:0],!1),ey(s.tensor),l.norm=fy(l.resize,x4.tf255),l.res=Tee.execute(l.norm),l.squeeze=Hx(l.res,0),2===l.squeeze.shape[2]?(l.softmax=Px(l.squeeze),[l.bg,l.fg]=iv(l.softmax,2),l.expand=LA(l.fg,2),l.pad=LA(l.expand,0),l.crop=_w.cropAndResize(l.pad,[[0,0,.5,.5]],[0],[i,o]),l.data=Hx(l.crop,0)):l.data=_w.resizeBilinear(l.squeeze,[o,i]);const u=Array.from(await l.data.data());if(o4.node&&!o4.Canvas&&"undefined"==typeof ImageData)return n.debug&&rl("canvas support missing"),Object.keys(l).forEach((e=>ey(l[e]))),{data:u,canvas:null,alpha:null};const d=a4(i,o);Ym&&await Ym.toPixels(l.data,d);const h=d.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(h.filter=`blur(${n.segmentation.blur}px)`);const p=h.getImageData(0,0,i,o),c=a4(i,o),f=c.getContext("2d");s.canvas&&f.drawImage(s.canvas,0,0),f.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(f.filter=`blur(${n.segmentation.blur}px)`),f.drawImage(d,0,0),f.globalCompositeOperation="source-over",f.filter="none";const m=f.getImageData(0,0,i,o);for(let e=0;e<i*o;e++)m.data[4*e+3]=p.data[4*e+0];f.putImageData(m,0,0);let g=null;if(t&&c){g=a4(i,o);const e=await i4(t,n);ey(e.tensor);const r=g.getContext("2d");r.drawImage(e.canvas,0,0,g.width,g.height),r.drawImage(c,0,0)}return Object.keys(l).forEach((e=>ey(l[e]))),zee=!1,{data:u,canvas:c,alpha:d}}(e,t,this.config)}enhance(e){return N8(e)}compare(e,t){return async function(e,t,n){const r={};if(!t||!n||4!==t.shape.length||t.shape.length!==n.shape.length)return e.debug||rl("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(1!==t.shape[0]||1!==n.shape[0]||3!==t.shape[3]||3!==n.shape[3])return e.debug||rl("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;r.input1=wm(t),r.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?_w.resizeBilinear(n,[t.shape[1],t.shape[2]]):wm(n),r.diff=gb(r.input1,r.input2),r.squared=my(r.diff,r.diff),r.sum=yb(r.squared);const a=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return ey([r.input1,r.input2,r.diff,r.squared,r.sum]),a}(this.config,e,t)}async init(){await jee(this,!0),await this.tf.ready()}async load(e){this.state="load";const t=al(),n=Object.values(this.models).filter((e=>e)).length;e&&(this.config=il(this.config,e)),this.env.initial&&(this.config.debug&&rl(`version: ${this.version}`),this.config.debug&&rl(`tfjs version: ${this.tf.version["tfjs-core"]}`),await jee(this)||rl("error: backend check failed"),await ay(),this.env.browser&&(this.config.debug&&rl("configuration:",this.config),this.config.debug&&rl("environment:",this.env),this.config.debug&&rl("tf flags:",this.tf.ENV.flags))),await Wee(this),this.env.initial&&this.config.debug&&rl("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter((e=>e)).length!==n&&(await Bee(this),this.emit("load"));const r=Math.trunc(al()-t);r>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+r:r)}next(){return function(e,t){var n,r,a,s,i,o,l,u,d,h,p,c,f,m,g,y,A,b,x,v,w,k,I,S,N,T,C;const E=al();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};const _=Date.now()-e.timestamp,R=_<1e3?8-Math.log(_+1):1;if(e.canvas&&(bte.canvas=e.canvas),e.error&&(bte.error=e.error),bte.body&&e.body.length===bte.body.length)for(let l=0;l<e.body.length;l++){const u=e.body[l].box.map(((e,t)=>((R-1)*bte.body[l].box[t]+e)/R)),d=e.body[l].boxRaw.map(((e,t)=>((R-1)*bte.body[l].boxRaw[t]+e)/R)),h=e.body[l].keypoints.map(((e,t)=>{var n,r,a,s,i,o,u,d,h;return{score:e.score,part:e.part,position:[bte.body[l].keypoints[t]?((R-1)*(bte.body[l].keypoints[t].position[0]||0)+(e.position[0]||0))/R:e.position[0],bte.body[l].keypoints[t]?((R-1)*(bte.body[l].keypoints[t].position[1]||0)+(e.position[1]||0))/R:e.position[1],bte.body[l].keypoints[t]?((R-1)*(bte.body[l].keypoints[t].position[2]||0)+(e.position[2]||0))/R:e.position[2]],positionRaw:[bte.body[l].keypoints[t]?((R-1)*(bte.body[l].keypoints[t].positionRaw[0]||0)+(e.positionRaw[0]||0))/R:e.positionRaw[0],bte.body[l].keypoints[t]?((R-1)*(bte.body[l].keypoints[t].positionRaw[1]||0)+(e.positionRaw[1]||0))/R:e.positionRaw[1],bte.body[l].keypoints[t]?((R-1)*(bte.body[l].keypoints[t].positionRaw[2]||0)+(e.positionRaw[2]||0))/R:e.positionRaw[2]],distance:[bte.body[l].keypoints[t]?((R-1)*((null==(n=bte.body[l].keypoints[t].distance)?void 0:n[0])||0)+((null==(r=e.distance)?void 0:r[0])||0))/R:null==(a=e.distance)?void 0:a[0],bte.body[l].keypoints[t]?((R-1)*((null==(s=bte.body[l].keypoints[t].distance)?void 0:s[1])||0)+((null==(i=e.distance)?void 0:i[1])||0))/R:null==(o=e.distance)?void 0:o[1],bte.body[l].keypoints[t]?((R-1)*((null==(u=bte.body[l].keypoints[t].distance)?void 0:u[2])||0)+((null==(d=e.distance)?void 0:d[2])||0))/R:null==(h=e.distance)?void 0:h[2]]}})),p={};let c={connected:{}};(null==(r=null==(n=t.body)?void 0:n.modelPath)?void 0:r.includes("efficientpose"))?c=P6:(null==(s=null==(a=t.body)?void 0:a.modelPath)?void 0:s.includes("blazepose"))?c=m6:(null==(o=null==(i=t.body)?void 0:i.modelPath)?void 0:o.includes("movenet"))&&(c=X9);for(const[e,t]of Object.entries(c.connected)){const n=[];for(let e=0;e<t.length-1;e++){const r=h.find((n=>n.part===t[e])),a=h.find((n=>n.part===t[e+1]));r&&a&&n.push([r.position,a.position])}p[e]=n}bte.body[l]={...e.body[l],box:u,boxRaw:d,keypoints:h,annotations:p}}else bte.body=JSON.parse(JSON.stringify(e.body));if(bte.hand&&e.hand.length===bte.hand.length)for(let t=0;t<e.hand.length;t++){const n=e.hand[t].box.map(((e,n)=>((R-1)*bte.hand[t].box[n]+e)/R)),r=e.hand[t].boxRaw.map(((e,n)=>((R-1)*bte.hand[t].boxRaw[n]+e)/R));bte.hand[t].keypoints.length!==e.hand[t].keypoints.length&&(bte.hand[t].keypoints=e.hand[t].keypoints);const a=e.hand[t].keypoints&&e.hand[t].keypoints.length>0?e.hand[t].keypoints.map(((e,n)=>e.map(((e,r)=>((R-1)*(bte.hand[t].keypoints[n][r]||1)+(e||0))/R)))):[];let s={};if(Object.keys(bte.hand[t].annotations).length!==Object.keys(e.hand[t].annotations).length)bte.hand[t].annotations=e.hand[t].annotations,s=bte.hand[t].annotations;else if(e.hand[t].annotations)for(const n of Object.keys(e.hand[t].annotations))s[n]=e.hand[t].annotations[n]&&e.hand[t].annotations[n][0]?e.hand[t].annotations[n].map(((e,r)=>e.map(((e,a)=>((R-1)*bte.hand[t].annotations[n][r][a]+e)/R)))):null;bte.hand[t]={...e.hand[t],box:n,boxRaw:r,keypoints:a,annotations:s}}else bte.hand=JSON.parse(JSON.stringify(e.hand));if(bte.face&&e.face.length===bte.face.length)for(let t=0;t<e.face.length;t++){const n=e.face[t].box.map(((e,n)=>((R-1)*bte.face[t].box[n]+e)/R)),r=e.face[t].boxRaw.map(((e,n)=>((R-1)*bte.face[t].boxRaw[n]+e)/R));if(e.face[t].rotation){const a={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};a.matrix=null==(l=e.face[t].rotation)?void 0:l.matrix,a.angle={roll:((R-1)*((null==(d=null==(u=bte.face[t].rotation)?void 0:u.angle)?void 0:d.roll)||0)+((null==(p=null==(h=e.face[t].rotation)?void 0:h.angle)?void 0:p.roll)||0))/R,yaw:((R-1)*((null==(f=null==(c=bte.face[t].rotation)?void 0:c.angle)?void 0:f.yaw)||0)+((null==(g=null==(m=e.face[t].rotation)?void 0:m.angle)?void 0:g.yaw)||0))/R,pitch:((R-1)*((null==(A=null==(y=bte.face[t].rotation)?void 0:y.angle)?void 0:A.pitch)||0)+((null==(x=null==(b=e.face[t].rotation)?void 0:b.angle)?void 0:x.pitch)||0))/R},a.gaze={bearing:((R-1)*((null==(w=null==(v=bte.face[t].rotation)?void 0:v.gaze)?void 0:w.bearing)||0)+((null==(I=null==(k=e.face[t].rotation)?void 0:k.gaze)?void 0:I.bearing)||0))/R,strength:((R-1)*((null==(N=null==(S=bte.face[t].rotation)?void 0:S.gaze)?void 0:N.strength)||0)+((null==(C=null==(T=e.face[t].rotation)?void 0:T.gaze)?void 0:C.strength)||0))/R},bte.face[t]={...e.face[t],rotation:a,box:n,boxRaw:r}}bte.face[t]={...e.face[t],box:n,boxRaw:r}}else bte.face=JSON.parse(JSON.stringify(e.face));if(bte.object&&e.object.length===bte.object.length)for(let t=0;t<e.object.length;t++){const n=e.object[t].box.map(((e,n)=>((R-1)*bte.object[t].box[n]+e)/R)),r=e.object[t].boxRaw.map(((e,n)=>((R-1)*bte.object[t].boxRaw[n]+e)/R));bte.object[t]={...e.object[t],box:n,boxRaw:r}}else bte.object=JSON.parse(JSON.stringify(e.object));if(e.persons){const t=e.persons;if(bte.persons&&t.length===bte.persons.length)for(let e=0;e<t.length;e++)bte.persons[e].box=t[e].box.map(((t,n)=>((R-1)*bte.persons[e].box[n]+t)/R));else bte.persons=JSON.parse(JSON.stringify(t))}e.gesture&&(bte.gesture=e.gesture);const M=al();return xte=o4.perfadd?xte+Math.round(M-E):Math.round(M-E),e.performance&&(bte.performance={...e.performance,interpolate:xte}),bte}(arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.result,this.config)}async warmup(e){const t=al(),n=await async function(e,t){const n=al();return e.state="warmup",t&&(e.config=il(e.config,t)),e.config.warmup&&0!==e.config.warmup.length&&"none"!==e.config.warmup?new Promise((async t=>{const r=await async function(e){let t;return t="function"==typeof createImageBitmap?await async function(e){const t=function(e){return fetch(`data:${arguments.length>1&&void 0!==arguments[1]?arguments[1]:"application/octet-stream"};base64,${e}`).then((e=>e.blob()))};let n,r;switch(e.config.warmup){case"face":n=await t(Ete);break;case"body":case"full":n=await t(_te);break;default:n=null}if(n){const t=await createImageBitmap(n);r=await e.detect(t,e.config),t.close()}return r}(e):"undefined"!=typeof Image||void 0!==o4.Canvas?await async function(e){return new Promise((t=>{let n,r;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+Ete;break;case"full":case"body":n="data:image/jpeg;base64,"+_te;break;default:n=null}if("undefined"!=typeof Image)r=new Image;else{if(!o4.Image)return;r=new o4.Image}r.onload=async()=>{const n=a4(r.naturalWidth,r.naturalHeight);if(n){const a=n.getContext("2d");a&&a.drawImage(r,0,0);const s=await e.image(n),i=await e.detect(s.tensor,e.config);t(i)}else rl("Warmup: Canvas not found"),t(void 0)},n?r.src=n:t(void 0)}))}(e):await async function(e){const t=e=>Buffer.from(e,"base64");let n,r;if(n="face"===e.config.warmup?t(Ete):t(_te),"node"in ll){const t=(void 0).decodeJpeg(n),a=t.expandDims(0);e.tf.dispose(t),r=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&rl("Warmup tfjs-node not loaded");return r}(e),t}(e),a=al();e.config.debug&&rl("warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),t(r)})):{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:al(),persons:[],error:null}}(this,e),r=al();return this.performance.warmup=Math.trunc(r-t),n}async profile(e,t){const n=await this.tf.profile((()=>this.detect(e,t))),r={};for(const e of n.kernels)r[e.name]?r[e.name]+=e.kernelTimeMs:r[e.name]=e.kernelTimeMs;const a=[];Object.entries(r).forEach((e=>a.push({name:e[0],ms:e[1]}))),a.sort(((e,t)=>t.ms-e.ms)),a.length=20;const s={};for(const e of a)s[e.name]=e.ms;return s}async detect(e,t){return this.state="detect",new Promise((async n=>{var r,a,s,i,o,l,u,d,h,p,c,f,m,g,y,A,b,x,v,w,k,I;let S;this.state="config",this.config=il(this.config,t),this.state="check";const N=el(this,Cte).call(this,e);N&&(rl(N,e),this.emit("error"),n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:al(),persons:[],error:N}));const T=al();await jee(this),await this.load(),S=al(),this.state="image";const C=await i4(e,this.config);if(this.process=C,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(al()-S):Math.trunc(al()-S),this.analyze("Get Image:"),!C.tensor)return this.config.debug&&rl("could not convert input to tensor"),this.emit("error"),void n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:al(),persons:[],error:"could not convert input to tensor"});this.emit("image"),S=al(),this.config.skipAllowed=await async function(e,t){let n=!1;if(0===e.cacheSensitivity||!t.shape||4!==t.shape.length||t.shape[1]>2048||t.shape[2]>2048)return n;if(r4.inputTensor)if(r4.inputTensor.shape[1]!==t.shape[1]||r4.inputTensor.shape[2]!==t.shape[2])ey(r4.inputTensor),r4.inputTensor=wm(t);else{const r={};r.diff=gb(t,r4.inputTensor),r.squared=my(r.diff,r.diff),r.sum=yb(r.squared);const a=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;ey([r4.inputTensor,r.diff,r.squared,r.sum]),r4.inputTensor=wm(t),n=a<=(e.cacheSensitivity||0)}else r4.inputTensor=wm(t);return n}(this.config,C.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(al()-S):Math.trunc(al()-S),this.analyze("Check Changed:");let E=[],_=[],R=[],M=[];this.state="detect:face",this.config.async?(E=this.config.face.enabled?fte(this,C.tensor):[],this.performance.face&&delete this.performance.face):(S=al(),E=this.config.face.enabled?await fte(this,C.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(al()-S):Math.trunc(al()-S)),!this.config.async||-1!==this.config.body.maxDetected&&-1!==this.config.hand.maxDetected||(E=await E),this.analyze("Start Body:"),this.state="detect:body";const $=-1===this.config.body.maxDetected?il(this.config,{body:{maxDetected:this.config.face.enabled?1*E.length:1}}):this.config;this.config.async?((null==(r=this.config.body.modelPath)?void 0:r.includes("posenet"))?_=this.config.body.enabled?Oee(C.tensor,$):[]:(null==(a=this.config.body.modelPath)?void 0:a.includes("blazepose"))?_=this.config.body.enabled?_6(C.tensor,$):[]:(null==(s=this.config.body.modelPath)?void 0:s.includes("efficientpose"))?_=this.config.body.enabled?H6(C.tensor,$):[]:(null==(i=this.config.body.modelPath)?void 0:i.includes("movenet"))&&(_=this.config.body.enabled?dee(C.tensor,$):[]),this.performance.body&&delete this.performance.body):(S=al(),(null==(o=this.config.body.modelPath)?void 0:o.includes("posenet"))?_=this.config.body.enabled?await Oee(C.tensor,$):[]:(null==(l=this.config.body.modelPath)?void 0:l.includes("blazepose"))?_=this.config.body.enabled?await _6(C.tensor,$):[]:(null==(u=this.config.body.modelPath)?void 0:u.includes("efficientpose"))?_=this.config.body.enabled?await H6(C.tensor,$):[]:(null==(d=this.config.body.modelPath)?void 0:d.includes("movenet"))&&(_=this.config.body.enabled?await dee(C.tensor,$):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(al()-S):Math.trunc(al()-S)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";const F=-1===this.config.hand.maxDetected?il(this.config,{hand:{maxDetected:this.config.face.enabled?2*E.length:1}}):this.config;this.config.async?((null==(p=null==(h=this.config.hand.detector)?void 0:h.modelPath)?void 0:p.includes("handdetect"))?R=this.config.hand.enabled?_9(C.tensor,F):[]:(null==(f=null==(c=this.config.hand.detector)?void 0:c.modelPath)?void 0:f.includes("handtrack"))&&(R=this.config.hand.enabled?V9(C.tensor,F):[]),this.performance.hand&&delete this.performance.hand):(S=al(),(null==(g=null==(m=this.config.hand.detector)?void 0:m.modelPath)?void 0:g.includes("handdetect"))?R=this.config.hand.enabled?await _9(C.tensor,F):[]:(null==(A=null==(y=this.config.hand.detector)?void 0:y.modelPath)?void 0:A.includes("handtrack"))&&(R=this.config.hand.enabled?await V9(C.tensor,F):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(al()-S):Math.trunc(al()-S)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((null==(b=this.config.object.modelPath)?void 0:b.includes("nanodet"))?M=this.config.object.enabled?gee(C.tensor,this.config):[]:(null==(x=this.config.object.modelPath)?void 0:x.includes("centernet"))&&(M=this.config.object.enabled?D6(C.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(S=al(),(null==(v=this.config.object.modelPath)?void 0:v.includes("nanodet"))?M=this.config.object.enabled?await gee(C.tensor,this.config):[]:(null==(w=this.config.object.modelPath)?void 0:w.includes("centernet"))&&(M=this.config.object.enabled?await D6(C.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(al()-S):Math.trunc(al()-S)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([E,_,R,M]=await Promise.all([E,_,R,M])),this.state="detect:gesture";let O=[];this.config.gesture.enabled&&(S=al(),O=[...gte(E),...mte(_),...Ate(R),...yte(E)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(al()-S):Math.trunc(al()-S)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(al()-T):Math.trunc(al()-T);const z=(null==(I=null==(k=this.process)?void 0:k.tensor)?void 0:I.shape)||[];this.result={face:E,body:_,hand:R,gesture:O,object:M,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return function(e,t,n,r,a){var s,i,o,l,u,d,h,p,c,f,m,g,y,A,b,x;let v=0;const w=[];for(const k of e){const e={id:v++,face:k,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(const n of t)k.box[0]>n.box[0]&&k.box[0]<n.box[0]+n.box[2]&&k.box[1]+k.box[3]>n.box[1]&&k.box[1]+k.box[3]<n.box[1]+n.box[3]&&(e.body=n);if(e.body)for(const t of n)t.box[0]+t.box[2]>e.body.box[0]&&t.box[0]+t.box[2]<e.body.box[0]+e.body.box[2]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.left=t),t.box[0]<e.body.box[0]+e.body.box[2]&&t.box[0]>e.body.box[0]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.right=t);for(const t of r)void 0!==t.face&&t.face===k.id?null==(s=e.gestures)||s.push(t):void 0!==t.iris&&t.iris===k.id?null==(i=e.gestures)||i.push(t):void 0!==t.body&&t.body===(null==(o=e.body)?void 0:o.id)?null==(l=e.gestures)||l.push(t):void 0!==t.hand&&t.hand===(null==(d=null==(u=e.hands)?void 0:u.left)?void 0:d.id)?null==(h=e.gestures)||h.push(t):void 0!==t.hand&&t.hand===(null==(c=null==(p=e.hands)?void 0:p.right)?void 0:c.id)&&(null==(f=e.gestures)||f.push(t));const I=[],S=[],N=e=>{e&&4===e.length&&(I.push(e[0],e[0]+e[2]),S.push(e[1],e[1]+e[3]))};N(null==(m=e.face)?void 0:m.box),N(null==(g=e.body)?void 0:g.box),N(null==(A=null==(y=e.hands)?void 0:y.left)?void 0:A.box),N(null==(x=null==(b=e.hands)?void 0:b.right)?void 0:x.box);const T=Math.min(...I),C=Math.min(...S);e.box=[T,C,Math.max(...I)-T,Math.max(...S)-C],a&&a[1]&&a[2]&&(e.boxRaw=[e.box[0]/a[2],e.box[1]/a[1],e.box[2]/a[2],e.box[3]/a[1]]),w.push(e)}return w}(E,_,R,O,z)}},ey(C.tensor),this.emit("detect"),this.state="idle",n(this.result)}))}}(this.config);try{yield n.load()}catch(e){console.error(e)}this.human=n}}))}getFaceBox(e,t){if(1!==this.getFaceCount(e))return;const n={left:Math.round(100*e[0].boxRaw[0]),right:Math.round(100*(e[0].boxRaw[0]+e[0].boxRaw[2]))};return n.width=Math.round(n.right-n.left),this.lastValidFaceBox&&t&&Math.abs(this.lastValidFaceBox.left-n.left)<t?void 0:(this.lastValidFaceBox=n,n)}getFaceExpression(e){if(1===this.getFaceCount(e))return e[0].emotion?Rte[e[0].emotion[0].emotion]:void 0}getFaceCount(e){return e?e.length:0}getDetections(e){return Fte(this,void 0,void 0,(function*(){if(!this.human||!this.faceDetectionTypes.length)return[];this.human.tf.engine().startScope();const t=this.human.tf.browser.fromPixels(e),{face:n}=yield this.human.detect(t,this.config);return this.human.tf.engine().endScope(),n.filter((e=>e.score>.6))}))}detect({image:e,threshold:t}){return Fte(this,void 0,void 0,(function*(){let n,r;this.detectionInProgress=!0;const a=yield this.getDetections(e);return this.faceDetectionTypes.includes($te)&&(n=this.getFaceExpression(a)),this.faceDetectionTypes.includes(Mte)&&(this.getFaceCount(a)>1?(this.faceDetectionTypes.splice(this.faceDetectionTypes.indexOf(Mte),1),r={left:0,right:100,width:100}):r=this.getFaceBox(a,t)),this.detectionInProgress=!1,{faceExpression:n,faceBox:r,faceCount:this.getFaceCount(a)}}))}getDetectionInProgress(){return this.detectionInProgress}}let zte;onmessage=function(e){return t=this,n=void 0,a=function*(){switch(e.data.type){case"DETECT_FACE":{if(!zte||zte.getDetectionInProgress())return;const t=yield zte.detect(e.data);t&&(t.faceBox||t.faceExpression||t.faceCount)&&self.postMessage(t);break}case"INIT_WORKER":zte=new Ote(e.data)}},new((r=void 0)||(r=Promise))((function(e,s){function i(e){try{l(a.next(e))}catch(e){s(e)}}function o(e){try{l(a.throw(e))}catch(e){s(e)}}function l(t){var n;t.done?e(t.value):(n=t.value,n instanceof r?n:new r((function(e){e(n)}))).then(i,o)}l((a=a.apply(t,n||[])).next())}));var t,n,r,a}})()})();
//# sourceMappingURL=face-landmarks-worker.min.js.map